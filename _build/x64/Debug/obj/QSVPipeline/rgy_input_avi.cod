; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG114719 DB	'H.264/AVC', 00H
	ORG $+6
$SG114721 DB	'H.265/HEVC', 00H
	ORG $+1
$SG114723 DB	'MPEG2', 00H
	ORG $+2
$SG114725 DB	'MPEG1', 00H
	ORG $+2
$SG114727 DB	'VC-1', 00H
	ORG $+3
$SG114729 DB	'MPEG4', 00H
	ORG $+2
$SG114731 DB	'VP8', 00H
$SG114733 DB	'VP9', 00H
$SG115344 DB	'fcc', 00H
$SG114735 DB	'unknown', 00H
$SG114842 DB	'unknown', 00H
$SG115337 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG115337	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115338
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG115339
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115340
	DD	06H
	ORG $+4
	DQ	FLAT:$SG115341
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115342
	DD	07H
	ORG $+4
	DQ	FLAT:$SG115343
	DD	08H
	ORG $+4
	DQ	FLAT:$SG115344
	DD	04H
	ORG $+4
	DQ	FLAT:$SG115345
	DD	00H
	ORG $+4
	DQ	FLAT:$SG115346
	DD	09H
	ORG $+4
	DQ	FLAT:$SG115347
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG115348
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG115349
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG115350
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG115351
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115338 DB	'auto', 00H
	ORG $+3
$SG115339 DB	'bt709', 00H
	ORG $+2
$SG115340 DB	'smpte170m', 00H
	ORG $+2
$SG115345 DB	'GBR', 00H
$SG115341 DB	'bt470bg', 00H
$SG115342 DB	'smpte240m', 00H
	ORG $+2
$SG115343 DB	'YCgCo', 00H
	ORG $+2
$SG115496 DB	'bt470m', 00H
	ORG $+1
$SG115658 DB	'pal', 00H
$SG115346 DB	'bt2020nc', 00H
	ORG $+3
$SG115350 DB	'ictco', 00H
	ORG $+2
$SG115499 DB	'linear', 00H
	ORG $+1
$SG115660 DB	'mac', 00H
$SG115347 DB	'bt2020c', 00H
$SG115348 DB	'derived-ncl', 00H
$SG115662 DB	'0', 00H
	ORG $+2
$SG115349 DB	'derived-cl', 00H
	ORG $+1
$SG115663 DB	'1', 00H
	ORG $+2
$SG115351 DB	'2100-lms', 00H
	ORG $+7
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG115492	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115493
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG115494
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115495
	DD	06H
	ORG $+4
	DQ	FLAT:$SG115496
	DD	04H
	ORG $+4
	DQ	FLAT:$SG115497
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115498
	DD	07H
	ORG $+4
	DQ	FLAT:$SG115499
	DD	08H
	ORG $+4
	DQ	FLAT:$SG115500
	DD	09H
	ORG $+4
	DQ	FLAT:$SG115501
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG115502
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG115503
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG115504
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG115505
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG115506
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG115507
	DD	010H
	ORG $+4
	DQ	FLAT:$SG115508
	DD	011H
	ORG $+4
	DQ	FLAT:$SG115509
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115492 DB	'undef', 00H
	ORG $+2
$SG115493 DB	'auto', 00H
	ORG $+3
$SG115494 DB	'bt709', 00H
	ORG $+2
$SG115495 DB	'smpte170m', 00H
	ORG $+2
$SG115500 DB	'log100', 00H
	ORG $+1
$SG115664 DB	'2', 00H
	ORG $+2
$SG115497 DB	'bt470bg', 00H
$SG115498 DB	'smpte240m', 00H
	ORG $+2
$SG115501 DB	'log316', 00H
	ORG $+1
$SG115665 DB	'3', 00H
	ORG $+2
$SG115502 DB	'iec61966-2-4', 00H
	ORG $+3
$SG115503 DB	'bt1361e', 00H
$SG115504 DB	'iec61966-2-1', 00H
	ORG $+3
$SG115505 DB	'bt2020-10', 00H
	ORG $+2
$SG115645 DB	'bt470m', 00H
	ORG $+1
$SG115666 DB	'4', 00H
	ORG $+2
$SG115506 DB	'bt2020-12', 00H
	ORG $+2
$SG115649 DB	'bt2020', 00H
	ORG $+1
$SG115667 DB	'5', 00H
	ORG $+2
$SG115507 DB	'smpte2084', 00H
	ORG $+2
$SG115671 DB	'tv', 00H
	ORG $+1
$SG115508 DB	'smpte428', 00H
	ORG $+3
$SG115641 DB	'undef', 00H
	ORG $+2
$SG115672 DB	'pc', 00H
	ORG $+1
$SG115509 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG115641	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115642
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG115643
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115644
	DD	06H
	ORG $+4
	DQ	FLAT:$SG115645
	DD	04H
	ORG $+4
	DQ	FLAT:$SG115646
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115647
	DD	07H
	ORG $+4
	DQ	FLAT:$SG115648
	DD	08H
	ORG $+4
	DQ	FLAT:$SG115649
	DD	09H
	ORG $+4
	DQ	FLAT:$SG115650
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG115651
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG115652
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG115653
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115642 DB	'auto', 00H
	ORG $+3
$SG115643 DB	'bt709', 00H
	ORG $+2
$SG115644 DB	'smpte170m', 00H
	ORG $+2
$SG116761 DB	'cfr', 00H
$SG115646 DB	'bt470bg', 00H
$SG115647 DB	'smpte240m', 00H
	ORG $+2
$SG115648 DB	'film', 00H
	ORG $+3
$SG115650 DB	'st428', 00H
	ORG $+2
$SG116762 DB	'vfr', 00H
$SG115651 DB	'st431-2', 00H
$SG115652 DB	'st432-1', 00H
$SG115653 DB	'ebu3213-e', 00H
	ORG $+2
$SG115655 DB	'undef', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG115655	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG115656
	DD	02H
	ORG $+4
	DQ	FLAT:$SG115657
	DD	00H
	ORG $+4
	DQ	FLAT:$SG115658
	DD	01H
	ORG $+4
	DQ	FLAT:$SG115659
	DD	03H
	ORG $+4
	DQ	FLAT:$SG115660
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG115656 DB	'ntsc', 00H
	ORG $+3
$SG115657 DB	'component', 00H
	ORG $+2
$SG115659 DB	'secam', 00H
	ORG $+2
$SG116765 DB	'swr', 00H
$SG115669 DB	'limited', 00H
$SG115670 DB	'full', 00H
	ORG $+3
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG116754 DB	'trace', 00H
	ORG $+2
$SG116755 DB	'debug', 00H
	ORG $+2
$SG116756 DB	'more', 00H
	ORG $+3
$SG116757 DB	'info', 00H
	ORG $+3
$SG116758 DB	'warn', 00H
	ORG $+3
$SG116759 DB	'error', 00H
	ORG $+2
$SG116763 DB	'forcecfr', 00H
	ORG $+3
$SG116766 DB	'soxr', 00H
	ORG $+3
$SG125654 DB	'.', 0aH, 00H
	ORG $+1
?HW_DECODE_LIST@@3QBUCodecMap@@B DD 01bH		; HW_DECODE_LIST
	DD	01H
	DD	0adH
	DD	02H
	DD	02H
	DD	04H
	DD	08bH
	DD	06H
	DD	0a7H
	DD	07H
	DD	046H
	DD	08H
$SG125527 DB	'auto', 00H
	ORG $+3
$SG125529 DB	'copy', 00H
	ORG $+3
$SG125655 DB	' for ', 00H
	ORG $+2
$SG125658 DB	'avcodec-58.dll', 00H
	ORG $+1
$SG125659 DB	'avformat-58.dll', 00H
$SG125660 DB	'avutil-56.dll', 00H
	ORG $+2
$SG125661 DB	'avfilter-7.dll', 00H
	ORG $+1
$SG125662 DB	'swresample-3.dll', 00H
	ORG $+3
$SG125734 DB	'srt', 00H
$SG125733 DB	'invalid', 00H
$SG125735 DB	'ass', 00H
$SG125744 DB	'box', 00H
$SG125742 DB	'invalid', 00H
$SG125743 DB	'kigou', 00H
	ORG $+2
$SG125745 DB	'draw', 00H
	ORG $+3
$SG134019 DB	'avi', 00H
$SG117827 DB	'all', 00H
$SG134144 DB	'failed to open avi file: "%s"', 0aH, 00H
	ORG $+1
$SG134145 DB	'openend avi file: "%s"', 0aH, 00H
$SG134147 DB	'failed to get avi file info.', 0aH, 00H
	ORG $+2
$SG134152 DB	'failed to get valid stream from avi file.', 0aH, 00H
	ORG $+1
$SG117828 DB	'cpu', 00H
$SG134154 DB	'found video stream from avi file.', 0aH, 00H
	ORG $+1
$SG117838 DB	'mem', 00H
$SG134162 DB	'Invalid Color format.', 0aH, 00H
	ORG $+1
$SG134166 DB	0aH, 'failed to decode avi file.', 0aH, 00H
	ORG $+3
$SG134170 DB	0aH, 'failed to decode avi file.', 0aH, 00H
	ORG $+3
$SG134181 DB	'color conversion not supported: %s -> %s.', 0aH, 00H
	ORG $+1
$SG134183 DB	'avi: ', 00H
	ORG $+2
$SG117833 DB	'cpu_in', 00H
	ORG $+1
$SG117841 DB	'io', 00H
	ORG $+1
$SG134188 DB	'Closing...', 0aH, 00H
$SG117844 DB	'fps', 00H
$SG134192 DB	'Closed.', 0aH, 00H
	ORG $+3
$SG117849 DB	'gpu', 00H
$SG117829 DB	'cpu_total', 00H
	ORG $+2
$SG145247 DB	'%s', 00H
	ORG $+1
$SG117830 DB	'cpu_kernel', 00H
	ORG $+1
$SG129933 DB	'vp8', 00H
$SG117831 DB	'cpu_main', 00H
	ORG $+3
$SG117856 DB	'queue', 00H
	ORG $+2
$SG129934 DB	'raw', 00H
$SG117832 DB	'cpu_enc', 00H
$SG117834 DB	'cpu_aud', 00H
$SG117835 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG117836 DB	'cpu_aud_enc', 00H
$SG129936 DB	'CBR', 00H
$SG117837 DB	'cpu_out', 00H
$SG117839 DB	'mem_private', 00H
$SG129937 DB	'VBR', 00H
$SG117840 DB	'mem_virtual', 00H
$SG129938 DB	'CQP', 00H
$SG117842 DB	'io_read', 00H
$SG117843 DB	'io_write', 00H
	ORG $+3
$SG129931 DB	'mpeg2', 00H
	ORG $+2
$SG129940 DB	'LA', 00H
	ORG $+1
$SG117845 DB	'fps_avg', 00H
$SG117846 DB	'bitrate', 00H
$SG117847 DB	'bitrate_avg', 00H
$SG129944 DB	'ICQ', 00H
$SG117848 DB	'frame_out', 00H
	ORG $+2
$SG129941 DB	'LA-EXT', 00H
	ORG $+1
$SG129946 DB	'VCM', 00H
$SG117850 DB	'gpu_load', 00H
	ORG $+3
$SG129942 DB	'LA-HRD', 00H
	ORG $+1
$SG129971 DB	'0', 00H
	ORG $+2
$SG117851 DB	'gpu_clock', 00H
	ORG $+2
$SG129943 DB	'LA-ICQ', 00H
	ORG $+1
$SG129972 DB	'1', 00H
	ORG $+2
$SG117852 DB	'vee_load', 00H
	ORG $+3
$SG129955 DB	'main10', 00H
	ORG $+1
$SG129973 DB	'2', 00H
	ORG $+2
$SG117853 DB	'ved_load', 00H
	ORG $+3
$SG129961 DB	'Simple', 00H
	ORG $+1
$SG129974 DB	'3', 00H
	ORG $+2
$SG117854 DB	'pcie_load', 00H
	ORG $+2
$SG129966 DB	'Simple', 00H
	ORG $+1
$SG129977 DB	'0', 00H
	ORG $+2
$SG117855 DB	've_clock', 00H
	ORG $+3
$SG129978 DB	'1', 00H
	ORG $+2
$SG145246 DB	'invalid argument', 00H
	ORG $+7
$SG145251 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG145248 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG129929 DB	'h264', 00H
	ORG $+3
$SG145249 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG145250 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG145318 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG129930 DB	'hevc', 00H
	ORG $+3
$SG129932 DB	'vc-1', 00H
	ORG $+3
$SG129939 DB	'AVBR', 00H
	ORG $+3
$SG129945 DB	'QVBR', 00H
	ORG $+3
$SG129948 DB	'auto', 00H
	ORG $+3
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG129948	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG129949
	DD	042H
	ORG $+4
	DQ	FLAT:$SG129950
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG129951
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG129949 DB	'Baseline', 00H
	ORG $+3
$SG129950 DB	'Main', 00H
	ORG $+3
$SG129951 DB	'High', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG129953	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG129954
	DD	01H
	ORG $+4
	DQ	FLAT:$SG129955
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG129953 DB	'auto', 00H
	ORG $+3
$SG129954 DB	'main', 00H
	ORG $+3
$SG129957 DB	'main', 00H
	ORG $+3
$SG129958 DB	'high', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG129960	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG129961
	DD	050H
	ORG $+4
	DQ	FLAT:$SG129962
	DD	040H
	ORG $+4
	DQ	FLAT:$SG129963
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG129960 DB	'auto', 00H
	ORG $+3
$SG129962 DB	'Main', 00H
	ORG $+3
$SG129963 DB	'High', 00H
	ORG $+3
$SG129965 DB	'auto', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG129965	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG129966
	DD	01H
	ORG $+4
	DQ	FLAT:$SG129967
	DD	05H
	ORG $+4
	DQ	FLAT:$SG129968
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG129967 DB	'Main', 00H
	ORG $+3
$SG129968 DB	'Advanced', 00H
	ORG $+3
$SG129970 DB	'auto', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG129970	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG129971
	DD	01H
	ORG $+4
	DQ	FLAT:$SG129972
	DD	02H
	ORG $+4
	DQ	FLAT:$SG129973
	DD	03H
	ORG $+4
	DQ	FLAT:$SG129974
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG129976	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG129977
	DD	01H
	ORG $+4
	DQ	FLAT:$SG129978
	DD	02H
	ORG $+4
	DQ	FLAT:$SG129979
	DD	03H
	ORG $+4
	DQ	FLAT:$SG129980
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG129976 DB	'auto', 00H
	ORG $+3
$SG129979 DB	'2', 00H
	ORG $+2
$SG129980 DB	'3', 00H
	ORG $+2
$SG129982 DB	'8', 00H
	ORG $+2
$SG129983 DB	'10', 00H
	ORG $+1
$SG129985 DB	'progressive', 00H
$SG129991 DB	'it', 00H
	ORG $+1
$SG129986 DB	'interlaced(tff)', 00H
$SG129987 DB	'interlaced(bff)', 00H
$SG129989 DB	'none', 00H
	ORG $+3
$SG129990 DB	'normal', 00H
	ORG $+1
$SG129992 DB	'bob', 00H
$SG129994 DB	'32', 00H
	ORG $+1
$SG129995 DB	'2332', 00H
	ORG $+3
$SG129996 DB	'repeat', 00H
	ORG $+1
$SG129997 DB	'41', 00H
	ORG $+1
$SG129999 DB	'auto', 00H
	ORG $+7
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG129999	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG130000
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG130001
	DD	09H
	ORG $+4
	DQ	FLAT:$SG130002
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG130003
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG130004
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG130005
	DD	014H
	ORG $+4
	DQ	FLAT:$SG130006
	DD	015H
	ORG $+4
	DQ	FLAT:$SG130007
	DD	016H
	ORG $+4
	DQ	FLAT:$SG130008
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG130009
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG130010
	DD	020H
	ORG $+4
	DQ	FLAT:$SG130011
	DD	028H
	ORG $+4
	DQ	FLAT:$SG130012
	DD	029H
	ORG $+4
	DQ	FLAT:$SG130013
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG130014
	DD	032H
	ORG $+4
	DQ	FLAT:$SG130015
	DD	033H
	ORG $+4
	DQ	FLAT:$SG130016
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG130000 DB	'1', 00H
	ORG $+2
$SG130001 DB	'1b', 00H
	ORG $+1
$SG130002 DB	'1.1', 00H
$SG130003 DB	'1.2', 00H
$SG130004 DB	'1.3', 00H
$SG130005 DB	'2', 00H
	ORG $+2
$SG130006 DB	'2.1', 00H
$SG130007 DB	'2.2', 00H
$SG130008 DB	'3', 00H
	ORG $+2
$SG130009 DB	'3.1', 00H
$SG130010 DB	'3.2', 00H
$SG130011 DB	'4', 00H
	ORG $+2
$SG130012 DB	'4.1', 00H
$SG130013 DB	'4.2', 00H
$SG130014 DB	'5', 00H
	ORG $+2
$SG130015 DB	'5.1', 00H
$SG130016 DB	'5.2', 00H
$SG130018 DB	'auto', 00H
	ORG $+7
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG130018	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG130019
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG130020
	DD	014H
	ORG $+4
	DQ	FLAT:$SG130021
	DD	015H
	ORG $+4
	DQ	FLAT:$SG130022
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG130023
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG130024
	DD	028H
	ORG $+4
	DQ	FLAT:$SG130025
	DD	029H
	ORG $+4
	DQ	FLAT:$SG130026
	DD	032H
	ORG $+4
	DQ	FLAT:$SG130027
	DD	033H
	ORG $+4
	DQ	FLAT:$SG130028
	DD	034H
	ORG $+4
	DQ	FLAT:$SG130029
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG130030
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG130031
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG130019 DB	'1', 00H
	ORG $+2
$SG130020 DB	'2', 00H
	ORG $+2
$SG130021 DB	'2.1', 00H
$SG130022 DB	'3', 00H
	ORG $+2
$SG130023 DB	'3.1', 00H
$SG130024 DB	'4', 00H
	ORG $+2
$SG130025 DB	'4.1', 00H
$SG130026 DB	'5', 00H
	ORG $+2
$SG130027 DB	'5.1', 00H
$SG130028 DB	'5.2', 00H
$SG130029 DB	'6', 00H
	ORG $+2
$SG130030 DB	'6.1', 00H
$SG130031 DB	'6.2', 00H
$SG130033 DB	'auto', 00H
	ORG $+7
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG130033	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG130034
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG130035
	DD	08H
	ORG $+4
	DQ	FLAT:$SG130036
	DD	04H
	ORG $+4
	DQ	FLAT:$SG130037
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG130034 DB	'low', 00H
$SG130035 DB	'main', 00H
	ORG $+3
$SG130036 DB	'high', 00H
	ORG $+3
$SG130040 DB	'low', 00H
$SG130037 DB	'high1440', 00H
	ORG $+3
$SG130039 DB	'auto', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG130039	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG130040
	DD	01H
	ORG $+4
	DQ	FLAT:$SG130041
	DD	03H
	ORG $+4
	DQ	FLAT:$SG130042
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG130041 DB	'median', 00H
	ORG $+1
$SG130042 DB	'high', 00H
	ORG $+3
$SG130044 DB	'auto', 00H
	ORG $+3
$SG130045 DB	'0', 00H
	ORG $+2
$SG130046 DB	'1', 00H
	ORG $+2
$SG130047 DB	'2', 00H
	ORG $+2
$SG130048 DB	'3', 00H
	ORG $+2
$SG130049 DB	'4', 00H
	ORG $+2
$SG130056 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG130051	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG130051 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG130053	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG130053 DB	'auto', 00H
	ORG $+3
$SG130055 DB	'Auto', 00H
	ORG $+3
$SG130057 DB	'for I frames', 00H
	ORG $+3
$SG130058 DB	'for I,P frames', 00H
	ORG $+1
$SG130059 DB	'for All frames', 00H
	ORG $+1
$SG130061 DB	'auto', 00H
	ORG $+3
$SG130062 DB	'off', 00H
$SG130063 DB	'i', 00H
	ORG $+2
$SG130064 DB	'ip', 00H
	ORG $+1
$SG130065 DB	'all', 00H
$SG130066 DB	'ipb', 00H
$SG130067 DB	'ib', 00H
	ORG $+1
$SG130068 DB	'p', 00H
	ORG $+2
$SG130069 DB	'pb', 00H
	ORG $+1
$SG130070 DB	'b', 00H
	ORG $+2
$SG130072 DB	'auto', 00H
	ORG $+3
$SG130073 DB	'slow', 00H
	ORG $+3
$SG130074 DB	'medium', 00H
	ORG $+1
$SG130075 DB	'fast', 00H
	ORG $+3
$SG130078 DB	'0', 00H
	ORG $+2
$SG130077 DB	'default', 00H
$SG130079 DB	'1', 00H
	ORG $+2
$SG130080 DB	'2', 00H
	ORG $+2
$SG130081 DB	'3', 00H
	ORG $+2
$SG130082 DB	'4', 00H
	ORG $+2
$SG130084 DB	'low', 00H
$SG130085 DB	'normal', 00H
	ORG $+1
$SG130086 DB	'high', 00H
	ORG $+3
$SG130098 DB	'none', 00H
	ORG $+3
$SG130099 DB	'copy', 00H
	ORG $+3
$SG130100 DB	'aac', 00H
$SG130101 DB	'libmp3lame', 00H
	ORG $+1
$SG130106 DB	'ac3', 00H
$SG130102 DB	'libtwolame', 00H
	ORG $+1
$SG130137 DB	'tff', 00H
$SG130103 DB	'libvorbis', 00H
	ORG $+2
$SG113753 DB	'yuv422', 00H
	ORG $+1
$SG130138 DB	'bff', 00H
$SG130104 DB	'pcm_s16le', 00H
	ORG $+2
$SG113755 DB	'yuv444', 00H
	ORG $+1
$SG130163 DB	'8x8', 00H
$SG130105 DB	'libopus', 00H
$SG113749 DB	'Invalid', 00H
$SG113750 DB	'nv12', 00H
	ORG $+3
$SG113751 DB	'yv12', 00H
	ORG $+3
$SG130136 DB	'none', 00H
	ORG $+3
$SG113752 DB	'yuy2', 00H
	ORG $+3
$SG113754 DB	'nv16', 00H
	ORG $+3
$SG130140 DB	' 1 - best quality', 00H
	ORG $+2
$SG130149 DB	'higher', 00H
	ORG $+1
$SG130164 DB	'4x4', 00H
$SG113756 DB	'yv12(9bit)', 00H
	ORG $+1
$SG113781 DB	'rgb', 00H
$SG130141 DB	' 2 - higher', 00H
$SG130167 DB	'16', 00H
	ORG $+1
$SG113757 DB	'yv12(10bit)', 00H
$SG113783 DB	'gbr', 00H
$SG130142 DB	' 3 - high quality', 00H
	ORG $+2
$SG130153 DB	'faster', 00H
	ORG $+1
$SG130168 DB	'32', 00H
	ORG $+1
$SG113758 DB	'yv12(12bit)', 00H
$SG130169 DB	'64', 00H
	ORG $+1
$SG130143 DB	' 4 - balanced', 00H
	ORG $+2
$SG113759 DB	'yv12(14bit)', 00H
$SG113786 DB	'y8', 00H
	ORG $+1
$SG130144 DB	' 5 - fast', 00H
	ORG $+2
$SG113775 DB	'rgb24r', 00H
	ORG $+1
$SG130177 DB	'all', 00H
$SG113760 DB	'yv12(16bit)', 00H
$SG130181 DB	'box', 00H
$SG130145 DB	' 6 - faster', 00H
$SG113761 DB	'p010', 00H
	ORG $+3
$SG130159 DB	'Q-pel', 00H
	ORG $+2
$SG113776 DB	'rgb32r', 00H
	ORG $+1
$SG130183 DB	'off', 00H
$SG130146 DB	' 7 - fastest', 00H
	ORG $+3
$SG113762 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG113763 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG130148 DB	'best', 00H
	ORG $+3
$SG113764 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG113765 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG130150 DB	'high', 00H
	ORG $+3
$SG113766 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG130151 DB	'balanced', 00H
	ORG $+3
$SG113767 DB	'p210', 00H
	ORG $+3
$SG130152 DB	'fast', 00H
	ORG $+3
$SG113777 DB	'rgb24', 00H
	ORG $+2
$SG130176 DB	'chroma', 00H
	ORG $+1
$SG130184 DB	'x2', 00H
	ORG $+1
$SG113768 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG113769 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG130154 DB	'fastest', 00H
$SG113770 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG113771 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG130156 DB	'Auto', 00H
	ORG $+3
$SG113772 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG130157 DB	'full-pel', 00H
	ORG $+3
$SG130162 DB	'16x16', 00H
	ORG $+2
$SG130187 DB	'simple', 00H
	ORG $+1
$SG130190 DB	'0', 00H
	ORG $+2
$SG113773 DB	'yuva444', 00H
$SG130158 DB	'half-pel', 00H
	ORG $+3
$SG113778 DB	'rgb32', 00H
	ORG $+2
$SG130191 DB	'90', 00H
	ORG $+1
$SG113774 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG130161 DB	'Auto', 00H
	ORG $+3
$SG113779 DB	'bgr24', 00H
	ORG $+2
$SG113780 DB	'bgr32', 00H
	ORG $+2
$SG130166 DB	'auto', 00H
	ORG $+3
$SG113782 DB	'rgba', 00H
	ORG $+3
$SG113784 DB	'gbra', 00H
	ORG $+3
$SG113785 DB	'yc48', 00H
	ORG $+3
$SG113787 DB	'yc16', 00H
	ORG $+3
$SG130173 DB	'auto', 00H
	ORG $+3
$SG130174 DB	'none', 00H
	ORG $+3
$SG130175 DB	'luma', 00H
	ORG $+3
$SG130179 DB	'none', 00H
	ORG $+3
$SG130180 DB	'upscale', 00H
$SG130185 DB	'x2.5', 00H
	ORG $+3
$SG130188 DB	'complex', 00H
$SG130192 DB	'180', 00H
$SG130193 DB	'270', 00H
$SG130195 DB	'n', 00H
	ORG $+2
$SG130196 DB	'h', 00H
	ORG $+2
$SG130197 DB	'v', 00H
	ORG $+2
$SG130199 DB	'auto', 00H
	ORG $+3
$SG130200 DB	'simple', 00H
	ORG $+1
$SG130201 DB	'fine', 00H
	ORG $+3
$SG130203 DB	'auto', 00H
	ORG $+3
$SG130204 DB	'none', 00H
	ORG $+3
$SG130205 DB	'sse2', 00H
	ORG $+3
$SG130206 DB	'sse3', 00H
	ORG $+3
$SG130207 DB	'ssse3', 00H
	ORG $+2
$SG130208 DB	'sse41', 00H
	ORG $+2
$SG130209 DB	'avx', 00H
$SG130210 DB	'avx2', 00H
	ORG $+3
$SG130602 DB	'%s', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsprintf_s_l
PUBLIC	vsprintf_s
PUBLIC	_vscprintf_l
PUBLIC	_vscprintf
PUBLIC	??8type_info@@QEBA_NAEBV0@@Z			; type_info::operator==
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0_Iterator_base12_compatible@std@@QEAA@XZ	; std::_Iterator_base12_compatible::_Iterator_base12_compatible
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Ref_count_base@std@@IEAA@XZ			; std::_Ref_count_base::_Ref_count_base
PUBLIC	??1_Ref_count_base@std@@UEAA@XZ			; std::_Ref_count_base::~_Ref_count_base
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??Raligned_malloc_deleter@@QEBAXPEAX@Z		; aligned_malloc_deleter::operator()
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ ; std::vector<sTrim,std::allocator<sTrim> >::size
PUBLIC	??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z ; std::vector<sTrim,std::allocator<sTrim> >::operator[]
PUBLIC	?getLogLevel@RGYLog@@QEAAHXZ			; RGYLog::getLogLevel
PUBLIC	?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get
PUBLIC	??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
PUBLIC	?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap
PUBLIC	??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
PUBLIC	??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
PUBLIC	?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
PUBLIC	?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset
PUBLIC	?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
PUBLIC	??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z		; RGYFrame::ptrArray
PUBLIC	?ptrRGB@RGYFrame@@QEAAPEAEXZ			; RGYFrame::ptrRGB
PUBLIC	?pitch@RGYFrame@@QEAAIXZ			; RGYFrame::pitch
PUBLIC	??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z		; std::min<unsigned char *>
PUBLIC	?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ	; RGYConvertCSP::getFunc
PUBLIC	??_GRGYConvertCSP@@QEAAPEAXI@Z			; RGYConvertCSP::`scalar deleting destructor'
PUBLIC	?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYInput::GetNextBitstream
PUBLIC	?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYInput::GetNextBitstreamNoDelete
PUBLIC	?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYInput::GetHeader
PUBLIC	?GetAudioTrackCount@RGYInput@@UEAAHXZ		; RGYInput::GetAudioTrackCount
PUBLIC	?GetSubtitleTrackCount@RGYInput@@UEAAHXZ	; RGYInput::GetSubtitleTrackCount
PUBLIC	?GetDataTrackCount@RGYInput@@UEAAHXZ		; RGYInput::GetDataTrackCount
PUBLIC	?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYInput::AddMessage
PUBLIC	?AddMessage@RGYInput@@QEAAXHPEBDZZ		; RGYInput::AddMessage
PUBLIC	?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ	; RGYInput::getVideoTrimMaxFramIdx
PUBLIC	??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ; std::default_delete<RGYConvertCSP>::operator()
PUBLIC	??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=
PUBLIC	??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
PUBLIC	??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
PUBLIC	?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::release
PUBLIC	?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
PUBLIC	??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
PUBLIC	??0RGYInputAvi@@QEAA@XZ				; RGYInputAvi::RGYInputAvi
PUBLIC	??1RGYInputAvi@@UEAA@XZ				; RGYInputAvi::~RGYInputAvi
PUBLIC	?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z ; RGYInputAvi::LoadNextFrame
PUBLIC	?Close@RGYInputAvi@@UEAAXXZ			; RGYInputAvi::Close
PUBLIC	?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z ; RGYInputAvi::Init
PUBLIC	?get@?$_Ptr_base@E@std@@IEBAPEAEXZ		; std::_Ptr_base<unsigned char>::get
PUBLIC	??0?$_Ptr_base@E@std@@IEAA@XZ			; std::_Ptr_base<unsigned char>::_Ptr_base<unsigned char>
PUBLIC	?_Decref@?$_Ptr_base@E@std@@IEAAXXZ		; std::_Ptr_base<unsigned char>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z	; std::_Ptr_base<unsigned char>::_Swap
PUBLIC	??0?$shared_ptr@E@std@@QEAA@XZ			; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
PUBLIC	??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z		; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
PUBLIC	??1?$shared_ptr@E@std@@QEAA@XZ			; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
PUBLIC	??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z	; std::shared_ptr<unsigned char>::operator=
PUBLIC	?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z	; std::shared_ptr<unsigned char>::swap
PUBLIC	?reset@?$shared_ptr@E@std@@QEAAXXZ		; std::shared_ptr<unsigned char>::reset
PUBLIC	??_GRGYInputAvi@@UEAAPEAXI@Z			; RGYInputAvi::`scalar deleting destructor'
PUBLIC	??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z ; std::make_pair<unsigned long,enum RGY_CSP>
PUBLIC	??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z ; make_array<std::pair<unsigned int,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP> >
PUBLIC	?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::begin
PUBLIC	?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end
PUBLIC	?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z		; codec_fcc_to_rgy
PUBLIC	??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>
PUBLIC	??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator->
PUBLIC	??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator==
PUBLIC	??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<
PUBLIC	??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<=
PUBLIC	?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Compat
PUBLIC	?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Unwrapped
PUBLIC	?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Verify_with
PUBLIC	?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Seek_to
PUBLIC	?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z		; codec_rgy_to_fcc
PUBLIC	??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z ; std::make_unique<RGYConvertCSP,int const &,0>
PUBLIC	??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
PUBLIC	??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char><unsigned char,aligned_malloc_deleter,0>
PUBLIC	??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z ; std::move<std::shared_ptr<unsigned char> &>
PUBLIC	??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> > >
PUBLIC	??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z ; std::forward<std::default_delete<RGYConvertCSP> >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<unsigned char>::_Move_construct_from<unsigned char>
PUBLIC	??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>
PUBLIC	??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z ; std::exchange<RGYConvertCSP *,RGYConvertCSP *>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$swap@PEAEX@std@@YAXAEAPEAE0@Z		; std::swap<unsigned char *,void>
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>
PUBLIC	??$forward@K@std@@YA$$QEAKAEAK@Z		; std::forward<unsigned long>
PUBLIC	??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
PUBLIC	??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z ; std::pair<unsigned long,enum RGY_CSP>::pair<unsigned long,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
PUBLIC	??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z ; std::pair<unsigned int,enum RGY_CSP>::pair<unsigned int,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
PUBLIC	??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3> >
PUBLIC	??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>
PUBLIC	??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::pair<unsigned int,enum RGY_CSP> const *>
PUBLIC	??$forward@AEBH@std@@YAAEBHAEBH@Z		; std::forward<int const &>
PUBLIC	??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>
PUBLIC	??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ; std::move<aligned_malloc_deleter &>
PUBLIC	??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z	; std::move<unsigned char * &>
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
PUBLIC	??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
PUBLIC	??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ; std::_Verify_range<std::pair<unsigned int,enum RGY_CSP>,3>
PUBLIC	??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><RGYConvertCSP * &>
PUBLIC	??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
PUBLIC	??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::~_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
PUBLIC	??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>
PUBLIC	?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Get_deleter
PUBLIC	?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Delete_this
PUBLIC	?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
PUBLIC	??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>
PUBLIC	??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`scalar deleting destructor'
PUBLIC	??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z ; std::shared_ptr<unsigned char>::_Set_ptr_rep_and_enable_shared<unsigned char>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z ; std::addressof<aligned_malloc_deleter const >
PUBLIC	??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><aligned_malloc_deleter,unsigned char * &>
PUBLIC	??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z ; std::forward<RGYConvertCSP * &>
PUBLIC	??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ; std::forward<aligned_malloc_deleter>
PUBLIC	??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z	; std::forward<unsigned char * &>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_7RGYInputAvi@@6B@				; RGYInputAvi::`vftable'
PUBLIC	??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1KO@NIONOBPN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1JG@GIBNJFPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1KG@LDGFNOLN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`vftable'
PUBLIC	??_R0?AUaligned_malloc_deleter@@@8		; aligned_malloc_deleter `RTTI Type Descriptor'
PUBLIC	??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@ ; `string'
PUBLIC	??_C@_1LA@NFAFGNON@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Ref_count_base@std@@@8			; std::_Ref_count_base `RTTI Type Descriptor'
PUBLIC	??_R3_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Ref_count_base@std@@8		; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RGYInputAvi@@6B@				; RGYInputAvi::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRGYInputAvi@@@8				; RGYInputAvi `RTTI Type Descriptor'
PUBLIC	??_R3RGYInputAvi@@8				; RGYInputAvi::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RGYInputAvi@@8				; RGYInputAvi::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RGYInputAvi@@8			; RGYInputAvi::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@RGYInput@@8			; RGYInput::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVRGYInput@@@8				; RGYInput `RTTI Type Descriptor'
PUBLIC	??_R3RGYInput@@8				; RGYInput::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RGYInput@@8				; RGYInput::`RTTI Base Class Array'
PUBLIC	??_R4?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@@8 ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	strlen:PROC
EXTRN	__imp__aligned_free:PROC
EXTRN	__imp__aligned_malloc:PROC
EXTRN	AVIFileInit:PROC
EXTRN	AVIFileExit:PROC
EXTRN	AVIFileRelease:PROC
EXTRN	AVIFileOpenA:PROC
EXTRN	AVIFileInfoA:PROC
EXTRN	AVIFileGetStream:PROC
EXTRN	AVIStreamRelease:PROC
EXTRN	AVIStreamInfoA:PROC
EXTRN	AVIStreamRead:PROC
EXTRN	AVIStreamGetFrameOpen:PROC
EXTRN	AVIStreamGetFrame:PROC
EXTRN	AVIStreamGetFrameClose:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	__std_type_info_compare:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?get_simd_str@@YAPEBDI@Z:PROC			; get_simd_str
EXTRN	?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z:PROC ; char_to_tstring
EXTRN	?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z:PROC ; split
EXTRN	??0RGYConvertCSP@@QEAA@H@Z:PROC			; RGYConvertCSP::RGYConvertCSP
EXTRN	??1RGYConvertCSP@@QEAA@XZ:PROC			; RGYConvertCSP::~RGYConvertCSP
EXTRN	?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z:PROC ; RGYConvertCSP::getFunc
EXTRN	?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z:PROC ; RGYConvertCSP::run
EXTRN	??0RGYInput@@QEAA@XZ:PROC			; RGYInput::RGYInput
EXTRN	??1RGYInput@@UEAA@XZ:PROC			; RGYInput::~RGYInput
EXTRN	?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z:PROC ; RGYInput::CreateInputInfo
EXTRN	??_ERGYInputAvi@@UEAAPEAXI@Z:PROC		; RGYInputAvi::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z:PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B DB 018H DUP (?) ; FOURCC_CSP
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsprintf_s DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$vsprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf_l DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$_vscprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$_vscprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8type_info@@QEBA_NAEBV0@@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$??8type_info@@QEBA_NAEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12_compatible@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12_compatible@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Ref_count_base@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+37
	DD	imagerel $unwind$??0_Ref_count_base@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Ref_count_base@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Ref_count_base@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+219
	DD	imagerel $unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z DD imagerel ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z
	DD	imagerel ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z+23
	DD	imagerel $unwind$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Raligned_malloc_deleter@@QEBAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Raligned_malloc_deleter@@QEBAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+270
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+222
	DD	imagerel $unwind$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getLogLevel@RGYLog@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?getLogLevel@RGYLog@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DD imagerel $LN6
	DD	imagerel $LN6+270
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA DD imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z DD imagerel $LN5
	DD	imagerel $LN5+172
	DD	imagerel $unwind$?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ptrRGB@RGYFrame@@QEAAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?ptrRGB@RGYFrame@@QEAAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pitch@RGYFrame@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?pitch@RGYFrame@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DD imagerel $LN13
	DD	imagerel $LN13+214
	DD	imagerel $unwind$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRGYConvertCSP@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GRGYConvertCSP@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAudioTrackCount@RGYInput@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?GetAudioTrackCount@RGYInput@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSubtitleTrackCount@RGYInput@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?GetSubtitleTrackCount@RGYInput@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDataTrackCount@RGYInput@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?GetDataTrackCount@RGYInput@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN14
	DD	imagerel $LN14+688
	DD	imagerel $unwind$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddMessage@RGYInput@@QEAAXHPEBDZZ DD imagerel $LN6
	DD	imagerel $LN6+354
	DD	imagerel $unwind$?AddMessage@RGYInput@@QEAAXHPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA DD imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYInputAvi@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+208
	DD	imagerel $unwind$??0RGYInputAvi@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1RGYInputAvi@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+93
	DD	imagerel $unwind$??1RGYInputAvi@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA
$pdata$?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DD imagerel $LN16
	DD	imagerel $LN16+1367
	DD	imagerel $unwind$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA DD imagerel ?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA
	DD	imagerel ?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Close@RGYInputAvi@@UEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+311
	DD	imagerel $unwind$?Close@RGYInputAvi@@UEAAXXZ
$pdata$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z DD imagerel $LN44
	DD	imagerel $LN44+3383
	DD	imagerel $unwind$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD imagerel ?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
$pdata$?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD imagerel ?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DD	imagerel ?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
$pdata$?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD imagerel ?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DD	imagerel ?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
$pdata$?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD imagerel ?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DD	imagerel ?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@E@std@@IEBAPEAEXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@E@std@@IEBAPEAEXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@E@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@E@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@E@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@E@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@E@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@E@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@E@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@E@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+113
	DD	imagerel $unwind$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@E@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@E@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRGYInputAvi@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GRGYInputAvi@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__EFOURCC_CSP@@YAXXZ DD imagerel ??__EFOURCC_CSP@@YAXXZ
	DD	imagerel ??__EFOURCC_CSP@@YAXXZ+176
	DD	imagerel $unwind$??__EFOURCC_CSP@@YAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+283
	DD	imagerel $unwind$?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ DD imagerel $LN21
	DD	imagerel $LN21+312
	DD	imagerel $unwind$??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+180
	DD	imagerel $unwind$?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+185
	DD	imagerel $unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z DD imagerel ??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z
	DD	imagerel ??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z DD imagerel ??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z
	DD	imagerel ??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z+32
	DD	imagerel $unwind$??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z DD imagerel $LN5
	DD	imagerel $LN5+282
	DD	imagerel $unwind$?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z DD imagerel ??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z
	DD	imagerel ??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z DD imagerel ??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z
	DD	imagerel ??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z+32
	DD	imagerel $unwind$??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z DD imagerel $LN8
	DD	imagerel $LN8+152
	DD	imagerel $unwind$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA DD imagerel ?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA
	DD	imagerel ?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA+49
	DD	imagerel $unwind$?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??$rgy_reduce@K@@YAXAEAK0@Z DD imagerel ??$rgy_reduce@K@@YAXAEAK0@Z
	DD	imagerel ??$rgy_reduce@K@@YAXAEAK0@Z+126
	DD	imagerel $unwind$??$rgy_reduce@K@@YAXAEAK0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z DD imagerel $LN3
	DD	imagerel $LN3+151
	DD	imagerel $unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN6
	DD	imagerel $LN6+523
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAEX@std@@YAXAEAPEAE0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAEX@std@@YAXAEAPEAE0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@K@std@@YA$$QEAKAEAK@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@K@std@@YA$$QEAKAEAK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBH@std@@YAAEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??$rgy_gcd@K@@YAKKK@Z DD imagerel ??$rgy_gcd@K@@YAKKK@Z
	DD	imagerel ??$rgy_gcd@K@@YAKKK@Z+106
	DD	imagerel $unwind$??$rgy_gcd@K@@YAKKK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z DD imagerel $LN7
	DD	imagerel $LN7+201
	DD	imagerel $unwind$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA DD imagerel ?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA DD imagerel ?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD imagerel $LN6
	DD	imagerel $LN6+459
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DD imagerel $LN4
	DD	imagerel $LN4+129
	DD	imagerel $unwind$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 DD imagerel ??_R0?AV?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@@8 ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Ref_count_base@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8 DD 00H ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@'
	DB	'std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@ DD 01H ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@@8
	DD	imagerel ??_R3?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@8
	DD	imagerel ??_R4?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2RGYInput@@8
rdata$r	SEGMENT
??_R2RGYInput@@8 DD imagerel ??_R1A@?0A@EA@RGYInput@@8	; RGYInput::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3RGYInput@@8
rdata$r	SEGMENT
??_R3RGYInput@@8 DD 00H					; RGYInput::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2RGYInput@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRGYInput@@@8
data$r	SEGMENT
??_R0?AVRGYInput@@@8 DQ FLAT:??_7type_info@@6B@		; RGYInput `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYInput@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RGYInput@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RGYInput@@8 DD imagerel ??_R0?AVRGYInput@@@8 ; RGYInput::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3RGYInput@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@RGYInputAvi@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RGYInputAvi@@8 DD imagerel ??_R0?AVRGYInputAvi@@@8 ; RGYInputAvi::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3RGYInputAvi@@8
rdata$r	ENDS
;	COMDAT ??_R2RGYInputAvi@@8
rdata$r	SEGMENT
??_R2RGYInputAvi@@8 DD imagerel ??_R1A@?0A@EA@RGYInputAvi@@8 ; RGYInputAvi::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@RGYInput@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3RGYInputAvi@@8
rdata$r	SEGMENT
??_R3RGYInputAvi@@8 DD 00H				; RGYInputAvi::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2RGYInputAvi@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRGYInputAvi@@@8
data$r	SEGMENT
??_R0?AVRGYInputAvi@@@8 DQ FLAT:??_7type_info@@6B@	; RGYInputAvi `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYInputAvi@@', 00H
data$r	ENDS
;	COMDAT ??_R4RGYInputAvi@@6B@
rdata$r	SEGMENT
??_R4RGYInputAvi@@6B@ DD 01H				; RGYInputAvi::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVRGYInputAvi@@@8
	DD	imagerel ??_R3RGYInputAvi@@8
	DD	imagerel ??_R4RGYInputAvi@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Ref_count_base@std@@8 DD imagerel ??_R0?AV_Ref_count_base@std@@@8 ; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R2_Ref_count_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Ref_count_base@std@@8 ; std::_Ref_count_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R3_Ref_count_base@std@@8 DD 00H			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Ref_count_base@std@@@8
data$r	SEGMENT
??_R0?AV_Ref_count_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Ref_count_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Ref_count_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ DB '"'
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's'
	DB	00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1LA@NFAFGNON@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LA@NFAFGNON@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'S', 00H, 'P', 00H, '>', 00H, ',', 00H, '3', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H, 'e', 00H, 'r'
	DB	00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'w', 00H, 'i', 00H
	DB	't', 00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@
CONST	SEGMENT
??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@ DB 'array iterator'
	DB	' range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_R0?AUaligned_malloc_deleter@@@8
data$r	SEGMENT
??_R0?AUaligned_malloc_deleter@@@8 DQ FLAT:??_7type_info@@6B@ ; aligned_malloc_deleter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AUaligned_malloc_deleter@@', 00H
data$r	ENDS
;	COMDAT ??_7?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@ DQ FLAT:??_R4?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@ ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`vftable'
	DQ	FLAT:?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
	DQ	FLAT:?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
	DQ	FLAT:??_E?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ DB '"'
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KG@LDGFNOLN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1KG@LDGFNOLN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'S', 00H, 'P', 00H, '>', 00H, ',', 00H, '3', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm'
	DB	00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@ DB 'array iterators in'
	DB	'compatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '[', 00H, ']', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xstring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ DB 'string subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@GIBNJFPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1JG@GIBNJFPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	'T', 00H, 'r', 00H, 'i', 00H, 'm', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, 's', 00H, 'T', 00H, 'r', 00H, 'i', 00H, 'm', 00H, '>', 00H
	DB	' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'[', 00H, ']', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' '
	DB	00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H
	DB	'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@
CONST	SEGMENT
??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@ DB 'cannot derefe'
	DB	'rence out of range array iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r'
	DB	00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1KO@NIONOBPN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1KO@NIONOBPN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, ',', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'S', 00H, 'P', 00H, '>', 00H, ',', 00H, '3', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H
	DB	'>', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized array iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7RGYInputAvi@@6B@
CONST	SEGMENT
??_7RGYInputAvi@@6B@ DQ FLAT:??_R4RGYInputAvi@@6B@	; RGYInputAvi::`vftable'
	DQ	FLAT:??_ERGYInputAvi@@UEAAPEAXI@Z
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z
	DQ	FLAT:?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
	DQ	FLAT:?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?Close@RGYInputAvi@@UEAAXXZ
	DQ	FLAT:?GetAudioTrackCount@RGYInput@@UEAAHXZ
	DQ	FLAT:?GetSubtitleTrackCount@RGYInput@@UEAAHXZ
	DQ	FLAT:?GetDataTrackCount@RGYInput@@UEAAHXZ
	DQ	FLAT:?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?RGY_CSP_NAMES@@3PAPEBDA DQ FLAT:$SG113749		; RGY_CSP_NAMES
	DQ	FLAT:$SG113750
	DQ	FLAT:$SG113751
	DQ	FLAT:$SG113752
	DQ	FLAT:$SG113753
	DQ	FLAT:$SG113754
	DQ	FLAT:$SG113755
	DQ	FLAT:$SG113756
	DQ	FLAT:$SG113757
	DQ	FLAT:$SG113758
	DQ	FLAT:$SG113759
	DQ	FLAT:$SG113760
	DQ	FLAT:$SG113761
	DQ	FLAT:$SG113762
	DQ	FLAT:$SG113763
	DQ	FLAT:$SG113764
	DQ	FLAT:$SG113765
	DQ	FLAT:$SG113766
	DQ	FLAT:$SG113767
	DQ	FLAT:$SG113768
	DQ	FLAT:$SG113769
	DQ	FLAT:$SG113770
	DQ	FLAT:$SG113771
	DQ	FLAT:$SG113772
	DQ	FLAT:$SG113773
	DQ	FLAT:$SG113774
	DQ	FLAT:$SG113775
	DQ	FLAT:$SG113776
	DQ	FLAT:$SG113777
	DQ	FLAT:$SG113778
	DQ	FLAT:$SG113779
	DQ	FLAT:$SG113780
	DQ	FLAT:$SG113781
	DQ	FLAT:$SG113782
	DQ	FLAT:$SG113783
	DQ	FLAT:$SG113784
	DQ	FLAT:$SG113785
	DQ	FLAT:$SG113786
	DQ	FLAT:$SG113787
_DATA	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z DD 022c01H
	DD	070143218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DB 06H
	DB	00H
	DB	00H
	DB	082H
	DB	02H
	DB	'j'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
	DD	imagerel $ip2state$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD 022e01H
	DD	07010f217H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	080H
	DB	02H
	DB	01eH
	DB	04H
	DB	084H
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z
	DD	imagerel $ip2state$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z DD 022811H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z$rtcName$0 DB 05fH ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>
	DB	04fH
	DB	077H
	DB	06eH
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z$rtcVarDesc DD 028H ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>
	DD	018H
	DQ	FLAT:??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z$rtcName$0
	ORG $+48
??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z$rtcFrameData DD 01H ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>
	DD	00H
	DQ	FLAT:??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@K@std@@YA$$QEAKAEAK@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0 DB 05fH ; std::swap<EncodeStatus *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc DD 028H ; std::swap<EncodeStatus *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData DD 01H ; std::swap<EncodeStatus *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAEX@std@@YAXAEAPEAE0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAEX@std@@YAXAEAPEAE0@Z$rtcName$0 DB 05fH	; std::swap<unsigned char *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAEX@std@@YAXAEAPEAE0@Z$rtcVarDesc DD 028H	; std::swap<unsigned char *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAEX@std@@YAXAEAPEAE0@Z$rtcName$0
	ORG $+48
??$swap@PEAEX@std@@YAXAEAPEAE0@Z$rtcFrameData DD 01H	; std::swap<unsigned char *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAEX@std@@YAXAEAPEAE0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	04H
	DB	'p'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z
	DD	imagerel $ip2state$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_62e868838ffeb64a41c8ffc5f45e0307> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_62e868838ffeb64a41c8ffc5f45e0307> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_62e868838ffeb64a41c8ffc5f45e0307> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_6b1bf0d681d7ec7d403f180c952c767d> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_6b1bf0d681d7ec7d403f180c952c767d> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_6b1bf0d681d7ec7d403f180c952c767d> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__EFOURCC_CSP@@YAXXZ DD 021501H
	DD	07002b206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DB 040H
	DD	imagerel $ip2state$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DB 040H
	DD	imagerel $ip2state$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRGYInputAvi@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@E@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@E@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@E@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@E@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@E@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@E@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@E@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z
	DD	imagerel $ip2state$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@E@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@E@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@E@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@E@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@E@std@@IEBAPEAEXZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+5
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$0 DB 073H ; RGYInputAvi::LoadNextFrame
	DB	069H
	DB	07aH
	DB	065H
	DB	052H
	DB	065H
	DB	061H
	DB	064H
	DB	00H
	ORG $+3
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$0 DB 066H ; RGYInputAvi::Init
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+2
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$1 DB 073H ; RGYInputAvi::Init
	DB	074H
	DB	072H
	DB	046H
	DB	063H
	DB	063H
	DB	00H
	ORG $+1
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$4 DB 062H ; RGYInputAvi::Init
	DB	069H
	DB	068H
	DB	00H
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$1 DB 064H ; RGYInputAvi::LoadNextFrame
	DB	073H
	DB	074H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+2
?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcName$0 DB 072H	; codec_fcc_to_rgy
	DB	065H
	DB	074H
	DB	00H
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$2 DB 073H ; RGYInputAvi::LoadNextFrame
	DB	072H
	DB	063H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+6
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcFrameData DD 03H ; RGYInputAvi::LoadNextFrame
	DD	00H
	DQ	FLAT:?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcVarDesc
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$2 DB 073H ; RGYInputAvi::Init
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+2
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcVarDesc DD 0c8H ; RGYInputAvi::LoadNextFrame
	DD	018H
	DQ	FLAT:?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$2
	DD	098H
	DD	018H
	DQ	FLAT:?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$1
	DD	074H
	DD	04H
	DQ	FLAT:?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcName$0
	ORG $+144
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$3 DB 074H ; RGYInputAvi::Init
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+3
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcFrameData DD 05H ; RGYInputAvi::Init
	DD	00H
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcVarDesc
?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z$rtcName$0 DB 072H	; codec_rgy_to_fcc
	DB	065H
	DB	074H
	DB	00H
	ORG $+4
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcVarDesc DD 0200H ; RGYInputAvi::Init
	DD	0a0H
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$4
	DD	01b4H
	DD	05H
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$3
	DD	0110H
	DD	08cH
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$2
	DD	0c8H
	DD	028H
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$1
	DD	040H
	DD	06cH
	DQ	FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcName$0
	ORG $+240
?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcVarDesc DD 028H ; codec_fcc_to_rgy
	DD	020H
	DQ	FLAT:?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcName$0
	ORG $+48
?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcFrameData DD 01H ; codec_fcc_to_rgy
	DD	00H
	DQ	FLAT:?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcVarDesc
?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z$rtcVarDesc DD 028H	; codec_rgy_to_fcc
	DD	020H
	DQ	FLAT:?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z$rtcName$0
	ORG $+48
?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z$rtcFrameData DD 01H	; codec_rgy_to_fcc
	DD	00H
	DQ	FLAT:?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?AddMessage@RGYInput@@QEAAXHPEBDZZ DB 06H
	DB	00H
	DB	00H
	DB	0fdH, 02H
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?AddMessage@RGYInput@@QEAAXHPEBDZZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?AddMessage@RGYInput@@QEAAXHPEBDZZ DB 08H
	DD	imagerel $stateUnwindMap$?AddMessage@RGYInput@@QEAAXHPEBDZZ
	DD	imagerel $ip2state$?AddMessage@RGYInput@@QEAAXHPEBDZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddMessage@RGYInput@@QEAAXHPEBDZZ DD 034419H
	DD	014011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?AddMessage@RGYInput@@QEAAXHPEBDZZ
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$0 DB 061H	; RGYInput::AddMessage
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+3
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$1 DB 062H	; RGYInput::AddMessage
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcVarDesc DD 048H	; RGYInput::AddMessage
	DD	028H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$0
	ORG $+96
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcFrameData DD 02H	; RGYInput::AddMessage
	DD	00H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 014H
	DB	00H
	DB	00H
	DB	'q', 02H
	DB	02H
	DB	'6'
	DB	06H
	DB	0c9H, 03H
	DB	08H
	DB	'j'
	DB	0aH
	DB	'h'
	DB	0cH
	DB	'|'
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 033f19H
	DD	02e0116H
	DD	0700fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0 DB 06cH ; RGYInput::AddMessage
	DB	069H
	DB	06eH
	DB	065H
	DB	073H
	DB	00H
	ORG $+10
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc DD 028H ; RGYInput::AddMessage
	DD	020H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0
	ORG $+48
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData DD 01H ; RGYInput::AddMessage
	DD	00H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDataTrackCount@RGYInput@@UEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSubtitleTrackCount@RGYInput@@UEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAudioTrackCount@RGYInput@@UEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRGYConvertCSP@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DB 040H
	DD	imagerel $ip2state$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pitch@RGYFrame@@QEAAIXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrRGB@RGYFrame@@QEAAPEAEXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DB 06H
	DB	00H
	DB	00H
	DB	0a0H
	DB	04H
	DB	01H, 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z DD 023d19H
	DD	07010f217H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
	DD	072H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z$rtcName$0 DB 05fH ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DB	041H
	DB	06eH
	DB	073H
	DB	00H
	ORG $+11
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z$rtcVarDesc DD 028H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	028H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z$rtcName$0
	ORG $+48
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z$rtcFrameData DD 01H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getLogLevel@RGYLog@@QEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0a0H
	DB	04H
	DB	01H, 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD 023d19H
	DD	07010f217H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	072H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0 DB 05fH ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DB	041H
	DB	06eH
	DB	073H
	DB	00H
	ORG $+11
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc DD 028H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	028H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0
	ORG $+48
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData DD 01H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Raligned_malloc_deleter@@QEBAXPEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
xdata	SEGMENT
$unwind$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z DD 010901H
	DD	07009H
$unwind$??0RGYInputAvi@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RGYInputAvi@@QEAA@XZ
$cppxdata$??0RGYInputAvi@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0RGYInputAvi@@QEAA@XZ
	DD	imagerel $ip2state$??0RGYInputAvi@@QEAA@XZ
$stateUnwindMap$??0RGYInputAvi@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA
$ip2state$??0RGYInputAvi@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	'R'
	DB	02H
	DB	05H, 02H
	DB	04H
	DB	'6'
	DB	00H
$cppxdata$??1RGYInputAvi@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1RGYInputAvi@@UEAA@XZ
	DD	imagerel $ip2state$??1RGYInputAvi@@UEAA@XZ
$ip2state$??1RGYInputAvi@@UEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	'Z'
	DB	04H
	DB	016H
	DB	02H
	DB	'('
	DB	00H
$unwind$?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1RGYInputAvi@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1RGYInputAvi@@UEAA@XZ
$stateUnwindMap$??1RGYInputAvi@@UEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA
$cppxdata$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
	DD	imagerel $ip2state$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
$unwind$?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DD 033b19H
	DD	02c0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z
	DD	0152H
$stateUnwindMap$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA
$ip2state$?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'}', 06H
	DB	02H
	DB	'>'
	DB	00H
$cppxdata$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z
	DD	imagerel $ip2state$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z
$stateUnwindMap$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA
$unwind$?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Close@RGYInputAvi@@UEAAXXZ DD 021e01H
	DD	07006320aH
$unwind$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z DD 044619H
	DD	075011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z
	DD	039aH
$ip2state$?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z DB '*'
	DB	00H
	DB	00H
	DB	'q', 02H
	DB	02H
	DB	'>'
	DB	00H
	DB	0b9H, 03H
	DB	04H
	DB	0daH
	DB	00H
	DB	'2'
	DB	04H
	DB	'm', 05H
	DB	06H
	DB	','
	DB	04H
	DB	0e2H
	DB	00H
	DB	'2'
	DB	04H
	DB	'M', 0fH
	DB	00H
	DB	'2'
	DB	04H
	DB	'!', 03H
	DB	00H
	DB	'2'
	DB	04H
	DB	0b6H
	DB	00H
	DB	'2'
	DB	04H
	DB	0f5H, 06H
	DB	00H
	DB	'2'
	DB	04H
	DB	091H, 03H
	DB	08H
	DB	0f2H
	DB	04H
	DB	0acH
	DB	00H
	ORG $+2
$unwind$?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$??$rgy_reduce@K@@YAXAEAK0@Z DD 022301H
	DD	0700b520fH
$unwind$??$rgy_gcd@K@@YAKKK@Z DD 022001H
	DD	07009120dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DB 040H
	DD	imagerel $ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DB 040H
	DD	imagerel $ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	030H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	032H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DB 040H
	DD	imagerel $ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Ref_count_base@std@@UEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Ref_count_base@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12_compatible@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??8type_info@@QEBA_NAEBV0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??8type_info@@QEBA_NAEBV0@@Z DB 040H
	DD	imagerel $ip2state$??8type_info@@QEBA_NAEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8type_info@@QEBA_NAEBV0@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??8type_info@@QEBA_NAEBV0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf_l DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsprintf_s DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?FOURCC_CSP$initializer$@@3P6AXXZEA DQ FLAT:??__EFOURCC_CSP@@YAXXZ ; FOURCC_CSP$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z PROC		; std::forward<unsigned char * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z ENDP		; std::forward<unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z PROC ; std::forward<aligned_malloc_deleter>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ENDP ; std::forward<aligned_malloc_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z PROC ; std::forward<RGYConvertCSP * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z ENDP ; std::forward<RGYConvertCSP * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z PROC ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><aligned_malloc_deleter,unsigned char * &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@Ualigned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ; std::forward<aligned_malloc_deleter>
  00036	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0003b	e8 00 00 00 00	 call	 ??$forward@AEAPEAE@std@@YAAEAPEAEAEAPEAE@Z ; std::forward<unsigned char * &>
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 89 01	 mov	 QWORD PTR [rcx], rax
  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z ENDP ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><aligned_malloc_deleter,unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z PROC ; std::addressof<aligned_malloc_deleter const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z ENDP ; std::addressof<aligned_malloc_deleter const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
this$ = 16
_Px$ = 24
_Rx$ = 32
??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<unsigned char>::_Set_ptr_rep_and_enable_shared<unsigned char>, COMDAT

; 1266 :     void _Set_ptr_rep_and_enable_shared(_Ux* const _Px, _Ref_count_base* const _Rx) noexcept { // take ownership of _Px

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1267 :         this->_Ptr = _Px;

  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Px$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1268 :         this->_Rep = _Rx;

  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rx$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1269 : #if _HAS_IF_CONSTEXPR
; 1270 :         if constexpr (conjunction_v<negation<is_array<_Ty>>, negation<is_volatile<_Ux>>, _Can_enable_shared<_Ux>>) {
; 1271 :             if (_Px && _Px->_Wptr.expired()) {
; 1272 :                 _Px->_Wptr = shared_ptr<remove_cv_t<_Ux>>(*this, const_cast<remove_cv_t<_Ux>*>(_Px));
; 1273 :             }
; 1274 :         }
; 1275 : #else // ^^^ _HAS_IF_CONSTEXPR // !_HAS_IF_CONSTEXPR vvv
; 1276 :         _Enable_shared_from_this1(*this, _Px,
; 1277 :             bool_constant<
; 1278 :                 conjunction_v<negation<is_array<_Ty>>, negation<is_volatile<_Ux>>, _Can_enable_shared<_Ux>>>{});
; 1279 : #endif // _HAS_IF_CONSTEXPR
; 1280 :     }

  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<unsigned char>::_Set_ptr_rep_and_enable_shared<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAAPEAXI@Z ENDP ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ ENDP ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA PROC ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA ENDP ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA PROC ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEAA@XZ@4HA ENDP ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::~_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ PROC ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ ENDP ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ PROC ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ENDP ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv74 = 40
this$ = 64
?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Delete_this, COMDAT

; 714  :     virtual void _Delete_this() noexcept override { // destroy self

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 715  :         delete this;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00028	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  0002e	74 1c		 je	 SHORT $LN3@Delete_thi
  00030	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  00035	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00038	ba 01 00 00 00	 mov	 edx, 1
  0003d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00042	ff 50 10	 call	 QWORD PTR [rax+16]
  00045	48 89 44 24 28	 mov	 QWORD PTR tv74[rsp], rax
  0004a	eb 09		 jmp	 SHORT $LN4@Delete_thi
$LN3@Delete_thi:
  0004c	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv74[rsp], 0
$LN4@Delete_thi:

; 716  :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Delete_this@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ ENDP ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Destroy, COMDAT

; 710  :     virtual void _Destroy() noexcept override { // destroy managed resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 711  :         _Mypair._Get_first()(_Mypair._Myval2);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 10	 add	 rax, 16
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAAAEAUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
  0002f	90		 npad	 1
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	48 8b 51 10	 mov	 rdx, QWORD PTR [rcx+16]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??Raligned_malloc_deleter@@QEBAXPEAX@Z ; aligned_malloc_deleter::operator()
  00041	90		 npad	 1

; 712  :     }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
?_Destroy@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@EEAAXXZ ENDP ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z
_TEXT	SEGMENT
this$ = 48
_Typeid$ = 56
?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Get_deleter, COMDAT

; 697  :     virtual void* _Get_deleter(const type_info& _Typeid) const noexcept override { // return address of deleter object

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 698  : #if _HAS_STATIC_RTTI
; 699  :         if (_Typeid == typeid(_Dx)) {

  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_R0?AUaligned_malloc_deleter@@@8
  0002a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Typeid$[rsp]
  0002f	e8 00 00 00 00	 call	 ??8type_info@@QEBA_NAEBV0@@Z ; type_info::operator==
  00034	0f b6 c0	 movzx	 eax, al
  00037	85 c0		 test	 eax, eax
  00039	74 1b		 je	 SHORT $LN2@Get_delete

; 700  :             return const_cast<_Dx*>(_STD addressof(_Mypair._Get_first()));

  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEBAAEBUaligned_malloc_deleter@@XZ ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Get_first
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??$addressof@$$CBUaligned_malloc_deleter@@@std@@YAPEBUaligned_malloc_deleter@@AEBU1@@Z ; std::addressof<aligned_malloc_deleter const >
  00054	eb 02		 jmp	 SHORT $LN1@Get_delete
$LN2@Get_delete:

; 701  :         }
; 702  : #else // _HAS_STATIC_RTTI
; 703  :         (void) _Typeid;
; 704  : #endif // _HAS_STATIC_RTTI
; 705  : 
; 706  :         return nullptr;

  00056	33 c0		 xor	 eax, eax
$LN1@Get_delete:

; 707  :     }

  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
?_Get_deleter@?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@UEBAPEAXAEBVtype_info@@@Z ENDP ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Px$ = 72
_Dt$ = 80
??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z PROC ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>, COMDAT

; 695  :         : _Ref_count_base(), _Mypair(_One_then_variadic_args_t(), _STD move(_Dt), _Px) {}

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8b 7c 24 40	 mov	 rdi, QWORD PTR this$[rsp]
  0002d	33 c0		 xor	 eax, eax
  0002f	b9 10 00 00 00	 mov	 ecx, 16
  00034	f3 aa		 rep stosb
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IEAA@XZ ; std::_Ref_count_base::_Ref_count_base
  00040	90		 npad	 1
  00041	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@6B@
  0004d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00050	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Dt$[rsp]
  00055	e8 00 00 00 00	 call	 ??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ; std::move<aligned_malloc_deleter &>
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	48 83 c1 10	 add	 rcx, 16
  00063	4c 8d 4c 24 48	 lea	 r9, QWORD PTR _Px$[rsp]
  00068	4c 8b c0	 mov	 r8, rax
  0006b	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00070	e8 00 00 00 00	 call	 ??$?0Ualigned_malloc_deleter@@AEAPEAE@?$_Compressed_pair@Ualigned_malloc_deleter@@PEAE$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUaligned_malloc_deleter@@AEAPEAE@Z ; std::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1>::_Compressed_pair<aligned_malloc_deleter,unsigned char *,1><aligned_malloc_deleter,unsigned char * &>
  00075	90		 npad	 1
  00076	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007f	5f		 pop	 rdi
  00080	c3		 ret	 0
??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z ENDP ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Px$ = 72
_Dt$ = 80
?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA PROC ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA ENDP ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Px$ = 72
_Dt$ = 80
?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA PROC ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z@4HA ENDP ; `std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ PROC ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::~_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>, COMDAT

; 997  :     ~_Temporary_owner_del() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 998  :         if (_Call_deleter) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 40 10	 movzx	 eax, BYTE PTR [rax+16]
  00027	85 c0		 test	 eax, eax
  00029	74 17		 je	 SHORT $LN2@Temporary_

; 999  :             _Dt(_Ptr);

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003c	e8 00 00 00 00	 call	 ??Raligned_malloc_deleter@@QEBAXPEAX@Z ; aligned_malloc_deleter::operator()
  00041	90		 npad	 1
$LN2@Temporary_:

; 1000 :         }
; 1001 :     }

  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ ENDP ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::~_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z
_TEXT	SEGMENT
this$ = 16
_Ptr_$ = 24
_Dt_$ = 32
??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z PROC ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>, COMDAT

; 994  :     explicit _Temporary_owner_del(const _UxptrOrNullptr _Ptr_, _Dx& _Dt_) noexcept : _Ptr(_Ptr_), _Dt(_Dt_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Ptr_$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Dt_$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 992  :     bool _Call_deleter = true;

  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	c6 40 10 01	 mov	 BYTE PTR [rax+16], 1

; 994  :     explicit _Temporary_owner_del(const _UxptrOrNullptr _Ptr_, _Dx& _Dt_) noexcept : _Ptr(_Ptr_), _Dt(_Dt_) {}

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z ENDP ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z PROC ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><RGYConvertCSP * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVRGYConvertCSP@@@std@@YAAEAPEAVRGYConvertCSP@@AEAPEAV1@@Z ; std::forward<RGYConvertCSP * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z ENDP ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><RGYConvertCSP * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z PROC ; std::_Verify_range<std::pair<unsigned int,enum RGY_CSP>,3>, COMDAT

; 1462 :     const _Array_const_iterator<_Ty, _Size>& _First, const _Array_const_iterator<_Ty, _Size>& _Last) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1463 :     // TRANSITION, VSO#612785
; 1464 :     _First._Verify_with(_Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Verify_with

; 1465 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ENDP ; std::_Verify_range<std::pair<unsigned int,enum RGY_CSP>,3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Old_size$ = 40
_New_size$ = 48
_Old_capacity$ = 56
_New_capacity$ = 64
_Al$ = 72
_New_ptr$ = 88
_Raw_new$ = 104
_Old_ptr$4 = 112
this$ = 144
_Size_increase$ = 152
_Fn$ = 160
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00044	48 89 44 24 28	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  00049	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00056	48 2b 44 24 28	 sub	 rax, QWORD PTR _Old_size$[rsp]
  0005b	48 3b 84 24 98
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00063	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  00065	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006a	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00072	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 44 24 30	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00082	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00087	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008b	48 89 44 24 38	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00090	48 8b 54 24 30	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00095	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a2	48 89 44 24 40	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000a7	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b4	48 89 44 24 48	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b9	48 8b 44 24 40	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000be	48 ff c0	 inc	 rax
  000c1	48 8b d0	 mov	 rdx, rax
  000c4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  000c9	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000ce	48 89 44 24 58	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d8	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000dd	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000e7	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000eb	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000f9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000fe	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00103	48 89 44 24 68	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00108	48 83 7c 24 38
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  0010e	72 5c		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00110	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00115	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00119	48 89 44 24 70	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0011e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00123	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00128	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00135	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0013d	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00142	48 8b 44 24 38	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00147	48 ff c0	 inc	 rax
  0014a	4c 8b c0	 mov	 r8, rax
  0014d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00152	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  00157	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  0015c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00161	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00166	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  0016a	eb 39		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  0016c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00171	48 83 c0 08	 add	 rax, 8
  00175	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0017a	4c 8b c0	 mov	 r8, rax
  0017d	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00182	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0018a	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0018f	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00194	48 83 c0 08	 add	 rax, 8
  00198	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001a5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ad	48 8b f8	 mov	 rdi, rax
  001b0	48 8b cc	 mov	 rcx, rsp
  001b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData
  001ba	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001bf	48 8b c7	 mov	 rax, rdi
  001c2	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001c9	5f		 pop	 rdi
  001ca	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z PROC ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator(), COMDAT

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00032	48 ff c0	 inc	 rax
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00042	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3607 :                 });

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ENDP ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z PROC ; std::move<EncodeStatus * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ENDP ; std::move<EncodeStatus * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z PROC		; std::move<unsigned char * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z ENDP		; std::move<unsigned char * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG145246
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG145247
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG145248
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG145249
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG145250
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG145251
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z
_TEXT	SEGMENT
_Owner$ = 40
$T4 = 72
$T5 = 80
tv88 = 88
this$ = 112
_Px$ = 120
_Dt$ = 128
??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z PROC ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>, COMDAT

; 1238 :     void _Setpd(const _UxptrOrNullptr _Px, _Dx _Dt) { // take ownership of _Px, deleter _Dt

$LN7:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1239 :         _Temporary_owner_del<_UxptrOrNullptr, _Dx> _Owner(_Px, _Dt);

  00028	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR _Dt$[rsp]
  00030	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Px$[rsp]
  00035	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Owner$[rsp]
  0003a	e8 00 00 00 00	 call	 ??0?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@QEAEAEAUaligned_malloc_deleter@@@Z ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
  0003f	90		 npad	 1

; 1240 :         _Set_ptr_rep_and_enable_shared(

  00040	b9 18 00 00 00	 mov	 ecx, 24
  00045	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0004a	48 89 44 24 50	 mov	 QWORD PTR $T5[rsp], rax
  0004f	48 83 7c 24 50
	00		 cmp	 QWORD PTR $T5[rsp], 0
  00055	74 27		 je	 SHORT $LN3@Setpd
  00057	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Dt$[rsp]
  0005f	e8 00 00 00 00	 call	 ??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ; std::move<aligned_malloc_deleter &>
  00064	44 0f b6 00	 movzx	 r8d, BYTE PTR [rax]
  00068	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Owner$[rsp]
  0006d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T5[rsp]
  00072	e8 00 00 00 00	 call	 ??0?$_Ref_count_resource@PEAEUaligned_malloc_deleter@@@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z ; std::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>::_Ref_count_resource<unsigned char *,aligned_malloc_deleter>
  00077	48 89 44 24 58	 mov	 QWORD PTR tv88[rsp], rax
  0007c	eb 09		 jmp	 SHORT $LN4@Setpd
$LN3@Setpd:
  0007e	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR tv88[rsp], 0
$LN4@Setpd:
  00087	48 8b 44 24 58	 mov	 rax, QWORD PTR tv88[rsp]
  0008c	48 89 44 24 48	 mov	 QWORD PTR $T4[rsp], rax
  00091	4c 8b 44 24 48	 mov	 r8, QWORD PTR $T4[rsp]
  00096	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Owner$[rsp]
  0009b	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ??$_Set_ptr_rep_and_enable_shared@E@?$shared_ptr@E@std@@AEAAXQEAEQEAV_Ref_count_base@1@@Z ; std::shared_ptr<unsigned char>::_Set_ptr_rep_and_enable_shared<unsigned char>

; 1241 :             _Owner._Ptr, new _Ref_count_resource<_UxptrOrNullptr, _Dx>(_Owner._Ptr, _STD move(_Dt)));
; 1242 :         _Owner._Call_deleter = false;

  000a5	c6 44 24 38 00	 mov	 BYTE PTR _Owner$[rsp+16], 0

; 1243 :     }

  000aa	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Owner$[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::~_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
  000b4	48 8b cc	 mov	 rcx, rsp
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z$rtcFrameData
  000be	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c3	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000c7	5f		 pop	 rdi
  000c8	c3		 ret	 0
??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z ENDP ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Owner$ = 40
$T4 = 72
$T5 = 80
tv88 = 88
this$ = 112
_Px$ = 120
_Dt$ = 128
?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA PROC ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Owner$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::~_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA ENDP ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Owner$ = 40
$T4 = 72
$T5 = 80
tv88 = 88
this$ = 112
_Px$ = 120
_Dt$ = 128
?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA PROC ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba 18 00 00 00	 mov	 edx, 24
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR $T5[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA ENDP ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Owner$ = 40
$T4 = 72
$T5 = 80
tv88 = 88
this$ = 112
_Px$ = 120
_Dt$ = 128
?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA PROC ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Owner$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Temporary_owner_del@PEAEUaligned_malloc_deleter@@@std@@QEAA@XZ ; std::_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>::~_Temporary_owner_del<unsigned char *,aligned_malloc_deleter>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA ENDP ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Owner$ = 40
$T4 = 72
$T5 = 80
tv88 = 88
this$ = 112
_Px$ = 120
_Dt$ = 128
?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA PROC ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba 18 00 00 00	 mov	 edx, 24
  00018	48 8b 4d 50	 mov	 rcx, QWORD PTR $T5[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z@4HA ENDP ; `std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z PROC ; std::move<aligned_malloc_deleter &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ENDP ; std::move<aligned_malloc_deleter &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
c$ = 0
a$ = 32
b$ = 40
??$rgy_gcd@K@@YAKKK@Z PROC				; rgy_gcd<unsigned long>

; 208  : static inline T rgy_gcd(T a, T b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi
  00009	48 83 ec 10	 sub	 rsp, 16
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 04 00 00 00	 mov	 ecx, 4
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 209  :     static_assert(std::is_integral<T>::value, "rgy_gcd is defined only for integer.");
; 210  :     if (a == 0) return b;

  00020	83 7c 24 20 00	 cmp	 DWORD PTR a$[rsp], 0
  00025	75 06		 jne	 SHORT $LN4@rgy_gcd
  00027	8b 44 24 28	 mov	 eax, DWORD PTR b$[rsp]
  0002b	eb 37		 jmp	 SHORT $LN1@rgy_gcd
$LN4@rgy_gcd:

; 211  :     if (b == 0) return a;

  0002d	83 7c 24 28 00	 cmp	 DWORD PTR b$[rsp], 0
  00032	75 06		 jne	 SHORT $LN5@rgy_gcd
  00034	8b 44 24 20	 mov	 eax, DWORD PTR a$[rsp]
  00038	eb 2a		 jmp	 SHORT $LN1@rgy_gcd
$LN5@rgy_gcd:
$LN2@rgy_gcd:

; 212  :     T c;
; 213  :     while ((c = a % b) != 0)

  0003a	33 d2		 xor	 edx, edx
  0003c	8b 44 24 20	 mov	 eax, DWORD PTR a$[rsp]
  00040	f7 74 24 28	 div	 DWORD PTR b$[rsp]
  00044	8b c2		 mov	 eax, edx
  00046	89 04 24	 mov	 DWORD PTR c$[rsp], eax
  00049	83 3c 24 00	 cmp	 DWORD PTR c$[rsp], 0
  0004d	74 11		 je	 SHORT $LN3@rgy_gcd

; 214  :         a = b, b = c;

  0004f	8b 44 24 28	 mov	 eax, DWORD PTR b$[rsp]
  00053	89 44 24 20	 mov	 DWORD PTR a$[rsp], eax
  00057	8b 04 24	 mov	 eax, DWORD PTR c$[rsp]
  0005a	89 44 24 28	 mov	 DWORD PTR b$[rsp], eax
  0005e	eb da		 jmp	 SHORT $LN2@rgy_gcd
$LN3@rgy_gcd:

; 215  :     return b;

  00060	8b 44 24 28	 mov	 eax, DWORD PTR b$[rsp]
$LN1@rgy_gcd:

; 216  : }

  00064	48 83 c4 10	 add	 rsp, 16
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
??$rgy_gcd@K@@YAKKK@Z ENDP				; rgy_gcd<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAVRGYConvertCSP@@@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYConvertCSP@@@Z ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><RGYConvertCSP * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBH@std@@YAAEBHAEBH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBH@std@@YAAEBHAEBH@Z PROC			; std::forward<int const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBH@std@@YAAEBHAEBH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z PROC ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::pair<unsigned int,enum RGY_CSP> const *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z ENDP ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::pair<unsigned int,enum RGY_CSP> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z PROC ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z ENDP ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z PROC ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3> >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Verify_range@U?$pair@IW4RGY_CSP@@@std@@$02@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ; std::_Verify_range<std::pair<unsigned int,enum RGY_CSP>,3>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ENDP ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z PROC ; std::pair<unsigned int,enum RGY_CSP>::pair<unsigned int,enum RGY_CSP><unsigned long,enum RGY_CSP,0>, COMDAT

; 165  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$forward@K@std@@YA$$QEAKAEAK@Z ; std::forward<unsigned long>
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	89 01		 mov	 DWORD PTR [rcx], eax
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 83 c0 04	 add	 rax, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z ENDP ; std::pair<unsigned int,enum RGY_CSP>::pair<unsigned int,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z PROC ; std::pair<unsigned long,enum RGY_CSP>::pair<unsigned long,enum RGY_CSP><unsigned long,enum RGY_CSP,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@K@std@@YA$$QEAKAEAK@Z ; std::forward<unsigned long>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z ENDP ; std::pair<unsigned long,enum RGY_CSP>::pair<unsigned long,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z PROC ; std::forward<enum RGY_CSP>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ENDP ; std::forward<enum RGY_CSP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@K@std@@YA$$QEAKAEAK@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@K@std@@YA$$QEAKAEAK@Z PROC			; std::forward<unsigned long>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@K@std@@YA$$QEAKAEAK@Z ENDP			; std::forward<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z PROC ; std::swap<EncodeStatus *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ENDP ; std::swap<EncodeStatus *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAEX@std@@YAXAEAPEAE0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAEX@std@@YAXAEAPEAE0@Z PROC			; std::swap<unsigned char *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z ; std::move<unsigned char * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z ; std::move<unsigned char * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAE@std@@YA$$QEAPEAEAEAPEAE@Z ; std::move<unsigned char * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAEX@std@@YAXAEAPEAE0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAEX@std@@YAXAEAPEAE0@Z ENDP			; std::swap<unsigned char *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7e		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	0f b6 8c 24 c0
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_1>$[rsp]
  0013b	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0013f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00147	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014c	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00151	4c 8b c0	 mov	 r8, rax
  00154	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00159	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00161	e8 00 00 00 00	 call	 ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00166	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016b	48 ff c0	 inc	 rax
  0016e	4c 8b c0	 mov	 r8, rax
  00171	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00179	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00183	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00188	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00191	eb 52		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00193	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00198	48 83 c0 08	 add	 rax, 8
  0019c	0f b6 8c 24 c0
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_1>$[rsp]
  001a4	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  001a8	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b5	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001ba	4c 8b c0	 mov	 r8, rax
  001bd	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c2	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001ca	e8 00 00 00 00	 call	 ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d4	48 83 c0 08	 add	 rax, 8
  001d8	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001dd	48 8b c8	 mov	 rcx, rax
  001e0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ed	48 8b f8	 mov	 rdi, rax
  001f0	48 8b cc	 mov	 rcx, rsp
  001f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcFrameData
  001fa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ff	48 8b c7	 mov	 rax, rdi
  00202	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00209	5f		 pop	 rdi
  0020a	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Count$ = 96
_Ch$ = 104
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z PROC ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator(), COMDAT

; 2773 :                 const _Elem _Ch) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2774 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2775 :                 _Traits::assign(_New_ptr + _Old_size, _Count, _Ch);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	44 0f b6 44 24
	68		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00057	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Count$[rsp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2776 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00064	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00069	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  0006e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00073	48 03 c8	 add	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007e	48 03 c8	 add	 rcx, rax
  00081	48 8b c1	 mov	 rax, rcx
  00084	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2777 :             },

  00091	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ENDP ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z PROC ; std::exchange<RGYConvertCSP *,RGYConvertCSP *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z ENDP ; std::exchange<RGYConvertCSP *,RGYConvertCSP *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z PROC ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z ENDP ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 16
_Right$ = 24
??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z PROC ; std::_Ptr_base<unsigned char>::_Move_construct_from<unsigned char>, COMDAT

; 825  :     void _Move_construct_from(_Ptr_base<_Ty2>&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 826  :         // implement shared_ptr's (converting) move ctor and weak_ptr's move ctor
; 827  :         _Ptr = _Right._Ptr;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx

; 828  :         _Rep = _Right._Rep;

  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00025	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00029	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 829  : 
; 830  :         _Right._Ptr = nullptr;

  0002d	48 8b 44 24 18	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 831  :         _Right._Rep = nullptr;

  00039	48 8b 44 24 18	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 832  :     }

  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z ENDP ; std::_Ptr_base<unsigned char>::_Move_construct_from<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z PROC ; std::forward<std::default_delete<RGYConvertCSP> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<RGYConvertCSP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z PROC ; std::move<std::shared_ptr<unsigned char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z ENDP ; std::move<std::shared_ptr<unsigned char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z
_TEXT	SEGMENT
this$ = 48
_Px$ = 56
_Dt$ = 64
??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z PROC ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char><unsigned char,aligned_malloc_deleter,0>, COMDAT

; 1042 :     shared_ptr(_Ux* _Px, _Dx _Dt) { // construct with _Px, deleter

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Ptr_base@E@std@@IEAA@XZ ; std::_Ptr_base<unsigned char>::_Ptr_base<unsigned char>

; 1043 :         _Setpd(_Px, _STD move(_Dt));

  00032	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Dt$[rsp]
  00037	e8 00 00 00 00	 call	 ??$move@AEAUaligned_malloc_deleter@@@std@@YA$$QEAUaligned_malloc_deleter@@AEAU1@@Z ; std::move<aligned_malloc_deleter &>
  0003c	44 0f b6 00	 movzx	 r8d, BYTE PTR [rax]
  00040	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Px$[rsp]
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	e8 00 00 00 00	 call	 ??$_Setpd@PEAEUaligned_malloc_deleter@@@?$shared_ptr@E@std@@AEAAXQEAEUaligned_malloc_deleter@@@Z ; std::shared_ptr<unsigned char>::_Setpd<unsigned char *,aligned_malloc_deleter>

; 1044 :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z ENDP ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char><unsigned char,aligned_malloc_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ PROC ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ENDP ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
gcd$ = 32
a$ = 64
b$ = 72
??$rgy_reduce@K@@YAXAEAK0@Z PROC			; rgy_reduce<unsigned long>

; 240  : static inline void rgy_reduce(T& a, T& b) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :     static_assert(std::is_integral<T>::value, "rgy_reduce is defined only for integer.");
; 242  :     if (a == 0 || b == 0) return;

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR a$[rsp]
  00028	83 38 00	 cmp	 DWORD PTR [rax], 0
  0002b	74 0a		 je	 SHORT $LN3@rgy_reduce
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR b$[rsp]
  00032	83 38 00	 cmp	 DWORD PTR [rax], 0
  00035	75 02		 jne	 SHORT $LN2@rgy_reduce
$LN3@rgy_reduce:
  00037	eb 3f		 jmp	 SHORT $LN1@rgy_reduce
$LN2@rgy_reduce:

; 243  :     T gcd = rgy_gcd(a, b);

  00039	48 8b 44 24 48	 mov	 rax, QWORD PTR b$[rsp]
  0003e	8b 10		 mov	 edx, DWORD PTR [rax]
  00040	48 8b 44 24 40	 mov	 rax, QWORD PTR a$[rsp]
  00045	8b 08		 mov	 ecx, DWORD PTR [rax]
  00047	e8 00 00 00 00	 call	 ??$rgy_gcd@K@@YAKKK@Z	; rgy_gcd<unsigned long>
  0004c	89 44 24 20	 mov	 DWORD PTR gcd$[rsp], eax

; 244  :     a /= gcd;

  00050	33 d2		 xor	 edx, edx
  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR a$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	f7 74 24 20	 div	 DWORD PTR gcd$[rsp]
  0005d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  00062	89 01		 mov	 DWORD PTR [rcx], eax

; 245  :     b /= gcd;

  00064	33 d2		 xor	 edx, edx
  00066	48 8b 44 24 48	 mov	 rax, QWORD PTR b$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	f7 74 24 20	 div	 DWORD PTR gcd$[rsp]
  00071	48 8b 4c 24 48	 mov	 rcx, QWORD PTR b$[rsp]
  00076	89 01		 mov	 DWORD PTR [rcx], eax
$LN1@rgy_reduce:

; 246  : }

  00078	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
??$rgy_reduce@K@@YAXAEAK0@Z ENDP			; rgy_reduce<unsigned long>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z PROC ; std::make_unique<RGYConvertCSP,int const &,0>, COMDAT

; 2056 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00023	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T3[rsp], 0

; 2057 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  0002b	b9 d8 00 00 00	 mov	 ecx, 216		; 000000d8H
  00030	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00035	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003a	48 83 7c 24 28
	00		 cmp	 QWORD PTR $T2[rsp], 0
  00040	74 1d		 je	 SHORT $LN3@make_uniqu
  00042	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0004c	8b 10		 mov	 edx, DWORD PTR [rax]
  0004e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR $T2[rsp]
  00053	e8 00 00 00 00	 call	 ??0RGYConvertCSP@@QEAA@H@Z ; RGYConvertCSP::RGYConvertCSP
  00058	48 89 44 24 38	 mov	 QWORD PTR tv80[rsp], rax
  0005d	eb 09		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  0005f	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv80[rsp], 0
$LN4@make_uniqu:
  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR tv80[rsp]
  0006d	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00072	48 8b 54 24 20	 mov	 rdx, QWORD PTR $T1[rsp]
  00077	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007c	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@PEAVRGYConvertCSP@@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>
  00081	8b 44 24 30	 mov	 eax, DWORD PTR $T3[rsp]
  00085	83 c8 01	 or	 eax, 1
  00088	89 44 24 30	 mov	 DWORD PTR $T3[rsp], eax
  0008c	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 2058 : }

  00091	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
  00097	cc		 int	 3
??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z ENDP ; std::make_unique<RGYConvertCSP,int const &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA PROC ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba d8 00 00 00	 mov	 edx, 216		; 000000d8H
  00018	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA ENDP ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA PROC ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 30	 mov	 eax, DWORD PTR $T3[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN7@dtor$1
  0001d	83 65 30 fe	 and	 DWORD PTR $T3[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
$LN7@dtor$1:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA ENDP ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA PROC ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba d8 00 00 00	 mov	 edx, 216		; 000000d8H
  00018	48 8b 4d 28	 mov	 rcx, QWORD PTR $T2[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA ENDP ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA PROC ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 30	 mov	 eax, DWORD PTR $T3[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN7@dtor$1
  0001d	83 65 30 fe	 and	 DWORD PTR $T3[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
$LN7@dtor$1:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$1@?0???$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z@4HA ENDP ; `std::make_unique<RGYConvertCSP,int const &,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_62e868838ffeb64a41c8ffc5f45e0307> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z ; <lambda_62e868838ffeb64a41c8ffc5f45e0307>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::pair<unsigned int,enum RGY_CSP> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_62e868838ffeb64a41c8ffc5f45e0307> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z
_TEXT	SEGMENT
this$ = 16
<var1>$ = 24
??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z PROC ; <lambda_62e868838ffeb64a41c8ffc5f45e0307>::<lambda_62e868838ffeb64a41c8ffc5f45e0307>, COMDAT

; 41   : MAP_PAIR_0_1(codec, fcc, uint32_t, rgy, RGY_CSP, FOURCC_CSP, 0u, RGY_CSP_NA);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var1>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z ENDP ; <lambda_62e868838ffeb64a41c8ffc5f45e0307>::<lambda_62e868838ffeb64a41c8ffc5f45e0307>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z PROC ; <lambda_62e868838ffeb64a41c8ffc5f45e0307>::operator(), COMDAT

; 41   : MAP_PAIR_0_1(codec, fcc, uint32_t, rgy, RGY_CSP, FOURCC_CSP, 0u, RGY_CSP_NA);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 2c	 cmp	 DWORD PTR a$[rsp+4], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z ENDP ; <lambda_62e868838ffeb64a41c8ffc5f45e0307>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var1$ = 304
?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z PROC		; codec_rgy_to_fcc

; 41   : MAP_PAIR_0_1(codec, fcc, uint32_t, rgy, RGY_CSP, FOURCC_CSP, 0u, RGY_CSP_NA);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var1$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@QEAA@AEBW4RGY_CSP@@@Z ; <lambda_62e868838ffeb64a41c8ffc5f45e0307>::<lambda_62e868838ffeb64a41c8ffc5f45e0307>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_62e868838ffeb64a41c8ffc5f45e0307>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_62e868838ffeb64a41c8ffc5f45e0307> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@codec_rgy_
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 13		 jmp	 SHORT $LN4@codec_rgy_
$LN3@codec_rgy_:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator->
  000ed	8b 00		 mov	 eax, DWORD PTR [rax]
  000ef	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@codec_rgy_:
  000f6	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fd	8b f8		 mov	 edi, eax
  000ff	48 8b cc	 mov	 rcx, rsp
  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z$rtcFrameData
  00109	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010e	8b c7		 mov	 eax, edi
  00110	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00117	5f		 pop	 rdi
  00118	5e		 pop	 rsi
  00119	c3		 ret	 0
?codec_rgy_to_fcc@@YAIW4RGY_CSP@@@Z ENDP		; codec_rgy_to_fcc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_6b1bf0d681d7ec7d403f180c952c767d> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$0A@@std@@YAPEBU?$pair@IW4RGY_CSP@@@0@AEBV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z ; <lambda_6b1bf0d681d7ec7d403f180c952c767d>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@PEBU?$pair@IW4RGY_CSP@@@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@AEBQEBU?$pair@IW4RGY_CSP@@@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,std::pair<unsigned int,enum RGY_CSP> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_6b1bf0d681d7ec7d403f180c952c767d> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z
_TEXT	SEGMENT
this$ = 16
<var0>$ = 24
??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z PROC ; <lambda_6b1bf0d681d7ec7d403f180c952c767d>::<lambda_6b1bf0d681d7ec7d403f180c952c767d>, COMDAT

; 41   : MAP_PAIR_0_1(codec, fcc, uint32_t, rgy, RGY_CSP, FOURCC_CSP, 0u, RGY_CSP_NA);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var0>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z ENDP ; <lambda_6b1bf0d681d7ec7d403f180c952c767d>::<lambda_6b1bf0d681d7ec7d403f180c952c767d>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z PROC ; <lambda_6b1bf0d681d7ec7d403f180c952c767d>::operator(), COMDAT

; 41   : MAP_PAIR_0_1(codec, fcc, uint32_t, rgy, RGY_CSP, FOURCC_CSP, 0u, RGY_CSP_NA);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 28	 cmp	 DWORD PTR a$[rsp], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEBA_NU?$pair@IW4RGY_CSP@@@std@@@Z ENDP ; <lambda_6b1bf0d681d7ec7d403f180c952c767d>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z
_TEXT	SEGMENT
this$ = 16
_It$ = 24
?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Seek_to, COMDAT

; 1449 :     constexpr void _Seek_to(pointer _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 1450 :         _Idx = static_cast<size_t>(_It - _Ptr);

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00014	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _It$[rsp]
  00019	48 2b c8	 sub	 rcx, rax
  0001c	48 8b c1	 mov	 rax, rcx
  0001f	48 c1 f8 03	 sar	 rax, 3
  00023	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00028	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 1451 :     }

  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Seek_to@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAAXPEBU?$pair@IW4RGY_CSP@@@2@@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Last$ = 72
?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Verify_with, COMDAT

; 1444 :     constexpr void _Verify_with(const _Array_const_iterator& _Last) const noexcept {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_wit:

; 1445 :         // note _Compat check inside operator<=
; 1446 :         _STL_VERIFY(*this <= _Last, "array iterator range transposed");

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<=
  00032	90		 npad	 1
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 02		 je	 SHORT $LN7@Verify_wit
  0003a	eb 6d		 jmp	 SHORT $LN9@Verify_wit
$LN7@Verify_wit:
  0003c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@
  00043	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00054	45 33 c9	 xor	 r9d, r9d
  00057	41 b8 a6 05 00
	00		 mov	 r8d, 1446		; 000005a6H
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00064	b9 02 00 00 00	 mov	 ecx, 2
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006f	90		 npad	 1
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 03		 jne	 SHORT $LN11@Verify_wit
  00075	cc		 int	 3
  00076	33 c0		 xor	 eax, eax
$LN11@Verify_wit:
  00078	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00081	41 b9 a6 05 00
	00		 mov	 r9d, 1446		; 000005a6H
  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LA@NFAFGNON@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00095	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  0009c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a2	90		 npad	 1
  000a3	33 c0		 xor	 eax, eax
  000a5	85 c0		 test	 eax, eax
  000a7	75 93		 jne	 SHORT $LN7@Verify_wit
$LN9@Verify_wit:
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	0f 85 70 ff ff
	ff		 jne	 $LN4@Verify_wit

; 1447 :     }

  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
?_Verify_with@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Verify_with
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Unwrapped, COMDAT

; 1440 :     _NODISCARD constexpr pointer _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1441 :         return _Ptr + _Idx;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00018	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1442 :     }

  0001c	5f		 pop	 rdi
  0001d	c3		 ret	 0
?_Unwrapped@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@2@XZ ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Right$ = 72
?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Compat, COMDAT

; 1434 :     _CONSTEXPR17 void _Compat(const _Array_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Compat:

; 1435 :         _STL_VERIFY(_Ptr == _Right._Ptr, "array iterators incompatible");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00031	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00035	75 02		 jne	 SHORT $LN8@Compat
  00037	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@
  00040	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00051	45 33 c9	 xor	 r9d, r9d
  00054	41 b8 9b 05 00
	00		 mov	 r8d, 1435		; 0000059bH
  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00061	b9 02 00 00 00	 mov	 ecx, 2
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006c	83 f8 01	 cmp	 eax, 1
  0006f	75 03		 jne	 SHORT $LN11@Compat
  00071	cc		 int	 3
  00072	33 c0		 xor	 eax, eax
$LN11@Compat:
  00074	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007d	41 b9 9b 05 00
	00		 mov	 r9d, 1435		; 0000059bH
  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KG@LDGFNOLN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00091	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  00098	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000a4	33 c0		 xor	 eax, eax
  000a6	85 c0		 test	 eax, eax
  000a8	0f 85 75 ff ff
	ff		 jne	 $LN4@Compat

; 1436 :     }

  000ae	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<=, COMDAT

; 1426 :     _NODISCARD _CONSTEXPR17 bool operator<=(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1427 :         return !(_Right < *this);

  00023	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1428 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??N?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<, COMDAT

; 1417 :     _NODISCARD _CONSTEXPR17 bool operator<(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1418 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Compat

; 1419 :         return _Idx < _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	73 0a		 jae	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1420 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??M?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator==, COMDAT

; 1408 :     _NODISCARD _CONSTEXPR17 bool operator==(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1409 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Compat

; 1410 :         return _Idx == _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	75 0a		 jne	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1411 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ
_TEXT	SEGMENT
this$ = 64
??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator->, COMDAT

; 1332 :     _NODISCARD _CONSTEXPR17 pointer operator->() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 1333 :         _STL_VERIFY(_Ptr, "cannot dereference value-initialized array iterator");

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00028	74 02		 je	 SHORT $LN14@operator
  0002a	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 35 05 00
	00		 mov	 r8d, 1333		; 00000535H
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN19@operator:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 35 05 00
	00		 mov	 r9d, 1333		; 00000535H
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KO@NIONOBPN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 1334 :         _STL_VERIFY(_Idx < _Size, "cannot dereference out of range array iterator");

  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 83 78 18 03	 cmp	 QWORD PTR [rax+24], 3
  000a7	73 02		 jae	 SHORT $LN16@operator
  000a9	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000ab	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@
  000b2	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000b7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c3	45 33 c9	 xor	 r9d, r9d
  000c6	41 b8 36 05 00
	00		 mov	 r8d, 1334		; 00000536H
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d3	b9 02 00 00 00	 mov	 ecx, 2
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000de	83 f8 01	 cmp	 eax, 1
  000e1	75 03		 jne	 SHORT $LN20@operator
  000e3	cc		 int	 3
  000e4	33 c0		 xor	 eax, eax
$LN20@operator:
  000e6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ef	41 b9 36 05 00
	00		 mov	 r9d, 1334		; 00000536H
  000f5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KO@NIONOBPN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0010a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00110	33 c0		 xor	 eax, eax
  00112	85 c0		 test	 eax, eax
  00114	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00116	33 c0		 xor	 eax, eax
  00118	85 c0		 test	 eax, eax
  0011a	75 81		 jne	 SHORT $LN10@operator

; 1335 :         return _Ptr + _Idx;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00121	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00125	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0012e	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1336 :     }

  00132	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00136	5f		 pop	 rdi
  00137	c3		 ret	 0
??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Off$ = 64
??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z PROC ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>, COMDAT

; 1326 :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) : _Ptr(_Parg), _Idx(_Off) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12_compatible@std@@QEAA@XZ
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Off$[rsp]
  0004a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z ENDP ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var0$ = 304
?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z PROC		; codec_fcc_to_rgy

; 41   : MAP_PAIR_0_1(codec, fcc, uint32_t, rgy, RGY_CSP, FOURCC_CSP, 0u, RGY_CSP_NA);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var0$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@QEAA@AEBI@Z ; <lambda_6b1bf0d681d7ec7d403f180c952c767d>::<lambda_6b1bf0d681d7ec7d403f180c952c767d>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@0@V10@V10@V<lambda_6b1bf0d681d7ec7d403f180c952c767d>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>,<lambda_6b1bf0d681d7ec7d403f180c952c767d> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@codec_fcc_
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 14		 jmp	 SHORT $LN4@codec_fcc_
$LN3@codec_fcc_:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBAPEBU?$pair@IW4RGY_CSP@@@1@XZ ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::operator->
  000ed	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  000f0	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@codec_fcc_:
  000f7	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fe	8b f8		 mov	 edi, eax
  00100	48 8b cc	 mov	 rcx, rsp
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcFrameData
  0010a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010f	8b c7		 mov	 eax, edi
  00111	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00118	5f		 pop	 rdi
  00119	5e		 pop	 rsi
  0011a	c3		 ret	 0
?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z ENDP		; codec_fcc_to_rgy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??__EFOURCC_CSP@@YAXXZ
text$di	SEGMENT
$T1 = 32
$T2 = 36
$T3 = 40
$T4 = 48
$T5 = 52
$T6 = 56
$T7 = 64
$T8 = 68
$T9 = 72
tv65 = 80
tv70 = 88
??__EFOURCC_CSP@@YAXXZ PROC				; `dynamic initializer for 'FOURCC_CSP'', COMDAT

; 39   :     );

  00000	40 57		 push	 rdi
  00002	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 18 00 00 00	 mov	 ecx, 24
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 35   : static const auto FOURCC_CSP = make_array<std::pair<uint32_t, RGY_CSP>>(

  00015	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR $T1[rsp], 1
  0001d	c7 44 24 24 4e
	56 31 32	 mov	 DWORD PTR $T2[rsp], 842094158 ; 3231564eH
  00025	c7 44 24 30 02
	00 00 00	 mov	 DWORD PTR $T4[rsp], 2
  0002d	c7 44 24 34 59
	56 31 32	 mov	 DWORD PTR $T5[rsp], 842094169 ; 32315659H
  00035	c7 44 24 40 03
	00 00 00	 mov	 DWORD PTR $T7[rsp], 3
  0003d	c7 44 24 44 59
	55 59 32	 mov	 DWORD PTR $T8[rsp], 844715353 ; 32595559H
  00045	4c 8d 44 24 20	 lea	 r8, QWORD PTR $T1[rsp]
  0004a	48 8d 54 24 24	 lea	 rdx, QWORD PTR $T2[rsp]
  0004f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T3[rsp]
  00054	e8 00 00 00 00	 call	 ??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z ; std::make_pair<unsigned long,enum RGY_CSP>
  00059	48 89 44 24 50	 mov	 QWORD PTR tv65[rsp], rax
  0005e	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T4[rsp]
  00063	48 8d 54 24 34	 lea	 rdx, QWORD PTR $T5[rsp]
  00068	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T6[rsp]
  0006d	e8 00 00 00 00	 call	 ??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z ; std::make_pair<unsigned long,enum RGY_CSP>
  00072	48 89 44 24 58	 mov	 QWORD PTR tv70[rsp], rax
  00077	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T7[rsp]
  0007c	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T8[rsp]
  00081	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T9[rsp]
  00086	e8 00 00 00 00	 call	 ??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z ; std::make_pair<unsigned long,enum RGY_CSP>
  0008b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv65[rsp]
  00090	4c 8b c9	 mov	 r9, rcx
  00093	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv70[rsp]
  00098	4c 8b c1	 mov	 r8, rcx
  0009b	48 8b d0	 mov	 rdx, rax
  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?FOURCC_CSP@@3V?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@B
  000a5	e8 00 00 00 00	 call	 ??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z ; make_array<std::pair<unsigned int,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP> >
  000aa	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??__EFOURCC_CSP@@YAXXZ ENDP				; `dynamic initializer for 'FOURCC_CSP''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ PROC ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end, COMDAT

; 63   :     _NODISCARD _CONSTEXPR17 const_iterator end() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 64   :         return const_iterator(_Elems, _Size);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	41 b8 03 00 00
	00		 mov	 r8d, 3
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00036	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>
  0003b	90		 npad	 1
  0003c	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 65   :     }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
?end@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ENDP ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ PROC ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::begin, COMDAT

; 55   :     _NODISCARD _CONSTEXPR17 const_iterator begin() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 56   :         return const_iterator(_Elems, 0);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	45 33 c0	 xor	 r8d, r8d
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00033	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEAA@PEBU?$pair@IW4RGY_CSP@@@1@_K@Z ; std::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>::_Array_const_iterator<std::pair<unsigned int,enum RGY_CSP>,3>
  00038	90		 npad	 1
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 57   :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?begin@?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@QEBA?AV?$_Array_const_iterator@U?$pair@IW4RGY_CSP@@@std@@$02@2@XZ ENDP ; std::array<std::pair<unsigned int,enum RGY_CSP>,3>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 64
__$ReturnUdt$ = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z PROC ; make_array<std::pair<unsigned int,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP> >, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 54 24 78	 mov	 rdx, QWORD PTR <args_0>$[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00047	e8 00 00 00 00	 call	 ??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z ; std::pair<unsigned int,enum RGY_CSP>::pair<unsigned int,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
  0004c	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR <args_1>$[rsp]
  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp+8]
  00059	e8 00 00 00 00	 call	 ??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z ; std::pair<unsigned int,enum RGY_CSP>::pair<unsigned int,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
  0005e	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR <args_2>$[rsp]
  00066	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp+16]
  0006b	e8 00 00 00 00	 call	 ??$?0KW4RGY_CSP@@$0A@@?$pair@IW4RGY_CSP@@@std@@QEAA@$$QEAU?$pair@KW4RGY_CSP@@@1@@Z ; std::pair<unsigned int,enum RGY_CSP>::pair<unsigned int,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
  00070	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00075	48 8b 7c 24 70	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  0007a	48 8b f0	 mov	 rsi, rax
  0007d	b9 18 00 00 00	 mov	 ecx, 24
  00082	f3 a4		 rep movsb
  00084	48 8b 44 24 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 131  : }

  00089	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0008e	48 33 cc	 xor	 rcx, rsp
  00091	e8 00 00 00 00	 call	 __security_check_cookie
  00096	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0009a	5f		 pop	 rdi
  0009b	5e		 pop	 rsi
  0009c	c3		 ret	 0
??$make_array@U?$pair@IW4RGY_CSP@@@std@@U?$pair@KW4RGY_CSP@@@2@U32@U32@@@YA?AV?$array@U?$pair@IW4RGY_CSP@@@std@@$02@std@@$$QEAU?$pair@KW4RGY_CSP@@@1@00@Z ENDP ; make_array<std::pair<unsigned int,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP>,std::pair<unsigned long,enum RGY_CSP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z PROC ; std::make_pair<unsigned long,enum RGY_CSP>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@K@std@@YA$$QEAKAEAK@Z ; std::forward<unsigned long>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0KW4RGY_CSP@@$0A@@?$pair@KW4RGY_CSP@@@std@@QEAA@$$QEAK$$QEAW4RGY_CSP@@@Z ; std::pair<unsigned long,enum RGY_CSP>::pair<unsigned long,enum RGY_CSP><unsigned long,enum RGY_CSP,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@KW4RGY_CSP@@@std@@YA?AU?$pair@KW4RGY_CSP@@@0@$$QEAK$$QEAW4RGY_CSP@@@Z ENDP ; std::make_pair<unsigned long,enum RGY_CSP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRGYInputAvi@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GRGYInputAvi@@UEAAPEAXI@Z PROC			; RGYInputAvi::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1RGYInputAvi@@UEAA@XZ	; RGYInputAvi::~RGYInputAvi
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 78 01 00 00	 mov	 edx, 376		; 00000178H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GRGYInputAvi@@UEAAPEAXI@Z ENDP			; RGYInputAvi::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@E@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@E@std@@QEAAXXZ PROC			; std::shared_ptr<unsigned char>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z ; std::shared_ptr<unsigned char>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@E@std@@QEAAXXZ ENDP			; std::shared_ptr<unsigned char>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA PROC	; `std::shared_ptr<unsigned char>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA ENDP	; `std::shared_ptr<unsigned char>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA PROC	; `std::shared_ptr<unsigned char>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@E@std@@QEAAXXZ@4HA ENDP	; `std::shared_ptr<unsigned char>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z PROC		; std::shared_ptr<unsigned char>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<unsigned char>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z ENDP		; std::shared_ptr<unsigned char>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
tv75 = 48
tv74 = 56
this$ = 80
_Right$ = 88
??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z PROC	; std::shared_ptr<unsigned char>::operator=, COMDAT

; 1148 :     shared_ptr& operator=(shared_ptr&& _Right) noexcept { // take resource from _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1149 :         shared_ptr(_STD move(_Right)).swap(*this);

  00023	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z ; std::move<std::shared_ptr<unsigned char> &>
  0002d	90		 npad	 1
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00036	e8 00 00 00 00	 call	 ??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
  0003b	90		 npad	 1
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv75[rsp], rax
  00041	48 8b 44 24 30	 mov	 rax, QWORD PTR tv75[rsp]
  00046	48 89 44 24 38	 mov	 QWORD PTR tv74[rsp], rax
  0004b	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv74[rsp]
  00055	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@E@std@@QEAAXAEAV12@@Z ; std::shared_ptr<unsigned char>::swap
  0005a	90		 npad	 1
  0005b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00060	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  00065	90		 npad	 1

; 1150 :         return *this;

  00066	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1151 :     }

  0006b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z ENDP	; std::shared_ptr<unsigned char>::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv75 = 48
tv74 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA PROC ; `std::shared_ptr<unsigned char>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA ENDP ; `std::shared_ptr<unsigned char>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv75 = 48
tv74 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA PROC ; `std::shared_ptr<unsigned char>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z@4HA ENDP ; `std::shared_ptr<unsigned char>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@E@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@E@std@@QEAA@XZ PROC			; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@E@std@@IEAAXXZ ; std::_Ptr_base<unsigned char>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@E@std@@QEAA@XZ ENDP			; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z PROC		; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>, COMDAT

; 1088 :     shared_ptr(shared_ptr&& _Right) noexcept { // construct shared_ptr object that takes resource from _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Ptr_base@E@std@@IEAA@XZ ; std::_Ptr_base<unsigned char>::_Ptr_base<unsigned char>

; 1089 :         this->_Move_construct_from(_STD move(_Right));

  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00032	e8 00 00 00 00	 call	 ??$move@AEAV?$shared_ptr@E@std@@@std@@YA$$QEAV?$shared_ptr@E@0@AEAV10@@Z ; std::move<std::shared_ptr<unsigned char> &>
  00037	48 8b d0	 mov	 rdx, rax
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Move_construct_from@E@?$_Ptr_base@E@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<unsigned char>::_Move_construct_from<unsigned char>

; 1090 :     }

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??0?$shared_ptr@E@std@@QEAA@$$QEAV01@@Z ENDP		; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@E@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@E@std@@QEAA@XZ PROC			; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@E@std@@IEAA@XZ ; std::_Ptr_base<unsigned char>::_Ptr_base<unsigned char>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@E@std@@QEAA@XZ ENDP			; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z PROC		; std::_Ptr_base<unsigned char>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAEX@std@@YAXAEAPEAE0@Z ; std::swap<unsigned char *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@E@std@@IEAAXAEAV12@@Z ENDP		; std::_Ptr_base<unsigned char>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@E@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@E@std@@IEAAXXZ PROC		; std::_Ptr_base<unsigned char>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@E@std@@IEAAXXZ ENDP		; std::_Ptr_base<unsigned char>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??0?$_Ptr_base@E@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@E@std@@IEAA@XZ PROC			; std::_Ptr_base<unsigned char>::_Ptr_base<unsigned char>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@E@std@@IEAA@XZ ENDP			; std::_Ptr_base<unsigned char>::_Ptr_base<unsigned char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@E@std@@IEBAPEAEXZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@E@std@@IEBAPEAEXZ PROC			; std::_Ptr_base<unsigned char>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@E@std@@IEBAPEAEXZ ENDP			; std::_Ptr_base<unsigned char>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z PROC ; RGYInputAvi::Init

; 58   : RGY_ERR RGYInputAvi::Init(const TCHAR *strFileName, VideoInfo *pInputInfo, const RGYInputPrm *prm) {

$LN44:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec a8 03
	00 00		 sub	 rsp, 936		; 000003a8H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 ea 00 00 00	 mov	 ecx, 234		; 000000eaH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR [rsp+960]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 98
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 59   :     memcpy(&m_inputVideoInfo, pInputInfo, sizeof(m_inputVideoInfo));

  00046	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00058	48 8b 94 24 d0
	03 00 00	 mov	 rdx, QWORD PTR pInputInfo$[rsp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 memcpy

; 60   : 
; 61   :     m_sConvert = std::make_unique<RGYConvertCSP>(prm->threadCsp);

  00068	48 8b 84 24 d8
	03 00 00	 mov	 rax, QWORD PTR prm$[rsp]
  00070	48 83 c0 08	 add	 rax, 8
  00074	48 8b d0	 mov	 rdx, rax
  00077	48 8d 8c 24 e0
	02 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  0007f	e8 00 00 00 00	 call	 ??$make_unique@VRGYConvertCSP@@AEBH$0A@@std@@YA?AV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEBH@Z ; std::make_unique<RGYConvertCSP,int const &,0>
  00084	48 89 84 24 08
	03 00 00	 mov	 QWORD PTR tv745[rsp], rax
  0008c	48 8b 84 24 08
	03 00 00	 mov	 rax, QWORD PTR tv745[rsp]
  00094	48 89 84 24 10
	03 00 00	 mov	 QWORD PTR tv732[rsp], rax
  0009c	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  000aa	48 8b 94 24 10
	03 00 00	 mov	 rdx, QWORD PTR tv732[rsp]
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 ??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=
  000ba	90		 npad	 1
  000bb	48 8d 8c 24 e0
	02 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  000c3	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >

; 62   : 
; 63   :     AVIFileInit();

  000c8	e8 00 00 00 00	 call	 AVIFileInit

; 64   : 
; 65   :     if (0 != AVIFileOpen(&m_pAviFile, strFileName, OF_READ | OF_SHARE_DENY_NONE, NULL)) {

  000cd	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d5	48 05 40 01 00
	00		 add	 rax, 320		; 00000140H
  000db	45 33 c9	 xor	 r9d, r9d
  000de	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  000e4	48 8b 94 24 c8
	03 00 00	 mov	 rdx, QWORD PTR strFileName$[rsp]
  000ec	48 8b c8	 mov	 rcx, rax
  000ef	e8 00 00 00 00	 call	 AVIFileOpenA
  000f4	85 c0		 test	 eax, eax
  000f6	74 2b		 je	 SHORT $LN10@Init

; 66   :         AddMessage(RGY_LOG_ERROR, _T("failed to open avi file: \"%s\"\n"), strFileName);

  000f8	4c 8b 8c 24 c8
	03 00 00	 mov	 r9, QWORD PTR strFileName$[rsp]
  00100	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134144
  00107	ba 02 00 00 00	 mov	 edx, 2
  0010c	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00114	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 67   :         return RGY_ERR_FILE_OPEN;

  00119	b8 e3 ff ff ff	 mov	 eax, -29
  0011e	e9 e5 0b 00 00	 jmp	 $LN1@Init
$LN10@Init:

; 68   :     }
; 69   :     AddMessage(RGY_LOG_DEBUG, _T("openend avi file: \"%s\"\n"), strFileName);

  00123	4c 8b 8c 24 c8
	03 00 00	 mov	 r9, QWORD PTR strFileName$[rsp]
  0012b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134145
  00132	ba fe ff ff ff	 mov	 edx, -2
  00137	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013f	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 70   : 
; 71   :     AVIFILEINFO finfo = { 0 };

  00144	48 8d 44 24 40	 lea	 rax, QWORD PTR finfo$[rsp]
  00149	48 8b f8	 mov	 rdi, rax
  0014c	33 c0		 xor	 eax, eax
  0014e	b9 6c 00 00 00	 mov	 ecx, 108		; 0000006cH
  00153	f3 aa		 rep stosb

; 72   :     if (0 != AVIFileInfo(m_pAviFile, &finfo, sizeof(AVIFILEINFO))) {

  00155	41 b8 6c 00 00
	00		 mov	 r8d, 108		; 0000006cH
  0015b	48 8d 54 24 40	 lea	 rdx, QWORD PTR finfo$[rsp]
  00160	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00168	48 8b 88 40 01
	00 00		 mov	 rcx, QWORD PTR [rax+320]
  0016f	e8 00 00 00 00	 call	 AVIFileInfoA
  00174	85 c0		 test	 eax, eax
  00176	74 23		 je	 SHORT $LN11@Init

; 73   :         AddMessage(RGY_LOG_ERROR, _T("failed to get avi file info.\n"));

  00178	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134147
  0017f	ba 02 00 00 00	 mov	 edx, 2
  00184	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018c	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 74   :         return RGY_ERR_INVALID_HANDLE;

  00191	b8 fa ff ff ff	 mov	 eax, -6
  00196	e9 6d 0b 00 00	 jmp	 $LN1@Init
$LN11@Init:

; 75   :     }
; 76   : 
; 77   :     tstring strFcc;

  0019b	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  001a3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a8	90		 npad	 1

; 78   :     for (uint32_t i_stream = 0; i_stream < finfo.dwStreams; i_stream++) {

  001a9	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR i_stream$8[rsp], 0
  001b4	eb 10		 jmp	 SHORT $LN4@Init
$LN2@Init:
  001b6	8b 84 24 f4 00
	00 00		 mov	 eax, DWORD PTR i_stream$8[rsp]
  001bd	ff c0		 inc	 eax
  001bf	89 84 24 f4 00
	00 00		 mov	 DWORD PTR i_stream$8[rsp], eax
$LN4@Init:
  001c6	8b 44 24 4c	 mov	 eax, DWORD PTR finfo$[rsp+12]
  001ca	39 84 24 f4 00
	00 00		 cmp	 DWORD PTR i_stream$8[rsp], eax
  001d1	0f 83 04 02 00
	00		 jae	 $LN3@Init

; 79   :         if (0 != AVIFileGetStream(m_pAviFile, &m_pAviStream, 0, i_stream))

  001d7	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001df	48 05 48 01 00
	00		 add	 rax, 328		; 00000148H
  001e5	44 8b 8c 24 f4
	00 00 00	 mov	 r9d, DWORD PTR i_stream$8[rsp]
  001ed	45 33 c0	 xor	 r8d, r8d
  001f0	48 8b d0	 mov	 rdx, rax
  001f3	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001fb	48 8b 88 40 01
	00 00		 mov	 rcx, QWORD PTR [rax+320]
  00202	e8 00 00 00 00	 call	 AVIFileGetStream
  00207	85 c0		 test	 eax, eax
  00209	74 24		 je	 SHORT $LN12@Init

; 80   :             return RGY_ERR_INVALID_HANDLE;

  0020b	c7 84 24 e8 02
	00 00 fa ff ff
	ff		 mov	 DWORD PTR $T17[rsp], -6
  00216	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  0021e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00223	8b 84 24 e8 02
	00 00		 mov	 eax, DWORD PTR $T17[rsp]
  0022a	e9 d9 0a 00 00	 jmp	 $LN1@Init
$LN12@Init:

; 81   :         AVISTREAMINFO sinfo = { 0 };

  0022f	48 8d 84 24 10
	01 00 00	 lea	 rax, QWORD PTR sinfo$9[rsp]
  00237	48 8b f8	 mov	 rdi, rax
  0023a	33 c0		 xor	 eax, eax
  0023c	b9 8c 00 00 00	 mov	 ecx, 140		; 0000008cH
  00241	f3 aa		 rep stosb

; 82   :         if (0 == AVIStreamInfo(m_pAviStream, &sinfo, sizeof(AVISTREAMINFO)) && sinfo.fccType == streamtypeVIDEO) {

  00243	41 b8 8c 00 00
	00		 mov	 r8d, 140		; 0000008cH
  00249	48 8d 94 24 10
	01 00 00	 lea	 rdx, QWORD PTR sinfo$9[rsp]
  00251	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00259	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  00260	e8 00 00 00 00	 call	 AVIStreamInfoA
  00265	85 c0		 test	 eax, eax
  00267	0f 85 42 01 00
	00		 jne	 $LN13@Init
  0026d	81 bc 24 10 01
	00 00 76 69 64
	73		 cmp	 DWORD PTR sinfo$9[rsp], 1935960438 ; 73646976H
  00278	0f 85 31 01 00
	00		 jne	 $LN13@Init

; 83   :             rgy_reduce(sinfo.dwRate, sinfo.dwScale);

  0027e	48 8d 94 24 24
	01 00 00	 lea	 rdx, QWORD PTR sinfo$9[rsp+20]
  00286	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR sinfo$9[rsp+24]
  0028e	e8 00 00 00 00	 call	 ??$rgy_reduce@K@@YAXAEAK0@Z ; rgy_reduce<unsigned long>

; 84   :             m_inputVideoInfo.srcWidth = sinfo.rcFrame.right - sinfo.rcFrame.left;

  00293	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR sinfo$9[rsp+52]
  0029a	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR sinfo$9[rsp+60]
  002a1	2b c8		 sub	 ecx, eax
  002a3	8b c1		 mov	 eax, ecx
  002a5	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002ad	89 41 1c	 mov	 DWORD PTR [rcx+28], eax

; 85   :             m_inputVideoInfo.srcHeight = sinfo.rcFrame.bottom - sinfo.rcFrame.top;

  002b0	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR sinfo$9[rsp+56]
  002b7	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR sinfo$9[rsp+64]
  002be	2b c8		 sub	 ecx, eax
  002c0	8b c1		 mov	 eax, ecx
  002c2	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002ca	89 41 20	 mov	 DWORD PTR [rcx+32], eax

; 86   :             m_inputVideoInfo.fpsN = sinfo.dwRate;

  002cd	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002d5	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR sinfo$9[rsp+24]
  002dc	89 48 44	 mov	 DWORD PTR [rax+68], ecx

; 87   :             m_inputVideoInfo.fpsD = sinfo.dwScale;

  002df	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002e7	8b 8c 24 24 01
	00 00		 mov	 ecx, DWORD PTR sinfo$9[rsp+20]
  002ee	89 48 48	 mov	 DWORD PTR [rax+72], ecx

; 88   :             m_inputVideoInfo.frames = sinfo.dwLength - sinfo.dwStart;

  002f1	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR sinfo$9[rsp+28]
  002f8	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR sinfo$9[rsp+32]
  002ff	2b c8		 sub	 ecx, eax
  00301	8b c1		 mov	 eax, ecx
  00303	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0030b	89 41 3c	 mov	 DWORD PTR [rcx+60], eax

; 89   : 
; 90   :             m_InputCsp = codec_fcc_to_rgy(sinfo.fccHandler);

  0030e	8b 8c 24 14 01
	00 00		 mov	 ecx, DWORD PTR sinfo$9[rsp+4]
  00315	e8 00 00 00 00	 call	 ?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z ; codec_fcc_to_rgy
  0031a	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00322	89 81 a8 00 00
	00		 mov	 DWORD PTR [rcx+168], eax

; 91   : 
; 92   :             char temp[5] = { 0 };

  00328	48 8d 84 24 b4
	01 00 00	 lea	 rax, QWORD PTR temp$10[rsp]
  00330	48 8b f8	 mov	 rdi, rax
  00333	33 c0		 xor	 eax, eax
  00335	b9 05 00 00 00	 mov	 ecx, 5
  0033a	f3 aa		 rep stosb

; 93   :             memcpy(temp, &sinfo.fccHandler, sizeof(sinfo.fccHandler));

  0033c	41 b8 04 00 00
	00		 mov	 r8d, 4
  00342	48 8d 94 24 14
	01 00 00	 lea	 rdx, QWORD PTR sinfo$9[rsp+4]
  0034a	48 8d 8c 24 b4
	01 00 00	 lea	 rcx, QWORD PTR temp$10[rsp]
  00352	e8 00 00 00 00	 call	 memcpy

; 94   :             strFcc = char_to_tstring(temp);

  00357	41 b8 03 00 00
	00		 mov	 r8d, 3
  0035d	48 8d 94 24 b4
	01 00 00	 lea	 rdx, QWORD PTR temp$10[rsp]
  00365	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  0036d	e8 00 00 00 00	 call	 ?char_to_tstring@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDI@Z ; char_to_tstring
  00372	48 89 84 24 18
	03 00 00	 mov	 QWORD PTR tv158[rsp], rax
  0037a	48 8b 84 24 18
	03 00 00	 mov	 rax, QWORD PTR tv158[rsp]
  00382	48 89 84 24 20
	03 00 00	 mov	 QWORD PTR tv736[rsp], rax
  0038a	48 8b 94 24 20
	03 00 00	 mov	 rdx, QWORD PTR tv736[rsp]
  00392	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  0039a	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  0039f	90		 npad	 1
  003a0	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  003a8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 95   :             break;

  003ad	eb 2c		 jmp	 SHORT $LN3@Init
$LN13@Init:

; 96   :         }
; 97   :         AVIStreamRelease(m_pAviStream);

  003af	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003b7	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  003be	e8 00 00 00 00	 call	 AVIStreamRelease

; 98   :         m_pAviStream = NULL;

  003c3	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003cb	48 c7 80 48 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+328], 0

; 99   :     }

  003d6	e9 db fd ff ff	 jmp	 $LN2@Init
$LN3@Init:

; 100  :     if (m_pAviStream == NULL) {

  003db	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003e3	48 83 b8 48 01
	00 00 00	 cmp	 QWORD PTR [rax+328], 0
  003eb	75 3d		 jne	 SHORT $LN14@Init

; 101  :         AddMessage(RGY_LOG_ERROR, _T("failed to get valid stream from avi file.\n"));

  003ed	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134152
  003f4	ba 02 00 00 00	 mov	 edx, 2
  003f9	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00401	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 102  :         return RGY_ERR_INVALID_HANDLE;

  00406	c7 84 24 ec 02
	00 00 fa ff ff
	ff		 mov	 DWORD PTR $T18[rsp], -6
  00411	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  00419	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0041e	8b 84 24 ec 02
	00 00		 mov	 eax, DWORD PTR $T18[rsp]
  00425	e9 de 08 00 00	 jmp	 $LN1@Init
$LN14@Init:

; 103  :     }
; 104  :     AddMessage(RGY_LOG_DEBUG, _T("found video stream from avi file.\n"));

  0042a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134154
  00431	ba fe ff ff ff	 mov	 edx, -2
  00436	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0043e	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 105  : 
; 106  :     if (   m_InputCsp == RGY_CSP_YUY2
; 107  :         || m_InputCsp == RGY_CSP_YV12) {

  00443	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0044b	83 b8 a8 00 00
	00 03		 cmp	 DWORD PTR [rax+168], 3
  00452	74 11		 je	 SHORT $LN17@Init
  00454	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0045c	83 b8 a8 00 00
	00 02		 cmp	 DWORD PTR [rax+168], 2
  00463	75 05		 jne	 SHORT $LN15@Init
$LN17@Init:

; 108  :         //何もしない
; 109  :     } else {

  00465	e9 3f 05 00 00	 jmp	 $LN16@Init
$LN15@Init:

; 110  :         BITMAPINFOHEADER bih[4] = {
; 111  :             { sizeof(BITMAPINFOHEADER), 0, 0, 1, 12, FCC('YV12'), m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight * 3/2, 0, 0, 0, 0 },

  0046a	c7 84 24 00 02
	00 00 28 00 00
	00		 mov	 DWORD PTR bih$12[rsp], 40 ; 00000028H
  00475	c7 84 24 04 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+4], 0
  00480	c7 84 24 08 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+8], 0
  0048b	b8 01 00 00 00	 mov	 eax, 1
  00490	66 89 84 24 0c
	02 00 00	 mov	 WORD PTR bih$12[rsp+12], ax
  00498	b8 0c 00 00 00	 mov	 eax, 12
  0049d	66 89 84 24 0e
	02 00 00	 mov	 WORD PTR bih$12[rsp+14], ax
  004a5	c7 84 24 10 02
	00 00 59 56 31
	32		 mov	 DWORD PTR bih$12[rsp+16], 842094169 ; 32315659H
  004b0	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004b8	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  004c0	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  004c3	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  004c7	6b c0 03	 imul	 eax, eax, 3
  004ca	33 d2		 xor	 edx, edx
  004cc	b9 02 00 00 00	 mov	 ecx, 2
  004d1	f7 f1		 div	 ecx
  004d3	89 84 24 14 02
	00 00		 mov	 DWORD PTR bih$12[rsp+20], eax
  004da	c7 84 24 18 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+24], 0
  004e5	c7 84 24 1c 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+28], 0
  004f0	c7 84 24 20 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+32], 0
  004fb	c7 84 24 24 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+36], 0

; 112  :             { sizeof(BITMAPINFOHEADER), 0, 0, 1, 16, FCC('YUY2'), m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight * 2,   0, 0, 0, 0 },

  00506	c7 84 24 28 02
	00 00 28 00 00
	00		 mov	 DWORD PTR bih$12[rsp+40], 40 ; 00000028H
  00511	c7 84 24 2c 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+44], 0
  0051c	c7 84 24 30 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+48], 0
  00527	b8 01 00 00 00	 mov	 eax, 1
  0052c	66 89 84 24 34
	02 00 00	 mov	 WORD PTR bih$12[rsp+52], ax
  00534	b8 10 00 00 00	 mov	 eax, 16
  00539	66 89 84 24 36
	02 00 00	 mov	 WORD PTR bih$12[rsp+54], ax
  00541	c7 84 24 38 02
	00 00 59 55 59
	32		 mov	 DWORD PTR bih$12[rsp+56], 844715353 ; 32595559H
  0054c	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00554	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0055c	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  0055f	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  00563	d1 e0		 shl	 eax, 1
  00565	89 84 24 3c 02
	00 00		 mov	 DWORD PTR bih$12[rsp+60], eax
  0056c	c7 84 24 40 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+64], 0
  00577	c7 84 24 44 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+68], 0
  00582	c7 84 24 48 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+72], 0
  0058d	c7 84 24 4c 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+76], 0

; 113  :             { sizeof(BITMAPINFOHEADER), 0, 0, 1, 24, BI_RGB,      m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight * 3,   0, 0, 0, 0 },

  00598	c7 84 24 50 02
	00 00 28 00 00
	00		 mov	 DWORD PTR bih$12[rsp+80], 40 ; 00000028H
  005a3	c7 84 24 54 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+84], 0
  005ae	c7 84 24 58 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+88], 0
  005b9	b8 01 00 00 00	 mov	 eax, 1
  005be	66 89 84 24 5c
	02 00 00	 mov	 WORD PTR bih$12[rsp+92], ax
  005c6	b8 18 00 00 00	 mov	 eax, 24
  005cb	66 89 84 24 5e
	02 00 00	 mov	 WORD PTR bih$12[rsp+94], ax
  005d3	c7 84 24 60 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+96], 0
  005de	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005e6	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  005ee	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  005f1	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  005f5	6b c0 03	 imul	 eax, eax, 3
  005f8	89 84 24 64 02
	00 00		 mov	 DWORD PTR bih$12[rsp+100], eax
  005ff	c7 84 24 68 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+104], 0
  0060a	c7 84 24 6c 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+108], 0
  00615	c7 84 24 70 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+112], 0
  00620	c7 84 24 74 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+116], 0

; 114  :             { sizeof(BITMAPINFOHEADER), 0, 0, 1, 32, BI_RGB,      m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight * 3,   0, 0, 0, 0 }

  0062b	c7 84 24 78 02
	00 00 28 00 00
	00		 mov	 DWORD PTR bih$12[rsp+120], 40 ; 00000028H
  00636	c7 84 24 7c 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+124], 0
  00641	c7 84 24 80 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+128], 0
  0064c	b8 01 00 00 00	 mov	 eax, 1
  00651	66 89 84 24 84
	02 00 00	 mov	 WORD PTR bih$12[rsp+132], ax
  00659	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0065e	66 89 84 24 86
	02 00 00	 mov	 WORD PTR bih$12[rsp+134], ax
  00666	c7 84 24 88 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+136], 0
  00671	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00679	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00681	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  00684	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  00688	6b c0 03	 imul	 eax, eax, 3
  0068b	89 84 24 8c 02
	00 00		 mov	 DWORD PTR bih$12[rsp+140], eax
  00692	c7 84 24 90 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+144], 0
  0069d	c7 84 24 94 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+148], 0
  006a8	c7 84 24 98 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+152], 0
  006b3	c7 84 24 9c 02
	00 00 00 00 00
	00		 mov	 DWORD PTR bih$12[rsp+156], 0

; 115  :         };
; 116  :         for (int i = 0; i < _countof(bih); i++) {

  006be	c7 84 24 a4 02
	00 00 00 00 00
	00		 mov	 DWORD PTR i$13[rsp], 0
  006c9	eb 10		 jmp	 SHORT $LN7@Init
$LN5@Init:
  006cb	8b 84 24 a4 02
	00 00		 mov	 eax, DWORD PTR i$13[rsp]
  006d2	ff c0		 inc	 eax
  006d4	89 84 24 a4 02
	00 00		 mov	 DWORD PTR i$13[rsp], eax
$LN7@Init:
  006db	48 63 84 24 a4
	02 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  006e3	48 83 f8 04	 cmp	 rax, 4
  006e7	0f 83 30 01 00
	00		 jae	 $LN6@Init

; 117  :             if (NULL == (m_pGetFrame = AVIStreamGetFrameOpen(m_pAviStream, &bih[i]))) {

  006ed	48 63 84 24 a4
	02 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  006f5	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  006f9	48 8d 84 04 00
	02 00 00	 lea	 rax, QWORD PTR bih$12[rsp+rax]
  00701	48 8b d0	 mov	 rdx, rax
  00704	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0070c	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  00713	e8 00 00 00 00	 call	 AVIStreamGetFrameOpen
  00718	48 89 84 24 28
	03 00 00	 mov	 QWORD PTR tv426[rsp], rax
  00720	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00728	48 8b 8c 24 28
	03 00 00	 mov	 rcx, QWORD PTR tv426[rsp]
  00730	48 89 88 50 01
	00 00		 mov	 QWORD PTR [rax+336], rcx
  00737	48 83 bc 24 28
	03 00 00 00	 cmp	 QWORD PTR tv426[rsp], 0
  00740	75 02		 jne	 SHORT $LN18@Init

; 118  :                 continue;

  00742	eb 87		 jmp	 SHORT $LN5@Init
$LN18@Init:

; 119  :             }
; 120  :             if (bih[i].biCompression == BI_RGB) {

  00744	48 63 84 24 a4
	02 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  0074c	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  00750	83 bc 04 10 02
	00 00 00	 cmp	 DWORD PTR bih$12[rsp+rax+16], 0
  00758	75 48		 jne	 SHORT $LN19@Init

; 121  :                 m_InputCsp = (bih[i].biBitCount == 24) ? RGY_CSP_RGB24R : RGY_CSP_RGB32R;

  0075a	48 63 84 24 a4
	02 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  00762	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  00766	0f b7 84 04 0e
	02 00 00	 movzx	 eax, WORD PTR bih$12[rsp+rax+14]
  0076e	83 f8 18	 cmp	 eax, 24
  00771	75 0d		 jne	 SHORT $LN36@Init
  00773	c7 84 24 30 03
	00 00 1a 00 00
	00		 mov	 DWORD PTR tv450[rsp], 26
  0077e	eb 0b		 jmp	 SHORT $LN37@Init
$LN36@Init:
  00780	c7 84 24 30 03
	00 00 1b 00 00
	00		 mov	 DWORD PTR tv450[rsp], 27
$LN37@Init:
  0078b	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00793	8b 8c 24 30 03
	00 00		 mov	 ecx, DWORD PTR tv450[rsp]
  0079a	89 88 a8 00 00
	00		 mov	 DWORD PTR [rax+168], ecx

; 122  :             } else {

  007a0	eb 74		 jmp	 SHORT $LN20@Init
$LN19@Init:

; 123  :                 m_InputCsp = codec_fcc_to_rgy(bih[i].biCompression);

  007a2	48 63 84 24 a4
	02 00 00	 movsxd	 rax, DWORD PTR i$13[rsp]
  007aa	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  007ae	8b 8c 04 10 02
	00 00		 mov	 ecx, DWORD PTR bih$12[rsp+rax+16]
  007b5	e8 00 00 00 00	 call	 ?codec_fcc_to_rgy@@YA?AW4RGY_CSP@@I@Z ; codec_fcc_to_rgy
  007ba	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  007c2	89 81 a8 00 00
	00		 mov	 DWORD PTR [rcx+168], eax

; 124  :                 if (m_InputCsp == RGY_CSP_NA) {

  007c8	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007d0	83 b8 a8 00 00
	00 00		 cmp	 DWORD PTR [rax+168], 0
  007d7	75 3d		 jne	 SHORT $LN20@Init

; 125  :                     AddMessage(RGY_LOG_ERROR, _T("Invalid Color format.\n"));

  007d9	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134162
  007e0	ba 02 00 00 00	 mov	 edx, 2
  007e5	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  007ed	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 126  :                     return RGY_ERR_INVALID_COLOR_FORMAT;

  007f2	c7 84 24 f0 02
	00 00 9c ff ff
	ff		 mov	 DWORD PTR $T19[rsp], -100 ; ffffffffffffff9cH
  007fd	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  00805	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0080a	8b 84 24 f0 02
	00 00		 mov	 eax, DWORD PTR $T19[rsp]
  00811	e9 f2 04 00 00	 jmp	 $LN1@Init
$LN20@Init:

; 127  :                 }
; 128  :             }
; 129  :             break;

  00816	eb 05		 jmp	 SHORT $LN6@Init

; 130  :         }

  00818	e9 ae fe ff ff	 jmp	 $LN5@Init
$LN6@Init:

; 131  : 
; 132  :         if (m_pGetFrame == nullptr) {

  0081d	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00825	48 83 b8 50 01
	00 00 00	 cmp	 QWORD PTR [rax+336], 0
  0082d	0f 85 76 01 00
	00		 jne	 $LN16@Init

; 133  :             if (   nullptr == (m_pGetFrame = AVIStreamGetFrameOpen(m_pAviStream, NULL))
; 134  :                 && nullptr == (m_pGetFrame = AVIStreamGetFrameOpen(m_pAviStream, (BITMAPINFOHEADER *)AVIGETFRAMEF_BESTDISPLAYFMT))) {

  00833	33 d2		 xor	 edx, edx
  00835	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0083d	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  00844	e8 00 00 00 00	 call	 AVIStreamGetFrameOpen
  00849	48 89 84 24 38
	03 00 00	 mov	 QWORD PTR tv478[rsp], rax
  00851	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00859	48 8b 8c 24 38
	03 00 00	 mov	 rcx, QWORD PTR tv478[rsp]
  00861	48 89 88 50 01
	00 00		 mov	 QWORD PTR [rax+336], rcx
  00868	48 83 bc 24 38
	03 00 00 00	 cmp	 QWORD PTR tv478[rsp], 0
  00871	0f 85 80 00 00
	00		 jne	 $LN23@Init
  00877	ba 01 00 00 00	 mov	 edx, 1
  0087c	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00884	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  0088b	e8 00 00 00 00	 call	 AVIStreamGetFrameOpen
  00890	48 89 84 24 40
	03 00 00	 mov	 QWORD PTR tv484[rsp], rax
  00898	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  008a0	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR tv484[rsp]
  008a8	48 89 88 50 01
	00 00		 mov	 QWORD PTR [rax+336], rcx
  008af	48 83 bc 24 40
	03 00 00 00	 cmp	 QWORD PTR tv484[rsp], 0
  008b8	75 3d		 jne	 SHORT $LN23@Init

; 135  :                 AddMessage(RGY_LOG_ERROR, _T("\nfailed to decode avi file.\n"));

  008ba	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134166
  008c1	ba 02 00 00 00	 mov	 edx, 2
  008c6	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  008ce	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 136  :                 return RGY_ERR_INVALID_HANDLE;

  008d3	c7 84 24 f4 02
	00 00 fa ff ff
	ff		 mov	 DWORD PTR $T20[rsp], -6
  008de	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  008e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  008eb	8b 84 24 f4 02
	00 00		 mov	 eax, DWORD PTR $T20[rsp]
  008f2	e9 11 04 00 00	 jmp	 $LN1@Init
$LN23@Init:

; 137  :             }
; 138  :             BITMAPINFOHEADER *bmpInfoHeader = (BITMAPINFOHEADER *)AVIStreamGetFrame(m_pGetFrame, 0);

  008f7	33 d2		 xor	 edx, edx
  008f9	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00901	48 8b 88 50 01
	00 00		 mov	 rcx, QWORD PTR [rax+336]
  00908	e8 00 00 00 00	 call	 AVIStreamGetFrame
  0090d	48 89 84 24 a8
	02 00 00	 mov	 QWORD PTR bmpInfoHeader$14[rsp], rax

; 139  :             if (NULL == bmpInfoHeader || bmpInfoHeader->biCompression != 0) {

  00915	48 83 bc 24 a8
	02 00 00 00	 cmp	 QWORD PTR bmpInfoHeader$14[rsp], 0
  0091e	74 0e		 je	 SHORT $LN25@Init
  00920	48 8b 84 24 a8
	02 00 00	 mov	 rax, QWORD PTR bmpInfoHeader$14[rsp]
  00928	83 78 10 00	 cmp	 DWORD PTR [rax+16], 0
  0092c	74 3d		 je	 SHORT $LN24@Init
$LN25@Init:

; 140  :                 AddMessage(RGY_LOG_ERROR, _T("\nfailed to decode avi file.\n"));

  0092e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134170
  00935	ba 02 00 00 00	 mov	 edx, 2
  0093a	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00942	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 141  :                 return RGY_ERR_MORE_DATA;

  00947	c7 84 24 f8 02
	00 00 f6 ff ff
	ff		 mov	 DWORD PTR $T21[rsp], -10
  00952	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  0095a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0095f	8b 84 24 f8 02
	00 00		 mov	 eax, DWORD PTR $T21[rsp]
  00966	e9 9d 03 00 00	 jmp	 $LN1@Init
$LN24@Init:

; 142  :             }
; 143  : 
; 144  :             m_InputCsp = (bmpInfoHeader->biBitCount == 24) ? RGY_CSP_RGB24R : RGY_CSP_RGB32R;

  0096b	48 8b 84 24 a8
	02 00 00	 mov	 rax, QWORD PTR bmpInfoHeader$14[rsp]
  00973	0f b7 40 0e	 movzx	 eax, WORD PTR [rax+14]
  00977	83 f8 18	 cmp	 eax, 24
  0097a	75 0d		 jne	 SHORT $LN38@Init
  0097c	c7 84 24 48 03
	00 00 1a 00 00
	00		 mov	 DWORD PTR tv550[rsp], 26
  00987	eb 0b		 jmp	 SHORT $LN39@Init
$LN38@Init:
  00989	c7 84 24 48 03
	00 00 1b 00 00
	00		 mov	 DWORD PTR tv550[rsp], 27
$LN39@Init:
  00994	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0099c	8b 8c 24 48 03
	00 00		 mov	 ecx, DWORD PTR tv550[rsp]
  009a3	89 88 a8 00 00
	00		 mov	 DWORD PTR [rax+168], ecx
$LN16@Init:

; 145  :         }
; 146  :     }
; 147  : 
; 148  :     switch (m_InputCsp) {

  009a9	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009b1	8b 80 a8 00 00
	00		 mov	 eax, DWORD PTR [rax+168]
  009b7	89 84 24 4c 03
	00 00		 mov	 DWORD PTR tv556[rsp], eax
  009be	83 bc 24 4c 03
	00 00 03	 cmp	 DWORD PTR tv556[rsp], 3
  009c6	74 16		 je	 SHORT $LN26@Init
  009c8	83 bc 24 4c 03
	00 00 1a	 cmp	 DWORD PTR tv556[rsp], 26
  009d0	74 20		 je	 SHORT $LN27@Init
  009d2	83 bc 24 4c 03
	00 00 1b	 cmp	 DWORD PTR tv556[rsp], 27
  009da	74 2a		 je	 SHORT $LN28@Init
  009dc	eb 3c		 jmp	 SHORT $LN29@Init
$LN26@Init:

; 149  :     case RGY_CSP_YUY2:   m_nYPitchMultiplizer = 2; break;

  009de	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009e6	c7 80 60 01 00
	00 02 00 00 00	 mov	 DWORD PTR [rax+352], 2
  009f0	eb 3a		 jmp	 SHORT $LN8@Init
$LN27@Init:

; 150  :     case RGY_CSP_RGB24R: m_nYPitchMultiplizer = 3; break;

  009f2	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009fa	c7 80 60 01 00
	00 03 00 00 00	 mov	 DWORD PTR [rax+352], 3
  00a04	eb 26		 jmp	 SHORT $LN8@Init
$LN28@Init:

; 151  :     case RGY_CSP_RGB32R: m_nYPitchMultiplizer = 4; break;

  00a06	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a0e	c7 80 60 01 00
	00 04 00 00 00	 mov	 DWORD PTR [rax+352], 4
  00a18	eb 12		 jmp	 SHORT $LN8@Init
$LN29@Init:

; 152  :     case RGY_CSP_YV12:
; 153  :     default: m_nYPitchMultiplizer = 1; break;

  00a1a	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a22	c7 80 60 01 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+352], 1
$LN8@Init:

; 154  :     }
; 155  : 
; 156  :     if (m_InputCsp == RGY_CSP_RGB32R) {

  00a2c	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a34	83 b8 a8 00 00
	00 1b		 cmp	 DWORD PTR [rax+168], 27
  00a3b	75 11		 jne	 SHORT $LN30@Init

; 157  :         m_inputVideoInfo.csp = RGY_CSP_RGB32;

  00a3d	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a45	c7 40 64 1d 00
	00 00		 mov	 DWORD PTR [rax+100], 29
  00a4c	eb 31		 jmp	 SHORT $LN31@Init
$LN30@Init:

; 158  :     } else if (m_InputCsp == RGY_CSP_RGB24R) {

  00a4e	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a56	83 b8 a8 00 00
	00 1a		 cmp	 DWORD PTR [rax+168], 26
  00a5d	75 11		 jne	 SHORT $LN32@Init

; 159  :         m_inputVideoInfo.csp = (ENCODER_NVENC) ? RGY_CSP_RGB : RGY_CSP_RGB32;

  00a5f	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a67	c7 40 64 1d 00
	00 00		 mov	 DWORD PTR [rax+100], 29

; 160  :     } else {

  00a6e	eb 0f		 jmp	 SHORT $LN31@Init
$LN32@Init:

; 161  :         m_inputVideoInfo.csp = RGY_CSP_NV12;

  00a70	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a78	c7 40 64 01 00
	00 00		 mov	 DWORD PTR [rax+100], 1
$LN31@Init:

; 162  :     }
; 163  :     if (m_sConvert->getFunc(m_InputCsp, m_inputVideoInfo.csp, false, prm->simdCsp) == nullptr) {

  00a7f	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a87	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00a8d	48 8b c8	 mov	 rcx, rax
  00a90	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  00a95	48 8b 8c 24 d8
	03 00 00	 mov	 rcx, QWORD PTR prm$[rsp]
  00a9d	8b 49 0c	 mov	 ecx, DWORD PTR [rcx+12]
  00aa0	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  00aa4	45 33 c9	 xor	 r9d, r9d
  00aa7	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00aaf	44 8b 41 64	 mov	 r8d, DWORD PTR [rcx+100]
  00ab3	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00abb	8b 91 a8 00 00
	00		 mov	 edx, DWORD PTR [rcx+168]
  00ac1	48 8b c8	 mov	 rcx, rax
  00ac4	e8 00 00 00 00	 call	 ?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z ; RGYConvertCSP::getFunc
  00ac9	48 85 c0	 test	 rax, rax
  00acc	75 73		 jne	 SHORT $LN34@Init

; 164  :         AddMessage(RGY_LOG_ERROR, _T("color conversion not supported: %s -> %s.\n"),

  00ace	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00ad6	48 63 40 64	 movsxd	 rax, DWORD PTR [rax+100]
  00ada	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_NAMES@@3PAPEBDA
  00ae1	48 8b 94 24 c0
	03 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00ae9	48 63 92 a8 00
	00 00		 movsxd	 rdx, DWORD PTR [rdx+168]
  00af0	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:?RGY_CSP_NAMES@@3PAPEBDA
  00af7	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  00afb	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00b00	4c 8b 0c d7	 mov	 r9, QWORD PTR [rdi+rdx*8]
  00b04	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134181
  00b0b	ba 02 00 00 00	 mov	 edx, 2
  00b10	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b18	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 165  :             RGY_CSP_NAMES[m_InputCsp], RGY_CSP_NAMES[m_inputVideoInfo.csp]);
; 166  :         return RGY_ERR_INVALID_COLOR_FORMAT;

  00b1d	c7 84 24 fc 02
	00 00 9c ff ff
	ff		 mov	 DWORD PTR $T22[rsp], -100 ; ffffffffffffff9cH
  00b28	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  00b30	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b35	8b 84 24 fc 02
	00 00		 mov	 eax, DWORD PTR $T22[rsp]
  00b3c	e9 c7 01 00 00	 jmp	 $LN1@Init
$LN34@Init:

; 167  :     }
; 168  :     CreateInputInfo(tstring(_T("avi: ") + strFcc).c_str(), RGY_CSP_NAMES[m_sConvert->getFunc()->csp_from], RGY_CSP_NAMES[m_sConvert->getFunc()->csp_to], get_simd_str(m_sConvert->getFunc()->simd), &m_inputVideoInfo);

  00b41	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b49	48 83 c0 18	 add	 rax, 24
  00b4d	48 89 84 24 50
	03 00 00	 mov	 QWORD PTR tv655[rsp], rax
  00b55	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b5d	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  00b64	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  00b69	48 8b c8	 mov	 rcx, rax
  00b6c	e8 00 00 00 00	 call	 ?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ ; RGYConvertCSP::getFunc
  00b71	8b 48 20	 mov	 ecx, DWORD PTR [rax+32]
  00b74	e8 00 00 00 00	 call	 ?get_simd_str@@YAPEBDI@Z ; get_simd_str
  00b79	48 89 84 24 58
	03 00 00	 mov	 QWORD PTR tv661[rsp], rax
  00b81	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b89	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  00b90	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  00b95	48 8b c8	 mov	 rcx, rax
  00b98	e8 00 00 00 00	 call	 ?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ ; RGYConvertCSP::getFunc
  00b9d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00ba1	48 89 84 24 60
	03 00 00	 mov	 QWORD PTR tv685[rsp], rax
  00ba9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_NAMES@@3PAPEBDA
  00bb0	48 89 8c 24 68
	03 00 00	 mov	 QWORD PTR tv749[rsp], rcx
  00bb8	48 8b 94 24 c0
	03 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00bc0	48 81 c2 b0 00
	00 00		 add	 rdx, 176		; 000000b0H
  00bc7	48 8b ca	 mov	 rcx, rdx
  00bca	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  00bcf	48 8b c8	 mov	 rcx, rax
  00bd2	e8 00 00 00 00	 call	 ?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ ; RGYConvertCSP::getFunc
  00bd7	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00bda	48 89 84 24 70
	03 00 00	 mov	 QWORD PTR tv700[rsp], rax
  00be2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_NAMES@@3PAPEBDA
  00be9	48 89 8c 24 78
	03 00 00	 mov	 QWORD PTR tv750[rsp], rcx
  00bf1	4c 8d 84 24 c8
	00 00 00	 lea	 r8, QWORD PTR strFcc$[rsp]
  00bf9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134183
  00c00	48 8d 8c 24 b0
	02 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00c08	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00c0d	48 89 84 24 80
	03 00 00	 mov	 QWORD PTR tv746[rsp], rax
  00c15	48 8b 84 24 80
	03 00 00	 mov	 rax, QWORD PTR tv746[rsp]
  00c1d	48 89 84 24 88
	03 00 00	 mov	 QWORD PTR tv743[rsp], rax
  00c25	48 8b 8c 24 88
	03 00 00	 mov	 rcx, QWORD PTR tv743[rsp]
  00c2d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00c32	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c3a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00c3d	48 89 8c 24 90
	03 00 00	 mov	 QWORD PTR tv751[rsp], rcx
  00c45	48 8b 94 24 50
	03 00 00	 mov	 rdx, QWORD PTR tv655[rsp]
  00c4d	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  00c52	48 8b 94 24 58
	03 00 00	 mov	 rdx, QWORD PTR tv661[rsp]
  00c5a	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  00c5f	48 8b bc 24 68
	03 00 00	 mov	 rdi, QWORD PTR tv749[rsp]
  00c67	48 8b 94 24 60
	03 00 00	 mov	 rdx, QWORD PTR tv685[rsp]
  00c6f	4c 8b 0c d7	 mov	 r9, QWORD PTR [rdi+rdx*8]
  00c73	48 8b bc 24 78
	03 00 00	 mov	 rdi, QWORD PTR tv750[rsp]
  00c7b	48 8b 94 24 70
	03 00 00	 mov	 rdx, QWORD PTR tv700[rsp]
  00c83	4c 8b 04 d7	 mov	 r8, QWORD PTR [rdi+rdx*8]
  00c87	48 8b d0	 mov	 rdx, rax
  00c8a	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c92	48 8b 84 24 90
	03 00 00	 mov	 rax, QWORD PTR tv751[rsp]
  00c9a	ff 50 50	 call	 QWORD PTR [rax+80]
  00c9d	90		 npad	 1
  00c9e	48 8d 8c 24 b0
	02 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00ca6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 169  :     AddMessage(RGY_LOG_DEBUG, m_strInputInfo);

  00cab	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00cb3	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  00cb9	4c 8b c0	 mov	 r8, rax
  00cbc	ba fe ff ff ff	 mov	 edx, -2
  00cc1	48 8b 8c 24 c0
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00cc9	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYInput::AddMessage

; 170  :     *pInputInfo = m_inputVideoInfo;

  00cce	48 8b 84 24 c0
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00cd6	48 8b bc 24 d0
	03 00 00	 mov	 rdi, QWORD PTR pInputInfo$[rsp]
  00cde	48 8d 70 18	 lea	 rsi, QWORD PTR [rax+24]
  00ce2	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00ce7	f3 a4		 rep movsb

; 171  :     return RGY_ERR_NONE;

  00ce9	c7 84 24 00 03
	00 00 00 00 00
	00		 mov	 DWORD PTR $T23[rsp], 0
  00cf4	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR strFcc$[rsp]
  00cfc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00d01	8b 84 24 00 03
	00 00		 mov	 eax, DWORD PTR $T23[rsp]
$LN1@Init:

; 172  : }

  00d08	48 8b f8	 mov	 rdi, rax
  00d0b	48 8b cc	 mov	 rcx, rsp
  00d0e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z$rtcFrameData
  00d15	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00d1a	48 8b c7	 mov	 rax, rdi
  00d1d	48 8b 8c 24 98
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00d25	48 33 cc	 xor	 rcx, rsp
  00d28	e8 00 00 00 00	 call	 __security_check_cookie
  00d2d	48 81 c4 a8 03
	00 00		 add	 rsp, 936		; 000003a8H
  00d34	5f		 pop	 rdi
  00d35	5e		 pop	 rsi
  00d36	c3		 ret	 0
?Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z ENDP ; RGYInputAvi::Init
_TEXT	ENDS
text$x	SEGMENT
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d e0 02
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$0
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR strFcc$[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$1
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8d 8d c8 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00066	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$2
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$3
  00072	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00077	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007c	55		 push	 rbp
  0007d	57		 push	 rdi
  0007e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00082	48 8b ea	 mov	 rbp, rdx
  00085	48 8d 8d b0 02
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0008c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d e0 02
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR strFcc$[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8d 8d c8 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00066	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
finfo$ = 64
strFcc$ = 200
i_stream$8 = 244
sinfo$9 = 272
temp$10 = 436
$T11 = 456
bih$12 = 512
i$13 = 676
bmpInfoHeader$14 = 680
$T15 = 688
$T16 = 736
$T17 = 744
$T18 = 748
$T19 = 752
$T20 = 756
$T21 = 760
$T22 = 764
$T23 = 768
tv745 = 776
tv732 = 784
tv158 = 792
tv736 = 800
tv426 = 808
tv450 = 816
tv478 = 824
tv484 = 832
tv550 = 840
tv556 = 844
tv655 = 848
tv661 = 856
tv685 = 864
tv749 = 872
tv700 = 880
tv750 = 888
tv746 = 896
tv743 = 904
tv751 = 912
__$ArrayPad$ = 920
this$ = 960
strFileName$ = 968
pInputInfo$ = 976
prm$ = 984
?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA PROC ; `RGYInputAvi::Init'::`1'::dtor$3
  00072	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00077	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007c	55		 push	 rbp
  0007d	57		 push	 rdi
  0007e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00082	48 8b ea	 mov	 rbp, rdx
  00085	48 8d 8d b0 02
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0008c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0??Init@RGYInputAvi@@MEAA?AW4RGY_ERR@@PEBDPEAUVideoInfo@@PEBVRGYInputPrm@@@Z@4HA ENDP ; `RGYInputAvi::Init'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
this$ = 48
?Close@RGYInputAvi@@UEAAXXZ PROC			; RGYInputAvi::Close

; 174  : void RGYInputAvi::Close() {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 175  :     AddMessage(RGY_LOG_DEBUG, _T("Closing...\n"));

  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134188
  00025	ba fe ff ff ff	 mov	 edx, -2
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 176  :     if (m_pGetFrame) {

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 b8 50 01
	00 00 00	 cmp	 QWORD PTR [rax+336], 0
  00041	74 11		 je	 SHORT $LN2@Close

; 177  :         AVIStreamGetFrameClose(m_pGetFrame);

  00043	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 88 50 01
	00 00		 mov	 rcx, QWORD PTR [rax+336]
  0004f	e8 00 00 00 00	 call	 AVIStreamGetFrameClose
$LN2@Close:

; 178  :     }
; 179  :     if (m_pAviStream) {

  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 b8 48 01
	00 00 00	 cmp	 QWORD PTR [rax+328], 0
  00061	74 11		 je	 SHORT $LN3@Close

; 180  :         AVIStreamRelease(m_pAviStream);

  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  0006f	e8 00 00 00 00	 call	 AVIStreamRelease
$LN3@Close:

; 181  :     }
; 182  :     if (m_pAviFile) {

  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 83 b8 40 01
	00 00 00	 cmp	 QWORD PTR [rax+320], 0
  00081	74 11		 je	 SHORT $LN4@Close

; 183  :         AVIFileRelease(m_pAviFile);

  00083	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00088	48 8b 88 40 01
	00 00		 mov	 rcx, QWORD PTR [rax+320]
  0008f	e8 00 00 00 00	 call	 AVIFileRelease
$LN4@Close:

; 184  :     }
; 185  :     AVIFileExit();

  00094	e8 00 00 00 00	 call	 AVIFileExit

; 186  : 
; 187  :     m_pAviFile = nullptr;

  00099	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009e	48 c7 80 40 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+320], 0

; 188  :     m_pAviStream = nullptr;

  000a9	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 c7 80 48 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+328], 0

; 189  :     m_pGetFrame = nullptr;

  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 c7 80 50 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+336], 0

; 190  :     m_pBitmapInfoHeader = nullptr;

  000c9	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ce	48 c7 80 58 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+344], 0

; 191  :     m_nYPitchMultiplizer = 1;

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000de	c7 80 60 01 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+352], 1

; 192  :     m_nBufSize = 0;

  000e8	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ed	c7 80 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+356], 0

; 193  :     m_pBuffer.reset();

  000f7	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000fc	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  00102	48 8b c8	 mov	 rcx, rax
  00105	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@E@std@@QEAAXXZ ; std::shared_ptr<unsigned char>::reset

; 194  : 
; 195  :     AddMessage(RGY_LOG_DEBUG, _T("Closed.\n"));

  0010a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG134192
  00111	ba fe ff ff ff	 mov	 edx, -2
  00116	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0011b	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 196  :     m_pEncSatusInfo.reset();

  00120	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00125	48 83 c0 08	 add	 rax, 8
  00129	48 8b c8	 mov	 rcx, rax
  0012c	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset

; 197  : }

  00131	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00135	5f		 pop	 rdi
  00136	c3		 ret	 0
?Close@RGYInputAvi@@UEAAXXZ ENDP			; RGYInputAvi::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
ptr_src$ = 96
required_bufsize$6 = 104
sizeRead$7 = 116
dst_array$ = 152
src_array$ = 200
$T8 = 240
$T9 = 256
tv85 = 260
tv378 = 264
tv377 = 272
tv200 = 280
tv246 = 288
tv351 = 292
tv296 = 296
tv313 = 304
tv321 = 308
tv330 = 312
tv361 = 320
tv371 = 328
__$ArrayPad$ = 336
this$ = 368
pSurface$ = 376
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z PROC ; RGYInputAvi::LoadNextFrame

; 199  : RGY_ERR RGYInputAvi::LoadNextFrame(RGYFrame *pSurface) {

$LN16:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 60 01
	00 00		 sub	 rsp, 352		; 00000160H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR [rsp+368]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 200  :     if ((int)m_pEncSatusInfo->m_sData.frameIn >= m_inputVideoInfo.frames
; 201  :         //m_pEncSatusInfo->m_nInputFramesがtrimの結果必要なフレーム数を大きく超えたら、エンコードを打ち切る
; 202  :         //ちょうどのところで打ち切ると他のストリームに影響があるかもしれないので、余分に取得しておく
; 203  :         || getVideoTrimMaxFramIdx() < (int)m_pEncSatusInfo->m_sData.frameIn - TRIM_OVERREAD_FRAMES) {

  0003b	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c0 08	 add	 rax, 8
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  0004f	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00057	8b 49 3c	 mov	 ecx, DWORD PTR [rcx+60]
  0005a	39 48 5c	 cmp	 DWORD PTR [rax+92], ecx
  0005d	7d 38		 jge	 SHORT $LN3@LoadNextFr
  0005f	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ ; RGYInput::getVideoTrimMaxFramIdx
  0006c	89 84 24 04 01
	00 00		 mov	 DWORD PTR tv85[rsp], eax
  00073	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007b	48 83 c1 08	 add	 rcx, 8
  0007f	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  00084	8b 40 5c	 mov	 eax, DWORD PTR [rax+92]
  00087	2d 80 00 00 00	 sub	 eax, 128		; 00000080H
  0008c	8b 8c 24 04 01
	00 00		 mov	 ecx, DWORD PTR tv85[rsp]
  00093	3b c8		 cmp	 ecx, eax
  00095	7d 0a		 jge	 SHORT $LN2@LoadNextFr
$LN3@LoadNextFr:

; 204  :         return RGY_ERR_MORE_DATA;

  00097	b8 f6 ff ff ff	 mov	 eax, -10
  0009c	e9 88 04 00 00	 jmp	 $LN1@LoadNextFr
$LN2@LoadNextFr:

; 205  :     }
; 206  : 
; 207  :     uint8_t *ptr_src = nullptr;

  000a1	48 c7 44 24 60
	00 00 00 00	 mov	 QWORD PTR ptr_src$[rsp], 0

; 208  :     if (m_pGetFrame) {

  000aa	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000b2	48 83 b8 50 01
	00 00 00	 cmp	 QWORD PTR [rax+336], 0
  000ba	74 55		 je	 SHORT $LN4@LoadNextFr

; 209  :         if (nullptr == (ptr_src = (uint8_t *)AVIStreamGetFrame(m_pGetFrame, m_pEncSatusInfo->m_sData.frameIn))) {

  000bc	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c4	48 83 c0 08	 add	 rax, 8
  000c8	48 8b c8	 mov	 rcx, rax
  000cb	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  000d0	8b 50 5c	 mov	 edx, DWORD PTR [rax+92]
  000d3	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000db	48 8b 88 50 01
	00 00		 mov	 rcx, QWORD PTR [rax+336]
  000e2	e8 00 00 00 00	 call	 AVIStreamGetFrame
  000e7	48 89 44 24 60	 mov	 QWORD PTR ptr_src$[rsp], rax
  000ec	48 83 7c 24 60
	00		 cmp	 QWORD PTR ptr_src$[rsp], 0
  000f2	75 0a		 jne	 SHORT $LN6@LoadNextFr

; 210  :             return RGY_ERR_MORE_DATA;

  000f4	b8 f6 ff ff ff	 mov	 eax, -10
  000f9	e9 2b 04 00 00	 jmp	 $LN1@LoadNextFr
$LN6@LoadNextFr:

; 211  :         }
; 212  :         ptr_src += sizeof(BITMAPINFOHEADER);

  000fe	48 8b 44 24 60	 mov	 rax, QWORD PTR ptr_src$[rsp]
  00103	48 83 c0 28	 add	 rax, 40			; 00000028H
  00107	48 89 44 24 60	 mov	 QWORD PTR ptr_src$[rsp], rax

; 213  :     } else {

  0010c	e9 9e 01 00 00	 jmp	 $LN5@LoadNextFr
$LN4@LoadNextFr:

; 214  :         uint32_t required_bufsize = m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight * 3;

  00111	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00121	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  00124	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  00128	6b c0 03	 imul	 eax, eax, 3
  0012b	89 44 24 68	 mov	 DWORD PTR required_bufsize$6[rsp], eax

; 215  :         if (m_nBufSize < required_bufsize) {

  0012f	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00137	8b 4c 24 68	 mov	 ecx, DWORD PTR required_bufsize$6[rsp]
  0013b	39 88 64 01 00
	00		 cmp	 DWORD PTR [rax+356], ecx
  00141	0f 83 bb 00 00
	00		 jae	 $LN7@LoadNextFr

; 216  :             m_pBuffer.reset();

  00147	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0014f	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  00155	48 8b c8	 mov	 rcx, rax
  00158	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@E@std@@QEAAXXZ ; std::shared_ptr<unsigned char>::reset

; 217  :             m_pBuffer = std::shared_ptr<uint8_t>((uint8_t *)_aligned_malloc(required_bufsize, 16), aligned_malloc_deleter());

  0015d	8b 44 24 68	 mov	 eax, DWORD PTR required_bufsize$6[rsp]
  00161	ba 10 00 00 00	 mov	 edx, 16
  00166	8b c8		 mov	 ecx, eax
  00168	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  0016e	44 0f b6 84 24
	00 01 00 00	 movzx	 r8d, BYTE PTR $T9[rsp]
  00177	48 8b d0	 mov	 rdx, rax
  0017a	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00182	e8 00 00 00 00	 call	 ??$?0EUaligned_malloc_deleter@@$0A@@?$shared_ptr@E@std@@QEAA@PEAEUaligned_malloc_deleter@@@Z ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char><unsigned char,aligned_malloc_deleter,0>
  00187	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR tv378[rsp], rax
  0018f	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR tv378[rsp]
  00197	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR tv377[rsp], rax
  0019f	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001a7	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  001ad	48 8b 94 24 10
	01 00 00	 mov	 rdx, QWORD PTR tv377[rsp]
  001b5	48 8b c8	 mov	 rcx, rax
  001b8	e8 00 00 00 00	 call	 ??4?$shared_ptr@E@std@@QEAAAEAV01@$$QEAV01@@Z ; std::shared_ptr<unsigned char>::operator=
  001bd	90		 npad	 1
  001be	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  001c6	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>

; 218  :             if (!m_pBuffer.get()) {

  001cb	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001d3	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  001d9	48 8b c8	 mov	 rcx, rax
  001dc	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@E@std@@IEBAPEAEXZ ; std::_Ptr_base<unsigned char>::get
  001e1	48 85 c0	 test	 rax, rax
  001e4	75 0a		 jne	 SHORT $LN8@LoadNextFr

; 219  :                 return RGY_ERR_MEMORY_ALLOC;

  001e6	b8 fc ff ff ff	 mov	 eax, -4
  001eb	e9 39 03 00 00	 jmp	 $LN1@LoadNextFr
$LN8@LoadNextFr:

; 220  :             }
; 221  :             m_nBufSize = required_bufsize;

  001f0	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001f8	8b 4c 24 68	 mov	 ecx, DWORD PTR required_bufsize$6[rsp]
  001fc	89 88 64 01 00
	00		 mov	 DWORD PTR [rax+356], ecx
$LN7@LoadNextFr:

; 222  :         }
; 223  :         LONG sizeRead = 0;

  00202	c7 44 24 74 00
	00 00 00	 mov	 DWORD PTR sizeRead$7[rsp], 0

; 224  :         if (0 != AVIStreamRead(m_pAviStream, m_pEncSatusInfo->m_sData.frameIn, 1, m_pBuffer.get(), (LONG)m_nBufSize, &sizeRead, NULL))

  0020a	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00212	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  00218	48 8b c8	 mov	 rcx, rax
  0021b	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@E@std@@IEBAPEAEXZ ; std::_Ptr_base<unsigned char>::get
  00220	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv200[rsp], rax
  00228	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00230	48 83 c1 08	 add	 rcx, 8
  00234	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  00239	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR [rsp+48], 0
  00242	48 8d 4c 24 74	 lea	 rcx, QWORD PTR sizeRead$7[rsp]
  00247	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0024c	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00254	8b 89 64 01 00
	00		 mov	 ecx, DWORD PTR [rcx+356]
  0025a	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0025e	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR tv200[rsp]
  00266	4c 8b c9	 mov	 r9, rcx
  00269	41 b8 01 00 00
	00		 mov	 r8d, 1
  0026f	8b 50 5c	 mov	 edx, DWORD PTR [rax+92]
  00272	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0027a	48 8b 88 48 01
	00 00		 mov	 rcx, QWORD PTR [rax+328]
  00281	e8 00 00 00 00	 call	 AVIStreamRead
  00286	85 c0		 test	 eax, eax
  00288	74 0a		 je	 SHORT $LN9@LoadNextFr

; 225  :             return RGY_ERR_MORE_DATA;

  0028a	b8 f6 ff ff ff	 mov	 eax, -10
  0028f	e9 95 02 00 00	 jmp	 $LN1@LoadNextFr
$LN9@LoadNextFr:

; 226  :         ptr_src = m_pBuffer.get();

  00294	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0029c	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  002a2	48 8b c8	 mov	 rcx, rax
  002a5	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@E@std@@IEBAPEAEXZ ; std::_Ptr_base<unsigned char>::get
  002aa	48 89 44 24 60	 mov	 QWORD PTR ptr_src$[rsp], rax
$LN5@LoadNextFr:

; 227  :     }
; 228  : 
; 229  :     void *dst_array[3];
; 230  :     pSurface->ptrArray(dst_array, m_sConvert->getFunc()->csp_to == RGY_CSP_RGB24 || m_sConvert->getFunc()->csp_to == RGY_CSP_RGB32);

  002af	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002b7	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  002bd	48 8b c8	 mov	 rcx, rax
  002c0	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  002c5	48 8b c8	 mov	 rcx, rax
  002c8	e8 00 00 00 00	 call	 ?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ ; RGYConvertCSP::getFunc
  002cd	83 78 04 1c	 cmp	 DWORD PTR [rax+4], 28
  002d1	74 2e		 je	 SHORT $LN11@LoadNextFr
  002d3	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002db	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  002e1	48 8b c8	 mov	 rcx, rax
  002e4	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  002e9	48 8b c8	 mov	 rcx, rax
  002ec	e8 00 00 00 00	 call	 ?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ ; RGYConvertCSP::getFunc
  002f1	83 78 04 1d	 cmp	 DWORD PTR [rax+4], 29
  002f5	74 0a		 je	 SHORT $LN11@LoadNextFr
  002f7	c6 84 24 20 01
	00 00 00	 mov	 BYTE PTR tv246[rsp], 0
  002ff	eb 08		 jmp	 SHORT $LN12@LoadNextFr
$LN11@LoadNextFr:
  00301	c6 84 24 20 01
	00 00 01	 mov	 BYTE PTR tv246[rsp], 1
$LN12@LoadNextFr:
  00309	44 0f b6 84 24
	20 01 00 00	 movzx	 r8d, BYTE PTR tv246[rsp]
  00312	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR dst_array$[rsp]
  0031a	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  00322	e8 00 00 00 00	 call	 ?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z ; RGYFrame::ptrArray

; 231  :     const void *src_array[3] = { ptr_src, ptr_src + m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight * 5 / 4, ptr_src + m_inputVideoInfo.srcWidth * m_inputVideoInfo.srcHeight };

  00327	48 8b 44 24 60	 mov	 rax, QWORD PTR ptr_src$[rsp]
  0032c	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR src_array$[rsp], rax
  00334	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0033c	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00344	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  00347	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  0034b	6b c0 05	 imul	 eax, eax, 5
  0034e	33 d2		 xor	 edx, edx
  00350	b9 04 00 00 00	 mov	 ecx, 4
  00355	f7 f1		 div	 ecx
  00357	8b c0		 mov	 eax, eax
  00359	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ptr_src$[rsp]
  0035e	48 03 c8	 add	 rcx, rax
  00361	48 8b c1	 mov	 rax, rcx
  00364	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR src_array$[rsp+8], rax
  0036c	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00374	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0037c	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  0037f	0f af 41 20	 imul	 eax, DWORD PTR [rcx+32]
  00383	8b c0		 mov	 eax, eax
  00385	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ptr_src$[rsp]
  0038a	48 03 c8	 add	 rcx, rax
  0038d	48 8b c1	 mov	 rax, rcx
  00390	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR src_array$[rsp+16], rax

; 232  : 
; 233  :     m_sConvert->run((m_inputVideoInfo.picstruct & RGY_PICSTRUCT_INTERLACED) ? 1 : 0,

  00398	ba 06 00 00 00	 mov	 edx, 6
  0039d	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003a5	8b 48 68	 mov	 ecx, DWORD PTR [rax+104]
  003a8	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ; operator&
  003ad	85 c0		 test	 eax, eax
  003af	74 0d		 je	 SHORT $LN13@LoadNextFr
  003b1	c7 84 24 24 01
	00 00 01 00 00
	00		 mov	 DWORD PTR tv351[rsp], 1
  003bc	eb 0b		 jmp	 SHORT $LN14@LoadNextFr
$LN13@LoadNextFr:
  003be	c7 84 24 24 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv351[rsp], 0
$LN14@LoadNextFr:
  003c9	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003d1	48 83 c0 4c	 add	 rax, 76			; 0000004cH
  003d5	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv296[rsp], rax
  003dd	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR pSurface$[rsp]
  003e5	e8 00 00 00 00	 call	 ?pitch@RGYFrame@@QEAAIXZ ; RGYFrame::pitch
  003ea	89 84 24 30 01
	00 00		 mov	 DWORD PTR tv313[rsp], eax
  003f1	33 d2		 xor	 edx, edx
  003f3	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  003fb	8b 41 1c	 mov	 eax, DWORD PTR [rcx+28]
  003fe	b9 02 00 00 00	 mov	 ecx, 2
  00403	f7 f1		 div	 ecx
  00405	89 84 24 34 01
	00 00		 mov	 DWORD PTR tv321[rsp], eax
  0040c	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00414	48 8b 94 24 70
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  0041c	8b 49 1c	 mov	 ecx, DWORD PTR [rcx+28]
  0041f	0f af 8a 60 01
	00 00		 imul	 ecx, DWORD PTR [rdx+352]
  00426	89 8c 24 38 01
	00 00		 mov	 DWORD PTR tv330[rsp], ecx
  0042d	48 8b 94 24 70
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00435	48 81 c2 b0 00
	00 00		 add	 rdx, 176		; 000000b0H
  0043c	48 8b ca	 mov	 rcx, rdx
  0043f	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
  00444	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR tv296[rsp]
  0044c	48 89 4c 24 50	 mov	 QWORD PTR [rsp+80], rcx
  00451	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00459	8b 49 20	 mov	 ecx, DWORD PTR [rcx+32]
  0045c	89 4c 24 48	 mov	 DWORD PTR [rsp+72], ecx
  00460	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00468	8b 49 20	 mov	 ecx, DWORD PTR [rcx+32]
  0046b	89 4c 24 40	 mov	 DWORD PTR [rsp+64], ecx
  0046f	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR tv313[rsp]
  00476	89 4c 24 38	 mov	 DWORD PTR [rsp+56], ecx
  0047a	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR tv321[rsp]
  00481	89 4c 24 30	 mov	 DWORD PTR [rsp+48], ecx
  00485	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR tv330[rsp]
  0048c	89 4c 24 28	 mov	 DWORD PTR [rsp+40], ecx
  00490	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00498	8b 49 1c	 mov	 ecx, DWORD PTR [rcx+28]
  0049b	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0049f	4c 8d 8c 24 c8
	00 00 00	 lea	 r9, QWORD PTR src_array$[rsp]
  004a7	4c 8d 84 24 98
	00 00 00	 lea	 r8, QWORD PTR dst_array$[rsp]
  004af	8b 94 24 24 01
	00 00		 mov	 edx, DWORD PTR tv351[rsp]
  004b6	48 8b c8	 mov	 rcx, rax
  004b9	e8 00 00 00 00	 call	 ?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z ; RGYConvertCSP::run

; 234  :         dst_array, src_array,
; 235  :         m_inputVideoInfo.srcWidth, m_inputVideoInfo.srcWidth * m_nYPitchMultiplizer, m_inputVideoInfo.srcWidth/2, pSurface->pitch(),
; 236  :         m_inputVideoInfo.srcHeight, m_inputVideoInfo.srcHeight, m_inputVideoInfo.crop.c);
; 237  : 
; 238  :     m_pEncSatusInfo->m_sData.frameIn++;

  004be	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004c6	48 83 c0 08	 add	 rax, 8
  004ca	48 8b c8	 mov	 rcx, rax
  004cd	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  004d2	48 83 c0 5c	 add	 rax, 92			; 0000005cH
  004d6	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv361[rsp], rax
  004de	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR tv361[rsp]
  004e6	8b 00		 mov	 eax, DWORD PTR [rax]
  004e8	ff c0		 inc	 eax
  004ea	48 8b 8c 24 40
	01 00 00	 mov	 rcx, QWORD PTR tv361[rsp]
  004f2	89 01		 mov	 DWORD PTR [rcx], eax

; 239  :     // display update
; 240  :     return m_pEncSatusInfo->UpdateDisplay();

  004f4	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004fc	48 83 c0 08	 add	 rax, 8
  00500	48 8b c8	 mov	 rcx, rax
  00503	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  00508	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv371[rsp], rax
  00510	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR tv371[rsp]
  00518	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0051b	0f 57 c9	 xorps	 xmm1, xmm1
  0051e	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR tv371[rsp]
  00526	ff 50 10	 call	 QWORD PTR [rax+16]
$LN1@LoadNextFr:

; 241  : }

  00529	48 8b f8	 mov	 rdi, rax
  0052c	48 8b cc	 mov	 rcx, rsp
  0052f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z$rtcFrameData
  00536	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0053b	48 8b c7	 mov	 rax, rdi
  0053e	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00546	48 33 cc	 xor	 rcx, rsp
  00549	e8 00 00 00 00	 call	 __security_check_cookie
  0054e	48 81 c4 60 01
	00 00		 add	 rsp, 352		; 00000160H
  00555	5f		 pop	 rdi
  00556	c3		 ret	 0
?LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z ENDP ; RGYInputAvi::LoadNextFrame
_TEXT	ENDS
text$x	SEGMENT
ptr_src$ = 96
required_bufsize$6 = 104
sizeRead$7 = 116
dst_array$ = 152
src_array$ = 200
$T8 = 240
$T9 = 256
tv85 = 260
tv378 = 264
tv377 = 272
tv200 = 280
tv246 = 288
tv351 = 292
tv296 = 296
tv313 = 304
tv321 = 308
tv330 = 312
tv361 = 320
tv371 = 328
__$ArrayPad$ = 336
this$ = 368
pSurface$ = 376
?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA PROC ; `RGYInputAvi::LoadNextFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA ENDP ; `RGYInputAvi::LoadNextFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ptr_src$ = 96
required_bufsize$6 = 104
sizeRead$7 = 116
dst_array$ = 152
src_array$ = 200
$T8 = 240
$T9 = 256
tv85 = 260
tv378 = 264
tv377 = 272
tv200 = 280
tv246 = 288
tv351 = 292
tv296 = 296
tv313 = 304
tv321 = 308
tv330 = 312
tv361 = 320
tv371 = 328
__$ArrayPad$ = 336
this$ = 368
pSurface$ = 376
?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA PROC ; `RGYInputAvi::LoadNextFrame'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??LoadNextFrame@RGYInputAvi@@UEAA?AW4RGY_ERR@@PEAURGYFrame@@@Z@4HA ENDP ; `RGYInputAvi::LoadNextFrame'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
this$ = 48
??1RGYInputAvi@@UEAA@XZ PROC				; RGYInputAvi::~RGYInputAvi

; 54   : RGYInputAvi::~RGYInputAvi() {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYInputAvi@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :     Close();

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?Close@RGYInputAvi@@UEAAXXZ ; RGYInputAvi::Close
  00037	90		 npad	 1

; 56   : }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  0004b	90		 npad	 1
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ??1RGYInput@@UEAA@XZ	; RGYInput::~RGYInput
  00056	90		 npad	 1
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??1RGYInputAvi@@UEAA@XZ ENDP				; RGYInputAvi::~RGYInputAvi
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA PROC		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYInput@@UEAA@XZ	; RGYInput::~RGYInput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA ENDP		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$0
this$ = 48
?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA PROC		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 68 01
	00 00		 add	 rcx, 360		; 00000168H
  00041	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA ENDP		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA PROC		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYInput@@UEAA@XZ	; RGYInput::~RGYInput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1RGYInputAvi@@UEAA@XZ@4HA ENDP		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA PROC		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 68 01
	00 00		 add	 rcx, 360		; 00000168H
  00041	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???1RGYInputAvi@@UEAA@XZ@4HA ENDP		; `RGYInputAvi::~RGYInputAvi'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
_TEXT	SEGMENT
this$ = 48
??0RGYInputAvi@@QEAA@XZ PROC				; RGYInputAvi::RGYInputAvi

; 50   :     m_pBuffer() {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0RGYInput@@QEAA@XZ	; RGYInput::RGYInput
  00028	90		 npad	 1
  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYInputAvi@@6B@
  00035	48 89 08	 mov	 QWORD PTR [rax], rcx

; 44   :     m_pAviFile(nullptr),

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 c7 80 40 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+320], 0

; 45   :     m_pAviStream(nullptr),

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 c7 80 48 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+328], 0

; 46   :     m_pGetFrame(nullptr),

  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 c7 80 50 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+336], 0

; 47   :     m_pBitmapInfoHeader(nullptr),

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006d	48 c7 80 58 01
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+344], 0

; 48   :     m_nYPitchMultiplizer(1),

  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007d	c7 80 60 01 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+352], 1

; 49   :     m_nBufSize(0),

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008c	c7 80 64 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+356], 0

; 50   :     m_pBuffer() {

  00096	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009b	48 05 68 01 00
	00		 add	 rax, 360		; 00000168H
  000a1	48 8b c8	 mov	 rcx, rax
  000a4	e8 00 00 00 00	 call	 ??0?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::shared_ptr<unsigned char>
  000a9	90		 npad	 1

; 51   :     m_strReaderName = _T("avi");

  000aa	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000af	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  000b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG134019
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  000c4	90		 npad	 1

; 52   : }

  000c5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ca	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000ce	5f		 pop	 rdi
  000cf	c3		 ret	 0
??0RGYInputAvi@@QEAA@XZ ENDP				; RGYInputAvi::RGYInputAvi
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA PROC		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYInput@@UEAA@XZ	; RGYInput::~RGYInput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA ENDP		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA PROC		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 68 01
	00 00		 add	 rcx, 360		; 00000168H
  00041	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA ENDP		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA PROC		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYInput@@UEAA@XZ	; RGYInput::~RGYInput
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0RGYInputAvi@@QEAA@XZ@4HA ENDP		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA PROC		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003a	48 81 c1 68 01
	00 00		 add	 rcx, 360		; 00000168H
  00041	e8 00 00 00 00	 call	 ??1?$shared_ptr@E@std@@QEAA@XZ ; std::shared_ptr<unsigned char>::~shared_ptr<unsigned char>
  00046	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
?dtor$1@?0???0RGYInputAvi@@QEAA@XZ@4HA ENDP		; `RGYInputAvi::RGYInputAvi'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z
_TEXT	SEGMENT
tv71 = 32
_Left$ = 64
__formal$ = 72
??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z PROC ; std::operator==<RGYLog>, COMDAT

; 1327 : _NODISCARD bool operator==(const shared_ptr<_Ty>& _Left, nullptr_t) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1328 :     return _Left.get() == nullptr;

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
  0002d	48 85 c0	 test	 rax, rax
  00030	75 0a		 jne	 SHORT $LN3@operator
  00032	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  0003a	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@operator:
  00044	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv71[rsp]

; 1329 : }

  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ENDP ; std::operator==<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ; std::default_delete<RGYConvertCSP>::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAVRGYConvertCSP@@PEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@$$QEAPEAV1@@Z ; std::exchange<RGYConvertCSP *,RGYConvertCSP *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEBAPEAVRGYConvertCSP@@XZ ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ; std::default_delete<RGYConvertCSP>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=, COMDAT

; 1860 :     unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1861 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> > >
  0002d	48 39 44 24 30	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 39		 je	 SHORT $LN2@operator

; 1862 :             reset(_Right.release());

  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?release@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAPEAVRGYConvertCSP@@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::release
  0003e	48 8b d0	 mov	 rdx, rax
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset

; 1863 :             _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@VRGYConvertCSP@@@std@@@std@@YA$$QEAU?$default_delete@VRGYConvertCSP@@@0@AEAU10@@Z ; std::forward<std::default_delete<RGYConvertCSP> >
  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
$LN2@operator:

; 1864 :         }
; 1865 :         return *this;

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1866 :     }

  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z PROC ; std::default_delete<RGYConvertCSP>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 16		 je	 SHORT $LN3@operator
  00035	ba 01 00 00 00	 mov	 edx, 1
  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003f	e8 00 00 00 00	 call	 ??_GRGYConvertCSP@@QEAAPEAXI@Z
  00044	48 89 44 24 28	 mov	 QWORD PTR tv68[rsp], rax
  00049	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0004b	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@operator:

; 1768 :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ENDP ; std::default_delete<RGYConvertCSP>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ
_TEXT	SEGMENT
this$ = 48
?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ PROC		; RGYInput::getVideoTrimMaxFramIdx, COMDAT

; 196  :     int getVideoTrimMaxFramIdx() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 197  :         if (m_sTrimParam.list.size() == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ ; std::vector<sTrim,std::allocator<sTrim> >::size
  00031	48 85 c0	 test	 rax, rax
  00034	75 07		 jne	 SHORT $LN2@getVideoTr

; 198  :             return INT_MAX;

  00036	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH
  0003b	eb 2d		 jmp	 SHORT $LN1@getVideoTr
$LN2@getVideoTr:

; 199  :         }
; 200  :         return m_sTrimParam.list[m_sTrimParam.list.size()-1].fin;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ ; std::vector<sTrim,std::allocator<sTrim> >::size
  00050	48 ff c8	 dec	 rax
  00053	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00058	48 81 c1 18 01
	00 00		 add	 rcx, 280		; 00000118H
  0005f	48 8b d0	 mov	 rdx, rax
  00062	e8 00 00 00 00	 call	 ??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z ; std::vector<sTrim,std::allocator<sTrim> >::operator[]
  00067	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
$LN1@getVideoTr:

; 201  :     }

  0006a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
?getVideoTrimMaxFramIdx@RGYInput@@IEAAHXZ ENDP		; RGYInput::getVideoTrimMaxFramIdx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?AddMessage@RGYInput@@QEAAXHPEBDZZ
_TEXT	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?AddMessage@RGYInput@@QEAAXHPEBDZZ PROC			; RGYInput::AddMessage, COMDAT

; 171  :     void AddMessage(int log_level, const TCHAR *format, ... ) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00013	57		 push	 rdi
  00014	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 172  :         if (m_pPrintMes == nullptr || log_level < m_pPrintMes->getLogLevel()) {

  00044	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00052	33 d2		 xor	 edx, edx
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
  0005c	0f b6 c0	 movzx	 eax, al
  0005f	85 c0		 test	 eax, eax
  00061	75 27		 jne	 SHORT $LN3@AddMessage
  00063	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00071	48 8b c8	 mov	 rcx, rax
  00074	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ?getLogLevel@RGYLog@@QEAAHXZ ; RGYLog::getLogLevel
  00081	39 84 24 b8 00
	00 00		 cmp	 DWORD PTR log_level$[rsp], eax
  00088	7d 05		 jge	 SHORT $LN2@AddMessage
$LN3@AddMessage:

; 173  :             return;

  0008a	e9 ab 00 00 00	 jmp	 $LN1@AddMessage
$LN2@AddMessage:

; 174  :         }
; 175  : 
; 176  :         va_list args;
; 177  :         va_start(args, format);

  0008f	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR format$[rsp+8]
  00097	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 178  :         int len = _vsctprintf(format, args) + 1; // _vscprintf doesn't count terminating '\0'

  0009c	48 8b 54 24 28	 mov	 rdx, QWORD PTR args$[rsp]
  000a1	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR format$[rsp]
  000a9	e8 00 00 00 00	 call	 _vscprintf
  000ae	ff c0		 inc	 eax
  000b0	89 44 24 34	 mov	 DWORD PTR len$[rsp], eax

; 179  :         tstring buffer;

  000b4	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000b9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000be	90		 npad	 1

; 180  :         buffer.resize(len, _T('\0'));

  000bf	48 63 44 24 34	 movsxd	 rax, DWORD PTR len$[rsp]
  000c4	45 33 c0	 xor	 r8d, r8d
  000c7	48 8b d0	 mov	 rdx, rax
  000ca	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000cf	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 181  :         _vstprintf_s(&buffer[0], len, format, args);

  000d4	48 63 44 24 34	 movsxd	 rax, DWORD PTR len$[rsp]
  000d9	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv93[rsp], rax
  000e1	33 d2		 xor	 edx, edx
  000e3	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e8	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  000ed	4c 8b 4c 24 28	 mov	 r9, QWORD PTR args$[rsp]
  000f2	4c 8b 84 24 c0
	00 00 00	 mov	 r8, QWORD PTR format$[rsp]
  000fa	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv93[rsp]
  00102	48 8b d1	 mov	 rdx, rcx
  00105	48 8b c8	 mov	 rcx, rax
  00108	e8 00 00 00 00	 call	 vsprintf_s

; 182  :         va_end(args);

  0010d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR args$[rsp], 0

; 183  :         AddMessage(log_level, buffer);

  00116	4c 8d 44 24 48	 lea	 r8, QWORD PTR buffer$[rsp]
  0011b	8b 94 24 b8 00
	00 00		 mov	 edx, DWORD PTR log_level$[rsp]
  00122	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYInput::AddMessage
  0012f	90		 npad	 1

; 184  :     }

  00130	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00135	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@AddMessage:
  0013a	48 8b cc	 mov	 rcx, rsp
  0013d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcFrameData
  00144	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00149	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00151	48 33 cc	 xor	 rcx, rsp
  00154	e8 00 00 00 00	 call	 __security_check_cookie
  00159	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00160	5f		 pop	 rdi
  00161	c3		 ret	 0
?AddMessage@RGYInput@@QEAAXHPEBDZZ ENDP			; RGYInput::AddMessage
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA PROC	; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA ENDP	; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA PROC	; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA ENDP	; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; RGYInput::AddMessage, COMDAT

; 160  :     void AddMessage(int log_level, const tstring& str) {

$LN14:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  0002d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00034	48 33 c4	 xor	 rax, rsp
  00037	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 161  :         if (m_pPrintMes == nullptr || log_level < m_pPrintMes->getLogLevel()) {

  0003f	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0004d	33 d2		 xor	 edx, edx
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	75 27		 jne	 SHORT $LN6@AddMessage
  0005e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ?getLogLevel@RGYLog@@QEAAHXZ ; RGYLog::getLogLevel
  0007c	39 84 24 88 01
	00 00		 cmp	 DWORD PTR log_level$[rsp], eax
  00083	7d 05		 jge	 SHORT $LN5@AddMessage
$LN6@AddMessage:

; 162  :             return;

  00085	e9 fe 01 00 00	 jmp	 $LN1@AddMessage
$LN5@AddMessage:

; 163  :         }
; 164  :         auto lines = split(str, _T("\n"));

  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  00091	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T4[rsp]
  00096	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009b	90		 npad	 1
  0009c	45 33 c9	 xor	 r9d, r9d
  0009f	4c 8d 44 24 58	 lea	 r8, QWORD PTR $T4[rsp]
  000a4	48 8b 94 24 90
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  000ac	48 8d 4c 24 28	 lea	 rcx, QWORD PTR lines$[rsp]
  000b1	e8 00 00 00 00	 call	 ?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z ; split
  000b6	90		 npad	 1
  000b7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T4[rsp]
  000bc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 165  :         for (const auto& line : lines) {

  000c1	48 8d 44 24 28	 lea	 rax, QWORD PTR lines$[rsp]
  000c6	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR <range>$L0$5[rsp], rax
  000ce	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$5[rsp]
  000d6	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
  000db	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR <begin>$L0$6[rsp], rax
  000e3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$5[rsp]
  000eb	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
  000f0	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR <end>$L0$7[rsp], rax
  000f8	eb 14		 jmp	 SHORT $LN4@AddMessage
$LN2@AddMessage:
  000fa	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$6[rsp]
  00102	48 83 c0 28	 add	 rax, 40			; 00000028H
  00106	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR <begin>$L0$6[rsp], rax
$LN4@AddMessage:
  0010e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <end>$L0$7[rsp]
  00116	48 39 84 24 88
	00 00 00	 cmp	 QWORD PTR <begin>$L0$6[rsp], rax
  0011e	0f 84 5a 01 00
	00		 je	 $LN3@AddMessage
  00124	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$6[rsp]
  0012c	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR line$8[rsp], rax

; 166  :             if (line[0] != _T('\0')) {

  00134	33 d2		 xor	 edx, edx
  00136	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR line$8[rsp]
  0013e	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00143	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00146	85 c0		 test	 eax, eax
  00148	0f 84 2b 01 00
	00		 je	 $LN7@AddMessage

; 167  :                 m_pPrintMes->write(log_level, (m_strReaderName + _T(": ") + line + _T("\n")).c_str());

  0014e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00156	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0015c	48 8b c8	 mov	 rcx, rax
  0015f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00164	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv133[rsp], rax
  0016c	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00174	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  0017a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
  00181	48 8b d0	 mov	 rdx, rax
  00184	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  0018c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00191	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00199	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR tv76[rsp]
  001a1	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv162[rsp], rax
  001a9	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR line$8[rsp]
  001b1	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR tv162[rsp]
  001b9	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  001c1	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001c6	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv79[rsp], rax
  001ce	48 8b 84 24 38
	01 00 00	 mov	 rax, QWORD PTR tv79[rsp]
  001d6	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv164[rsp], rax
  001de	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  001e5	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR tv164[rsp]
  001ed	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  001f5	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001fa	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv167[rsp], rax
  00202	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR tv167[rsp]
  0020a	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR tv166[rsp], rax
  00212	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR tv166[rsp]
  0021a	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0021f	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00227	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0022a	48 89 8c 24 58
	01 00 00	 mov	 QWORD PTR tv168[rsp], rcx
  00232	4c 8b c0	 mov	 r8, rax
  00235	8b 94 24 88 01
	00 00		 mov	 edx, DWORD PTR log_level$[rsp]
  0023c	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00244	48 8b 84 24 58
	01 00 00	 mov	 rax, QWORD PTR tv168[rsp]
  0024c	ff 50 20	 call	 QWORD PTR [rax+32]
  0024f	90		 npad	 1
  00250	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00258	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0025d	90		 npad	 1
  0025e	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00266	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0026b	90		 npad	 1
  0026c	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00274	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@AddMessage:

; 168  :             }
; 169  :         }

  00279	e9 7c fe ff ff	 jmp	 $LN2@AddMessage
$LN3@AddMessage:

; 170  :     }

  0027e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR lines$[rsp]
  00283	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN1@AddMessage:
  00288	48 8b cc	 mov	 rcx, rsp
  0028b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData
  00292	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00297	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0029f	48 33 cc	 xor	 rcx, rsp
  002a2	e8 00 00 00 00	 call	 __security_check_cookie
  002a7	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  002ae	5f		 pop	 rdi
  002af	c3		 ret	 0
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; RGYInput::AddMessage
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR lines$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR lines$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetDataTrackCount@RGYInput@@UEAAHXZ
_TEXT	SEGMENT
this$ = 16
?GetDataTrackCount@RGYInput@@UEAAHXZ PROC		; RGYInput::GetDataTrackCount, COMDAT

; 153  :     virtual int GetDataTrackCount() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 154  :         return 0;

  00006	33 c0		 xor	 eax, eax

; 155  :     }

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?GetDataTrackCount@RGYInput@@UEAAHXZ ENDP		; RGYInput::GetDataTrackCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetSubtitleTrackCount@RGYInput@@UEAAHXZ
_TEXT	SEGMENT
this$ = 16
?GetSubtitleTrackCount@RGYInput@@UEAAHXZ PROC		; RGYInput::GetSubtitleTrackCount, COMDAT

; 149  :     virtual int GetSubtitleTrackCount() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 150  :         return 0;

  00006	33 c0		 xor	 eax, eax

; 151  :     }

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?GetSubtitleTrackCount@RGYInput@@UEAAHXZ ENDP		; RGYInput::GetSubtitleTrackCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetAudioTrackCount@RGYInput@@UEAAHXZ
_TEXT	SEGMENT
this$ = 16
?GetAudioTrackCount@RGYInput@@UEAAHXZ PROC		; RGYInput::GetAudioTrackCount, COMDAT

; 145  :     virtual int GetAudioTrackCount() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 146  :         return 0;

  00006	33 c0		 xor	 eax, eax

; 147  :     }

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?GetAudioTrackCount@RGYInput@@UEAAHXZ ENDP		; RGYInput::GetAudioTrackCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYInput::GetHeader, COMDAT

; 119  :     virtual RGY_ERR GetHeader(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 120  :         return RGY_ERR_NONE;

  0000b	33 c0		 xor	 eax, eax

; 121  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYInput::GetHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYInput::GetNextBitstreamNoDelete, COMDAT

; 114  :     virtual RGY_ERR GetNextBitstreamNoDelete(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 115  :         return RGY_ERR_NONE;

  0000b	33 c0		 xor	 eax, eax

; 116  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYInput::GetNextBitstreamNoDelete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYInput::GetNextBitstream, COMDAT

; 109  :     virtual RGY_ERR GetNextBitstream(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 110  :         return RGY_ERR_NONE;

  0000b	33 c0		 xor	 eax, eax

; 111  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYInput::GetNextBitstream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRGYConvertCSP@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GRGYConvertCSP@@QEAAPEAXI@Z PROC			; RGYConvertCSP::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1RGYConvertCSP@@QEAA@XZ ; RGYConvertCSP::~RGYConvertCSP
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba d8 00 00 00	 mov	 edx, 216		; 000000d8H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GRGYConvertCSP@@QEAAPEAXI@Z ENDP			; RGYConvertCSP::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ
_TEXT	SEGMENT
this$ = 16
?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ PROC	; RGYConvertCSP::getFunc, COMDAT

; 78   :     const ConvertCSP *getFunc() const { return m_csp; };

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?getFunc@RGYConvertCSP@@QEBAPEBUConvertCSP@@XZ ENDP	; RGYConvertCSP::getFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z PROC		; std::min<unsigned char *>, COMDAT

; 4490 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Right < _Left)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4491 :     // return smaller of _Left and _Right
; 4492 :     if (_Right < _Left) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	0f 83 92 00 00
	00		 jae	 $LN8@min
$LN4@min:

; 4493 :         _STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00043	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00046	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00049	72 02		 jb	 SHORT $LN7@min
  0004b	eb 6d		 jmp	 SHORT $LN10@min
$LN7@min:
  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00054	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	45 33 c9	 xor	 r9d, r9d
  00068	41 b8 8d 11 00
	00		 mov	 r8d, 4493		; 0000118dH
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00075	b9 02 00 00 00	 mov	 ecx, 2
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00080	90		 npad	 1
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 03		 jne	 SHORT $LN12@min
  00086	cc		 int	 3
  00087	33 c0		 xor	 eax, eax
$LN12@min:
  00089	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00092	41 b9 8d 11 00
	00		 mov	 r9d, 4493		; 0000118dH
  00098	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b3	90		 npad	 1
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 93		 jne	 SHORT $LN7@min
$LN10@min:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	0f 85 75 ff ff
	ff		 jne	 $LN4@min

; 4494 :         return _Right;

  000c4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c9	eb 05		 jmp	 SHORT $LN1@min
$LN8@min:

; 4495 :     }
; 4496 : 
; 4497 :     return _Left;

  000cb	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@min:

; 4498 : }

  000d0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z ENDP		; std::min<unsigned char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?pitch@RGYFrame@@QEAAIXZ
_TEXT	SEGMENT
this$ = 16
?pitch@RGYFrame@@QEAAIXZ PROC				; RGYFrame::pitch, COMDAT

; 375  :     uint32_t pitch() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 376  :         return m_surface.Data.Pitch;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b7 80 86 00
	00 00		 movzx	 eax, WORD PTR [rax+134]

; 377  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?pitch@RGYFrame@@QEAAIXZ ENDP				; RGYFrame::pitch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrRGB@RGYFrame@@QEAAPEAEXZ
_TEXT	SEGMENT
tv67 = 32
tv76 = 40
this$ = 64
?ptrRGB@RGYFrame@@QEAAPEAEXZ PROC			; RGYFrame::ptrRGB, COMDAT

; 372  :     uint8_t *ptrRGB() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 373  :         return (std::min)((std::min)(m_surface.Data.R, m_surface.Data.G), m_surface.Data.B);

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00029	48 89 44 24 20	 mov	 QWORD PTR tv67[rsp], rax
  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00033	48 81 c1 90 00
	00 00		 add	 rcx, 144		; 00000090H
  0003a	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  0003f	48 81 c2 88 00
	00 00		 add	 rdx, 136		; 00000088H
  00046	48 89 54 24 28	 mov	 QWORD PTR tv76[rsp], rdx
  0004b	48 8b d1	 mov	 rdx, rcx
  0004e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv76[rsp]
  00053	e8 00 00 00 00	 call	 ??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z ; std::min<unsigned char *>
  00058	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv67[rsp]
  0005d	48 8b d1	 mov	 rdx, rcx
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$min@PEAE@std@@YAAEBQEAEAEBQEAE0@Z ; std::min<unsigned char *>
  00068	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 374  :     }

  0006b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
?ptrRGB@RGYFrame@@QEAAPEAEXZ ENDP			; RGYFrame::ptrRGB
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.h
;	COMDAT ?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z
_TEXT	SEGMENT
tv73 = 32
this$ = 64
array$ = 72
bRGB$ = 80
?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z PROC		; RGYFrame::ptrArray, COMDAT

; 355  :     void ptrArray(void *array[3], bool bRGB) {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 356  :         array[0] = (bRGB) ? ptrRGB() : m_surface.Data.Y;

  00028	0f b6 44 24 50	 movzx	 eax, BYTE PTR bRGB$[rsp]
  0002d	85 c0		 test	 eax, eax
  0002f	74 11		 je	 SHORT $LN3@ptrArray
  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?ptrRGB@RGYFrame@@QEAAPEAEXZ ; RGYFrame::ptrRGB
  0003b	48 89 44 24 20	 mov	 QWORD PTR tv73[rsp], rax
  00040	eb 11		 jmp	 SHORT $LN4@ptrArray
$LN3@ptrArray:
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  0004e	48 89 44 24 20	 mov	 QWORD PTR tv73[rsp], rax
$LN4@ptrArray:
  00053	b8 08 00 00 00	 mov	 eax, 8
  00058	48 6b c0 00	 imul	 rax, rax, 0
  0005c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR array$[rsp]
  00061	48 8b 54 24 20	 mov	 rdx, QWORD PTR tv73[rsp]
  00066	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 357  :         array[1] = m_surface.Data.UV;

  0006a	b8 08 00 00 00	 mov	 eax, 8
  0006f	48 6b c0 01	 imul	 rax, rax, 1
  00073	48 8b 4c 24 48	 mov	 rcx, QWORD PTR array$[rsp]
  00078	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  0007d	48 8b 92 90 00
	00 00		 mov	 rdx, QWORD PTR [rdx+144]
  00084	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 358  :         array[2] = m_surface.Data.V;

  00088	b8 08 00 00 00	 mov	 eax, 8
  0008d	48 6b c0 02	 imul	 rax, rax, 2
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR array$[rsp]
  00096	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  0009b	48 8b 92 98 00
	00 00		 mov	 rdx, QWORD PTR [rdx+152]
  000a2	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 359  :     }

  000a6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?ptrArray@RGYFrame@@QEAAXQEAPEAX_N@Z ENDP		; RGYFrame::ptrArray
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z
_TEXT	SEGMENT
_Ans$ = 40
$T4 = 96
tv69 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4243 :     _In_z_ const _Elem* const _Left, const basic_string<_Elem, _Traits, _Alloc>& _Right) { // return NTCTS + string

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003d	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 4244 :     using _String_type = basic_string<_Elem, _Traits, _Alloc>;
; 4245 :     using _Size_type   = typename _String_type::size_type;
; 4246 :     _String_type _Ans;

  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1

; 4247 :     _Ans.reserve(_Convert_size<_Size_type>(_Traits::length(_Left) + _Right.size()));

  00050	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Left$[rsp]
  00058	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0005d	48 89 44 24 68	 mov	 QWORD PTR tv69[rsp], rax
  00062	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006a	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0006f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv69[rsp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0008a	e8 00 00 00 00	 call	 ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 4248 :     _Ans += _Left;

  0008f	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Left$[rsp]
  00097	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0009c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4249 :     _Ans += _Right;

  000a1	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000ae	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4250 :     return _Ans;

  000b3	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Ans$[rsp]
  000b8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000c9	83 c8 01	 or	 eax, 1
  000cc	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000d0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4251 : }

  000e2	48 8b f8	 mov	 rdi, rax
  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000fc	48 33 cc	 xor	 rcx, rsp
  000ff	e8 00 00 00 00	 call	 __security_check_cookie
  00104	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
  0010d	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv69 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv69 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv69 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv69 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEBDAEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ PROC ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ENDP ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ PROC	; std::_Ptr_base<RGYLog>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ENDP	; std::_Ptr_base<RGYLog>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ PROC	; std::shared_ptr<EncodeStatus>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ENDP	; std::shared_ptr<EncodeStatus>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z PROC ; std::shared_ptr<EncodeStatus>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ENDP ; std::shared_ptr<EncodeStatus>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z PROC ; std::_Ptr_base<EncodeStatus>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ENDP ; std::_Ptr_base<EncodeStatus>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ PROC	; std::_Ptr_base<EncodeStatus>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<EncodeStatus>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ PROC	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ENDP	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ PROC ; std::_Ptr_base<EncodeStatus>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ENDP ; std::_Ptr_base<EncodeStatus>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_log.h
;	COMDAT ?getLogLevel@RGYLog@@QEAAHXZ
_TEXT	SEGMENT
this$ = 16
?getLogLevel@RGYLog@@QEAAHXZ PROC			; RGYLog::getLogLevel, COMDAT

; 55   :     int getLogLevel() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 56   :         return m_nLogLevel;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 57   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?getLogLevel@RGYLog@@QEAAHXZ ENDP			; RGYLog::getLogLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z PROC ; std::vector<sTrim,std::allocator<sTrim> >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 c1 f8 03	 sar	 rax, 3
  00046	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  0004b	73 02		 jae	 SHORT $LN7@operator
  0004d	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	90		 npad	 1
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JG@GIBNJFPK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	0f 85 67 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000c6	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000cb	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000cf	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Pos$[rsp]
  000d4	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 1459 :     }

  000d8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000dc	5f		 pop	 rdi
  000dd	c3		 ret	 0
??A?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAAEAUsTrim@@_K@Z ENDP ; std::vector<sTrim,std::allocator<sTrim> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ PROC ; std::vector<sTrim,std::allocator<sTrim> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<sTrim,std::allocator<sTrim> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4293 :     const basic_string<_Elem, _Traits, _Alloc>& _Right) { // return string + string

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4294 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4295 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4321 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4322 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4323 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
_TEXT	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4265 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003d	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 4266 :     using _String_type = basic_string<_Elem, _Traits, _Alloc>;
; 4267 :     using _Size_type   = typename _String_type::size_type;
; 4268 :     _String_type _Ans;

  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1

; 4269 :     _Ans.reserve(_Convert_size<_Size_type>(_Left.size() + _Traits::length(_Right)));

  00050	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Left$[rsp]
  00058	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0005d	48 89 44 24 68	 mov	 QWORD PTR tv70[rsp], rax
  00062	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0006f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv70[rsp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0008a	e8 00 00 00 00	 call	 ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 4270 :     _Ans += _Left;

  0008f	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Left$[rsp]
  00097	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0009c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4271 :     _Ans += _Right;

  000a1	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000ae	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4272 :     return _Ans;

  000b3	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Ans$[rsp]
  000b8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000c9	83 c8 01	 or	 eax, 1
  000cc	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000d0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4273 : }

  000e2	48 8b f8	 mov	 rdi, rax
  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000fc	48 33 cc	 xor	 rcx, rsp
  000ff	e8 00 00 00 00	 call	 __security_check_cookie
  00104	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
  0010d	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Raligned_malloc_deleter@@QEBAXPEAX@Z
_TEXT	SEGMENT
this$ = 48
ptr$ = 56
??Raligned_malloc_deleter@@QEBAXPEAX@Z PROC		; aligned_malloc_deleter::operator(), COMDAT

; 167  :     void operator()(void* ptr) const {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :         _aligned_free(ptr);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR ptr$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_free

; 169  :     }

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5f		 pop	 rdi
  00033	c3		 ret	 0
??Raligned_malloc_deleter@@QEBAXPEAX@Z ENDP		; aligned_malloc_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z PROC			; operator&

; 289  : static RGY_PICSTRUCT operator&(RGY_PICSTRUCT a, RGY_PICSTRUCT b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 290  :     return (RGY_PICSTRUCT)((uint8_t)a & (uint8_t)b);

  00009	0f b6 44 24 10	 movzx	 eax, BYTE PTR a$[rsp]
  0000e	0f b6 4c 24 18	 movzx	 ecx, BYTE PTR b$[rsp]
  00013	23 c1		 and	 eax, ecx

; 291  : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ENDP			; operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 4152 :     void _Eos(const size_type _Newsize) { // set new length and null terminator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4153 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _Newsize], _Elem());

  00023	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  00032	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00043	48 03 44 24 48	 add	 rax, QWORD PTR _Newsize$[rsp]
  00048	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4154 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$ = 32
_Al$ = 40
tv86 = 48
this$ = 80
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small, COMDAT

; 4139 :     void _Become_small() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4140 :         // release any held storage and return to small string mode
; 4141 :         // pre: *this is in large string mode
; 4142 :         // pre: this is small enough to return to small string mode
; 4143 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4144 :         const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00034	48 89 44 24 20	 mov	 QWORD PTR _Ptr$[rsp], rax

; 4145 :         auto& _Al          = _Getal();

  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00043	48 89 44 24 28	 mov	 QWORD PTR _Al$[rsp], rax

; 4146 :         _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c0 08	 add	 rax, 8
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4147 :         _Traits::copy(_Mypair._Myval2._Bx._Buf, _Unfancy(_Ptr), _Mypair._Myval2._Mysize + 1);

  00059	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00062	48 ff c0	 inc	 rax
  00065	48 89 44 24 30	 mov	 QWORD PTR tv86[rsp], rax
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00074	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00079	48 83 c1 08	 add	 rcx, 8
  0007d	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv86[rsp]
  00082	4c 8b c2	 mov	 r8, rdx
  00085	48 8b d0	 mov	 rdx, rax
  00088	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 4148 :         _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00096	48 ff c0	 inc	 rax
  00099	4c 8b c0	 mov	 r8, rax
  0009c	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000a1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$[rsp]
  000a6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4149 :         _Mypair._Myval2._Myres = _BUF_SIZE - 1;

  000ab	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4150 :     }

  000b8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
_Old_size$1 = 32
$T2 = 40
this$ = 64
_Newcap$ = 72
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT

; 3593 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcap = 0) { // determine new minimum length of allocated storage

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3594 :         if (_Mypair._Myval2._Mysize > _Newcap) { // requested capacity is not large enough for current size, ignore

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	76 05		 jbe	 SHORT $LN2@reserve

; 3595 :             return; // nothing to do

  00033	e9 9d 00 00 00	 jmp	 $LN1@reserve
$LN2@reserve:

; 3596 :         }
; 3597 : 
; 3598 :         if (_Mypair._Myval2._Myres == _Newcap) { // we're already at the requested capacity

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00042	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  00046	75 05		 jne	 SHORT $LN3@reserve

; 3599 :             return; // nothing to do

  00048	e9 88 00 00 00	 jmp	 $LN1@reserve
$LN3@reserve:

; 3600 :         }
; 3601 : 
; 3602 :         if (_Mypair._Myval2._Myres < _Newcap) { // reallocate to grow

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00057	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  0005b	73 52		 jae	 SHORT $LN4@reserve

; 3603 :             const size_type _Old_size = _Mypair._Myval2._Mysize;

  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00066	48 89 44 24 20	 mov	 QWORD PTR _Old_size$1[rsp], rax

; 3604 :             _Reallocate_grow_by(

  0006b	48 8d 44 24 28	 lea	 rax, QWORD PTR $T2[rsp]
  00070	48 8b f8	 mov	 rdi, rax
  00073	33 c0		 xor	 eax, eax
  00075	b9 01 00 00 00	 mov	 ecx, 1
  0007a	f3 aa		 rep stosb
  0007c	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$1[rsp]
  00081	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00086	48 2b c8	 sub	 rcx, rax
  00089	48 8b c1	 mov	 rax, rcx
  0008c	44 0f b6 44 24
	28		 movzx	 r8d, BYTE PTR $T2[rsp]
  00092	48 8b d0	 mov	 rdx, rax
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {
; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);
; 3607 :                 });
; 3608 : 
; 3609 :             _Mypair._Myval2._Mysize = _Old_size;

  0009f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$1[rsp]
  000a9	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3610 :             return;

  000ad	eb 26		 jmp	 SHORT $LN1@reserve
$LN4@reserve:

; 3611 :         }
; 3612 : 
; 3613 :         if (_BUF_SIZE > _Newcap && _Mypair._Myval2._Large_string_engaged()) {

  000af	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Newcap$[rsp], 16
  000b5	73 1e		 jae	 SHORT $LN5@reserve
  000b7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  000c4	0f b6 c0	 movzx	 eax, al
  000c7	85 c0		 test	 eax, eax
  000c9	74 0a		 je	 SHORT $LN5@reserve

; 3614 :             // deallocate everything; switch back to "small" mode
; 3615 :             _Become_small();

  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d0	e8 00 00 00 00	 call	 ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
$LN5@reserve:
$LN1@reserve:

; 3616 :             return;
; 3617 :         }
; 3618 : 
; 3619 :         // ignore requests to reserve to [_BUF_SIZE, _Myres)
; 3620 :     }

  000d5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
_Old_size$ = 32
this$ = 64
_Newsize$ = 72
_Ch$ = 80
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 3579 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize, const _Elem _Ch = _Elem()) {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3580 :         // determine new length, padding with _Ch elements as needed
; 3581 :         const size_type _Old_size = size();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00032	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3582 :         if (_Newsize <= _Old_size) {

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  0003c	48 39 44 24 48	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00041	77 11		 ja	 SHORT $LN2@resize

; 3583 :             _Eos(_Newsize);

  00043	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00048	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 3584 :         } else {

  00052	eb 23		 jmp	 SHORT $LN3@resize
$LN2@resize:

; 3585 :             append(_Newsize - _Old_size, _Ch);

  00054	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00059	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0005e	48 2b c8	 sub	 rcx, rax
  00061	48 8b c1	 mov	 rax, rcx
  00064	44 0f b6 44 24
	50		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  0006a	48 8b d0	 mov	 rdx, rax
  0006d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00072	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN3@resize:

; 3586 :         }
; 3587 :     }

  00077	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3474 :     _NODISCARD const_reference operator[](const size_type _Off) const noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 3475 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3476 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002c	48 39 44 24 48	 cmp	 QWORD PTR _Off$[rsp], rax
  00031	77 02		 ja	 SHORT $LN7@operator
  00033	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 94 0d 00
	00		 mov	 r8d, 3476		; 00000d94H
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	90		 npad	 1
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN11@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN11@operator:
  00071	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007a	41 b9 94 0d 00
	00		 mov	 r9d, 3476		; 00000d94H
  00080	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009b	90		 npad	 1
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000a2	33 c0		 xor	 eax, eax
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 77 ff ff
	ff		 jne	 $LN4@operator

; 3477 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3478 :         return _Mypair._Myval2._Myptr()[_Off];

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000b9	90		 npad	 1
  000ba	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]

; 3479 :     }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3467 :     _NODISCARD reference operator[](const size_type _Off) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 3468 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3469 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002c	48 39 44 24 48	 cmp	 QWORD PTR _Off$[rsp], rax
  00031	77 02		 ja	 SHORT $LN7@operator
  00033	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 8d 0d 00
	00		 mov	 r8d, 3469		; 00000d8dH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	90		 npad	 1
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN11@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN11@operator:
  00071	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007a	41 b9 8d 0d 00
	00		 mov	 r9d, 3469		; 00000d8dH
  00080	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009b	90		 npad	 1
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000a2	33 c0		 xor	 eax, eax
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 77 ff ff
	ff		 jne	 $LN4@operator

; 3470 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3471 :         return _Mypair._Myval2._Myptr()[_Off];

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000b9	90		 npad	 1
  000ba	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]

; 3472 :     }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Count$ = 104
_Ch$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2760 :     basic_string& append(_CRT_GUARDOVERFLOW const size_type _Count, const _Elem _Ch) { // append _Count * _Ch

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2761 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2762 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 68	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 82 00 00
	00		 ja	 $LN2@append

; 2763 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2764 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2765 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	44 0f b6 44 24
	70		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00093	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Count$[rsp]
  00098	48 8b c8	 mov	 rcx, rax
  0009b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2766 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  000a0	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a5	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  000aa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000af	48 03 c8	 add	 rcx, rax
  000b2	48 8b c1	 mov	 rax, rcx
  000b5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000ba	48 03 c8	 add	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c5	48 8b c8	 mov	 rcx, rax
  000c8	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2767 :             return *this;

  000cd	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d2	eb 34		 jmp	 SHORT $LN1@append
$LN2@append:

; 2768 :         }
; 2769 : 
; 2770 :         return _Reallocate_grow_by(

  000d4	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d9	48 8b f8	 mov	 rdi, rax
  000dc	33 c0		 xor	 eax, eax
  000de	b9 01 00 00 00	 mov	 ecx, 1
  000e3	f3 aa		 rep stosb
  000e5	0f b6 44 24 70	 movzx	 eax, BYTE PTR _Ch$[rsp]
  000ea	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Count$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
$LN1@append:

; 2771 :             _Count,
; 2772 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Count,
; 2773 :                 const _Elem _Ch) {
; 2774 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2775 :                 _Traits::assign(_New_ptr + _Old_size, _Count, _Ch);
; 2776 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2777 :             },
; 2778 :             _Count, _Ch);
; 2779 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2688 :     basic_string& operator+=(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2689 :         return append(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2690 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S10$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S10$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2460 :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2461 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2462 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:

; 2463 :         }
; 2464 : 
; 2465 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2466 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT

; 2431 :     void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2432 :         _Tidy_deallocate();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2433 :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003c	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >

; 2434 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  0005b	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00060	48 8b f8	 mov	 rdi, rax
  00063	33 c0		 xor	 eax, eax
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	f3 aa		 rep stosb
  0006c	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00072	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2435 :     }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S12$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S12$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 372  :         const _Elem _Ch) noexcept { // strengthened

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 373  :         // assign _Count * _Ch to [_First, ...)
; 374  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

  00028	0f be 44 24 40	 movsx	 eax, BYTE PTR _Ch$[rsp]
  0002d	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	8b d0		 mov	 edx, eax
  00034	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00039	e8 00 00 00 00	 call	 memset
  0003e	90		 npad	 1

; 375  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1_Ref_count_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Ref_count_base@std@@UEAA@XZ PROC			; std::_Ref_count_base::~_Ref_count_base, COMDAT

; 624  :     virtual ~_Ref_count_base() noexcept {} // TRANSITION, should be non-virtual

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Ref_count_base@std@@UEAA@XZ ENDP			; std::_Ref_count_base::~_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0_Ref_count_base@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Ref_count_base@std@@IEAA@XZ PROC			; std::_Ref_count_base::_Ref_count_base, COMDAT

; 670  : };

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 614  :     _Atomic_counter_t _Uses  = 1;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c7 40 08 01 00
	00 00		 mov	 DWORD PTR [rax+8], 1

; 615  :     _Atomic_counter_t _Weaks = 1;

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [rax+12], 1

; 670  : };

  0001e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00023	5f		 pop	 rdi
  00024	c3		 ret	 0
??0_Ref_count_base@std@@IEAA@XZ ENDP			; std::_Ref_count_base::_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12_compatible@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12_compatible@std@@QEAA@XZ PROC	; std::_Iterator_base12_compatible::_Iterator_base12_compatible, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12_compatible@std@@QEAA@XZ ENDP	; std::_Iterator_base12_compatible::_Iterator_base12_compatible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_typeinfo.h
;	COMDAT ??8type_info@@QEBA_NAEBV0@@Z
_TEXT	SEGMENT
tv70 = 32
this$ = 64
_Other$ = 72
??8type_info@@QEBA_NAEBV0@@Z PROC			; type_info::operator==, COMDAT

; 78   :     {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 79   :         return __std_type_info_compare(&_Data, &_Other._Data) == 0;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Other$[rsp]
  00028	48 83 c0 08	 add	 rax, 8
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	48 83 c1 08	 add	 rcx, 8
  00035	48 8b d0	 mov	 rdx, rax
  00038	e8 00 00 00 00	 call	 __std_type_info_compare
  0003d	90		 npad	 1
  0003e	85 c0		 test	 eax, eax
  00040	75 0a		 jne	 SHORT $LN3@operator
  00042	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv70[rsp], 1
  0004a	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0004c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv70[rsp], 0
$LN4@operator:
  00054	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv70[rsp]

; 80   :     }

  00059	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??8type_info@@QEBA_NAEBV0@@Z ENDP			; type_info::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf
_TEXT	SEGMENT
_Format$ = 48
_ArgList$ = 56
_vscprintf PROC						; COMDAT

; 1675 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00023	4c 8b 44 24 38	 mov	 r8, QWORD PTR _ArgList$[rsp]
  00028	33 d2		 xor	 edx, edx
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Format$[rsp]
  0002f	e8 00 00 00 00	 call	 _vscprintf_l

; 1677 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
_vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vscprintf_l PROC					; COMDAT

; 1658 :     {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00028	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 83 c8 02	 or	 rax, 2
  00034	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00039	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Format$[rsp]
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf
  0005b	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0005f	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00064	7d 0a		 jge	 SHORT $LN3@vscprintf_
  00066	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  0006e	eb 08		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00070	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00074	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vscprintf_:
  00078	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1664 :     }

  0007c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
_vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT vsprintf_s
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_ArgList$ = 88
vsprintf_s PROC						; COMDAT

; 1519 :         {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1520 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _ArgList$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00037	45 33 c9	 xor	 r9d, r9d
  0003a	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Format$[rsp]
  0003f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00049	e8 00 00 00 00	 call	 _vsprintf_s_l

; 1521 :         }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
vsprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsprintf_s_l PROC					; COMDAT

; 1497 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1498 :         int const _Result = __stdio_common_vsprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf_s
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1499 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1500 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1501 : 
; 1502 :         return _Result < 0 ? -1 : _Result;

  00062	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00067	7d 0a		 jge	 SHORT $LN3@vsprintf_s
  00069	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00071	eb 08		 jmp	 SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
  00073	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00077	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vsprintf_s:
  0007b	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1503 :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input_avi.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
