; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG117262 DB	'none', 00H
	ORG $+3
$SG117265 DB	',', 00H
	ORG $+2
$SG117383 DB	0aH, 0aH, 00H
	ORG $+1
$SG117400 DB	'PERF_MONITOR_SRC', 00H
	ORG $+3
$SG117405 DB	'wb', 00H
	ORG $+1
$SG117401 DB	'PERF_MONITOR_PYW', 00H
	ORG $+3
$SG117474 DB	0aH, 00H
	ORG $+2
$SG117417 DB	',cpu (%)', 00H
	ORG $+3
$SG118201 DB	'a', 00H
	ORG $+2
$SG117419 DB	',cpu kernel (%)', 00H
$SG117421 DB	',cpu main thread (%)', 00H
	ORG $+3
$SG117423 DB	',cpu enc thread (%)', 00H
$SG118210 DB	'"', 00H
	ORG $+2
$SG117425 DB	',cpu aud proc thread (%)', 00H
	ORG $+3
$SG118209 DB	'python', 00H
	ORG $+1
$SG118211 DB	'"', 00H
	ORG $+2
$SG117427 DB	',cpu aud enc thread (%)', 00H
$SG117429 DB	',cpu in thread (%)', 00H
	ORG $+1
$SG118212 DB	'"', 00H
	ORG $+2
$SG117431 DB	',cpu out thread (%)', 00H
$SG118213 DB	'"', 00H
	ORG $+2
$SG117433 DB	',gpu load (%)', 00H
	ORG $+2
$SG117435 DB	',gpu clock (MHz)', 00H
	ORG $+3
$SG118218 DB	'%d', 00H
	ORG $+1
$SG117437 DB	',mfx load (%)', 00H
	ORG $+2
$SG117439 DB	',video encoder load (%)', 00H
$SG117441 DB	',video decoder load (%)', 00H
$SG117443 DB	',video engine clock (MHz)', 00H
	ORG $+2
$SG118219 DB	'-i', 00H
	ORG $+1
$SG117445 DB	',pcie link,pcie tx, pci rx', 00H
	ORG $+1
$SG118409 DB	'%lf', 00H
$SG117447 DB	',queue vid in', 00H
	ORG $+2
$SG117449 DB	',queue aud in', 00H
	ORG $+2
$SG117451 DB	',queue vid out', 00H
	ORG $+1
$SG117453 DB	',queue aud out', 00H
	ORG $+1
$SG117455 DB	',mem private (MB)', 00H
	ORG $+2
$SG118443 DB	',%d', 00H
$SG117457 DB	',mem virtual (MB)', 00H
	ORG $+2
$SG118445 DB	',%d', 00H
$SG117459 DB	',frame in', 00H
	ORG $+2
$SG118447 DB	',%d', 00H
$SG117461 DB	',frame out', 00H
	ORG $+1
$SG118449 DB	',%d', 00H
$SG117463 DB	',enc speed (fps)', 00H
	ORG $+3
$SG118451 DB	',%.2lf', 00H
	ORG $+1
$SG118455 DB	',%d', 00H
$SG117465 DB	',enc speed avg (fps)', 00H
	ORG $+3
$SG117467 DB	',bitrate (kbps)', 00H
$SG117469 DB	',bitrate avg (kbps)', 00H
$SG118457 DB	',%d', 00H
$SG117471 DB	',read (MB/s)', 00H
	ORG $+3
$SG117473 DB	',write (MB/s)', 00H
	ORG $+2
$SG118203 DB	'Failed to open performance monitor log file: %s', 0aH, 00H
	ORG $+3
$SG118453 DB	',%.2lf', 00H
	ORG $+1
$SG118470 DB	0aH, 00H
	ORG $+2
$SG118204 DB	'performance monitoring disabled.', 0aH, 00H
	ORG $+2
$SG110947 DB	'yuv422', 00H
	ORG $+1
$SG110975 DB	'rgb', 00H
$SG118208 DB	'qsvencc_perf_monitor_%d.pyw', 00H
$SG118411 DB	',%lf', 00H
	ORG $+7
$SG118216 DB	'Failed to create file qsvencc_perf_monitor.pyw for perfo'
	DB	'rmance monitor plot.', 0aH, 00H
	ORG $+2
$SG118217 DB	'performance monitor plot disabled.', 0aH, 00H
$SG110977 DB	'gbr', 00H
$SG118222 DB	'Failed to run performance monitor plot.', 0aH, 00H
	ORG $+3
$SG110949 DB	'yuv444', 00H
	ORG $+1
$SG110980 DB	'y8', 00H
	ORG $+1
$SG118223 DB	'performance monitor plot disabled.', 0aH, 00H
$SG111925 DB	'VP8', 00H
$SG118224 DB	'Performace Monitor: %s', 0aH, 00H
$SG118225 DB	'Performace Plot   : %s', 0aH, 00H
$SG118413 DB	',%lf', 00H
	ORG $+3
$SG118415 DB	',%lf', 00H
	ORG $+3
$SG118417 DB	',%lf', 00H
	ORG $+3
$SG118419 DB	',%lf', 00H
	ORG $+3
$SG118421 DB	',%lf', 00H
	ORG $+3
$SG118423 DB	',%lf', 00H
	ORG $+3
$SG118425 DB	',%lf', 00H
	ORG $+3
$SG118427 DB	',%lf', 00H
	ORG $+3
$SG118429 DB	',%lf', 00H
	ORG $+3
$SG118431 DB	',%lf', 00H
	ORG $+3
$SG118433 DB	',%lf', 00H
	ORG $+3
$SG118435 DB	',%lf', 00H
	ORG $+3
$SG118437 DB	',%lf', 00H
	ORG $+3
$SG118439 DB	',PCIe %dx%d', 00H
$SG118440 DB	',%lf', 00H
	ORG $+3
$SG118441 DB	',%lf', 00H
	ORG $+3
$SG118459 DB	',%lf', 00H
	ORG $+3
$SG118461 DB	',%lf', 00H
	ORG $+3
$SG118463 DB	',%lf', 00H
	ORG $+3
$SG118465 DB	',%lf', 00H
	ORG $+3
$SG118467 DB	',%lf', 00H
	ORG $+3
$SG118469 DB	',%lf', 00H
	ORG $+3
$SG110969 DB	'rgb24r', 00H
	ORG $+1
$SG111927 DB	'VP9', 00H
$SG118491 DB	'Error occured running python for perf-monitor-plot.', 0aH
	DB	00H
	ORG $+3
$SG110943 DB	'Invalid', 00H
$SG110944 DB	'nv12', 00H
	ORG $+3
$SG110945 DB	'yv12', 00H
	ORG $+3
$SG110946 DB	'yuy2', 00H
	ORG $+3
$SG110948 DB	'nv16', 00H
	ORG $+3
$SG110950 DB	'yv12(9bit)', 00H
	ORG $+1
$SG112538 DB	'fcc', 00H
$SG110951 DB	'yv12(10bit)', 00H
$SG112539 DB	'GBR', 00H
$SG110952 DB	'yv12(12bit)', 00H
$SG112852 DB	'pal', 00H
$SG110953 DB	'yv12(14bit)', 00H
$SG112854 DB	'mac', 00H
$SG110954 DB	'yv12(16bit)', 00H
$SG110955 DB	'p010', 00H
	ORG $+3
$SG110970 DB	'rgb32r', 00H
	ORG $+1
$SG112856 DB	'0', 00H
	ORG $+2
$SG110956 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG110957 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG110958 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG110959 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG110960 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG110961 DB	'p210', 00H
	ORG $+3
$SG110962 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG110963 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG110964 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG110965 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG110966 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG110967 DB	'yuva444', 00H
$SG110968 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG110971 DB	'rgb24', 00H
	ORG $+2
$SG110972 DB	'rgb32', 00H
	ORG $+2
$SG110973 DB	'bgr24', 00H
	ORG $+2
$SG110974 DB	'bgr32', 00H
	ORG $+2
$SG110976 DB	'rgba', 00H
	ORG $+3
$SG110978 DB	'gbra', 00H
	ORG $+3
$SG110979 DB	'yc48', 00H
	ORG $+3
$SG110981 DB	'yc16', 00H
	ORG $+3
$SG111913 DB	'H.264/AVC', 00H
	ORG $+2
$SG112690 DB	'bt470m', 00H
	ORG $+1
$SG112857 DB	'1', 00H
	ORG $+2
$SG111915 DB	'H.265/HEVC', 00H
	ORG $+1
$SG111917 DB	'MPEG2', 00H
	ORG $+2
$SG111919 DB	'MPEG1', 00H
	ORG $+2
$SG111921 DB	'VC-1', 00H
	ORG $+3
$SG111923 DB	'MPEG4', 00H
	ORG $+2
$SG112693 DB	'linear', 00H
	ORG $+1
$SG112858 DB	'2', 00H
	ORG $+2
$SG111929 DB	'unknown', 00H
$SG112036 DB	'unknown', 00H
$SG112531 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112531	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112532
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112533
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112534
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112535
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112536
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112537
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112538
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112539
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112540
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112541
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112542
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112543
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112544
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112545
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112532 DB	'auto', 00H
	ORG $+3
$SG112533 DB	'bt709', 00H
	ORG $+2
$SG112534 DB	'smpte170m', 00H
	ORG $+2
$SG112694 DB	'log100', 00H
	ORG $+1
$SG112859 DB	'3', 00H
	ORG $+2
$SG112535 DB	'bt470bg', 00H
$SG112536 DB	'smpte240m', 00H
	ORG $+2
$SG112537 DB	'YCgCo', 00H
	ORG $+2
$SG112695 DB	'log316', 00H
	ORG $+1
$SG112860 DB	'4', 00H
	ORG $+2
$SG112540 DB	'bt2020nc', 00H
	ORG $+3
$SG112544 DB	'ictco', 00H
	ORG $+2
$SG112839 DB	'bt470m', 00H
	ORG $+1
$SG112861 DB	'5', 00H
	ORG $+2
$SG112541 DB	'bt2020c', 00H
$SG112542 DB	'derived-ncl', 00H
$SG112865 DB	'tv', 00H
	ORG $+1
$SG112543 DB	'derived-cl', 00H
	ORG $+1
$SG112866 DB	'pc', 00H
	ORG $+1
$SG112545 DB	'2100-lms', 00H
	ORG $+3
$SG112686 DB	'undef', 00H
	ORG $+6
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG112686	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112687
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112688
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112689
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112690
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112691
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112692
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112693
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112694
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112695
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112696
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112697
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112698
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112699
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112700
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG112701
	DD	010H
	ORG $+4
	DQ	FLAT:$SG112702
	DD	011H
	ORG $+4
	DQ	FLAT:$SG112703
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112687 DB	'auto', 00H
	ORG $+3
$SG112688 DB	'bt709', 00H
	ORG $+2
$SG112689 DB	'smpte170m', 00H
	ORG $+2
$SG112843 DB	'bt2020', 00H
	ORG $+1
$SG113955 DB	'cfr', 00H
$SG112691 DB	'bt470bg', 00H
$SG112692 DB	'smpte240m', 00H
	ORG $+2
$SG113956 DB	'vfr', 00H
$SG112696 DB	'iec61966-2-4', 00H
	ORG $+3
$SG112697 DB	'bt1361e', 00H
$SG112698 DB	'iec61966-2-1', 00H
	ORG $+3
$SG112699 DB	'bt2020-10', 00H
	ORG $+2
$SG113959 DB	'swr', 00H
$SG112700 DB	'bt2020-12', 00H
	ORG $+2
$SG130638 DB	'%s', 00H
	ORG $+1
$SG112701 DB	'smpte2084', 00H
	ORG $+2
$SG114653 DB	'all', 00H
$SG112702 DB	'smpte428', 00H
	ORG $+3
$SG112835 DB	'undef', 00H
	ORG $+2
$SG114654 DB	'cpu', 00H
$SG112703 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG112835	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112836
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112837
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112838
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112839
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112840
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112841
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112842
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112843
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112844
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112845
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112846
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112847
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112836 DB	'auto', 00H
	ORG $+3
$SG112837 DB	'bt709', 00H
	ORG $+2
$SG112838 DB	'smpte170m', 00H
	ORG $+2
$SG114659 DB	'cpu_in', 00H
	ORG $+1
$SG114664 DB	'mem', 00H
$SG112840 DB	'bt470bg', 00H
$SG112841 DB	'smpte240m', 00H
	ORG $+2
$SG112842 DB	'film', 00H
	ORG $+3
$SG112844 DB	'st428', 00H
	ORG $+2
$SG114667 DB	'io', 00H
	ORG $+1
$SG112845 DB	'st431-2', 00H
$SG112846 DB	'st432-1', 00H
$SG112847 DB	'ebu3213-e', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG112849	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112850
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112851
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112852
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112853
	DD	03H
	ORG $+4
	DQ	FLAT:$SG112854
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112849 DB	'undef', 00H
	ORG $+2
$SG112850 DB	'ntsc', 00H
	ORG $+3
$SG112851 DB	'component', 00H
	ORG $+2
$SG112853 DB	'secam', 00H
	ORG $+2
$SG114670 DB	'fps', 00H
$SG112863 DB	'limited', 00H
$SG112864 DB	'full', 00H
	ORG $+3
$SG113948 DB	'trace', 00H
	ORG $+2
$SG113949 DB	'debug', 00H
	ORG $+2
$SG113950 DB	'more', 00H
	ORG $+3
$SG113951 DB	'info', 00H
	ORG $+3
$SG113952 DB	'warn', 00H
	ORG $+3
$SG113953 DB	'error', 00H
	ORG $+2
$SG113957 DB	'forcecfr', 00H
	ORG $+3
$SG113960 DB	'soxr', 00H
	ORG $+3
$SG114675 DB	'gpu', 00H
$SG130637 DB	'invalid argument', 00H
	ORG $+7
$SG130642 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG130639 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG114658 DB	'cpu_enc', 00H
$SG130640 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG130641 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG130794 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG114660 DB	'cpu_aud', 00H
?list_pref_monitor@@3QBUCX_DESC@@B DQ FLAT:$SG114653	; list_pref_monitor
	DD	0ffffffffH
	ORG $+4
	DQ	FLAT:$SG114654
	DD	0cc03H
	ORG $+4
	DQ	FLAT:$SG114655
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114656
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114657
	DD	0400H
	ORG $+4
	DQ	FLAT:$SG114658
	DD	0800H
	ORG $+4
	DQ	FLAT:$SG114659
	DD	08000H
	ORG $+4
	DQ	FLAT:$SG114660
	DD	03000H
	ORG $+4
	DQ	FLAT:$SG114661
	DD	01000H
	ORG $+4
	DQ	FLAT:$SG114662
	DD	02000H
	ORG $+4
	DQ	FLAT:$SG114663
	DD	04000H
	ORG $+4
	DQ	FLAT:$SG114664
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG114665
	DD	04H
	ORG $+4
	DQ	FLAT:$SG114666
	DD	08H
	ORG $+4
	DQ	FLAT:$SG114667
	DD	0300H
	ORG $+4
	DQ	FLAT:$SG114668
	DD	0100H
	ORG $+4
	DQ	FLAT:$SG114669
	DD	0200H
	ORG $+4
	DQ	FLAT:$SG114670
	DD	010H
	ORG $+4
	DQ	FLAT:$SG114671
	DD	020H
	ORG $+4
	DQ	FLAT:$SG114672
	DD	040H
	ORG $+4
	DQ	FLAT:$SG114673
	DD	080H
	ORG $+4
	DQ	FLAT:$SG114674
	DD	020000H
	ORG $+4
	DQ	FLAT:$SG114675
	DD	01e0c0000H
	ORG $+4
	DQ	FLAT:$SG114676
	DD	040000H
	ORG $+4
	DQ	FLAT:$SG114677
	DD	080000H
	ORG $+4
	DQ	FLAT:$SG114678
	DD	04000000H
	ORG $+4
	DQ	FLAT:$SG114679
	DD	04000000H
	ORG $+4
	DQ	FLAT:$SG114680
	DD	010000000H
	ORG $+4
	DQ	FLAT:$SG114681
	DD	02000000H
	ORG $+4
	DQ	FLAT:$SG114682
	DD	0f00000H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114655 DB	'cpu_total', 00H
	ORG $+6
$SG114656 DB	'cpu_kernel', 00H
	ORG $+5
$SG114657 DB	'cpu_main', 00H
	ORG $+3
$SG114682 DB	'queue', 00H
	ORG $+6
$SG114661 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG114662 DB	'cpu_aud_enc', 00H
	ORG $+4
$SG114663 DB	'cpu_out', 00H
$SG114665 DB	'mem_private', 00H
	ORG $+4
$SG114666 DB	'mem_virtual', 00H
	ORG $+4
$SG114668 DB	'io_read', 00H
$SG114669 DB	'io_write', 00H
	ORG $+7
$SG114671 DB	'fps_avg', 00H
$SG114672 DB	'bitrate', 00H
$SG114673 DB	'bitrate_avg', 00H
	ORG $+4
$SG114674 DB	'frame_out', 00H
	ORG $+6
$SG114676 DB	'gpu_load', 00H
	ORG $+7
$SG114677 DB	'gpu_clock', 00H
	ORG $+6
$SG114678 DB	'vee_load', 00H
	ORG $+7
$SG114679 DB	'ved_load', 00H
	ORG $+7
$SG114680 DB	'pcie_load', 00H
	ORG $+6
$SG114681 DB	've_clock', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	fprintf
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
PUBLIC	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
PUBLIC	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
PUBLIC	??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
PUBLIC	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
PUBLIC	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?_Incref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Incref
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	??0thread@std@@QEAA@XZ				; std::thread::thread
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	??4thread@std@@QEAAAEAV01@$$QEAV01@@Z		; std::thread::operator=
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z		; fp_deleter::operator()
PUBLIC	??Rhandle_deleter@@QEBAXPEAX@Z			; handle_deleter::operator()
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0CPerfMonitor@@QEAA@XZ			; CPerfMonitor::CPerfMonitor
PUBLIC	?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z ; CPerfMonitor::init
PUBLIC	??1CPerfMonitor@@QEAA@XZ			; CPerfMonitor::~CPerfMonitor
PUBLIC	?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z ; CPerfMonitor::SetEncStatus
PUBLIC	?SetThreadHandles@CPerfMonitor@@QEAAXPEAX0000@Z	; CPerfMonitor::SetThreadHandles
PUBLIC	?clear@CPerfMonitor@@QEAAXXZ			; CPerfMonitor::clear
PUBLIC	?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z	; CPerfMonitor::createPerfMpnitorPyw
PUBLIC	?check@CPerfMonitor@@IEAAXXZ			; CPerfMonitor::check
PUBLIC	?run@CPerfMonitor@@IEAAXXZ			; CPerfMonitor::run
PUBLIC	?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write_header
PUBLIC	?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z	; CPerfMonitor::write
PUBLIC	?loader@CPerfMonitor@@KAXPEAX@Z			; CPerfMonitor::loader
PUBLIC	?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; CPerfMonitor::SelectedCounters
PUBLIC	??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<void,handle_deleter>::operator=
PUBLIC	??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ	; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
PUBLIC	?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
PUBLIC	??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<void,handle_deleter>::operator bool
PUBLIC	?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ ; std::unique_ptr<void,handle_deleter>::release
PUBLIC	?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z ; std::unique_ptr<void,handle_deleter>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
PUBLIC	??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z ; std::default_delete<RGYPipeProcess>::operator()
PUBLIC	??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator=
PUBLIC	??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
PUBLIC	??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator->
PUBLIC	?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::get
PUBLIC	??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator bool
PUBLIC	?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::release
PUBLIC	?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first
PUBLIC	?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get
PUBLIC	??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
PUBLIC	?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap
PUBLIC	??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
PUBLIC	??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
PUBLIC	??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
PUBLIC	??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<EncodeStatus>::operator=
PUBLIC	?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
PUBLIC	??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ	; std::shared_ptr<EncodeStatus>::operator bool
PUBLIC	??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<_iobuf,fp_deleter>::operator=
PUBLIC	??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
PUBLIC	?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
PUBLIC	??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
PUBLIC	?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::release
PUBLIC	?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset
PUBLIC	?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
PUBLIC	?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
PUBLIC	??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
PUBLIC	?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ	; std::_Ptr_base<RGYLog>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap
PUBLIC	??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
PUBLIC	??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z	; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
PUBLIC	??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
PUBLIC	??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<RGYLog>::operator=
PUBLIC	?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
PUBLIC	?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ	; std::shared_ptr<RGYLog>::reset
PUBLIC	?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ	; EncodeStatus::getStartTimeMicroSec
PUBLIC	?getEncStarted@EncodeStatus@@QEAA_NXZ		; EncodeStatus::getEncStarted
PUBLIC	?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ ; EncodeStatus::GetEncodeData
PUBLIC	??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
PUBLIC	??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
PUBLIC	??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>
PUBLIC	??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
PUBLIC	??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
PUBLIC	??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
PUBLIC	??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>
PUBLIC	??0?$allocator@PEBD@std@@QEAA@XZ		; std::allocator<char const *>::allocator<char const *>
PUBLIC	?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate
PUBLIC	?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z	; std::allocator<char const *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size
PUBLIC	??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> >
PUBLIC	??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
PUBLIC	?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back
PUBLIC	?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back
PUBLIC	?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
PUBLIC	?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::capacity
PUBLIC	?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ; std::vector<char const *,std::allocator<char const *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
PUBLIC	?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
PUBLIC	??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>
PUBLIC	??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
PUBLIC	??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
PUBLIC	??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z	; std::move<char const * &>
PUBLIC	??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const *>
PUBLIC	??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z	; std::forward<char const *>
PUBLIC	??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const *>
PUBLIC	??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z	; std::_Unfancy<char const *>
PUBLIC	??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const *>
PUBLIC	??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>
PUBLIC	??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>
PUBLIC	??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z	; std::forward<char const * const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>
PUBLIC	??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>
PUBLIC	??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z ; std::exchange<_iobuf *,_iobuf * &>
PUBLIC	??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<_iobuf,fp_deleter> >
PUBLIC	??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z ; std::forward<fp_deleter>
PUBLIC	??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z ; std::exchange<RGYPipeProcess *,RGYPipeProcess * &>
PUBLIC	??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> > >
PUBLIC	??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z ; std::forward<std::default_delete<RGYPipeProcess> >
PUBLIC	??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z	; std::exchange<void *,void * &>
PUBLIC	??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::forward<handle_deleter>
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>
PUBLIC	??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z ; std::exchange<_iobuf *,_iobuf *>
PUBLIC	??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z ; std::_Ptr_base<EncodeStatus>::_Copy_construct_from<EncodeStatus>
PUBLIC	??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z ; std::exchange<RGYPipeProcess *,RGYPipeProcess *>
PUBLIC	??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z ; std::exchange<void *,void *>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ; std::_Pocca<std::allocator<char> >
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Destroy_range<std::allocator<char const *> >
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>
PUBLIC	??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>
PUBLIC	??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><_iobuf * &>
PUBLIC	??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><RGYPipeProcess * &>
PUBLIC	??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ; std::forward<void (__cdecl&)(void *)>
PUBLIC	??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
PUBLIC	??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>
PUBLIC	??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >::operator()
PUBLIC	??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
PUBLIC	??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Get_first
PUBLIC	??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>
PUBLIC	??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::move<CPerfMonitor * &>
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
PUBLIC	??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
PUBLIC	??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *>
PUBLIC	??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z ; <lambda_f3a66ab6a0570788f31503db83886f49>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>
PUBLIC	??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>
PUBLIC	??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
PUBLIC	??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z ; std::forward<_iobuf * &>
PUBLIC	??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z ; std::forward<RGYPipeProcess * &>
PUBLIC	??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><void (__cdecl&)(void *),CPerfMonitor *,0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,0>
PUBLIC	??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z ; std::get<0,void (__cdecl*)(void *),CPerfMonitor *>
PUBLIC	??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(void *)>
PUBLIC	??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z ; std::get<1,void (__cdecl*)(void *),CPerfMonitor *>
PUBLIC	??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(void *)>
PUBLIC	??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CPerfMonitor *>
PUBLIC	??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::invoke<void (__cdecl*)(void *),CPerfMonitor *>
PUBLIC	??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z	; std::_Get_unwrapped<char const *>
PUBLIC	??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z ; std::_Copy_memmove<char const * *,char const * *>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
PUBLIC	??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
PUBLIC	??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><std::_Exact_args_t,void (__cdecl&)(void *),CPerfMonitor *,0>
PUBLIC	??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1><std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>
PUBLIC	??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>
PUBLIC	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
PUBLIC	??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z ; std::tuple<CPerfMonitor *>::tuple<CPerfMonitor *><std::_Exact_args_t,CPerfMonitor *,0>
PUBLIC	??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl&)(void *)>
PUBLIC	??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>
PUBLIC	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>
PUBLIC	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z ; std::_Tuple_val<CPerfMonitor *>::_Tuple_val<CPerfMonitor *><CPerfMonitor *>
PUBLIC	??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_R0?AVRGYPipeProcess@@@8			; RGYPipeProcess `RTTI Type Descriptor'
PUBLIC	??_R0?AVRGYPipeProcessWin@@@8			; RGYPipeProcessWin `RTTI Type Descriptor'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3eb0c6f7a0b5ed8d
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@40c3880000000000
PUBLIC	__real@412a5e0000000000
PUBLIC	__real@412e848000000000
PUBLIC	__real@4130000000000000
PUBLIC	__real@41cdcd6500000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp_fopen_s:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fopen:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_clock:PROC
EXTRN	_Xtime_get_ticks:PROC
EXTRN	_Query_perf_counter:PROC
EXTRN	_Query_perf_frequency:PROC
EXTRN	__imp_terminate:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	strlen:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	__imp__beginthreadex:PROC
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_sleep:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_GetProcessTimes:PROC
EXTRN	__imp_GetCurrentProcess:PROC
EXTRN	__imp_GetExitCodeThread:PROC
EXTRN	__imp_GetProcessId:PROC
EXTRN	__imp_GetThreadTimes:PROC
EXTRN	__imp_GetSystemTime:PROC
EXTRN	__imp_GetModuleFileNameA:PROC
EXTRN	__imp_GetModuleHandleA:PROC
EXTRN	__imp_LoadResource:PROC
EXTRN	__imp_LockResource:PROC
EXTRN	__imp_SizeofResource:PROC
EXTRN	__imp_GetProcessIoCounters:PROC
EXTRN	__imp_FindResourceA:PROC
EXTRN	__imp_SystemTimeToFileTime:PROC
EXTRN	__imp_WaitForInputIdle:PROC
EXTRN	__imp_PathCombineA:PROC
EXTRN	__imp_PathRemoveFileSpecA:PROC
EXTRN	?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z:PROC	; get_cpu_info
EXTRN	?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ:PROC ; strsprintf
EXTRN	??0RGYPipeProcessWin@@QEAA@XZ:PROC		; RGYPipeProcessWin::RGYPipeProcessWin
EXTRN	?getProcessInfo@RGYPipeProcessWin@@QEAAAEBU_PROCESS_INFORMATION@@XZ:PROC ; RGYPipeProcessWin::getProcessInfo
EXTRN	?get_gpuz_info@@YAHPEAUGPUZ_SH_MEM@@@Z:PROC	; get_gpuz_info
EXTRN	?gpu_core_clock@@YANPEAUGPUZ_SH_MEM@@@Z:PROC	; gpu_core_clock
EXTRN	?gpu_load@@YANPEAUGPUZ_SH_MEM@@@Z:PROC		; gpu_load
EXTRN	?video_engine_load@@YANPEAUGPUZ_SH_MEM@@PEA_N@Z:PROC ; video_engine_load
EXTRN	K32GetProcessMemoryInfo:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__RTDynamicCast:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fprintf DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$fprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Incref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0thread@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$??0thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+152
	DD	imagerel $unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?joinable@thread@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$?joinable@thread@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z DD imagerel $LN9
	DD	imagerel $LN9+540
	DD	imagerel $unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+71
	DD	imagerel $unwind$??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Rhandle_deleter@@QEBAXPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??Rhandle_deleter@@QEBAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DD imagerel $LN8
	DD	imagerel $LN8+289
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??0CPerfMonitor@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+508
	DD	imagerel $unwind$??0CPerfMonitor@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA+45
	DD	imagerel $unwind$?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z DD imagerel $LN35
	DD	imagerel $LN35+3528
	DD	imagerel $unwind$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$pdata$?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD imagerel ?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DD	imagerel ?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1CPerfMonitor@@QEAA@XZ DD imagerel $LN11
	DD	imagerel $LN11+205
	DD	imagerel $unwind$??1CPerfMonitor@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA
$pdata$?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA DD imagerel ?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DD	imagerel ?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z DD imagerel $LN4
	DD	imagerel $LN4+215
	DD	imagerel $unwind$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA DD imagerel ?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?SetThreadHandles@CPerfMonitor@@QEAAXPEAX0000@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?SetThreadHandles@CPerfMonitor@@QEAAXPEAX0000@Z
$pdata$?clear@CPerfMonitor@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+419
	DD	imagerel $unwind$?clear@CPerfMonitor@@QEAAXXZ
$pdata$?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z DD imagerel $LN11
	DD	imagerel $LN11+390
	DD	imagerel $unwind$?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z
$pdata$?check@CPerfMonitor@@IEAAXXZ DD imagerel $LN29
	DD	imagerel $LN29+3576
	DD	imagerel $unwind$?check@CPerfMonitor@@IEAAXXZ
$pdata$?run@CPerfMonitor@@IEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+480
	DD	imagerel $unwind$?run@CPerfMonitor@@IEAAXXZ
$pdata$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DD imagerel $LN35
	DD	imagerel $LN35+1169
	DD	imagerel $unwind$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DD imagerel $LN66
	DD	imagerel $LN66+3698
	DD	imagerel $unwind$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$pdata$?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD imagerel ?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DD	imagerel ?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA+38
	DD	imagerel $unwind$?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?loader@CPerfMonitor@@KAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?loader@CPerfMonitor@@KAXPEAX@Z
$pdata$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD imagerel $LN12
	DD	imagerel $LN12+436
	DD	imagerel $unwind$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA DD imagerel ?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA
	DD	imagerel ?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA+52
	DD	imagerel $unwind$?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA
$pdata$?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA DD imagerel ?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA
	DD	imagerel ?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getEncStarted@EncodeStatus@@QEAA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?getEncStarted@EncodeStatus@@QEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEBD@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@PEBD@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+269
	DD	imagerel $unwind$?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN7
	DD	imagerel $LN7+258
	DD	imagerel $unwind$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA DD imagerel ?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z DD imagerel ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z
	DD	imagerel ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z+113
	DD	imagerel $unwind$??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+173
	DD	imagerel $unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN7
	DD	imagerel $LN7+172
	DD	imagerel $unwind$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA DD imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z DD imagerel $LN3
	DD	imagerel $LN3+185
	DD	imagerel $unwind$??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z DD imagerel $LN6
	DD	imagerel $LN6+564
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+329
	DD	imagerel $unwind$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+239
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN5
	DD	imagerel $LN5+128
	DD	imagerel $unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DD imagerel $LN9
	DD	imagerel $LN9+224
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+246
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+233
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+239
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+261
	DD	imagerel $unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+283
	DD	imagerel $unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+36
	DD	imagerel $unwind$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT __real@41cdcd6500000000
CONST	SEGMENT
__real@41cdcd6500000000 DQ 041cdcd6500000000r	; 1e+09
CONST	ENDS
;	COMDAT __real@4130000000000000
CONST	SEGMENT
__real@4130000000000000 DQ 04130000000000000r	; 1.04858e+06
CONST	ENDS
;	COMDAT __real@412e848000000000
CONST	SEGMENT
__real@412e848000000000 DQ 0412e848000000000r	; 1e+06
CONST	ENDS
;	COMDAT __real@412a5e0000000000
CONST	SEGMENT
__real@412a5e0000000000 DQ 0412a5e0000000000r	; 864000
CONST	ENDS
;	COMDAT __real@40c3880000000000
CONST	SEGMENT
__real@40c3880000000000 DQ 040c3880000000000r	; 10000
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3eb0c6f7a0b5ed8d
CONST	SEGMENT
__real@3eb0c6f7a0b5ed8d DQ 03eb0c6f7a0b5ed8dr	; 1e-06
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_R0?AVRGYPipeProcessWin@@@8
data$r	SEGMENT
??_R0?AVRGYPipeProcessWin@@@8 DQ FLAT:??_7type_info@@6B@ ; RGYPipeProcessWin `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYPipeProcessWin@@', 00H
data$r	ENDS
;	COMDAT ??_R0?AVRGYPipeProcess@@@8
data$r	SEGMENT
??_R0?AVRGYPipeProcess@@@8 DQ FLAT:??_7type_info@@6B@	; RGYPipeProcess `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYPipeProcess@@', 00H
data$r	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD 022c01H
	DD	070145218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 040H
	DD	imagerel $ip2state$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD 022819H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DD 032901H
	DD	0180112H
	DD	0700bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$0 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	065H
	DB	06eH
	DB	05fH
	DB	064H
	DB	061H
	DB	079H
	DB	073H
	DB	00H
	ORG $+6
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$1 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	065H
	DB	06eH
	DB	05fH
	DB	064H
	DB	061H
	DB	079H
	DB	073H
	DB	05fH
	DB	064H
	DB	00H
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$2 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	030H
	DB	00H
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$3 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	057H
	DB	068H
	DB	06fH
	DB	06cH
	DB	065H
	DB	05fH
	DB	073H
	DB	065H
	DB	063H
	DB	06fH
	DB	06eH
	DB	064H
	DB	073H
	DB	00H
	ORG $+1
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcVarDesc DD 088H ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$0
	ORG $+192
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcFrameData DD 04H ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DD	00H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z DD 033301H
	DD	014011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z$rtcVarDesc DD 078H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	0b8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
	DD	imagerel $ip2state$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcName$0 DB 05fH ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>
	DB	046H
	DB	06eH
	DB	056H
	DB	061H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+8
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcVarDesc DD 028H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>
	DD	08H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcName$0
	ORG $+48
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcFrameData DD 01H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>
	DD	00H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 04H
	DB	00H
	DB	00H
	DB	'U', 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
	DD	imagerel $ip2state$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD 022811H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z DD 023319H
	DD	07006f20dH
	DD	imagerel __GSHandlerCheck
	DD	078H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$0 DB 05fH ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DB	04eH
	DB	06fH
	DB	077H
	DB	00H
	ORG $+3
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$1 DB 05fH ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DB	054H
	DB	067H
	DB	074H
	DB	00H
	ORG $+3
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcVarDesc DD 048H ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DD	010H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$0
	ORG $+96
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcFrameData DD 02H ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DD	00H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0 DB 05fH ; std::swap<EncodeStatus *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc DD 028H ; std::swap<EncodeStatus *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData DD 01H ; std::swap<EncodeStatus *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0 DB 05fH ; std::swap<RGYLog *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc DD 028H ; std::swap<RGYLog *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData DD 01H ; std::swap<RGYLog *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b4H
	DB	02H
	DB	0fcH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
	DD	imagerel $ip2state$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z DD 022811H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z$rtcName$0 DB 05fH ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>
	DB	044H
	DB	065H
	DB	063H
	DB	061H
	DB	079H
	DB	05fH
	DB	063H
	DB	06fH
	DB	070H
	DB	069H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z$rtcVarDesc DD 038H ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>
	DD	08H
	DQ	FLAT:??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z$rtcName$0
	ORG $+48
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z$rtcFrameData DD 01H ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>
	DD	00H
	DQ	FLAT:??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcName$0 DB 05fH ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcVarDesc DD 024H ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcFrameData DD 01H ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEBD@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z DB 040H
	DD	imagerel $ip2state$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ DD 020c01H
	DD	0600b700cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getEncStarted@EncodeStatus@@QEAA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
	DD	imagerel $ip2state$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z
	DD	imagerel $ip2state$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
xdata	SEGMENT
$unwind$??0CPerfMonitor@@QEAA@XZ DD 033619H
	DD	018010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0CPerfMonitor@@QEAA@XZ
	DD	0b2H
$cppxdata$??0CPerfMonitor@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CPerfMonitor@@QEAA@XZ
	DD	imagerel $ip2state$??0CPerfMonitor@@QEAA@XZ
$stateUnwindMap$??0CPerfMonitor@@QEAA@XZ DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA
$ip2state$??0CPerfMonitor@@QEAA@XZ DB 014H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	'.'
	DB	04H
	DB	'.'
	DB	06H
	DB	'.'
	DB	08H
	DB	'.'
	DB	0aH
	DB	'.'
	DB	0cH
	DB	'.'
	DB	0eH
	DB	'.'
	DB	010H
	DB	'i', 03H
	DB	00H
$unwind$?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z DD 034519H
	DD	019c011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z
	DD	0cd2H
$cppxdata$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z
	DD	imagerel $ip2state$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z
$stateUnwindMap$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z DB 02aH
	DB	0eH
	DD	imagerel ?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	056H
	DD	imagerel ?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	0ddH
	DB	02H
	DD	imagerel ?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	01dH
	DB	05H
	DD	imagerel ?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	07dH
	DB	05H
	DD	imagerel ?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
	DB	0ddH
	DB	05H
	DD	imagerel ?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA
$ip2state$?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z DB 'Z'
	DB	00H
	DB	00H
	DB	08aH
	DB	06H
	DB	'Q', 06H
	DB	08H
	DB	'>'
	DB	06H
	DB	089H, 03H
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
	DB	'2'
	DB	06H
	DB	'N'
	DB	0aH
	DB	'|'
	DB	06H
	DB	'Z'
	DB	0cH
	DB	'>'
	DB	06H
	DB	081H, 02H
	DB	0eH
	DB	'H'
	DB	06H
	DB	0ecH
	DB	010H
	DB	'X'
	DB	012H
	DB	'X'
	DB	014H
	DB	'j'
	DB	016H
	DB	'j'
	DB	018H
	DB	','
	DB	016H
	DB	01cH
	DB	014H
	DB	01cH
	DB	012H
	DB	01cH
	DB	010H
	DB	'r'
	DB	01aH
	DB	080H
	DB	01cH
	DB	'p'
	DB	01eH
	DB	'j'
	DB	' '
	DB	':'
	DB	01eH
	DB	01cH
	DB	01cH
	DB	01cH
	DB	01aH
	DB	01cH
	DB	010H
	DB	0b5H, 03H
	DB	'"'
	DB	01cH
	DB	'$'
	DB	0a1H, 08H
	DB	'"'
	DB	01cH
	DB	010H
	DB	01cH
	DB	06H
	DB	0d9H, 04H
	DB	'&'
	DB	086H
	DB	06H
	DB	0bcH
	DB	'('
	DB	086H
	DB	06H
	DB	0c5H, 02H
	DB	'*'
	DB	'>'
	DB	06H
	DB	'0'
	DB	04H
	DB	01cH
	DB	02H
	DB	01cH
	DB	00H
$cppxdata$??1CPerfMonitor@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CPerfMonitor@@QEAA@XZ
	DD	imagerel $ip2state$??1CPerfMonitor@@QEAA@XZ
$stateUnwindMap$??1CPerfMonitor@@QEAA@XZ DB 010H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA
$ip2state$??1CPerfMonitor@@QEAA@XZ DB 014H
	DB	00H
	DB	00H
	DB	'<'
	DB	010H
	DB	016H
	DB	0eH
	DB	'('
	DB	0cH
	DB	'('
	DB	0aH
	DB	'('
	DB	08H
	DB	'('
	DB	06H
	DB	'('
	DB	04H
	DB	'('
	DB	02H
	DB	'('
	DB	00H
$unwind$?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1CPerfMonitor@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CPerfMonitor@@QEAA@XZ
$unwind$?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z DD 033b19H
	DD	0200112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z
	DD	0f2H
$cppxdata$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z
	DD	imagerel $ip2state$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z
$stateUnwindMap$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA
$ip2state$?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	0ceH
	DB	00H
$cppxdata$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DB 08H
	DD	imagerel $stateUnwindMap$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
	DD	imagerel $ip2state$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
$cppxdata$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DB 08H
	DD	imagerel $stateUnwindMap$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
	DD	imagerel $ip2state$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
$unwind$?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?SetThreadHandles@CPerfMonitor@@QEAAXPEAX0000@Z DD 011501H
	DD	07015H
$unwind$?clear@CPerfMonitor@@QEAAXXZ DD 021e01H
	DD	07006320aH
$unwind$?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z DD 022601H
	DD	0700bd20fH
$unwind$?check@CPerfMonitor@@IEAAXXZ DD 033619H
	DD	06c010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0358H
$unwind$?run@CPerfMonitor@@IEAAXXZ DD 021e01H
	DD	07006720aH
$unwind$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
	DD	06aH
$stateUnwindMap$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$ip2state$?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DB 06H
	DB	00H
	DB	00H
	DB	0beH
	DB	02H
	DB	019H, 010H
	DB	00H
$stateUnwindMap$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DB 040H
	DB	0eH
	DD	imagerel ?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	056H
	DD	imagerel ?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0a6H
	DD	imagerel ?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0ceH
	DD	imagerel ?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0f6H
	DD	imagerel ?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	03dH
	DB	02H
	DD	imagerel ?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	09dH
	DB	02H
	DD	imagerel ?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0fdH
	DB	02H
	DD	imagerel ?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	05dH
	DB	03H
	DD	imagerel ?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0bdH
	DB	03H
	DD	imagerel ?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	01dH
	DB	04H
	DD	imagerel ?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	07dH
	DB	04H
	DD	imagerel ?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0ddH
	DB	04H
	DD	imagerel ?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	03dH
	DB	05H
	DD	imagerel ?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	09dH
	DB	05H
	DD	imagerel ?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0fdH
	DB	05H
	DD	imagerel ?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	05dH
	DB	06H
	DD	imagerel ?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0bdH
	DB	06H
	DD	imagerel ?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	01dH
	DB	07H
	DD	imagerel ?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	07dH
	DB	07H
	DD	imagerel ?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0ddH
	DB	07H
	DD	imagerel ?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	03dH
	DB	08H
	DD	imagerel ?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	09dH
	DB	08H
	DD	imagerel ?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0fdH
	DB	08H
	DD	imagerel ?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	05dH
	DB	09H
	DD	imagerel ?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0bdH
	DB	09H
	DD	imagerel ?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	01dH
	DB	0aH
	DD	imagerel ?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	07dH
	DB	0aH
	DD	imagerel ?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	0ddH
	DB	0aH
	DD	imagerel ?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
	DB	03dH
	DB	0bH
	DD	imagerel ?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA
$unwind$?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DD 034019H
	DD	0ea0117H
	DD	07010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z
	DD	0742H
$ip2state$?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z DB 082H
	DB	00H
	DB	00H
	DB	091H, 02H
	DB	02H
	DB	092H
	DB	04H
	DB	'&'
	DB	02H
	DB	0acH
	DB	06H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	08H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	0aH
	DB	'&'
	DB	02H
	DB	0b6H
	DB	0cH
	DB	'&'
	DB	02H
	DB	0b6H
	DB	0eH
	DB	'&'
	DB	02H
	DB	0b6H
	DB	010H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	012H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	014H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	016H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	018H
	DB	'&'
	DB	02H
	DB	0b6H
	DB	01aH
	DB	'&'
	DB	02H
	DB	0b6H
	DB	01cH
	DB	'&'
	DB	02H
	DB	0b6H
	DB	01eH
	DB	'&'
	DB	02H
	DB	0caH
	DB	' '
	DB	'&'
	DB	02H
	DB	08aH
	DB	'"'
	DB	'&'
	DB	02H
	DB	08aH
	DB	'$'
	DB	'&'
	DB	02H
	DB	0b0H
	DB	'&'
	DB	'&'
	DB	02H
	DB	0b0H
	DB	'('
	DB	'&'
	DB	02H
	DB	0b0H
	DB	'*'
	DB	'&'
	DB	02H
	DB	0b0H
	DB	','
	DB	'&'
	DB	02H
	DB	0c4H
	DB	'.'
	DB	'&'
	DB	02H
	DB	0c4H
	DB	'0'
	DB	'&'
	DB	02H
	DB	0a4H
	DB	'2'
	DB	'&'
	DB	02H
	DB	0a4H
	DB	'4'
	DB	'&'
	DB	02H
	DB	0b2H
	DB	'6'
	DB	'&'
	DB	02H
	DB	0b2H
	DB	'8'
	DB	'&'
	DB	02H
	DB	0b2H
	DB	':'
	DB	'&'
	DB	02H
	DB	0b6H
	DB	'<'
	DB	'&'
	DB	02H
	DB	0ccH
	DB	'>'
	DB	'&'
	DB	02H
	DB	0ccH
	DB	'@'
	DB	'&'
	DB	02H
	DB	0dH, 02H
	DB	00H
$cppxdata$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DB 08H
	DD	imagerel $stateUnwindMap$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	DD	imagerel $ip2state$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	ORG $+2
$unwind$?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?loader@CPerfMonitor@@KAXPEAX@Z DD 021e01H
	DD	07006320aH
$unwind$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DD 023a19H
	DD	07010d214H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z
	DD	06aH
$stateUnwindMap$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA
$ip2state$?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c2H
	DB	02H
	DB	'0'
	DB	00H
	DB	016H
	DB	04H
	DB	0d5H, 03H
	DB	02H
	ORG $+1
$unwind$?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
CONST	SEGMENT
	ORG $+7
??0CPerfMonitor@@QEAA@XZ$rtcName$0 DB 063H		; CPerfMonitor::CPerfMonitor
	DB	070H
	DB	075H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+7
??0CPerfMonitor@@QEAA@XZ$rtcFrameData DD 01H		; CPerfMonitor::CPerfMonitor
	DD	00H
	DQ	FLAT:??0CPerfMonitor@@QEAA@XZ$rtcVarDesc
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$0 DB 074H ; CPerfMonitor::init
	DB	065H
	DB	06dH
	DB	070H
	DB	044H
	DB	069H
	DB	072H
	DB	00H
??0CPerfMonitor@@QEAA@XZ$rtcVarDesc DD 030H		; CPerfMonitor::CPerfMonitor
	DD	070H
	DQ	FLAT:??0CPerfMonitor@@QEAA@XZ$rtcName$0
	ORG $+48
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$1 DB 074H ; CPerfMonitor::init
	DB	065H
	DB	06dH
	DB	070H
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
	ORG $+3
?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z$rtcName$0 DB 066H ; CPerfMonitor::createPerfMpnitorPyw
	DB	070H
	DB	00H
	ORG $+1
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$2 DB 073H ; CPerfMonitor::init
	DB	050H
	DB	079H
	DB	074H
	DB	068H
	DB	06fH
	DB	06eH
	DB	050H
	DB	061H
	DB	074H
	DB	068H
	DB	00H
?check@CPerfMonitor@@IEAAXXZ$rtcName$5 DB 070H		; CPerfMonitor::check
	DB	074H
	DB	00H
	ORG $+1
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$3 DB 073H ; CPerfMonitor::init
	DB	049H
	DB	06eH
	DB	074H
	DB	065H
	DB	072H
	DB	076H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+2
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$4 DB 061H ; CPerfMonitor::init
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+7
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcFrameData DD 05H ; CPerfMonitor::init
	DD	00H
	DQ	FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcVarDesc
?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z$rtcName$0 DB 064H ; CPerfMonitor::SetEncStatus
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+3
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcVarDesc DD 0a78H ; CPerfMonitor::init
	DD	020H
	DQ	FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$4
	DD	0a38H
	DD	028H
	DQ	FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$3
	DD	08b8H
	DD	028H
	DQ	FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$2
	DD	0470H
	DD	0400H
	DQ	FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$1
	DD	050H
	DD	0400H
	DQ	FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcName$0
	ORG $+240
?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z$rtcVarDesc DD 030H ; CPerfMonitor::SetEncStatus
	DD	0b0H
	DQ	FLAT:?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z$rtcName$0
	ORG $+48
?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z$rtcFrameData DD 01H ; CPerfMonitor::SetEncStatus
	DD	00H
	DQ	FLAT:?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z$rtcVarDesc
?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z$rtcVarDesc DD 038H ; CPerfMonitor::createPerfMpnitorPyw
	DD	08H
	DQ	FLAT:?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z$rtcName$0
	ORG $+48
?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z$rtcFrameData DD 01H ; CPerfMonitor::createPerfMpnitorPyw
	DD	00H
	DQ	FLAT:?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z$rtcVarDesc
?check@CPerfMonitor@@IEAAXXZ$rtcName$0 DB 067H		; CPerfMonitor::check
	DB	065H
	DB	074H
	DB	054H
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	054H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+2
?check@CPerfMonitor@@IEAAXXZ$rtcName$1 DB 06dH		; CPerfMonitor::check
	DB	065H
	DB	06dH
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	065H
	DB	072H
	DB	073H
	DB	00H
	ORG $+3
?check@CPerfMonitor@@IEAAXXZ$rtcName$2 DB 069H		; CPerfMonitor::check
	DB	06fH
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	065H
	DB	072H
	DB	073H
	DB	00H
?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcName$0 DB 073H ; CPerfMonitor::write_header
	DB	074H
	DB	072H
	DB	00H
?check@CPerfMonitor@@IEAAXXZ$rtcName$3 DB 063H		; CPerfMonitor::check
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	05fH
	DB	074H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
	ORG $+3
?check@CPerfMonitor@@IEAAXXZ$rtcName$4 DB 073H		; CPerfMonitor::check
	DB	079H
	DB	073H
	DB	074H
	DB	069H
	DB	06dH
	DB	065H
	DB	00H
?check@CPerfMonitor@@IEAAXXZ$rtcName$6 DB 065H		; CPerfMonitor::check
	DB	078H
	DB	069H
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+2
?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcName$0 DB 073H ; CPerfMonitor::write
	DB	074H
	DB	072H
	DB	00H
?check@CPerfMonitor@@IEAAXXZ$rtcName$7 DB 065H		; CPerfMonitor::check
	DB	078H
	DB	069H
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+2
?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$rtcName$0 DB 073H ; CPerfMonitor::SelectedCounters
	DB	074H
	DB	072H
	DB	00H
?check@CPerfMonitor@@IEAAXXZ$rtcName$8 DB 065H		; CPerfMonitor::check
	DB	078H
	DB	069H
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+6
?check@CPerfMonitor@@IEAAXXZ$rtcName$9 DB 065H		; CPerfMonitor::check
	DB	078H
	DB	069H
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+6
?check@CPerfMonitor@@IEAAXXZ$rtcName$10 DB 065H		; CPerfMonitor::check
	DB	078H
	DB	069H
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+2
?check@CPerfMonitor@@IEAAXXZ$rtcName$11 DB 064H		; CPerfMonitor::check
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+7
?check@CPerfMonitor@@IEAAXXZ$rtcVarDesc DD 0280H	; CPerfMonitor::check
	DD	0b0H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$11
	DD	0254H
	DD	04H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$10
	DD	0234H
	DD	04H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$9
	DD	0214H
	DD	04H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$8
	DD	01f4H
	DD	04H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$7
	DD	01d4H
	DD	04H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$6
	DD	0188H
	DD	020H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$5
	DD	0158H
	DD	010H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$4
	DD	0138H
	DD	08H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$3
	DD	0e8H
	DD	030H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$2
	DD	080H
	DD	048H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$1
	DD	054H
	DD	01H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcName$0
	ORG $+576
?check@CPerfMonitor@@IEAAXXZ$rtcFrameData DD 0cH	; CPerfMonitor::check
	DD	00H
	DQ	FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcVarDesc
?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcVarDesc DD 028H ; CPerfMonitor::write_header
	DD	028H
	DQ	FLAT:?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcName$0
	ORG $+48
?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcFrameData DD 01H ; CPerfMonitor::write_header
	DD	00H
	DQ	FLAT:?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcVarDesc
?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcVarDesc DD 038H ; CPerfMonitor::write
	DD	028H
	DQ	FLAT:?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcName$0
	ORG $+48
?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcFrameData DD 01H ; CPerfMonitor::write
	DD	00H
	DQ	FLAT:?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcVarDesc
?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$rtcVarDesc DD 028H ; CPerfMonitor::SelectedCounters
	DD	028H
	DQ	FLAT:?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$rtcName$0
	ORG $+48
?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$rtcFrameData DD 01H ; CPerfMonitor::SelectedCounters
	DD	00H
	DQ	FLAT:?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DB 08H
	DB	00H
	DB	00H
	DB	'=', 03H
	DB	02H
	DB	'('
	DB	00H
	DB	'N'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Rhandle_deleter@@QEBAXPEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	030H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	032H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD 032901H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0 DB 05fH ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DB	04fH
	DB	06cH
	DB	064H
	DB	05fH
	DB	076H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+7
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc DD 028H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	010H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0
	ORG $+48
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData DD 01H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	00H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 031f01H
	DD	07007820bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?joinable@thread@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD 032419H
	DD	0700ca210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0thread@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DB 040H
	DD	imagerel $ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DB 040H
	DD	imagerel $ip2state$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fprintf DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
fprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
fprintf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:fprintf$rtcName$0
	ORG $+48
fprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:fprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val$[rsp]
  00015	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [rcx]
  00019	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	5f		 pop	 rdi
  00023	c3		 ret	 0
??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z PROC ; std::_Tuple_val<CPerfMonitor *>::_Tuple_val<CPerfMonitor *><CPerfMonitor *>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::_Tuple_val<CPerfMonitor *>::_Tuple_val<CPerfMonitor *><CPerfMonitor *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 214  :     constexpr tuple(_Tag) noexcept { // strengthened, construct from one arg per element

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi

; 215  :     }

  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 01	 mov	 BYTE PTR _Num_is_one$[rsp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 01	 mov	 BYTE PTR _Den_is_one$[rsp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	83 f8 01	 cmp	 eax, 1
  00032	74 6c		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00034	33 c0		 xor	 eax, eax
  00036	83 f8 01	 cmp	 eax, 1
  00039	74 30		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00040	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00045	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  0004a	f2 0f 11 44 24
	28		 movsd	 QWORD PTR $T1[rsp], xmm0
  00050	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  0005f	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00064	e9 ac 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00069	eb 33		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  0006b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00070	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00075	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  0007a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00082	f2 0f 11 44 24
	30		 movsd	 QWORD PTR $T2[rsp], xmm0
  00088	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  0008d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00092	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00097	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0009c	eb 77		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  0009e	eb 75		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000a0	33 c0		 xor	 eax, eax
  000a2	83 f8 01	 cmp	 eax, 1
  000a5	74 35		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000a7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000ac	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000b1	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  000b6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000be	f2 0f 11 44 24
	38		 movsd	 QWORD PTR $T3[rsp], xmm0
  000c4	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000c9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ce	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  000d3	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000d8	eb 3b		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000da	eb 39		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000dc	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000e1	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000e6	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  000eb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000f3	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000fb	f2 0f 11 44 24
	40		 movsd	 QWORD PTR $T4[rsp], xmm0
  00101	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00106	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0010b	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00110	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  00115	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00119	5f		 pop	 rdi
  0011a	c3		 ret	 0
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 00	 mov	 BYTE PTR _Num_is_one$[rsp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 01	 mov	 BYTE PTR _Den_is_one$[rsp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	83 f8 01	 cmp	 eax, 1
  00032	74 61		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00034	33 c0		 xor	 eax, eax
  00036	85 c0		 test	 eax, eax
  00038	74 2b		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0003f	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  00044	f2 0f 11 44 24
	28		 movsd	 QWORD PTR $T1[rsp], xmm0
  0004a	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005e	e9 9c 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00063	eb 2e		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00065	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0006a	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  0006f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@41cdcd6500000000
  00077	f2 0f 11 44 24
	30		 movsd	 QWORD PTR $T2[rsp], xmm0
  0007d	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00082	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00087	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  0008c	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00091	eb 6c		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  00093	eb 6a		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  00095	33 c0		 xor	 eax, eax
  00097	85 c0		 test	 eax, eax
  00099	74 30		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  0009b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000a0	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  000a5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000ad	f2 0f 11 44 24
	38		 movsd	 QWORD PTR $T3[rsp], xmm0
  000b3	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000b8	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000bd	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  000c2	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000c7	eb 36		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000c9	eb 34		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000cb	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000d0	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  000d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@41cdcd6500000000
  000dd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000e5	f2 0f 11 44 24
	40		 movsd	 QWORD PTR $T4[rsp], xmm0
  000eb	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000f0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000f5	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  000fa	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000ff	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00103	5f		 pop	 rdi
  00104	c3		 ret	 0
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z PROC ; std::forward<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z ENDP ; std::forward<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z PROC ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl&)(void *)>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ; std::forward<void (__cdecl&)(void *)>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z ENDP ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z PROC ; std::tuple<CPerfMonitor *>::tuple<CPerfMonitor *><std::_Exact_args_t,CPerfMonitor *,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00027	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0002c	48 8b f8	 mov	 rdi, rax
  0002f	33 c0		 xor	 eax, eax
  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	f3 aa		 rep stosb
  00038	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00047	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8b d0	 mov	 rdx, rax
  00059	e8 00 00 00 00	 call	 ??$?0PEAVCPerfMonitor@@@?$_Tuple_val@PEAVCPerfMonitor@@@std@@QEAA@$$QEAPEAVCPerfMonitor@@@Z ; std::_Tuple_val<CPerfMonitor *>::_Tuple_val<CPerfMonitor *><CPerfMonitor *>

; 243  :     }

  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::tuple<CPerfMonitor *>::tuple<CPerfMonitor *><std::_Exact_args_t,CPerfMonitor *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 00	 mov	 BYTE PTR _Num_is_one$[rsp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 01	 mov	 BYTE PTR _Den_is_one$[rsp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	83 f8 01	 cmp	 eax, 1
  00032	74 5e		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00034	33 c0		 xor	 eax, eax
  00036	85 c0		 test	 eax, eax
  00038	74 2a		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0003f	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00058	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e9 87 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00062	eb 2c		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00064	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00069	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  0006e	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  00075	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp], rax
  0007a	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  0007f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00084	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00089	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0008e	eb 59		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  00090	eb 57		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  00092	33 c0		 xor	 eax, eax
  00094	85 c0		 test	 eax, eax
  00096	74 27		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  00098	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0009d	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  000a2	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  000a7	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000b1	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000b6	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000bb	eb 2c		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000bd	eb 2a		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000bf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000c4	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  000c9	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  000d0	48 89 44 24 40	 mov	 QWORD PTR $T4[rsp], rax
  000d5	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000da	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000df	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000e4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000e9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000ed	5f		 pop	 rdi
  000ee	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Dur$ = 72
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Dur$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003f	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Dur$ = 72
??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Dur$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003f	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 00	 mov	 BYTE PTR _Num_is_one$[rsp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 01	 mov	 BYTE PTR _Den_is_one$[rsp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	83 f8 01	 cmp	 eax, 1
  00032	74 5b		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00034	33 c0		 xor	 eax, eax
  00036	85 c0		 test	 eax, eax
  00038	74 2a		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0003f	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00058	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e9 81 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00062	eb 29		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00064	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00069	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  0006e	48 6b c0 64	 imul	 rax, rax, 100		; 00000064H
  00072	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp], rax
  00077	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00081	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00086	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0008b	eb 56		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  0008d	eb 54		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  0008f	33 c0		 xor	 eax, eax
  00091	85 c0		 test	 eax, eax
  00093	74 27		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  00095	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0009a	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  0009f	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  000a4	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ae	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000b3	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000b8	eb 29		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000ba	eb 27		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000bc	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000c1	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  000c6	48 6b c0 64	 imul	 rax, rax, 100		; 00000064H
  000ca	48 89 44 24 40	 mov	 QWORD PTR $T4[rsp], rax
  000cf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000d4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000d9	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000de	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000e3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e7	5f		 pop	 rdi
  000e8	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv66 = 48
tv71 = 56
_Left$ = 80
_Right$ = 88
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z PROC ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 365  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 366  :         // test if duration < duration
; 367  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 368  :         return _CT(_Left).count() < _CT(_Right).count();

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00030	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00035	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00038	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00042	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00047	48 89 44 24 30	 mov	 QWORD PTR tv66[rsp], rax
  0004c	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00051	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00056	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv66[rsp]
  0005b	48 3b c8	 cmp	 rcx, rax
  0005e	7d 0a		 jge	 SHORT $LN3@operator
  00060	c7 44 24 38 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  00068	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0006a	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@operator:
  00072	0f b6 44 24 38	 movzx	 eax, BYTE PTR tv71[rsp]

; 369  :     }

  00077	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ENDP ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1><std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1><std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
<_Rest_arg_0>$ = 88
??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z PROC ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><std::_Exact_args_t,void (__cdecl&)(void *),CPerfMonitor *,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 0c 00 00 00	 mov	 ecx, 12
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  0002c	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00031	48 8b f8	 mov	 rdi, rax
  00034	33 c0		 xor	 eax, eax
  00036	b9 01 00 00 00	 mov	 ecx, 1
  0003b	f3 aa		 rep stosb
  0003d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  00047	4c 8b c0	 mov	 r8, rax
  0004a	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0004f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@PEAVCPerfMonitor@@$$V$0A@@?$tuple@PEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVCPerfMonitor@@@Z ; std::tuple<CPerfMonitor *>::tuple<CPerfMonitor *><std::_Exact_args_t,CPerfMonitor *,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00059	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0005e	e8 00 00 00 00	 call	 ??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ; std::forward<void (__cdecl&)(void *)>
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 83 c1 08	 add	 rcx, 8
  0006c	48 8b d0	 mov	 rdx, rax
  0006f	e8 00 00 00 00	 call	 ??$?0A6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@A6AXPEAX@Z@Z ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl&)(void *)>

; 243  :     }

  00074	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><std::_Exact_args_t,void (__cdecl&)(void *),CPerfMonitor *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Dur$ = 72
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Dur$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 01	 mov	 BYTE PTR _Num_is_one$[rsp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 00	 mov	 BYTE PTR _Den_is_one$[rsp], 0

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	85 c0		 test	 eax, eax
  00031	74 58		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00033	33 c0		 xor	 eax, eax
  00035	83 f8 01	 cmp	 eax, 1
  00038	74 2a		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0003f	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  00058	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e9 8e 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00062	eb 25		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00064	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00069	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0006e	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp], rax
  00073	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007d	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  00082	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00087	eb 67		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  00089	eb 65		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  0008b	33 c0		 xor	 eax, eax
  0008d	83 f8 01	 cmp	 eax, 1
  00090	74 31		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00097	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0009c	48 99		 cdq
  0009e	b9 00 ca 9a 3b	 mov	 ecx, 1000000000		; 3b9aca00H
  000a3	48 f7 f9	 idiv	 rcx
  000a6	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  000ab	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000b0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000b5	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000bf	eb 2f		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000c1	eb 2d		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000c3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000c8	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000cd	48 99		 cdq
  000cf	b9 00 ca 9a 3b	 mov	 ecx, 1000000000		; 3b9aca00H
  000d4	48 f7 f9	 idiv	 rcx
  000d7	48 89 44 24 40	 mov	 QWORD PTR $T4[rsp], rax
  000dc	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000e1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e6	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  000eb	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000f0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f4	5f		 pop	 rdi
  000f5	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 01	 mov	 BYTE PTR _Num_is_one$[rsp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 01	 mov	 BYTE PTR _Den_is_one$[rsp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	83 f8 01	 cmp	 eax, 1
  00032	74 55		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00034	33 c0		 xor	 eax, eax
  00036	83 f8 01	 cmp	 eax, 1
  00039	74 27		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00040	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00045	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  0004a	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005e	eb 7a		 jmp	 SHORT $LN1@duration_c

; 410  :             } else {

  00060	eb 25		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00062	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00067	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0006c	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp], rax
  00071	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00076	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007b	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00080	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00085	eb 53		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  00087	eb 51		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  00089	33 c0		 xor	 eax, eax
  0008b	83 f8 01	 cmp	 eax, 1
  0008e	74 27		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  00090	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00095	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0009a	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  0009f	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000a4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000ae	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000b3	eb 25		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000b5	eb 23		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000b7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000bc	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000c1	48 89 44 24 40	 mov	 QWORD PTR $T4[rsp], rax
  000c6	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000cb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000d0	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000d5	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000da	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000de	5f		 pop	 rdi
  000df	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv68 = 48
tv75 = 56
_Left$ = 80
_Right$ = 88
??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >, COMDAT

; 365  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 366  :         // test if duration < duration
; 367  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 368  :         return _CT(_Left).count() < _CT(_Right).count();

  00023	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Left$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  0003a	f2 0f 11 44 24
	30		 movsd	 QWORD PTR tv68[rsp], xmm0
  00040	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Right$[rsp]
  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  0004a	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  00057	f2 0f 10 4c 24
	30		 movsd	 xmm1, QWORD PTR tv68[rsp]
  0005d	66 0f 2f c1	 comisd	 xmm0, xmm1
  00061	76 0a		 jbe	 SHORT $LN3@operator
  00063	c7 44 24 38 01
	00 00 00	 mov	 DWORD PTR tv75[rsp], 1
  0006b	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0006d	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN4@operator:
  00075	0f b6 44 24 38	 movzx	 eax, BYTE PTR tv75[rsp]

; 369  :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Dur$ = 72
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Dur$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv66 = 48
_Left$ = 80
_Right$ = 88
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 552  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 553  :         // test for time_point < time_point
; 554  :         return _Left.time_since_epoch() < _Right.time_since_epoch();

  00023	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00032	48 89 44 24 30	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00041	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv66[rsp]
  0004b	48 8b d1	 mov	 rdx, rcx
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >

; 555  :     }

  00056	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 00	 mov	 BYTE PTR _Num_is_one$[rsp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 01	 mov	 BYTE PTR _Den_is_one$[rsp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	83 f8 01	 cmp	 eax, 1
  00032	74 5e		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00034	33 c0		 xor	 eax, eax
  00036	85 c0		 test	 eax, eax
  00038	74 2a		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0003f	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00058	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e9 87 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00062	eb 2c		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00064	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00069	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  0006e	48 69 c0 40 42
	0f 00		 imul	 rax, rax, 1000000	; 000f4240H
  00075	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp], rax
  0007a	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  0007f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00084	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00089	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0008e	eb 59		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  00090	eb 57		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  00092	33 c0		 xor	 eax, eax
  00094	85 c0		 test	 eax, eax
  00096	74 27		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  00098	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0009d	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  000a2	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  000a7	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000b1	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000b6	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000bb	eb 2c		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000bd	eb 2a		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000bf	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000c4	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  000c9	48 69 c0 40 42
	0f 00		 imul	 rax, rax, 1000000	; 000f4240H
  000d0	48 89 44 24 40	 mov	 QWORD PTR $T4[rsp], rax
  000d5	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000da	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000df	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000e4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000e9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000ed	5f		 pop	 rdi
  000ee	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z PROC ; std::_Copy_memmove<char const * *,char const * *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z ENDP ; std::_Copy_memmove<char const * *,char const * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z PROC	; std::_Get_unwrapped<char const *>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z ENDP	; std::_Get_unwrapped<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv68 = 56
__$ReturnUdt$ = 80
_Left$ = 88
_Right$ = 96
??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >, COMDAT

; 253  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 254  :         // add two durations
; 255  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 256  :         return _CD(_CD(_Left).count() + _CD(_Right).count());

  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR _Left$[rsp]
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00035	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  0003a	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0003f	48 89 44 24 38	 mov	 QWORD PTR tv68[rsp], rax
  00044	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Right$[rsp]
  00049	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  0004e	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv68[rsp]
  00060	48 03 c8	 add	 rcx, rax
  00063	48 8b c1	 mov	 rax, rcx
  00066	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0006b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00070	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00075	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 257  :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
tv64 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z PROC ; std::invoke<void (__cdecl*)(void *),CPerfMonitor *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(void *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CPerfMonitor *>
  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::invoke<void (__cdecl*)(void *),CPerfMonitor *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
tv66 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CPerfMonitor *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(void *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00041	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00044	ff 10		 call	 QWORD PTR [rax]
  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??$_Call@P6AXPEAX@ZPEAVCPerfMonitor@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CPerfMonitor *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*)(void *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z PROC ; std::get<1,void (__cdecl*)(void *),CPerfMonitor *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]

; 652  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z ENDP ; std::get<1,void (__cdecl*)(void *),CPerfMonitor *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z PROC ; std::move<void (__cdecl*&)(void *)>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ENDP ; std::move<void (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z PROC ; std::get<0,void (__cdecl*)(void *),CPerfMonitor *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]
  0000b	48 83 c0 08	 add	 rax, 8

; 652  : }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z ENDP ; std::get<0,void (__cdecl*)(void *),CPerfMonitor *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1><std::tuple<void (__cdecl*)(void *),CPerfMonitor *> * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_This_arg$ = 72
<_Rest_arg_0>$ = 80
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z PROC ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><void (__cdecl&)(void *),CPerfMonitor *,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0002d	48 8b f8	 mov	 rdi, rax
  00030	33 c0		 xor	 eax, eax
  00032	b9 01 00 00 00	 mov	 ecx, 1
  00037	f3 aa		 rep stosb
  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  0003e	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  00043	90		 npad	 1
  00044	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00049	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ; std::forward<void (__cdecl&)(void *)>
  00053	90		 npad	 1
  00054	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00059	4c 8b c9	 mov	 r9, rcx
  0005c	4c 8b c0	 mov	 r8, rax
  0005f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00064	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00069	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@U_Exact_args_t@1@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><std::_Exact_args_t,void (__cdecl&)(void *),CPerfMonitor *,0>
  0006e	90		 npad	 1
  0006f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00074	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><void (__cdecl&)(void *),CPerfMonitor *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z PROC ; std::forward<RGYPipeProcess * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z ENDP ; std::forward<RGYPipeProcess * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z PROC ; std::forward<_iobuf * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z ENDP ; std::forward<_iobuf * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
_TEXT	SEGMENT
_Ten_days$ = 40
_Ten_days_d$ = 72
_T0$ = 104
_Clamped$ = 116
_Whole_seconds$ = 136
$T7 = 152
$T8 = 160
$T9 = 168
$T10 = 176
_Xt$ = 208
_Rel_time$ = 216
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z PROC ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >, COMDAT

; 663  :     _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]

; 664  :     // Convert duration to xtime, maximum 10 days from now, returns whether clamping occurred.
; 665  :     // If clamped, timeouts will be transformed into spurious non-timeout wakes, due to ABI restrictions where
; 666  :     // the other side of the DLL boundary overflows int32_t milliseconds.
; 667  :     // Every function calling this one is TRANSITION, ABI
; 668  :     constexpr chrono::nanoseconds _Ten_days{chrono::hours{24} * 10};

  00029	48 b8 00 00 16
	ad cd 11 03 00	 mov	 rax, 864000000000000	; 000311cdad160000H
  00033	48 89 44 24 28	 mov	 QWORD PTR _Ten_days$[rsp], rax

; 669  :     constexpr chrono::duration<double> _Ten_days_d{_Ten_days};

  00038	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@412a5e0000000000
  00040	f2 0f 11 44 24
	48		 movsd	 QWORD PTR _Ten_days_d$[rsp], xmm0

; 670  :     chrono::nanoseconds _T0 = chrono::system_clock::now().time_since_epoch();

  00046	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  0004e	e8 00 00 00 00	 call	 ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
  00053	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
  00063	48 8b d0	 mov	 rdx, rax
  00066	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _T0$[rsp]
  0006b	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>

; 671  :     const bool _Clamped     = _Ten_days_d < _Rel_time;

  00070	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR _Rel_time$[rsp]
  00078	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ten_days_d$[rsp]
  0007d	e8 00 00 00 00	 call	 ??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
  00082	88 44 24 74	 mov	 BYTE PTR _Clamped$[rsp], al

; 672  :     if (_Clamped) {

  00086	0f b6 44 24 74	 movzx	 eax, BYTE PTR _Clamped$[rsp]
  0008b	85 c0		 test	 eax, eax
  0008d	74 11		 je	 SHORT $LN2@To_xtime_1

; 673  :         _T0 += _Ten_days;

  0008f	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Ten_days$[rsp]
  00094	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _T0$[rsp]
  00099	e8 00 00 00 00	 call	 ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=

; 674  :     } else {

  0009e	eb 22		 jmp	 SHORT $LN3@To_xtime_1
$LN2@To_xtime_1:

; 675  :         _T0 += chrono::duration_cast<chrono::nanoseconds>(_Rel_time);

  000a0	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR _Rel_time$[rsp]
  000a8	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  000b0	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
  000b5	48 8b d0	 mov	 rdx, rax
  000b8	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _T0$[rsp]
  000bd	e8 00 00 00 00	 call	 ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
$LN3@To_xtime_1:

; 676  :     }
; 677  : 
; 678  :     const auto _Whole_seconds = chrono::duration_cast<chrono::seconds>(_T0);

  000c2	48 8d 54 24 68	 lea	 rdx, QWORD PTR _T0$[rsp]
  000c7	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Whole_seconds$[rsp]
  000cf	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>

; 679  :     _Xt.sec                   = _Whole_seconds.count();

  000d4	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Whole_seconds$[rsp]
  000dc	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  000e1	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Xt$[rsp]
  000e9	48 89 01	 mov	 QWORD PTR [rcx], rax

; 680  :     _T0 -= _Whole_seconds;

  000ec	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR _Whole_seconds$[rsp]
  000f4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  000fc	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
  00101	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  00109	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _T0$[rsp]
  0010e	e8 00 00 00 00	 call	 ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=

; 681  :     _Xt.nsec = static_cast<long>(_T0.count());

  00113	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _T0$[rsp]
  00118	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0011d	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR _Xt$[rsp]
  00125	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 682  :     return _Clamped;

  00128	0f b6 44 24 74	 movzx	 eax, BYTE PTR _Clamped$[rsp]

; 683  : }

  0012d	8b f8		 mov	 edi, eax
  0012f	48 8b cc	 mov	 rcx, rsp
  00132	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcFrameData
  00139	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0013e	8b c7		 mov	 eax, edi
  00140	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  00147	5f		 pop	 rdi
  00148	c3		 ret	 0
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ENDP ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
tv69 = 32
_Left$ = 64
_Right$ = 72
??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 561  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 562  :         // test for time_point <= time_point
; 563  :         return !(_Right < _Left);

  00023	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 564  :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Dur$ = 72
??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Dur$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0003a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	48 89 01	 mov	 QWORD PTR [rcx], rax
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z
_TEXT	SEGMENT
_My_data$ = 64
_Old_size$ = 72
_New_size$ = 80
_Old_capacity$ = 88
_New_capacity$ = 96
_Al$ = 104
_New_ptr$ = 120
_Raw_new$ = 136
_Old_ptr$4 = 144
this$ = 176
_Size_increase$ = 184
_Fn$ = 192
<_Args_0>$ = 200
<_Args_1>$ = 208
<_Args_2>$ = 216
??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 40	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 48	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 48	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 b8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 50	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 58	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 50	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 60	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 68	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 60	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 78	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00110	48 83 7c 24 58
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00116	0f 82 8f 00 00
	00		 jb	 $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  00121	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00125	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0012d	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00135	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0013a	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  00142	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00147	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0014f	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00154	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  0015c	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00161	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00166	4c 8b c0	 mov	 r8, rax
  00169	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00171	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00179	e8 00 00 00 00	 call	 ??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z ; <lambda_f3a66ab6a0570788f31503db83886f49>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  0017e	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00183	48 ff c0	 inc	 rax
  00186	4c 8b c0	 mov	 r8, rax
  00189	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00191	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Al$[rsp]
  00196	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  0019b	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  001a5	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  001a9	eb 63		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  001ab	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001b0	48 83 c0 08	 add	 rax, 8
  001b4	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  001bc	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001c1	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001c9	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001ce	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001d6	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001db	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001e0	4c 8b c0	 mov	 r8, rax
  001e3	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001eb	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001f3	e8 00 00 00 00	 call	 ??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z ; <lambda_f3a66ab6a0570788f31503db83886f49>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001f8	48 8b 44 24 40	 mov	 rax, QWORD PTR _My_data$[rsp]
  001fd	48 83 c0 08	 add	 rax, 8
  00201	48 8d 54 24 78	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00206	48 8b c8	 mov	 rcx, rax
  00209	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  0020e	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  00216	48 8b f8	 mov	 rdi, rax
  00219	48 8b cc	 mov	 rcx, rsp
  0021c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z$rtcFrameData
  00223	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00228	48 8b c7	 mov	 rax, rdi
  0022b	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00232	5f		 pop	 rdi
  00233	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z
_TEXT	SEGMENT
tv78 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Off$ = 96
_Ptr$ = 104
_Count$ = 112
??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z PROC ; <lambda_f3a66ab6a0570788f31503db83886f49>::operator(), COMDAT

; 2987 :                 const _Elem* const _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2988 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);

  0002d	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2989 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);

  00041	48 8b 44 24 60	 mov	 rax, QWORD PTR _Off$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2990 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);

  00063	48 8b 44 24 60	 mov	 rax, QWORD PTR _Off$[rsp]
  00068	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0006d	48 2b c8	 sub	 rcx, rax
  00070	48 8b c1	 mov	 rax, rcx
  00073	48 ff c0	 inc	 rax
  00076	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Off$[rsp]
  0007b	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00080	48 03 d1	 add	 rdx, rcx
  00083	48 8b ca	 mov	 rcx, rdx
  00086	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Off$[rsp]
  0008b	4c 8b 44 24 48	 mov	 r8, QWORD PTR _New_ptr$[rsp]
  00090	4c 03 c2	 add	 r8, rdx
  00093	49 8b d0	 mov	 rdx, r8
  00096	48 03 54 24 70	 add	 rdx, QWORD PTR _Count$[rsp]
  0009b	48 89 54 24 20	 mov	 QWORD PTR tv78[rsp], rdx
  000a0	4c 8b c0	 mov	 r8, rax
  000a3	48 8b d1	 mov	 rdx, rcx
  000a6	48 8b 44 24 20	 mov	 rax, QWORD PTR tv78[rsp]
  000ab	48 8b c8	 mov	 rcx, rax
  000ae	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2991 :             },

  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
??R<lambda_f3a66ab6a0570788f31503db83886f49>@@QEBAXQEADQEBD_K212@Z ENDP ; <lambda_f3a66ab6a0570788f31503db83886f49>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z PROC ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z ; std::_Get_unwrapped<char const *>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEBD@std@@YAPEAPEBDQEAPEBD@Z ; std::_Get_unwrapped<char const *>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEBDPEAPEBD@std@@YAPEAPEBDPEAPEBD00@Z ; std::_Copy_memmove<char const * *,char const * *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 03	 sar	 rax, 3
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00080	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ENDP ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z PROC ; std::move<EncodeStatus * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ENDP ; std::move<EncodeStatus * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z PROC ; std::move<RGYLog * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ENDP ; std::move<RGYLog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z PROC ; std::move<CPerfMonitor * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ENDP ; std::move<CPerfMonitor * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG130637
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG130638
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG130639
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG130640
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG130641
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG130642
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >, COMDAT

; 497  :         _NOEXCEPT_COND(is_arithmetic_v<typename _Duration::rep>&& is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 498  :         // add duration to time_point
; 499  :         using _RT = time_point<_Clock, common_type_t<_Duration, duration<_Rep, _Period>>>;
; 500  :         return _RT(_Left.time_since_epoch() + _Right);

  00028	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  00032	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00037	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Right$[rsp]
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 501  :     }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
_TEXT	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
_RawVals$ = 96
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z PROC ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>, COMDAT

; 36   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept { // enforces termination

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 37   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 38   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

  0001e	48 8b 54 24 60	 mov	 rdx, QWORD PTR _RawVals$[rsp]
  00023	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00028	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,0>
  0002d	90		 npad	 1

; 39   :         _Tuple& _Tup = *_FnVals;

  0002e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00033	e8 00 00 00 00	 call	 ??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::operator*
  00038	90		 npad	 1
  00039	48 89 44 24 38	 mov	 QWORD PTR _Tup$[rsp], rax

; 40   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

  0003e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  00043	e8 00 00 00 00	 call	 ??$get@$00P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAPEAVCPerfMonitor@@AEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z ; std::get<1,void (__cdecl*)(void *),CPerfMonitor *>
  00048	90		 npad	 1
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$move@AEAPEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::move<CPerfMonitor * &>
  00051	90		 npad	 1
  00052	48 89 44 24 48	 mov	 QWORD PTR tv70[rsp], rax
  00057	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  0005c	e8 00 00 00 00	 call	 ??$get@$0A@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@@Z ; std::get<0,void (__cdecl*)(void *),CPerfMonitor *>
  00061	90		 npad	 1
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(void *)>
  0006a	90		 npad	 1
  0006b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv70[rsp]
  00070	48 8b d1	 mov	 rdx, rcx
  00073	48 8b c8	 mov	 rcx, rax
  00076	e8 00 00 00 00	 call	 ??$invoke@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::invoke<void (__cdecl*)(void *),CPerfMonitor *>
  0007b	90		 npad	 1

; 41   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

  0007c	e8 00 00 00 00	 call	 _Cnd_do_broadcast_at_thread_exit
  00081	90		 npad	 1

; 42   :         return 0;

  00082	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0
  0008a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  0008f	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
  00094	90		 npad	 1
  00095	8b 44 24 40	 mov	 eax, DWORD PTR $T4[rsp]

; 43   :     }

  00099	8b f8		 mov	 edi, eax
  0009b	48 8b cc	 mov	 rcx, rsp
  0009e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcFrameData
  000a5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000aa	90		 npad	 1
  000ab	8b c7		 mov	 eax, edi
  000ad	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000b1	5f		 pop	 rdi
  000b2	c3		 ret	 0
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z ENDP ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
_RawVals$ = 96
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
_RawVals$ = 96
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ
_TEXT	SEGMENT
this$ = 16
??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::operator*, COMDAT

; 1887 :     _NODISCARD add_lvalue_reference_t<_Ty> operator*() const noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1888 :         return *_Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1889 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,std::tuple<void (__cdecl*)(void *),CPerfMonitor *> *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	ba 10 00 00 00	 mov	 edx, 16
  00032	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00037	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete

; 1768 :     }

  0003c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
<_Args_1>$ = 96
??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z PROC ; std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>, COMDAT

; 2056 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00028	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 2057 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00045	74 35		 je	 SHORT $LN3@make_uniqu
  00047	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  00051	48 89 44 24 30	 mov	 QWORD PTR tv74[rsp], rax
  00056	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ; std::forward<void (__cdecl&)(void *)>
  00060	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv74[rsp]
  00065	4c 8b c1	 mov	 r8, rcx
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00070	e8 00 00 00 00	 call	 ??$?0A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::tuple<void (__cdecl*)(void *),CPerfMonitor *>::tuple<void (__cdecl*)(void *),CPerfMonitor *><void (__cdecl&)(void *),CPerfMonitor *,0>
  00075	48 89 44 24 38	 mov	 QWORD PTR tv80[rsp], rax
  0007a	eb 09		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  0007c	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv80[rsp], 0
$LN4@make_uniqu:
  00085	48 8b 54 24 38	 mov	 rdx, QWORD PTR tv80[rsp]
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0008f	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> >,0>
  00094	90		 npad	 1
  00095	8b 44 24 28	 mov	 eax, DWORD PTR $T2[rsp]
  00099	83 c8 01	 or	 eax, 1
  0009c	89 44 24 28	 mov	 DWORD PTR $T2[rsp], eax
  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 2058 : }

  000a5	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a9	5f		 pop	 rdi
  000aa	c3		 ret	 0
  000ab	cc		 int	 3
??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
<_Args_1>$ = 96
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA PROC ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA ENDP ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
<_Args_1>$ = 96
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA PROC ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA ENDP ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z PROC ; std::forward<CPerfMonitor *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ENDP ; std::forward<CPerfMonitor *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z PROC	; std::forward<void (__cdecl&)(void *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ENDP	; std::forward<void (__cdecl&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z PROC ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><RGYPipeProcess * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVRGYPipeProcess@@@std@@YAAEAPEAVRGYPipeProcess@@AEAPEAV1@@Z ; std::forward<RGYPipeProcess * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z ENDP ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><RGYPipeProcess * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z PROC ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><_iobuf * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAU_iobuf@@@std@@YAAEAPEAU_iobuf@@AEAPEAU1@@Z ; std::forward<_iobuf * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z ENDP ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><_iobuf * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
_TEXT	SEGMENT
_Now$5 = 40
_Tgt$6 = 72
$T7 = 112
__$ArrayPad$ = 120
_Abs_time$ = 144
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z PROC ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 155  :     void sleep_until(const chrono::time_point<_Clock, _Duration>& _Abs_time) { // sleep until time point

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 44 24 78	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
$LN2@sleep_unti:

; 156  :         for (;;) {
; 157  :             const auto _Now = _Clock::now();

  00033	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Now$5[rsp]
  00038	e8 00 00 00 00	 call	 ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 158  :             if (_Abs_time <= _Now) {

  0003d	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Now$5[rsp]
  00042	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _Abs_time$[rsp]
  0004a	e8 00 00 00 00	 call	 ??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  0004f	0f b6 c0	 movzx	 eax, al
  00052	85 c0		 test	 eax, eax
  00054	74 02		 je	 SHORT $LN5@sleep_unti

; 159  :                 return;

  00056	eb 30		 jmp	 SHORT $LN1@sleep_unti
$LN5@sleep_unti:

; 160  :             }
; 161  : 
; 162  :             _CSTD xtime _Tgt;
; 163  :             (void) _To_xtime_10_day_clamped(_Tgt, _Abs_time - _Now);

  00058	4c 8d 44 24 28	 lea	 r8, QWORD PTR _Now$5[rsp]
  0005d	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _Abs_time$[rsp]
  00065	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T7[rsp]
  0006a	e8 00 00 00 00	 call	 ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  0006f	48 8b d0	 mov	 rdx, rax
  00072	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Tgt$6[rsp]
  00077	e8 00 00 00 00	 call	 ??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; 164  :             _Thrd_sleep(&_Tgt);

  0007c	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Tgt$6[rsp]
  00081	e8 00 00 00 00	 call	 _Thrd_sleep

; 165  :         }

  00086	eb ab		 jmp	 SHORT $LN2@sleep_unti
$LN1@sleep_unti:

; 166  :     }

  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0009c	48 33 cc	 xor	 rcx, rsp
  0009f	e8 00 00 00 00	 call	 __security_check_cookie
  000a4	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000ab	5f		 pop	 rdi
  000ac	c3		 ret	 0
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ENDP ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv68 = 56
__$ReturnUdt$ = 80
_Left$ = 88
_Right$ = 96
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 262  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 263  :         // subtract two durations
; 264  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 265  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR _Left$[rsp]
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00035	48 8b 44 24 60	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	48 89 44 24 30	 mov	 QWORD PTR $T3[rsp], rax
  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00047	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0004c	48 89 44 24 38	 mov	 QWORD PTR tv68[rsp], rax
  00051	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  00056	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv68[rsp]
  00060	48 2b c8	 sub	 rcx, rax
  00063	48 8b c1	 mov	 rax, rcx
  00066	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0006b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00070	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00075	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 266  :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z PROC ; std::swap<EncodeStatus *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ENDP ; std::swap<EncodeStatus *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z PROC	; std::swap<RGYLog *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ENDP	; std::swap<RGYLog *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z PROC ; std::_Destroy_range<std::allocator<char const *> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z ENDP ; std::_Destroy_range<std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z PROC ; std::_Pocca<std::allocator<char> >, COMDAT

; 942  : void _Pocca(_Alloc& _Left, const _Alloc& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 943  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_copy_assignment::value) {
; 944  :         _Left = _Right;
; 945  :     } else {
; 946  :         (void) _Left; // TRANSITION, VSO#486357
; 947  :         (void) _Right; // TRANSITION, VSO#486357
; 948  :     }
; 949  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ENDP ; std::_Pocca<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z PROC	; std::exchange<void *,void *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z ENDP	; std::exchange<void *,void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z PROC ; std::exchange<RGYPipeProcess *,RGYPipeProcess *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z ENDP ; std::exchange<RGYPipeProcess *,RGYPipeProcess *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z PROC ; std::_Ptr_base<EncodeStatus>::_Copy_construct_from<EncodeStatus>, COMDAT

; 835  :     void _Copy_construct_from(const shared_ptr<_Ty2>& _Other) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 836  :         // implement shared_ptr's (converting) copy ctor
; 837  :         if (_Other._Rep) {

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00028	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0002d	74 0e		 je	 SHORT $LN2@Copy_const

; 838  :             _Other._Rep->_Incref();

  0002f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00034	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00038	e8 00 00 00 00	 call	 ?_Incref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Incref
$LN2@Copy_const:

; 839  :         }
; 840  : 
; 841  :         _Ptr = _Other._Ptr;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00047	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 842  :         _Rep = _Other._Rep;

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00057	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0005b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 843  :     }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z ENDP ; std::_Ptr_base<EncodeStatus>::_Copy_construct_from<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z PROC ; std::exchange<_iobuf *,_iobuf *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z ENDP ; std::exchange<_iobuf *,_iobuf *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z PROC ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>, COMDAT

; 835  :     void _Copy_construct_from(const shared_ptr<_Ty2>& _Other) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 836  :         // implement shared_ptr's (converting) copy ctor
; 837  :         if (_Other._Rep) {

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00028	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0002d	74 0e		 je	 SHORT $LN2@Copy_const

; 838  :             _Other._Rep->_Incref();

  0002f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00034	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00038	e8 00 00 00 00	 call	 ?_Incref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Incref
$LN2@Copy_const:

; 839  :         }
; 840  : 
; 841  :         _Ptr = _Other._Ptr;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00047	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 842  :         _Rep = _Other._Rep;

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00057	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0005b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 843  :     }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z ENDP ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z PROC ; std::forward<handle_deleter>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ENDP ; std::forward<handle_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z PROC ; std::addressof<std::unique_ptr<void,handle_deleter> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ENDP ; std::addressof<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z PROC	; std::exchange<void *,void * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z ENDP	; std::exchange<void *,void * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z PROC ; std::forward<std::default_delete<RGYPipeProcess> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<RGYPipeProcess> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z PROC ; std::exchange<RGYPipeProcess *,RGYPipeProcess * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z ENDP ; std::exchange<RGYPipeProcess *,RGYPipeProcess * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z PROC ; std::forward<fp_deleter>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z ENDP ; std::forward<fp_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z PROC ; std::addressof<std::unique_ptr<_iobuf,fp_deleter> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z ENDP ; std::addressof<std::unique_ptr<_iobuf,fp_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z PROC ; std::exchange<_iobuf *,_iobuf * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z ENDP ; std::exchange<_iobuf *,_iobuf * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@PEBD@std@@QEAA@XZ ; std::allocator<char const *>::allocator<char const *>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z ; std::allocator<char const *>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ; std::vector<char const *,std::allocator<char const *> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z PROC ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 759  :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@PEBDAEBQEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBDAEBQEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const * const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z PROC		; std::forward<char const * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ENDP		; std::forward<char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const * const &>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@AEBQEBD@std@@YAAEBQEBDAEBQEBD@Z ; std::forward<char const * const &>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBDAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const * const &>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z ; std::allocator<char const *>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ; std::forward<char const *>
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const *>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ; std::vector<char const *,std::allocator<char const *> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z PROC ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const *>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ; std::forward<char const *>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 759  :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z PROC		; std::_Unfancy<char const *>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ENDP		; std::_Unfancy<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const *>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ; std::forward<char const *>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@PEBD@std@@YAPEAPEBDPEAPEBD@Z ; std::_Unfancy<char const *>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@PEBDPEBD@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SAXAEAV?$allocator@PEBD@1@QEAPEBD$$QEAPEBD@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::construct<char const *,char const *>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z PROC		; std::forward<char const *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ENDP		; std::forward<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const *>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ; std::forward<char const *>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_back_with_unused_capacity<char const *>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@PEBD@std@@YA$$QEAPEBDAEAPEBD@Z ; std::forward<char const *>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAPEAPEBDQEAPEBD$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::_Emplace_reallocate<char const *>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z PROC		; std::move<char const * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z ENDP		; std::move<char const * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
_Rel_time$ = 64
??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z PROC ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >, COMDAT

; 169  :     void sleep_for(const chrono::duration<_Rep, _Period>& _Rel_time) { // sleep for duration

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 170  :         sleep_until(chrono::steady_clock::now() + _Rel_time);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Rel_time$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00035	e8 00 00 00 00	 call	 ??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >
  0003a	48 8b c8	 mov	 rcx, rax
  0003d	e8 00 00 00 00	 call	 ??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 171  :     }

  00042	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ENDP ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
;	COMDAT ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z
_TEXT	SEGMENT
tv71 = 48
this$ = 80
hThread$ = 88
time$ = 96
??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z PROC ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator(), COMDAT

; 879  :     auto getThreadTime = [](HANDLE hThread, PROCESS_TIME *time) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 880  :         GetThreadTimes(hThread, (FILETIME *)&time->creation, (FILETIME *)&time->exit, (FILETIME *)&time->kernel, (FILETIME *)&time->user);

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR time$[rsp]
  0002d	48 83 c0 18	 add	 rax, 24
  00031	48 8b 4c 24 60	 mov	 rcx, QWORD PTR time$[rsp]
  00036	48 83 c1 10	 add	 rcx, 16
  0003a	48 8b 54 24 60	 mov	 rdx, QWORD PTR time$[rsp]
  0003f	48 83 c2 08	 add	 rdx, 8
  00043	4c 8b 44 24 60	 mov	 r8, QWORD PTR time$[rsp]
  00048	4c 89 44 24 30	 mov	 QWORD PTR tv71[rsp], r8
  0004d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00052	4c 8b c9	 mov	 r9, rcx
  00055	4c 8b c2	 mov	 r8, rdx
  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR tv71[rsp]
  0005d	48 8b d0	 mov	 rdx, rax
  00060	48 8b 4c 24 58	 mov	 rcx, QWORD PTR hThread$[rsp]
  00065	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetThreadTimes

; 881  :     };

  0006b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ENDP ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ PROC ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ENDP ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z
_TEXT	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv77 = 88
this$ = 112
_Fx$ = 120
<_Ax_0>$ = 128
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z PROC ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>, COMDAT

; 53   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) { // construct with _Fx(_Ax...)

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 54   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 55   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

  00028	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <_Ax_0>$[rsp]
  00030	e8 00 00 00 00	 call	 ??$forward@PEAVCPerfMonitor@@@std@@YA$$QEAPEAVCPerfMonitor@@AEAPEAV1@@Z ; std::forward<CPerfMonitor *>
  00035	48 89 44 24 50	 mov	 QWORD PTR tv65[rsp], rax
  0003a	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Fx$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$forward@A6AXPEAX@Z@std@@YAA6AXPEAX@ZA6AX0@Z@Z ; std::forward<void (__cdecl&)(void *)>
  00044	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv65[rsp]
  00049	4c 8b c1	 mov	 r8, rcx
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  00054	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@A6AXPEAX@ZPEAVCPerfMonitor@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@0@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::make_unique<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,void (__cdecl&)(void *),CPerfMonitor *,0>
  00059	90		 npad	 1

; 56   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@$0A@$00@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,0,1>
  00061	48 89 44 24 48	 mov	 QWORD PTR _Invoker_proc$[rsp], rax

; 57   : 
; 58   : #pragma warning(push)
; 59   : #pragma warning(disable : 5039) // pointer or reference to potentially throwing function passed to
; 60   :                                 // extern C function under -EHc. Undefined behavior may occur
; 61   :                                 // if this function throws an exception. (/Wall)
; 62   :         _Thr._Hnd =

  00066	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 83 c0 08	 add	 rax, 8
  0006f	48 89 44 24 58	 mov	 QWORD PTR tv77[rsp], rax
  00074	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  00079	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::get
  0007e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv77[rsp]
  00083	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00088	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00090	4c 8b c8	 mov	 r9, rax
  00093	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Invoker_proc$[rsp]
  00098	33 d2		 xor	 edx, edx
  0009a	33 c9		 xor	 ecx, ecx
  0009c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__beginthreadex
  000a2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000a7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 64   : #pragma warning(pop)
; 65   : 
; 66   :         if (_Thr._Hnd) { // ownership transferred to the thread

  000aa	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000af	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000b3	74 0c		 je	 SHORT $LN2@thread

; 67   :             (void) _Decay_copied.release();

  000b5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000ba	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::release

; 68   :         } else { // failed to start thread

  000bf	eb 17		 jmp	 SHORT $LN3@thread
$LN2@thread:

; 69   :             _Thr._Id = 0;

  000c1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000c6	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 70   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

  000cd	b9 06 00 00 00	 mov	 ecx, 6
  000d2	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
  000d7	90		 npad	 1
$LN3@thread:

; 71   :         }
; 72   :     }

  000d8	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000dd	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
  000e2	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000e7	48 8b f8	 mov	 rdi, rax
  000ea	48 8b cc	 mov	 rcx, rsp
  000ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z$rtcFrameData
  000f4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f9	48 8b c7	 mov	 rax, rdi
  000fc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00100	5f		 pop	 rdi
  00101	c3		 ret	 0
$LN6@thread:
??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ENDP ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv77 = 88
this$ = 112
_Fx$ = 120
<_Ax_0>$ = 128
?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA PROC ; `std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv77 = 88
this$ = 112
_Fx$ = 120
<_Ax_0>$ = 128
?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA PROC ; `std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCPerfMonitor@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CPerfMonitor *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CPerfMonitor *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ PROC ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ PROC ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEBD@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<char const *> >::_Vector_val<std::_Simple_types<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEBAAEBV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAAAEAV?$allocator@PEBD@2@XZ ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA PROC ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAXPEAPEBD0@Z@4HA ENDP ; `std::vector<char const *,std::allocator<char const *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@PEBDV?$allocator@PEBD@std@@@std@@CAXXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ PROC ; std::vector<char const *,std::allocator<char const *> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ; std::vector<char const *,std::allocator<char const *> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 03	 sar	 rax, 3
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ; std::allocator<char const *>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e5	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000e9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000f6	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  000fb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00107	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
?_Change_array@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXQEAPEBD_K1@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ; std::vector<char const *,std::allocator<char const *> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEBD@std@@@std@@YAXPEAPEBDQEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Destroy_range<std::allocator<char const *> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD0@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXPEAPEBD00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z PROC ; std::vector<char const *,std::allocator<char const *> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEBDV?$allocator@PEBD@std@@@std@@YAPEAPEBDQEAPEBD0PEAPEBDAEAV?$allocator@PEBD@0@@Z ; std::_Uninitialized_move<char const * *,std::allocator<char const *> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAPEAPEBDPEAPEBD00@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ PROC ; std::vector<char const *,std::allocator<char const *> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ PROC ; std::vector<char const *,std::allocator<char const *> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEBAAEBV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEBA_KXZ ENDP ; std::vector<char const *,std::allocator<char const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEBD@std@@YA$$QEAPEBDAEAPEBD@Z ; std::move<char const * &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@PEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const *>

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z PROC ; std::vector<char const *,std::allocator<char const *> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 668  :         emplace_back(_Val);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Val$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$emplace_back@AEBQEBD@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::emplace_back<char const * const &>

; 669  :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ENDP ; std::vector<char const *,std::allocator<char const *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAXXZ ; std::vector<char const *,std::allocator<char const *> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ PROC ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEBD@std@@V?$_Vector_val@U?$_Simple_types@PEBD@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1>::_Compressed_pair<std::allocator<char const *>,std::_Vector_val<std::_Simple_types<char const *> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEBDV?$allocator@PEBD@std@@@std@@AEAAAEAV?$allocator@PEBD@2@XZ ; std::vector<char const *,std::allocator<char const *> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0PEBD@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEBD@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char const *>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ENDP ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@PEBD@std@@@std@@SA_KAEBV?$allocator@PEBD@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char const *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z PROC	; std::allocator<char const *>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@PEBD@std@@QEAAPEAPEBD_K@Z ENDP	; std::allocator<char const *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z PROC	; std::allocator<char const *>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@PEBD@std@@QEAAXQEAPEBD_K@Z ENDP	; std::allocator<char const *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@PEBD@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@PEBD@std@@QEAA@XZ PROC			; std::allocator<char const *>::allocator<char const *>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@PEBD@std@@QEAA@XZ ENDP			; std::allocator<char const *>::allocator<char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAVRGYPipeProcess@@@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVRGYPipeProcess@@@Z ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><RGYPipeProcess * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z PROC ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAU_iobuf@@@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAU_iobuf@@@Z ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><_iobuf * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z ENDP ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z PROC ; std::move<std::unique_ptr<void,handle_deleter> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ENDP ; std::move<std::unique_ptr<void,handle_deleter> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Compressed_pair<fp_deleter,_iobuf *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>, COMDAT

; 1809 :     constexpr unique_ptr() noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><>
  00030	90		 npad	 1
  00031	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Val$[rsp]
  00010	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00013	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv66 = 48
__$ReturnUdt$ = 80
_Left$ = 88
_Right$ = 96
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 524  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 525  :         // add time_point to time_point
; 526  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

  00028	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0002d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Right$[rsp]
  00032	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00037	48 89 44 24 30	 mov	 QWORD PTR tv66[rsp], rax
  0003c	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00041	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Left$[rsp]
  00046	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	4c 8b c1	 mov	 r8, rcx
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
  00060	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 527  :     }

  00065	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ PROC ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ENDP ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_status.h
;	COMDAT ?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ
_TEXT	SEGMENT
this$ = 24
__$ReturnUdt$ = 32
?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ PROC ; EncodeStatus::GetEncodeData, COMDAT

; 388  :     EncodeStatusData GetEncodeData() {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi

; 389  :         return m_sData;

  0000c	48 8b 44 24 18	 mov	 rax, QWORD PTR this$[rsp]
  00011	48 8b 7c 24 20	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  00016	48 8d 70 08	 lea	 rsi, QWORD PTR [rax+8]
  0001a	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H
  0001f	f3 a4		 rep movsb
  00021	48 8b 44 24 20	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 390  :     }

  00026	5f		 pop	 rdi
  00027	5e		 pop	 rsi
  00028	c3		 ret	 0
?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ ENDP ; EncodeStatus::GetEncodeData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_status.h
;	COMDAT ?getEncStarted@EncodeStatus@@QEAA_NXZ
_TEXT	SEGMENT
this$ = 16
?getEncStarted@EncodeStatus@@QEAA_NXZ PROC		; EncodeStatus::getEncStarted, COMDAT

; 379  :     bool getEncStarted() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 380  :         return m_bEncStarted;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b6 80 11 01
	00 00		 movzx	 eax, BYTE PTR [rax+273]

; 381  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?getEncStarted@EncodeStatus@@QEAA_NXZ ENDP		; EncodeStatus::getEncStarted
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_status.h
;	COMDAT ?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ
_TEXT	SEGMENT
this$ = 16
?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ PROC	; EncodeStatus::getStartTimeMicroSec, COMDAT

; 372  :     int64_t getStartTimeMicroSec() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 373  : #if defined(_WIN32) || defined(_WIN64)
; 374  :         return m_sStartTime.creation / 10;

  00006	33 d2		 xor	 edx, edx
  00008	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000d	48 8b 80 e0 00
	00 00		 mov	 rax, QWORD PTR [rax+224]
  00014	b9 0a 00 00 00	 mov	 ecx, 10
  00019	48 f7 f1	 div	 rcx

; 375  : #else
; 376  :         return (int)(m_sStartTime.creation * (double)(1e6 / CLOCKS_PER_SEC) + 0.5);
; 377  : #endif
; 378  :     }

  0001c	5f		 pop	 rdi
  0001d	c3		 ret	 0
?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ ENDP	; EncodeStatus::getStartTimeMicroSec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ PROC		; std::shared_ptr<RGYLog>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ENDP		; std::shared_ptr<RGYLog>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z PROC	; std::shared_ptr<RGYLog>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ENDP	; std::shared_ptr<RGYLog>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::shared_ptr<RGYLog>::operator=, COMDAT

; 1136 :     shared_ptr& operator=(const shared_ptr& _Right) noexcept { // assign shared ownership of resource owned by _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1137 :         shared_ptr(_Right).swap(*this);

  00023	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  00032	90		 npad	 1
  00033	48 89 44 24 30	 mov	 QWORD PTR tv73[rsp], rax
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR tv73[rsp]
  0003d	48 89 44 24 38	 mov	 QWORD PTR tv72[rsp], rax
  00042	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00047	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv72[rsp]
  0004c	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
  00051	90		 npad	 1
  00052	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00057	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0005c	90		 npad	 1

; 1138 :         return *this;

  0005d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1139 :     }

  00062	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::shared_ptr<RGYLog>::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<RGYLog>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ; std::_Ptr_base<RGYLog>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z PROC	; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>, COMDAT

; 1078 :     shared_ptr(const shared_ptr& _Other) noexcept { // construct shared_ptr object that owns same resource as _Other

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>

; 1079 :         this->_Copy_construct_from(_Other);

  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??$_Copy_construct_from@VRGYLog@@@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEBV?$shared_ptr@VRGYLog@@@1@@Z ; std::_Ptr_base<RGYLog>::_Copy_construct_from<RGYLog>

; 1080 :     }

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??0?$shared_ptr@VRGYLog@@@std@@QEAA@AEBV01@@Z ENDP	; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z PROC	; std::_Ptr_base<RGYLog>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ENDP	; std::_Ptr_base<RGYLog>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ PROC	; std::_Ptr_base<RGYLog>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<RGYLog>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
;	COMDAT ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ PROC		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ PROC	; std::_Ptr_base<RGYLog>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ENDP	; std::_Ptr_base<RGYLog>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ PROC ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ENDP ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z PROC ; std::unique_ptr<_iobuf,fp_deleter>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAU_iobuf@@AEAPEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@0@Z ; std::exchange<_iobuf *,_iobuf * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z ; fp_deleter::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ENDP ; std::unique_ptr<_iobuf,fp_deleter>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAU_iobuf@@PEAU1@@std@@YAPEAU_iobuf@@AEAPEAU1@$$QEAPEAU1@@Z ; std::exchange<_iobuf *,_iobuf *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::operator bool, COMDAT

; 1899 :     explicit operator bool() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1900 :         return static_cast<bool>(_Mypair._Myval2);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 06		 je	 SHORT $LN3@operator
  00029	c6 04 24 01	 mov	 BYTE PTR tv67[rsp], 1
  0002d	eb 04		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c6 04 24 00	 mov	 BYTE PTR tv67[rsp], 0
$LN4@operator:
  00033	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 1901 :     }

  00037	48 83 c4 10	 add	 rsp, 16
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ PROC ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z ; fp_deleter::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ENDP ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<_iobuf,fp_deleter>::operator=, COMDAT

; 1860 :     unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1861 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@@std@@YAPEAV?$unique_ptr@U_iobuf@@Ufp_deleter@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<_iobuf,fp_deleter> >
  0002d	48 39 44 24 30	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 39		 je	 SHORT $LN2@operator

; 1862 :             reset(_Right.release());

  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?release@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::release
  0003e	48 8b d0	 mov	 rdx, rax
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset

; 1863 :             _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??$forward@Ufp_deleter@@@std@@YA$$QEAUfp_deleter@@AEAU1@@Z ; std::forward<fp_deleter>
  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Ufp_deleter@@PEAU_iobuf@@$00@std@@QEAAAEAUfp_deleter@@XZ ; std::_Compressed_pair<fp_deleter,_iobuf *,1>::_Get_first
$LN2@operator:

; 1864 :         }
; 1865 :         return *this;

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1866 :     }

  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<_iobuf,fp_deleter>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv71 = 32
this$ = 64
??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ PROC	; std::shared_ptr<EncodeStatus>::operator bool, COMDAT

; 1218 :     explicit operator bool() const noexcept { // test if shared_ptr object owns a resource

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1219 :         return get() != nullptr;

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ; std::_Ptr_base<EncodeStatus>::get
  00028	48 85 c0	 test	 rax, rax
  0002b	74 0a		 je	 SHORT $LN3@operator
  0002d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  00035	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00037	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@operator:
  0003f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv71[rsp]

; 1220 :     }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ ENDP	; std::shared_ptr<EncodeStatus>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z PROC ; std::shared_ptr<EncodeStatus>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ENDP ; std::shared_ptr<EncodeStatus>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::shared_ptr<EncodeStatus>::operator=, COMDAT

; 1136 :     shared_ptr& operator=(const shared_ptr& _Right) noexcept { // assign shared ownership of resource owned by _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1137 :         shared_ptr(_Right).swap(*this);

  00023	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  00032	90		 npad	 1
  00033	48 89 44 24 30	 mov	 QWORD PTR tv73[rsp], rax
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR tv73[rsp]
  0003d	48 89 44 24 38	 mov	 QWORD PTR tv72[rsp], rax
  00042	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00047	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv72[rsp]
  0004c	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
  00051	90		 npad	 1
  00052	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00057	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0005c	90		 npad	 1

; 1138 :         return *this;

  0005d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1139 :     }

  00062	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::shared_ptr<EncodeStatus>::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<EncodeStatus>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<EncodeStatus>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<EncodeStatus>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<EncodeStatus>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z PROC ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>, COMDAT

; 1078 :     shared_ptr(const shared_ptr& _Other) noexcept { // construct shared_ptr object that owns same resource as _Other

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>

; 1079 :         this->_Copy_construct_from(_Other);

  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??$_Copy_construct_from@VEncodeStatus@@@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEBV?$shared_ptr@VEncodeStatus@@@1@@Z ; std::_Ptr_base<EncodeStatus>::_Copy_construct_from<EncodeStatus>

; 1080 :     }

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@AEBV01@@Z ENDP ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z PROC ; std::_Ptr_base<EncodeStatus>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ENDP ; std::_Ptr_base<EncodeStatus>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ PROC	; std::_Ptr_base<EncodeStatus>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<EncodeStatus>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
;	COMDAT ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ PROC	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ENDP	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ PROC ; std::_Ptr_base<EncodeStatus>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VEncodeStatus@@@std@@IEBAPEAVEncodeStatus@@XZ ENDP ; std::_Ptr_base<EncodeStatus>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAVRGYPipeProcess@@AEAPEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@0@Z ; std::exchange<RGYPipeProcess *,RGYPipeProcess * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z ; std::default_delete<RGYPipeProcess>::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAVRGYPipeProcess@@PEAV1@@std@@YAPEAVRGYPipeProcess@@AEAPEAV1@$$QEAPEAV1@@Z ; std::exchange<RGYPipeProcess *,RGYPipeProcess *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator bool, COMDAT

; 1899 :     explicit operator bool() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1900 :         return static_cast<bool>(_Mypair._Myval2);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 06		 je	 SHORT $LN3@operator
  00029	c6 04 24 01	 mov	 BYTE PTR tv67[rsp], 1
  0002d	eb 04		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c6 04 24 00	 mov	 BYTE PTR tv67[rsp], 0
$LN4@operator:
  00033	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 1901 :     }

  00037	48 83 c4 10	 add	 rsp, 16
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z ; std::default_delete<RGYPipeProcess>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator=, COMDAT

; 1860 :     unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1861 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> > >
  0002d	48 39 44 24 30	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 39		 je	 SHORT $LN2@operator

; 1862 :             reset(_Right.release());

  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?release@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::release
  0003e	48 8b d0	 mov	 rdx, rax
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::reset

; 1863 :             _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@VRGYPipeProcess@@@std@@@std@@YA$$QEAU?$default_delete@VRGYPipeProcess@@@0@AEAU10@@Z ; std::forward<std::default_delete<RGYPipeProcess> >
  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYPipeProcess@@@std@@PEAVRGYPipeProcess@@$00@std@@QEAAAEAU?$default_delete@VRGYPipeProcess@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYPipeProcess>,RGYPipeProcess *,1>::_Get_first
$LN2@operator:

; 1864 :         }
; 1865 :         return *this;

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1866 :     }

  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z PROC ; std::default_delete<RGYPipeProcess>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 1b		 je	 SHORT $LN3@operator
  00035	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	ba 01 00 00 00	 mov	 edx, 1
  00042	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00047	ff 10		 call	 QWORD PTR [rax]
  00049	48 89 44 24 28	 mov	 QWORD PTR tv70[rsp], rax
  0004e	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv70[rsp], 0
$LN4@operator:

; 1768 :     }

  00059	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??R?$default_delete@VRGYPipeProcess@@@std@@QEBAXPEAVRGYPipeProcess@@@Z ENDP ; std::default_delete<RGYPipeProcess>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ PROC ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ENDP ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z PROC ; std::unique_ptr<void,handle_deleter>::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAXAEAPEAX@std@@YAPEAXAEAPEAX0@Z ; std::exchange<void *,void * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??Rhandle_deleter@@QEBAXPEAX@Z ; handle_deleter::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z ENDP ; std::unique_ptr<void,handle_deleter>::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ PROC ; std::unique_ptr<void,handle_deleter>::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z ; std::exchange<void *,void *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ ENDP ; std::unique_ptr<void,handle_deleter>::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ PROC	; std::unique_ptr<void,handle_deleter>::operator bool, COMDAT

; 1899 :     explicit operator bool() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1900 :         return static_cast<bool>(_Mypair._Myval2);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 06		 je	 SHORT $LN3@operator
  00029	c6 04 24 01	 mov	 BYTE PTR tv67[rsp], 1
  0002d	eb 04		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0002f	c6 04 24 00	 mov	 BYTE PTR tv67[rsp], 0
$LN4@operator:
  00033	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 1901 :     }

  00037	48 83 c4 10	 add	 rsp, 16
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ ENDP	; std::unique_ptr<void,handle_deleter>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ PROC ; std::unique_ptr<void,handle_deleter>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ENDP ; std::unique_ptr<void,handle_deleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ PROC	; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??Rhandle_deleter@@QEBAXPEAX@Z ; handle_deleter::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ENDP	; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<void,handle_deleter>::operator=, COMDAT

; 1860 :     unique_ptr& operator=(unique_ptr&& _Right) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1861 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<void,handle_deleter> >
  0002d	48 39 44 24 30	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 39		 je	 SHORT $LN2@operator

; 1862 :             reset(_Right.release());

  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00039	e8 00 00 00 00	 call	 ?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ ; std::unique_ptr<void,handle_deleter>::release
  0003e	48 8b d0	 mov	 rdx, rax
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z ; std::unique_ptr<void,handle_deleter>::reset

; 1863 :             _Mypair._Get_first() = _STD forward<_Dx>(_Right._Mypair._Get_first());

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::forward<handle_deleter>
  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
$LN2@operator:

; 1864 :         }
; 1865 :         return *this;

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1866 :     }

  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<void,handle_deleter>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
str$ = 40
i$4 = 84
$T5 = 96
__$ArrayPad$ = 104
this$ = 128
__$ReturnUdt$ = 136
select$ = 144
?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z PROC ; CPerfMonitor::SelectedCounters

; 451  : tstring CPerfMonitor::SelectedCounters(int select) {

$LN12:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003a	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T5[rsp], 0

; 452  :     if (select == 0) {

  00042	83 bc 24 90 00
	00 00 00	 cmp	 DWORD PTR select$[rsp], 0
  0004a	75 2d		 jne	 SHORT $LN5@SelectedCo

; 453  :         return _T("none");

  0004c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117262
  00053	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00060	90		 npad	 1
  00061	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  00065	83 c8 01	 or	 eax, 1
  00068	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  0006c	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00074	e9 12 01 00 00	 jmp	 $LN1@SelectedCo
$LN5@SelectedCo:

; 454  :     }
; 455  :     tstring str;

  00079	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0007e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00083	90		 npad	 1

; 456  :     for (uint32_t i = 0; i < _countof(list_pref_monitor); i++) {

  00084	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR i$4[rsp], 0
  0008c	eb 0a		 jmp	 SHORT $LN4@SelectedCo
$LN2@SelectedCo:
  0008e	8b 44 24 54	 mov	 eax, DWORD PTR i$4[rsp]
  00092	ff c0		 inc	 eax
  00094	89 44 24 54	 mov	 DWORD PTR i$4[rsp], eax
$LN4@SelectedCo:
  00098	8b 44 24 54	 mov	 eax, DWORD PTR i$4[rsp]
  0009c	48 83 f8 1f	 cmp	 rax, 31
  000a0	0f 83 b6 00 00
	00		 jae	 $LN3@SelectedCo

; 457  :         if (list_pref_monitor[i].desc &&

  000a6	8b 44 24 54	 mov	 eax, DWORD PTR i$4[rsp]
  000aa	48 6b c0 10	 imul	 rax, rax, 16
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_pref_monitor@@3QBUCX_DESC@@B
  000b5	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  000ba	0f 84 97 00 00
	00		 je	 $LN6@SelectedCo
  000c0	8b 44 24 54	 mov	 eax, DWORD PTR i$4[rsp]
  000c4	48 6b c0 10	 imul	 rax, rax, 16
  000c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_pref_monitor@@3QBUCX_DESC@@B
  000cf	8b 44 01 08	 mov	 eax, DWORD PTR [rcx+rax+8]
  000d3	8b 8c 24 90 00
	00 00		 mov	 ecx, DWORD PTR select$[rsp]
  000da	23 c8		 and	 ecx, eax
  000dc	8b c1		 mov	 eax, ecx
  000de	8b 4c 24 54	 mov	 ecx, DWORD PTR i$4[rsp]
  000e2	48 6b c9 10	 imul	 rcx, rcx, 16
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?list_pref_monitor@@3QBUCX_DESC@@B
  000ed	3b 44 0a 08	 cmp	 eax, DWORD PTR [rdx+rcx+8]
  000f1	75 64		 jne	 SHORT $LN6@SelectedCo

; 458  :             (select & list_pref_monitor[i].value) == list_pref_monitor[i].value) {
; 459  :             if (str.length()) {

  000f3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000f8	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000fd	48 85 c0	 test	 rax, rax
  00100	74 11		 je	 SHORT $LN7@SelectedCo

; 460  :                 str += _T(",");

  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117265
  00109	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0010e	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN7@SelectedCo:

; 461  :             }
; 462  :             str += list_pref_monitor[i].desc;

  00113	8b 44 24 54	 mov	 eax, DWORD PTR i$4[rsp]
  00117	48 6b c0 10	 imul	 rax, rax, 16
  0011b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_pref_monitor@@3QBUCX_DESC@@B
  00122	48 8b 14 01	 mov	 rdx, QWORD PTR [rcx+rax]
  00126	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0012b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 463  :             select &= ~(list_pref_monitor[i].value);

  00130	8b 44 24 54	 mov	 eax, DWORD PTR i$4[rsp]
  00134	48 6b c0 10	 imul	 rax, rax, 16
  00138	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_pref_monitor@@3QBUCX_DESC@@B
  0013f	8b 44 01 08	 mov	 eax, DWORD PTR [rcx+rax+8]
  00143	f7 d0		 not	 eax
  00145	8b 8c 24 90 00
	00 00		 mov	 ecx, DWORD PTR select$[rsp]
  0014c	23 c8		 and	 ecx, eax
  0014e	8b c1		 mov	 eax, ecx
  00150	89 84 24 90 00
	00 00		 mov	 DWORD PTR select$[rsp], eax
$LN6@SelectedCo:

; 464  :         }
; 465  :     }

  00157	e9 32 ff ff ff	 jmp	 $LN2@SelectedCo
$LN3@SelectedCo:

; 466  :     return str;

  0015c	48 8d 54 24 28	 lea	 rdx, QWORD PTR str$[rsp]
  00161	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00169	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016e	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  00172	83 c8 01	 or	 eax, 1
  00175	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  00179	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0017e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00183	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@SelectedCo:

; 467  : }

  0018b	48 8b f8	 mov	 rdi, rax
  0018e	48 8b cc	 mov	 rcx, rsp
  00191	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z$rtcFrameData
  00198	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0019d	48 8b c7	 mov	 rax, rdi
  001a0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001a5	48 33 cc	 xor	 rcx, rsp
  001a8	e8 00 00 00 00	 call	 __security_check_cookie
  001ad	48 83 c4 70	 add	 rsp, 112		; 00000070H
  001b1	5f		 pop	 rdi
  001b2	c3		 ret	 0
  001b3	cc		 int	 3
?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ENDP ; CPerfMonitor::SelectedCounters
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
i$4 = 84
$T5 = 96
__$ArrayPad$ = 104
this$ = 128
__$ReturnUdt$ = 136
select$ = 144
?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA PROC ; `CPerfMonitor::SelectedCounters'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA ENDP ; `CPerfMonitor::SelectedCounters'::`1'::dtor$0
str$ = 40
i$4 = 84
$T5 = 96
__$ArrayPad$ = 104
this$ = 128
__$ReturnUdt$ = 136
select$ = 144
?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA PROC ; `CPerfMonitor::SelectedCounters'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA ENDP ; `CPerfMonitor::SelectedCounters'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
i$4 = 84
$T5 = 96
__$ArrayPad$ = 104
this$ = 128
__$ReturnUdt$ = 136
select$ = 144
?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA PROC ; `CPerfMonitor::SelectedCounters'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN10@dtor$0
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@dtor$0:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$0@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA ENDP ; `CPerfMonitor::SelectedCounters'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
i$4 = 84
$T5 = 96
__$ArrayPad$ = 104
this$ = 128
__$ReturnUdt$ = 136
select$ = 144
?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA PROC ; `CPerfMonitor::SelectedCounters'::`1'::dtor$1
  00034	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00039	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0003e	55		 push	 rbp
  0003f	57		 push	 rdi
  00040	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00044	48 8b ea	 mov	 rbp, rdx
  00047	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z@4HA ENDP ; `CPerfMonitor::SelectedCounters'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
prm$ = 48
?loader@CPerfMonitor@@KAXPEAX@Z PROC			; CPerfMonitor::loader

; 1243 : void CPerfMonitor::loader(void *prm) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1244 :     reinterpret_cast<CPerfMonitor*>(prm)->run();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR prm$[rsp]
  00023	e8 00 00 00 00	 call	 ?run@CPerfMonitor@@IEAAXXZ ; CPerfMonitor::run

; 1245 : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?loader@CPerfMonitor@@KAXPEAX@Z ENDP			; CPerfMonitor::loader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z PROC		; CPerfMonitor::write

; 1141 : void CPerfMonitor::write(FILE *fp, int nSelect) {

$LN66:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 50 07
	00 00		 sub	 rsp, 1872		; 00000750H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 d4 01 00 00	 mov	 ecx, 468		; 000001d4H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 60
	07 00 00	 mov	 rcx, QWORD PTR [rsp+1888]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 84 24 40
	07 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1142 :     if (fp == NULL) {

  00040	48 83 bc 24 68
	07 00 00 00	 cmp	 QWORD PTR fp$[rsp], 0
  00049	75 05		 jne	 SHORT $LN2@write

; 1143 :         return;

  0004b	e9 fa 0d 00 00	 jmp	 $LN1@write
$LN2@write:

; 1144 :     }
; 1145 :     const PerfInfo *pInfo = &m_info[m_nStep & 1];

  00050	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00058	8b 00		 mov	 eax, DWORD PTR [rax]
  0005a	83 e0 01	 and	 eax, 1
  0005d	48 98		 cdqe
  0005f	48 69 c0 38 01
	00 00		 imul	 rax, rax, 312		; 00000138H
  00066	48 8b 8c 24 60
	07 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	48 8d 44 01 30	 lea	 rax, QWORD PTR [rcx+rax+48]
  00073	48 89 44 24 20	 mov	 QWORD PTR pInfo$[rsp], rax

; 1146 :     std::string str = strsprintf("%lf", pInfo->time_us * 1e-6);

  00078	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  0007d	f2 48 0f 2a 00	 cvtsi2sd xmm0, QWORD PTR [rax]
  00082	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3eb0c6f7a0b5ed8d
  0008a	0f 28 d0	 movaps	 xmm2, xmm0
  0008d	66 49 0f 7e d0	 movq	 r8, xmm2
  00092	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118409
  00099	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0009e	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  000a3	90		 npad	 1

; 1147 :     if (nSelect & PERF_MONITOR_CPU) {

  000a4	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  000ab	83 e0 01	 and	 eax, 1
  000ae	85 c0		 test	 eax, eax
  000b0	74 58		 je	 SHORT $LN3@write

; 1148 :         str += strsprintf(",%lf", pInfo->cpu_percent);

  000b2	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  000b7	f2 0f 10 90 b0
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+176]
  000bf	66 49 0f 7e d0	 movq	 r8, xmm2
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118411
  000cb	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  000d0	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  000d5	48 89 84 24 48
	05 00 00	 mov	 QWORD PTR tv72[rsp], rax
  000dd	48 8b 84 24 48
	05 00 00	 mov	 rax, QWORD PTR tv72[rsp]
  000e5	48 89 84 24 50
	05 00 00	 mov	 QWORD PTR tv509[rsp], rax
  000ed	48 8b 94 24 50
	05 00 00	 mov	 rdx, QWORD PTR tv509[rsp]
  000f5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  000fa	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  000ff	90		 npad	 1
  00100	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  00105	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN3@write:

; 1149 :     }
; 1150 :     if (nSelect & PERF_MONITOR_CPU_KERNEL) {

  0010a	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00111	83 e0 02	 and	 eax, 2
  00114	85 c0		 test	 eax, eax
  00116	74 5e		 je	 SHORT $LN4@write

; 1151 :         str += strsprintf(",%lf", pInfo->cpu_kernel_percent);

  00118	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  0011d	f2 0f 10 90 b8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+184]
  00125	66 49 0f 7e d0	 movq	 r8, xmm2
  0012a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118413
  00131	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  00139	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0013e	48 89 84 24 58
	05 00 00	 mov	 QWORD PTR tv602[rsp], rax
  00146	48 8b 84 24 58
	05 00 00	 mov	 rax, QWORD PTR tv602[rsp]
  0014e	48 89 84 24 60
	05 00 00	 mov	 QWORD PTR tv511[rsp], rax
  00156	48 8b 94 24 60
	05 00 00	 mov	 rdx, QWORD PTR tv511[rsp]
  0015e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00163	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00168	90		 npad	 1
  00169	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp]
  00171	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@write:

; 1152 :     }
; 1153 :     if (nSelect & PERF_MONITOR_THREAD_MAIN) {

  00176	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0017d	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00182	85 c0		 test	 eax, eax
  00184	74 5e		 je	 SHORT $LN5@write

; 1154 :         str += strsprintf(",%lf", pInfo->main_thread_percent);

  00186	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  0018b	f2 0f 10 90 c0
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+192]
  00193	66 49 0f 7e d0	 movq	 r8, xmm2
  00198	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118415
  0019f	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  001a7	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  001ac	48 89 84 24 68
	05 00 00	 mov	 QWORD PTR tv603[rsp], rax
  001b4	48 8b 84 24 68
	05 00 00	 mov	 rax, QWORD PTR tv603[rsp]
  001bc	48 89 84 24 70
	05 00 00	 mov	 QWORD PTR tv545[rsp], rax
  001c4	48 8b 94 24 70
	05 00 00	 mov	 rdx, QWORD PTR tv545[rsp]
  001cc	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  001d1	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  001d6	90		 npad	 1
  001d7	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  001df	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@write:

; 1155 :     }
; 1156 :     if (nSelect & PERF_MONITOR_THREAD_ENC) {

  001e4	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  001eb	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  001f0	85 c0		 test	 eax, eax
  001f2	74 5e		 je	 SHORT $LN6@write

; 1157 :         str += strsprintf(",%lf", pInfo->enc_thread_percent);

  001f4	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  001f9	f2 0f 10 90 c8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+200]
  00201	66 49 0f 7e d0	 movq	 r8, xmm2
  00206	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118417
  0020d	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00215	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0021a	48 89 84 24 78
	05 00 00	 mov	 QWORD PTR tv604[rsp], rax
  00222	48 8b 84 24 78
	05 00 00	 mov	 rax, QWORD PTR tv604[rsp]
  0022a	48 89 84 24 80
	05 00 00	 mov	 QWORD PTR tv547[rsp], rax
  00232	48 8b 94 24 80
	05 00 00	 mov	 rdx, QWORD PTR tv547[rsp]
  0023a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0023f	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00244	90		 npad	 1
  00245	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  0024d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN6@write:

; 1158 :     }
; 1159 :     if (nSelect & PERF_MONITOR_THREAD_AUDP) {

  00252	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00259	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0025e	85 c0		 test	 eax, eax
  00260	74 5e		 je	 SHORT $LN7@write

; 1160 :         str += strsprintf(",%lf", pInfo->aud_proc_thread_percent);

  00262	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00267	f2 0f 10 90 d0
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+208]
  0026f	66 49 0f 7e d0	 movq	 r8, xmm2
  00274	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118419
  0027b	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00283	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00288	48 89 84 24 88
	05 00 00	 mov	 QWORD PTR tv605[rsp], rax
  00290	48 8b 84 24 88
	05 00 00	 mov	 rax, QWORD PTR tv605[rsp]
  00298	48 89 84 24 90
	05 00 00	 mov	 QWORD PTR tv549[rsp], rax
  002a0	48 8b 94 24 90
	05 00 00	 mov	 rdx, QWORD PTR tv549[rsp]
  002a8	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  002ad	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  002b2	90		 npad	 1
  002b3	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  002bb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@write:

; 1161 :     }
; 1162 :     if (nSelect & PERF_MONITOR_THREAD_AUDE) {

  002c0	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  002c7	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  002cc	85 c0		 test	 eax, eax
  002ce	74 5e		 je	 SHORT $LN8@write

; 1163 :         str += strsprintf(",%lf", pInfo->aud_enc_thread_percent);

  002d0	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  002d5	f2 0f 10 90 d8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+216]
  002dd	66 49 0f 7e d0	 movq	 r8, xmm2
  002e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118421
  002e9	48 8d 8c 24 30
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  002f1	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  002f6	48 89 84 24 98
	05 00 00	 mov	 QWORD PTR tv606[rsp], rax
  002fe	48 8b 84 24 98
	05 00 00	 mov	 rax, QWORD PTR tv606[rsp]
  00306	48 89 84 24 a0
	05 00 00	 mov	 QWORD PTR tv551[rsp], rax
  0030e	48 8b 94 24 a0
	05 00 00	 mov	 rdx, QWORD PTR tv551[rsp]
  00316	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0031b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00320	90		 npad	 1
  00321	48 8d 8c 24 30
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00329	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@write:

; 1164 :     }
; 1165 :     if (nSelect & PERF_MONITOR_THREAD_IN) {

  0032e	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00335	25 00 80 00 00	 and	 eax, 32768		; 00008000H
  0033a	85 c0		 test	 eax, eax
  0033c	74 5e		 je	 SHORT $LN9@write

; 1166 :         str += strsprintf(",%lf", pInfo->in_thread_percent);

  0033e	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00343	f2 0f 10 90 e8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+232]
  0034b	66 49 0f 7e d0	 movq	 r8, xmm2
  00350	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118423
  00357	48 8d 8c 24 58
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  0035f	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00364	48 89 84 24 a8
	05 00 00	 mov	 QWORD PTR tv607[rsp], rax
  0036c	48 8b 84 24 a8
	05 00 00	 mov	 rax, QWORD PTR tv607[rsp]
  00374	48 89 84 24 b0
	05 00 00	 mov	 QWORD PTR tv553[rsp], rax
  0037c	48 8b 94 24 b0
	05 00 00	 mov	 rdx, QWORD PTR tv553[rsp]
  00384	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00389	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0038e	90		 npad	 1
  0038f	48 8d 8c 24 58
	01 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00397	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN9@write:

; 1167 :     }
; 1168 :     if (nSelect & PERF_MONITOR_THREAD_OUT) {

  0039c	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  003a3	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  003a8	85 c0		 test	 eax, eax
  003aa	74 5e		 je	 SHORT $LN10@write

; 1169 :         str += strsprintf(",%lf", pInfo->out_thread_percent);

  003ac	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  003b1	f2 0f 10 90 e0
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+224]
  003b9	66 49 0f 7e d0	 movq	 r8, xmm2
  003be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118425
  003c5	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  003cd	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  003d2	48 89 84 24 b8
	05 00 00	 mov	 QWORD PTR tv608[rsp], rax
  003da	48 8b 84 24 b8
	05 00 00	 mov	 rax, QWORD PTR tv608[rsp]
  003e2	48 89 84 24 c0
	05 00 00	 mov	 QWORD PTR tv555[rsp], rax
  003ea	48 8b 94 24 c0
	05 00 00	 mov	 rdx, QWORD PTR tv555[rsp]
  003f2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  003f7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  003fc	90		 npad	 1
  003fd	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00405	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN10@write:

; 1170 :     }
; 1171 :     if (nSelect & PERF_MONITOR_GPU_LOAD) {

  0040a	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00411	25 00 00 04 00	 and	 eax, 262144		; 00040000H
  00416	85 c0		 test	 eax, eax
  00418	74 5e		 je	 SHORT $LN11@write

; 1172 :         str += strsprintf(",%lf", pInfo->gpu_load_percent);

  0041a	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  0041f	f2 0f 10 90 f8
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+248]
  00427	66 49 0f 7e d0	 movq	 r8, xmm2
  0042c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118427
  00433	48 8d 8c 24 a8
	01 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  0043b	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00440	48 89 84 24 c8
	05 00 00	 mov	 QWORD PTR tv609[rsp], rax
  00448	48 8b 84 24 c8
	05 00 00	 mov	 rax, QWORD PTR tv609[rsp]
  00450	48 89 84 24 d0
	05 00 00	 mov	 QWORD PTR tv557[rsp], rax
  00458	48 8b 94 24 d0
	05 00 00	 mov	 rdx, QWORD PTR tv557[rsp]
  00460	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00465	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0046a	90		 npad	 1
  0046b	48 8d 8c 24 a8
	01 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  00473	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN11@write:

; 1173 :     }
; 1174 :     if (nSelect & PERF_MONITOR_GPU_CLOCK) {

  00478	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0047f	25 00 00 08 00	 and	 eax, 524288		; 00080000H
  00484	85 c0		 test	 eax, eax
  00486	74 5e		 je	 SHORT $LN12@write

; 1175 :         str += strsprintf(",%lf", pInfo->gpu_clock);

  00488	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  0048d	f2 0f 10 90 00
	01 00 00	 movsd	 xmm2, QWORD PTR [rax+256]
  00495	66 49 0f 7e d0	 movq	 r8, xmm2
  0049a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118429
  004a1	48 8d 8c 24 d0
	01 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  004a9	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  004ae	48 89 84 24 d8
	05 00 00	 mov	 QWORD PTR tv610[rsp], rax
  004b6	48 8b 84 24 d8
	05 00 00	 mov	 rax, QWORD PTR tv610[rsp]
  004be	48 89 84 24 e0
	05 00 00	 mov	 QWORD PTR tv559[rsp], rax
  004c6	48 8b 94 24 e0
	05 00 00	 mov	 rdx, QWORD PTR tv559[rsp]
  004ce	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  004d3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  004d8	90		 npad	 1
  004d9	48 8d 8c 24 d0
	01 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  004e1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN12@write:

; 1176 :     }
; 1177 :     if (nSelect & PERF_MONITOR_MFX_LOAD) {

  004e6	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  004ed	25 00 00 00 01	 and	 eax, 16777216		; 01000000H
  004f2	85 c0		 test	 eax, eax
  004f4	74 5e		 je	 SHORT $LN13@write

; 1178 :         str += strsprintf(",%lf", pInfo->mfx_load_percent);

  004f6	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  004fb	f2 0f 10 90 08
	01 00 00	 movsd	 xmm2, QWORD PTR [rax+264]
  00503	66 49 0f 7e d0	 movq	 r8, xmm2
  00508	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118431
  0050f	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00517	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0051c	48 89 84 24 e8
	05 00 00	 mov	 QWORD PTR tv611[rsp], rax
  00524	48 8b 84 24 e8
	05 00 00	 mov	 rax, QWORD PTR tv611[rsp]
  0052c	48 89 84 24 f0
	05 00 00	 mov	 QWORD PTR tv561[rsp], rax
  00534	48 8b 94 24 f0
	05 00 00	 mov	 rdx, QWORD PTR tv561[rsp]
  0053c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00541	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00546	90		 npad	 1
  00547	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  0054f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN13@write:

; 1179 :     }
; 1180 :     if (nSelect & PERF_MONITOR_VEE_LOAD) {

  00554	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0055b	25 00 00 00 04	 and	 eax, 67108864		; 04000000H
  00560	85 c0		 test	 eax, eax
  00562	74 5e		 je	 SHORT $LN14@write

; 1181 :         str += strsprintf(",%lf", pInfo->vee_load_percent);

  00564	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00569	f2 0f 10 90 10
	01 00 00	 movsd	 xmm2, QWORD PTR [rax+272]
  00571	66 49 0f 7e d0	 movq	 r8, xmm2
  00576	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118433
  0057d	48 8d 8c 24 20
	02 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00585	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0058a	48 89 84 24 f8
	05 00 00	 mov	 QWORD PTR tv612[rsp], rax
  00592	48 8b 84 24 f8
	05 00 00	 mov	 rax, QWORD PTR tv612[rsp]
  0059a	48 89 84 24 00
	06 00 00	 mov	 QWORD PTR tv563[rsp], rax
  005a2	48 8b 94 24 00
	06 00 00	 mov	 rdx, QWORD PTR tv563[rsp]
  005aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  005af	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  005b4	90		 npad	 1
  005b5	48 8d 8c 24 20
	02 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  005bd	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN14@write:

; 1182 :     }
; 1183 :     if (nSelect & PERF_MONITOR_VED_LOAD) {

  005c2	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  005c9	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  005ce	85 c0		 test	 eax, eax
  005d0	74 5e		 je	 SHORT $LN15@write

; 1184 :         str += strsprintf(",%lf", pInfo->ved_load_percent);

  005d2	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  005d7	f2 0f 10 90 18
	01 00 00	 movsd	 xmm2, QWORD PTR [rax+280]
  005df	66 49 0f 7e d0	 movq	 r8, xmm2
  005e4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118435
  005eb	48 8d 8c 24 48
	02 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  005f3	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  005f8	48 89 84 24 08
	06 00 00	 mov	 QWORD PTR tv613[rsp], rax
  00600	48 8b 84 24 08
	06 00 00	 mov	 rax, QWORD PTR tv613[rsp]
  00608	48 89 84 24 10
	06 00 00	 mov	 QWORD PTR tv565[rsp], rax
  00610	48 8b 94 24 10
	06 00 00	 mov	 rdx, QWORD PTR tv565[rsp]
  00618	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0061d	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00622	90		 npad	 1
  00623	48 8d 8c 24 48
	02 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  0062b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN15@write:

; 1185 :     }
; 1186 :     if (nSelect & PERF_MONITOR_VE_CLOCK) {

  00630	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00637	25 00 00 00 02	 and	 eax, 33554432		; 02000000H
  0063c	85 c0		 test	 eax, eax
  0063e	74 5e		 je	 SHORT $LN16@write

; 1187 :         str += strsprintf(",%lf", pInfo->ve_clock);

  00640	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00645	f2 0f 10 90 20
	01 00 00	 movsd	 xmm2, QWORD PTR [rax+288]
  0064d	66 49 0f 7e d0	 movq	 r8, xmm2
  00652	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118437
  00659	48 8d 8c 24 70
	02 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00661	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00666	48 89 84 24 18
	06 00 00	 mov	 QWORD PTR tv614[rsp], rax
  0066e	48 8b 84 24 18
	06 00 00	 mov	 rax, QWORD PTR tv614[rsp]
  00676	48 89 84 24 20
	06 00 00	 mov	 QWORD PTR tv567[rsp], rax
  0067e	48 8b 94 24 20
	06 00 00	 mov	 rdx, QWORD PTR tv567[rsp]
  00686	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0068b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00690	90		 npad	 1
  00691	48 8d 8c 24 70
	02 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00699	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN16@write:

; 1188 :     }
; 1189 :     if (nSelect & PERF_MONITOR_PCIE_LOAD) {

  0069e	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  006a5	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  006aa	85 c0		 test	 eax, eax
  006ac	0f 84 14 01 00
	00		 je	 $LN17@write

; 1190 :         str += strsprintf(",PCIe %dx%d", pInfo->pcie_gen, pInfo->pcie_link);

  006b2	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  006b7	44 8b 88 2c 01
	00 00		 mov	 r9d, DWORD PTR [rax+300]
  006be	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  006c3	44 8b 80 28 01
	00 00		 mov	 r8d, DWORD PTR [rax+296]
  006ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118439
  006d1	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  006d9	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  006de	48 89 84 24 28
	06 00 00	 mov	 QWORD PTR tv615[rsp], rax
  006e6	48 8b 84 24 28
	06 00 00	 mov	 rax, QWORD PTR tv615[rsp]
  006ee	48 89 84 24 30
	06 00 00	 mov	 QWORD PTR tv569[rsp], rax
  006f6	48 8b 94 24 30
	06 00 00	 mov	 rdx, QWORD PTR tv569[rsp]
  006fe	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00703	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00708	90		 npad	 1
  00709	48 8d 8c 24 98
	02 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00711	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1191 :         str += strsprintf(",%lf", pInfo->pcie_throughput_tx_per_sec);

  00716	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  0071b	44 8b 80 30 01
	00 00		 mov	 r8d, DWORD PTR [rax+304]
  00722	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118440
  00729	48 8d 8c 24 c0
	02 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  00731	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00736	48 89 84 24 38
	06 00 00	 mov	 QWORD PTR tv616[rsp], rax
  0073e	48 8b 84 24 38
	06 00 00	 mov	 rax, QWORD PTR tv616[rsp]
  00746	48 89 84 24 40
	06 00 00	 mov	 QWORD PTR tv571[rsp], rax
  0074e	48 8b 94 24 40
	06 00 00	 mov	 rdx, QWORD PTR tv571[rsp]
  00756	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0075b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00760	90		 npad	 1
  00761	48 8d 8c 24 c0
	02 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  00769	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 1192 :         str += strsprintf(",%lf", pInfo->pcie_throughput_rx_per_sec);

  0076e	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00773	44 8b 80 34 01
	00 00		 mov	 r8d, DWORD PTR [rax+308]
  0077a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118441
  00781	48 8d 8c 24 e8
	02 00 00	 lea	 rcx, QWORD PTR $T20[rsp]
  00789	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0078e	48 89 84 24 48
	06 00 00	 mov	 QWORD PTR tv617[rsp], rax
  00796	48 8b 84 24 48
	06 00 00	 mov	 rax, QWORD PTR tv617[rsp]
  0079e	48 89 84 24 50
	06 00 00	 mov	 QWORD PTR tv573[rsp], rax
  007a6	48 8b 94 24 50
	06 00 00	 mov	 rdx, QWORD PTR tv573[rsp]
  007ae	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  007b3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  007b8	90		 npad	 1
  007b9	48 8d 8c 24 e8
	02 00 00	 lea	 rcx, QWORD PTR $T20[rsp]
  007c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN17@write:

; 1193 :     }
; 1194 :     if (nSelect & PERF_MONITOR_QUEUE_VID_IN) {

  007c6	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  007cd	25 00 00 10 00	 and	 eax, 1048576		; 00100000H
  007d2	85 c0		 test	 eax, eax
  007d4	74 5b		 je	 SHORT $LN18@write

; 1195 :         str += strsprintf(",%d", (int)m_QueueInfo.usage_vid_in);

  007d6	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007de	44 8b 80 c0 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3008]
  007e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118443
  007ec	48 8d 8c 24 10
	03 00 00	 lea	 rcx, QWORD PTR $T21[rsp]
  007f4	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  007f9	48 89 84 24 58
	06 00 00	 mov	 QWORD PTR tv618[rsp], rax
  00801	48 8b 84 24 58
	06 00 00	 mov	 rax, QWORD PTR tv618[rsp]
  00809	48 89 84 24 60
	06 00 00	 mov	 QWORD PTR tv575[rsp], rax
  00811	48 8b 94 24 60
	06 00 00	 mov	 rdx, QWORD PTR tv575[rsp]
  00819	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0081e	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00823	90		 npad	 1
  00824	48 8d 8c 24 10
	03 00 00	 lea	 rcx, QWORD PTR $T21[rsp]
  0082c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN18@write:

; 1196 :     }
; 1197 :     if (nSelect & PERF_MONITOR_QUEUE_AUD_IN) {

  00831	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00838	25 00 00 40 00	 and	 eax, 4194304		; 00400000H
  0083d	85 c0		 test	 eax, eax
  0083f	74 5b		 je	 SHORT $LN19@write

; 1198 :         str += strsprintf(",%d", (int)m_QueueInfo.usage_aud_in);

  00841	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00849	44 8b 80 c8 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3016]
  00850	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118445
  00857	48 8d 8c 24 38
	03 00 00	 lea	 rcx, QWORD PTR $T22[rsp]
  0085f	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00864	48 89 84 24 68
	06 00 00	 mov	 QWORD PTR tv619[rsp], rax
  0086c	48 8b 84 24 68
	06 00 00	 mov	 rax, QWORD PTR tv619[rsp]
  00874	48 89 84 24 70
	06 00 00	 mov	 QWORD PTR tv577[rsp], rax
  0087c	48 8b 94 24 70
	06 00 00	 mov	 rdx, QWORD PTR tv577[rsp]
  00884	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00889	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  0088e	90		 npad	 1
  0088f	48 8d 8c 24 38
	03 00 00	 lea	 rcx, QWORD PTR $T22[rsp]
  00897	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN19@write:

; 1199 :     }
; 1200 :     if (nSelect & PERF_MONITOR_QUEUE_VID_OUT) {

  0089c	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  008a3	25 00 00 20 00	 and	 eax, 2097152		; 00200000H
  008a8	85 c0		 test	 eax, eax
  008aa	74 5b		 je	 SHORT $LN20@write

; 1201 :         str += strsprintf(",%d", (int)m_QueueInfo.usage_vid_out);

  008ac	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR this$[rsp]
  008b4	44 8b 80 d0 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3024]
  008bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118447
  008c2	48 8d 8c 24 60
	03 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  008ca	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  008cf	48 89 84 24 78
	06 00 00	 mov	 QWORD PTR tv620[rsp], rax
  008d7	48 8b 84 24 78
	06 00 00	 mov	 rax, QWORD PTR tv620[rsp]
  008df	48 89 84 24 80
	06 00 00	 mov	 QWORD PTR tv579[rsp], rax
  008e7	48 8b 94 24 80
	06 00 00	 mov	 rdx, QWORD PTR tv579[rsp]
  008ef	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  008f4	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  008f9	90		 npad	 1
  008fa	48 8d 8c 24 60
	03 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  00902	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN20@write:

; 1202 :     }
; 1203 :     if (nSelect & PERF_MONITOR_QUEUE_AUD_OUT) {

  00907	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0090e	25 00 00 80 00	 and	 eax, 8388608		; 00800000H
  00913	85 c0		 test	 eax, eax
  00915	74 5b		 je	 SHORT $LN21@write

; 1204 :         str += strsprintf(",%d", (int)m_QueueInfo.usage_aud_out);

  00917	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0091f	44 8b 80 d8 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3032]
  00926	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118449
  0092d	48 8d 8c 24 88
	03 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  00935	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  0093a	48 89 84 24 88
	06 00 00	 mov	 QWORD PTR tv621[rsp], rax
  00942	48 8b 84 24 88
	06 00 00	 mov	 rax, QWORD PTR tv621[rsp]
  0094a	48 89 84 24 90
	06 00 00	 mov	 QWORD PTR tv581[rsp], rax
  00952	48 8b 94 24 90
	06 00 00	 mov	 rdx, QWORD PTR tv581[rsp]
  0095a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  0095f	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00964	90		 npad	 1
  00965	48 8d 8c 24 88
	03 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  0096d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN21@write:

; 1205 :     }
; 1206 :     if (nSelect & PERF_MONITOR_MEM_PRIVATE) {

  00972	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00979	83 e0 04	 and	 eax, 4
  0097c	85 c0		 test	 eax, eax
  0097e	74 67		 je	 SHORT $LN22@write

; 1207 :         str += strsprintf(",%.2lf", pInfo->mem_private / (double)(1024 * 1024));

  00980	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00985	f2 48 0f 2a 40
	48		 cvtsi2sd xmm0, QWORD PTR [rax+72]
  0098b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4130000000000000
  00993	0f 28 d0	 movaps	 xmm2, xmm0
  00996	66 49 0f 7e d0	 movq	 r8, xmm2
  0099b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118451
  009a2	48 8d 8c 24 b0
	03 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  009aa	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  009af	48 89 84 24 98
	06 00 00	 mov	 QWORD PTR tv622[rsp], rax
  009b7	48 8b 84 24 98
	06 00 00	 mov	 rax, QWORD PTR tv622[rsp]
  009bf	48 89 84 24 a0
	06 00 00	 mov	 QWORD PTR tv583[rsp], rax
  009c7	48 8b 94 24 a0
	06 00 00	 mov	 rdx, QWORD PTR tv583[rsp]
  009cf	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  009d4	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  009d9	90		 npad	 1
  009da	48 8d 8c 24 b0
	03 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  009e2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN22@write:

; 1208 :     }
; 1209 :     if (nSelect & PERF_MONITOR_MEM_VIRTUAL) {

  009e7	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  009ee	83 e0 08	 and	 eax, 8
  009f1	85 c0		 test	 eax, eax
  009f3	74 67		 je	 SHORT $LN23@write

; 1210 :         str += strsprintf(",%.2lf", pInfo->mem_virtual / (double)(1024 * 1024));

  009f5	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  009fa	f2 48 0f 2a 40
	50		 cvtsi2sd xmm0, QWORD PTR [rax+80]
  00a00	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4130000000000000
  00a08	0f 28 d0	 movaps	 xmm2, xmm0
  00a0b	66 49 0f 7e d0	 movq	 r8, xmm2
  00a10	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118453
  00a17	48 8d 8c 24 d8
	03 00 00	 lea	 rcx, QWORD PTR $T26[rsp]
  00a1f	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00a24	48 89 84 24 a8
	06 00 00	 mov	 QWORD PTR tv623[rsp], rax
  00a2c	48 8b 84 24 a8
	06 00 00	 mov	 rax, QWORD PTR tv623[rsp]
  00a34	48 89 84 24 b0
	06 00 00	 mov	 QWORD PTR tv585[rsp], rax
  00a3c	48 8b 94 24 b0
	06 00 00	 mov	 rdx, QWORD PTR tv585[rsp]
  00a44	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00a49	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00a4e	90		 npad	 1
  00a4f	48 8d 8c 24 d8
	03 00 00	 lea	 rcx, QWORD PTR $T26[rsp]
  00a57	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN23@write:

; 1211 :     }
; 1212 :     if (nSelect & PERF_MONITOR_FRAME_IN) {

  00a5c	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00a63	25 00 00 01 00	 and	 eax, 65536		; 00010000H
  00a68	85 c0		 test	 eax, eax
  00a6a	74 55		 je	 SHORT $LN24@write

; 1213 :         str += strsprintf(",%d", pInfo->frames_in);

  00a6c	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00a71	4c 8b 40 68	 mov	 r8, QWORD PTR [rax+104]
  00a75	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118455
  00a7c	48 8d 8c 24 00
	04 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  00a84	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00a89	48 89 84 24 b8
	06 00 00	 mov	 QWORD PTR tv624[rsp], rax
  00a91	48 8b 84 24 b8
	06 00 00	 mov	 rax, QWORD PTR tv624[rsp]
  00a99	48 89 84 24 c0
	06 00 00	 mov	 QWORD PTR tv587[rsp], rax
  00aa1	48 8b 94 24 c0
	06 00 00	 mov	 rdx, QWORD PTR tv587[rsp]
  00aa9	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00aae	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00ab3	90		 npad	 1
  00ab4	48 8d 8c 24 00
	04 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  00abc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN24@write:

; 1214 :     }
; 1215 :     if (nSelect & PERF_MONITOR_FRAME_OUT) {

  00ac1	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00ac8	25 00 00 02 00	 and	 eax, 131072		; 00020000H
  00acd	85 c0		 test	 eax, eax
  00acf	74 55		 je	 SHORT $LN25@write

; 1216 :         str += strsprintf(",%d", pInfo->frames_out);

  00ad1	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00ad6	4c 8b 40 70	 mov	 r8, QWORD PTR [rax+112]
  00ada	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118457
  00ae1	48 8d 8c 24 28
	04 00 00	 lea	 rcx, QWORD PTR $T28[rsp]
  00ae9	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00aee	48 89 84 24 c8
	06 00 00	 mov	 QWORD PTR tv625[rsp], rax
  00af6	48 8b 84 24 c8
	06 00 00	 mov	 rax, QWORD PTR tv625[rsp]
  00afe	48 89 84 24 d0
	06 00 00	 mov	 QWORD PTR tv589[rsp], rax
  00b06	48 8b 94 24 d0
	06 00 00	 mov	 rdx, QWORD PTR tv589[rsp]
  00b0e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00b13	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00b18	90		 npad	 1
  00b19	48 8d 8c 24 28
	04 00 00	 lea	 rcx, QWORD PTR $T28[rsp]
  00b21	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN25@write:

; 1217 :     }
; 1218 :     if (nSelect & PERF_MONITOR_FPS) {

  00b26	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00b2d	83 e0 10	 and	 eax, 16
  00b30	85 c0		 test	 eax, eax
  00b32	74 5e		 je	 SHORT $LN26@write

; 1219 :         str += strsprintf(",%lf", pInfo->fps);

  00b34	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00b39	f2 0f 10 90 80
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+128]
  00b41	66 49 0f 7e d0	 movq	 r8, xmm2
  00b46	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118459
  00b4d	48 8d 8c 24 50
	04 00 00	 lea	 rcx, QWORD PTR $T29[rsp]
  00b55	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00b5a	48 89 84 24 d8
	06 00 00	 mov	 QWORD PTR tv626[rsp], rax
  00b62	48 8b 84 24 d8
	06 00 00	 mov	 rax, QWORD PTR tv626[rsp]
  00b6a	48 89 84 24 e0
	06 00 00	 mov	 QWORD PTR tv591[rsp], rax
  00b72	48 8b 94 24 e0
	06 00 00	 mov	 rdx, QWORD PTR tv591[rsp]
  00b7a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00b7f	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00b84	90		 npad	 1
  00b85	48 8d 8c 24 50
	04 00 00	 lea	 rcx, QWORD PTR $T29[rsp]
  00b8d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN26@write:

; 1220 :     }
; 1221 :     if (nSelect & PERF_MONITOR_FPS_AVG) {

  00b92	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00b99	83 e0 20	 and	 eax, 32			; 00000020H
  00b9c	85 c0		 test	 eax, eax
  00b9e	74 5e		 je	 SHORT $LN27@write

; 1222 :         str += strsprintf(",%lf", pInfo->fps_avg);

  00ba0	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00ba5	f2 0f 10 90 88
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+136]
  00bad	66 49 0f 7e d0	 movq	 r8, xmm2
  00bb2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118461
  00bb9	48 8d 8c 24 78
	04 00 00	 lea	 rcx, QWORD PTR $T30[rsp]
  00bc1	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00bc6	48 89 84 24 e8
	06 00 00	 mov	 QWORD PTR tv627[rsp], rax
  00bce	48 8b 84 24 e8
	06 00 00	 mov	 rax, QWORD PTR tv627[rsp]
  00bd6	48 89 84 24 f0
	06 00 00	 mov	 QWORD PTR tv593[rsp], rax
  00bde	48 8b 94 24 f0
	06 00 00	 mov	 rdx, QWORD PTR tv593[rsp]
  00be6	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00beb	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00bf0	90		 npad	 1
  00bf1	48 8d 8c 24 78
	04 00 00	 lea	 rcx, QWORD PTR $T30[rsp]
  00bf9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN27@write:

; 1223 :     }
; 1224 :     if (nSelect & PERF_MONITOR_BITRATE) {

  00bfe	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00c05	83 e0 40	 and	 eax, 64			; 00000040H
  00c08	85 c0		 test	 eax, eax
  00c0a	74 5e		 je	 SHORT $LN28@write

; 1225 :         str += strsprintf(",%lf", pInfo->bitrate_kbps);

  00c0c	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00c11	f2 0f 10 90 90
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+144]
  00c19	66 49 0f 7e d0	 movq	 r8, xmm2
  00c1e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118463
  00c25	48 8d 8c 24 a0
	04 00 00	 lea	 rcx, QWORD PTR $T31[rsp]
  00c2d	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00c32	48 89 84 24 f8
	06 00 00	 mov	 QWORD PTR tv628[rsp], rax
  00c3a	48 8b 84 24 f8
	06 00 00	 mov	 rax, QWORD PTR tv628[rsp]
  00c42	48 89 84 24 00
	07 00 00	 mov	 QWORD PTR tv595[rsp], rax
  00c4a	48 8b 94 24 00
	07 00 00	 mov	 rdx, QWORD PTR tv595[rsp]
  00c52	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00c57	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00c5c	90		 npad	 1
  00c5d	48 8d 8c 24 a0
	04 00 00	 lea	 rcx, QWORD PTR $T31[rsp]
  00c65	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN28@write:

; 1226 :     }
; 1227 :     if (nSelect & PERF_MONITOR_BITRATE_AVG) {

  00c6a	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00c71	25 80 00 00 00	 and	 eax, 128		; 00000080H
  00c76	85 c0		 test	 eax, eax
  00c78	74 5e		 je	 SHORT $LN29@write

; 1228 :         str += strsprintf(",%lf", pInfo->bitrate_kbps_avg);

  00c7a	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00c7f	f2 0f 10 90 98
	00 00 00	 movsd	 xmm2, QWORD PTR [rax+152]
  00c87	66 49 0f 7e d0	 movq	 r8, xmm2
  00c8c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118465
  00c93	48 8d 8c 24 c8
	04 00 00	 lea	 rcx, QWORD PTR $T32[rsp]
  00c9b	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00ca0	48 89 84 24 08
	07 00 00	 mov	 QWORD PTR tv629[rsp], rax
  00ca8	48 8b 84 24 08
	07 00 00	 mov	 rax, QWORD PTR tv629[rsp]
  00cb0	48 89 84 24 10
	07 00 00	 mov	 QWORD PTR tv597[rsp], rax
  00cb8	48 8b 94 24 10
	07 00 00	 mov	 rdx, QWORD PTR tv597[rsp]
  00cc0	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00cc5	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00cca	90		 npad	 1
  00ccb	48 8d 8c 24 c8
	04 00 00	 lea	 rcx, QWORD PTR $T32[rsp]
  00cd3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN29@write:

; 1229 :     }
; 1230 :     if (nSelect & PERF_MONITOR_IO_READ) {

  00cd8	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00cdf	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00ce4	85 c0		 test	 eax, eax
  00ce6	74 69		 je	 SHORT $LN30@write

; 1231 :         str += strsprintf(",%lf", pInfo->io_read_per_sec / (double)(1024 * 1024));

  00ce8	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00ced	f2 0f 10 80 a0
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+160]
  00cf5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4130000000000000
  00cfd	0f 28 d0	 movaps	 xmm2, xmm0
  00d00	66 49 0f 7e d0	 movq	 r8, xmm2
  00d05	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118467
  00d0c	48 8d 8c 24 f0
	04 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  00d14	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00d19	48 89 84 24 18
	07 00 00	 mov	 QWORD PTR tv630[rsp], rax
  00d21	48 8b 84 24 18
	07 00 00	 mov	 rax, QWORD PTR tv630[rsp]
  00d29	48 89 84 24 20
	07 00 00	 mov	 QWORD PTR tv599[rsp], rax
  00d31	48 8b 94 24 20
	07 00 00	 mov	 rdx, QWORD PTR tv599[rsp]
  00d39	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00d3e	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00d43	90		 npad	 1
  00d44	48 8d 8c 24 f0
	04 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  00d4c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN30@write:

; 1232 :     }
; 1233 :     if (nSelect & PERF_MONITOR_IO_WRITE) {

  00d51	8b 84 24 70 07
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00d58	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00d5d	85 c0		 test	 eax, eax
  00d5f	74 69		 je	 SHORT $LN31@write

; 1234 :         str += strsprintf(",%lf", pInfo->io_write_per_sec / (double)(1024 * 1024));

  00d61	48 8b 44 24 20	 mov	 rax, QWORD PTR pInfo$[rsp]
  00d66	f2 0f 10 80 a8
	00 00 00	 movsd	 xmm0, QWORD PTR [rax+168]
  00d6e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4130000000000000
  00d76	0f 28 d0	 movaps	 xmm2, xmm0
  00d79	66 49 0f 7e d0	 movq	 r8, xmm2
  00d7e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118469
  00d85	48 8d 8c 24 18
	05 00 00	 lea	 rcx, QWORD PTR $T34[rsp]
  00d8d	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00d92	48 89 84 24 28
	07 00 00	 mov	 QWORD PTR tv631[rsp], rax
  00d9a	48 8b 84 24 28
	07 00 00	 mov	 rax, QWORD PTR tv631[rsp]
  00da2	48 89 84 24 30
	07 00 00	 mov	 QWORD PTR tv601[rsp], rax
  00daa	48 8b 94 24 30
	07 00 00	 mov	 rdx, QWORD PTR tv601[rsp]
  00db2	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00db7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
  00dbc	90		 npad	 1
  00dbd	48 8d 8c 24 18
	05 00 00	 lea	 rcx, QWORD PTR $T34[rsp]
  00dc5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN31@write:

; 1235 :     }
; 1236 :     str += "\n";

  00dca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118470
  00dd1	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00dd6	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 1237 :     fwrite(str.c_str(), 1, str.length(), fp);

  00ddb	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00de0	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00de5	48 89 84 24 38
	07 00 00	 mov	 QWORD PTR tv498[rsp], rax
  00ded	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00df2	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00df7	4c 8b 8c 24 68
	07 00 00	 mov	 r9, QWORD PTR fp$[rsp]
  00dff	48 8b 8c 24 38
	07 00 00	 mov	 rcx, QWORD PTR tv498[rsp]
  00e07	4c 8b c1	 mov	 r8, rcx
  00e0a	ba 01 00 00 00	 mov	 edx, 1
  00e0f	48 8b c8	 mov	 rcx, rax
  00e12	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite

; 1238 :     if (fp == m_pipes.f_stdin) {

  00e18	48 8b 84 24 60
	07 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00e20	48 8b 80 08 03
	00 00		 mov	 rax, QWORD PTR [rax+776]
  00e27	48 39 84 24 68
	07 00 00	 cmp	 QWORD PTR fp$[rsp], rax
  00e2f	75 0f		 jne	 SHORT $LN32@write

; 1239 :         fflush(fp);

  00e31	48 8b 8c 24 68
	07 00 00	 mov	 rcx, QWORD PTR fp$[rsp]
  00e39	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush
  00e3f	90		 npad	 1
$LN32@write:

; 1240 :     }
; 1241 : }

  00e40	48 8d 4c 24 38	 lea	 rcx, QWORD PTR str$[rsp]
  00e45	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@write:
  00e4a	48 8b cc	 mov	 rcx, rsp
  00e4d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcFrameData
  00e54	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00e59	48 8b 8c 24 40
	07 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00e61	48 33 cc	 xor	 rcx, rsp
  00e64	e8 00 00 00 00	 call	 __security_check_cookie
  00e69	48 81 c4 50 07
	00 00		 add	 rsp, 1872		; 00000750H
  00e70	5f		 pop	 rdi
  00e71	c3		 ret	 0
?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ENDP		; CPerfMonitor::write
_TEXT	ENDS
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$0
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$1
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$2
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$3
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$4
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$5
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8d 8d 30 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$6
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$7
  00104	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00109	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0010e	55		 push	 rbp
  0010f	57		 push	 rdi
  00110	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00114	48 8b ea	 mov	 rbp, rdx
  00117	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0011e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00123	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00127	5f		 pop	 rdi
  00128	5d		 pop	 rbp
  00129	c3		 ret	 0
?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$7
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$8
  0012a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0012f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00134	55		 push	 rbp
  00135	57		 push	 rdi
  00136	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013a	48 8b ea	 mov	 rbp, rdx
  0013d	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00144	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00149	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014d	5f		 pop	 rdi
  0014e	5d		 pop	 rbp
  0014f	c3		 ret	 0
?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$8
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$9
  00150	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00155	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015a	55		 push	 rbp
  0015b	57		 push	 rdi
  0015c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00160	48 8b ea	 mov	 rbp, rdx
  00163	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$9
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$10
  00176	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00180	55		 push	 rbp
  00181	57		 push	 rdi
  00182	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00186	48 8b ea	 mov	 rbp, rdx
  00189	48 8d 8d d0 01
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00190	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00195	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00199	5f		 pop	 rdi
  0019a	5d		 pop	 rbp
  0019b	c3		 ret	 0
?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$10
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$11
  0019c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a6	55		 push	 rbp
  001a7	57		 push	 rdi
  001a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ac	48 8b ea	 mov	 rbp, rdx
  001af	48 8d 8d f8 01
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  001b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$11
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$12
  001c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cc	55		 push	 rbp
  001cd	57		 push	 rdi
  001ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d2	48 8b ea	 mov	 rbp, rdx
  001d5	48 8d 8d 20 02
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  001dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e5	5f		 pop	 rdi
  001e6	5d		 pop	 rbp
  001e7	c3		 ret	 0
?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$12
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$13
  001e8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ed	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001f2	55		 push	 rbp
  001f3	57		 push	 rdi
  001f4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001f8	48 8b ea	 mov	 rbp, rdx
  001fb	48 8d 8d 48 02
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00202	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00207	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0020b	5f		 pop	 rdi
  0020c	5d		 pop	 rbp
  0020d	c3		 ret	 0
?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$13
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$14
  0020e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00213	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00218	55		 push	 rbp
  00219	57		 push	 rdi
  0021a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0021e	48 8b ea	 mov	 rbp, rdx
  00221	48 8d 8d 70 02
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00228	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0022d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00231	5f		 pop	 rdi
  00232	5d		 pop	 rbp
  00233	c3		 ret	 0
?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$14
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$15
  00234	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00239	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0023e	55		 push	 rbp
  0023f	57		 push	 rdi
  00240	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00244	48 8b ea	 mov	 rbp, rdx
  00247	48 8d 8d 98 02
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  0024e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00253	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00257	5f		 pop	 rdi
  00258	5d		 pop	 rbp
  00259	c3		 ret	 0
?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$15
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$16
  0025a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0025f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00264	55		 push	 rbp
  00265	57		 push	 rdi
  00266	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0026a	48 8b ea	 mov	 rbp, rdx
  0026d	48 8d 8d c0 02
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00274	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00279	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0027d	5f		 pop	 rdi
  0027e	5d		 pop	 rbp
  0027f	c3		 ret	 0
?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$16
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$17
  00280	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00285	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0028a	55		 push	 rbp
  0028b	57		 push	 rdi
  0028c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00290	48 8b ea	 mov	 rbp, rdx
  00293	48 8d 8d e8 02
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0029a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0029f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002a3	5f		 pop	 rdi
  002a4	5d		 pop	 rbp
  002a5	c3		 ret	 0
?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$17
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$18
  002a6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ab	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002b0	55		 push	 rbp
  002b1	57		 push	 rdi
  002b2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002b6	48 8b ea	 mov	 rbp, rdx
  002b9	48 8d 8d 10 03
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  002c0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002c9	5f		 pop	 rdi
  002ca	5d		 pop	 rbp
  002cb	c3		 ret	 0
?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$18
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$19
  002cc	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002d1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002d6	55		 push	 rbp
  002d7	57		 push	 rdi
  002d8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002dc	48 8b ea	 mov	 rbp, rdx
  002df	48 8d 8d 38 03
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  002e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002eb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002ef	5f		 pop	 rdi
  002f0	5d		 pop	 rbp
  002f1	c3		 ret	 0
?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$19
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$20
  002f2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002f7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002fc	55		 push	 rbp
  002fd	57		 push	 rdi
  002fe	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00302	48 8b ea	 mov	 rbp, rdx
  00305	48 8d 8d 60 03
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0030c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00311	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00315	5f		 pop	 rdi
  00316	5d		 pop	 rbp
  00317	c3		 ret	 0
?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$20
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$21
  00318	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0031d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00322	55		 push	 rbp
  00323	57		 push	 rdi
  00324	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00328	48 8b ea	 mov	 rbp, rdx
  0032b	48 8d 8d 88 03
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00332	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00337	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0033b	5f		 pop	 rdi
  0033c	5d		 pop	 rbp
  0033d	c3		 ret	 0
?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$21
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$22
  0033e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00343	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00348	55		 push	 rbp
  00349	57		 push	 rdi
  0034a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0034e	48 8b ea	 mov	 rbp, rdx
  00351	48 8d 8d b0 03
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  00358	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0035d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00361	5f		 pop	 rdi
  00362	5d		 pop	 rbp
  00363	c3		 ret	 0
?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$22
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$23
  00364	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00369	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0036e	55		 push	 rbp
  0036f	57		 push	 rdi
  00370	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00374	48 8b ea	 mov	 rbp, rdx
  00377	48 8d 8d d8 03
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  0037e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00383	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00387	5f		 pop	 rdi
  00388	5d		 pop	 rbp
  00389	c3		 ret	 0
?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$23
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$24
  0038a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0038f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00394	55		 push	 rbp
  00395	57		 push	 rdi
  00396	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0039a	48 8b ea	 mov	 rbp, rdx
  0039d	48 8d 8d 00 04
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  003a4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003ad	5f		 pop	 rdi
  003ae	5d		 pop	 rbp
  003af	c3		 ret	 0
?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$24
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$25
  003b0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003b5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003ba	55		 push	 rbp
  003bb	57		 push	 rdi
  003bc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003c0	48 8b ea	 mov	 rbp, rdx
  003c3	48 8d 8d 28 04
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  003ca	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003cf	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003d3	5f		 pop	 rdi
  003d4	5d		 pop	 rbp
  003d5	c3		 ret	 0
?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$25
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$26
  003d6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003db	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003e0	55		 push	 rbp
  003e1	57		 push	 rdi
  003e2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003e6	48 8b ea	 mov	 rbp, rdx
  003e9	48 8d 8d 50 04
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  003f0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003f5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003f9	5f		 pop	 rdi
  003fa	5d		 pop	 rbp
  003fb	c3		 ret	 0
?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$26
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$27
  003fc	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00401	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00406	55		 push	 rbp
  00407	57		 push	 rdi
  00408	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0040c	48 8b ea	 mov	 rbp, rdx
  0040f	48 8d 8d 78 04
	00 00		 lea	 rcx, QWORD PTR $T30[rbp]
  00416	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0041b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0041f	5f		 pop	 rdi
  00420	5d		 pop	 rbp
  00421	c3		 ret	 0
?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$27
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$28
  00422	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00427	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0042c	55		 push	 rbp
  0042d	57		 push	 rdi
  0042e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00432	48 8b ea	 mov	 rbp, rdx
  00435	48 8d 8d a0 04
	00 00		 lea	 rcx, QWORD PTR $T31[rbp]
  0043c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00441	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00445	5f		 pop	 rdi
  00446	5d		 pop	 rbp
  00447	c3		 ret	 0
?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$28
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$29
  00448	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0044d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00452	55		 push	 rbp
  00453	57		 push	 rdi
  00454	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00458	48 8b ea	 mov	 rbp, rdx
  0045b	48 8d 8d c8 04
	00 00		 lea	 rcx, QWORD PTR $T32[rbp]
  00462	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00467	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0046b	5f		 pop	 rdi
  0046c	5d		 pop	 rbp
  0046d	c3		 ret	 0
?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$29
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$30
  0046e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00473	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00478	55		 push	 rbp
  00479	57		 push	 rdi
  0047a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0047e	48 8b ea	 mov	 rbp, rdx
  00481	48 8d 8d f0 04
	00 00		 lea	 rcx, QWORD PTR $T33[rbp]
  00488	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0048d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00491	5f		 pop	 rdi
  00492	5d		 pop	 rbp
  00493	c3		 ret	 0
?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$30
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$31
  00494	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00499	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0049e	55		 push	 rbp
  0049f	57		 push	 rdi
  004a0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  004a4	48 8b ea	 mov	 rbp, rdx
  004a7	48 8d 8d 18 05
	00 00		 lea	 rcx, QWORD PTR $T34[rbp]
  004ae	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004b3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  004b7	5f		 pop	 rdi
  004b8	5d		 pop	 rbp
  004b9	c3		 ret	 0
?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 68	 lea	 rcx, QWORD PTR $T4[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0003f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 90 00
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00060	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$4
  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a2	48 8b ea	 mov	 rbp, rdx
  000a5	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  000ac	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?dtor$4@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$5
  000b8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000bd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000c2	55		 push	 rbp
  000c3	57		 push	 rdi
  000c4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c8	48 8b ea	 mov	 rbp, rdx
  000cb	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T8[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$5@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$6
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8d 8d 30 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000f8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000fd	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00101	5f		 pop	 rdi
  00102	5d		 pop	 rbp
  00103	c3		 ret	 0
?dtor$6@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$7
  00104	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00109	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0010e	55		 push	 rbp
  0010f	57		 push	 rdi
  00110	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00114	48 8b ea	 mov	 rbp, rdx
  00117	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0011e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00123	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00127	5f		 pop	 rdi
  00128	5d		 pop	 rbp
  00129	c3		 ret	 0
?dtor$7@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$8
  0012a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0012f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00134	55		 push	 rbp
  00135	57		 push	 rdi
  00136	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0013a	48 8b ea	 mov	 rbp, rdx
  0013d	48 8d 8d 80 01
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  00144	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00149	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014d	5f		 pop	 rdi
  0014e	5d		 pop	 rbp
  0014f	c3		 ret	 0
?dtor$8@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$9
  00150	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00155	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0015a	55		 push	 rbp
  0015b	57		 push	 rdi
  0015c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00160	48 8b ea	 mov	 rbp, rdx
  00163	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR $T12[rbp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?dtor$9@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$10
  00176	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0017b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00180	55		 push	 rbp
  00181	57		 push	 rdi
  00182	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00186	48 8b ea	 mov	 rbp, rdx
  00189	48 8d 8d d0 01
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00190	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00195	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00199	5f		 pop	 rdi
  0019a	5d		 pop	 rbp
  0019b	c3		 ret	 0
?dtor$10@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$11
  0019c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001a1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001a6	55		 push	 rbp
  001a7	57		 push	 rdi
  001a8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001ac	48 8b ea	 mov	 rbp, rdx
  001af	48 8d 8d f8 01
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  001b6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001bb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001bf	5f		 pop	 rdi
  001c0	5d		 pop	 rbp
  001c1	c3		 ret	 0
?dtor$11@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$12
  001c2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001c7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001cc	55		 push	 rbp
  001cd	57		 push	 rdi
  001ce	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001d2	48 8b ea	 mov	 rbp, rdx
  001d5	48 8d 8d 20 02
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  001dc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001e5	5f		 pop	 rdi
  001e6	5d		 pop	 rbp
  001e7	c3		 ret	 0
?dtor$12@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$13
  001e8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ed	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001f2	55		 push	 rbp
  001f3	57		 push	 rdi
  001f4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001f8	48 8b ea	 mov	 rbp, rdx
  001fb	48 8d 8d 48 02
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00202	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00207	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0020b	5f		 pop	 rdi
  0020c	5d		 pop	 rbp
  0020d	c3		 ret	 0
?dtor$13@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$14
  0020e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00213	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00218	55		 push	 rbp
  00219	57		 push	 rdi
  0021a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0021e	48 8b ea	 mov	 rbp, rdx
  00221	48 8d 8d 70 02
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00228	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0022d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00231	5f		 pop	 rdi
  00232	5d		 pop	 rbp
  00233	c3		 ret	 0
?dtor$14@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$15
  00234	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00239	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0023e	55		 push	 rbp
  0023f	57		 push	 rdi
  00240	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00244	48 8b ea	 mov	 rbp, rdx
  00247	48 8d 8d 98 02
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  0024e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00253	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00257	5f		 pop	 rdi
  00258	5d		 pop	 rbp
  00259	c3		 ret	 0
?dtor$15@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$16
  0025a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0025f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00264	55		 push	 rbp
  00265	57		 push	 rdi
  00266	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0026a	48 8b ea	 mov	 rbp, rdx
  0026d	48 8d 8d c0 02
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00274	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00279	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0027d	5f		 pop	 rdi
  0027e	5d		 pop	 rbp
  0027f	c3		 ret	 0
?dtor$16@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$17
  00280	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00285	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0028a	55		 push	 rbp
  0028b	57		 push	 rdi
  0028c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00290	48 8b ea	 mov	 rbp, rdx
  00293	48 8d 8d e8 02
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0029a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0029f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002a3	5f		 pop	 rdi
  002a4	5d		 pop	 rbp
  002a5	c3		 ret	 0
?dtor$17@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$18
  002a6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002ab	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002b0	55		 push	 rbp
  002b1	57		 push	 rdi
  002b2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002b6	48 8b ea	 mov	 rbp, rdx
  002b9	48 8d 8d 10 03
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  002c0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002c5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002c9	5f		 pop	 rdi
  002ca	5d		 pop	 rbp
  002cb	c3		 ret	 0
?dtor$18@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$19
  002cc	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002d1	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002d6	55		 push	 rbp
  002d7	57		 push	 rdi
  002d8	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002dc	48 8b ea	 mov	 rbp, rdx
  002df	48 8d 8d 38 03
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  002e6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002eb	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002ef	5f		 pop	 rdi
  002f0	5d		 pop	 rbp
  002f1	c3		 ret	 0
?dtor$19@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$20
  002f2	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002f7	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002fc	55		 push	 rbp
  002fd	57		 push	 rdi
  002fe	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00302	48 8b ea	 mov	 rbp, rdx
  00305	48 8d 8d 60 03
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0030c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00311	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00315	5f		 pop	 rdi
  00316	5d		 pop	 rbp
  00317	c3		 ret	 0
?dtor$20@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$21
  00318	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0031d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00322	55		 push	 rbp
  00323	57		 push	 rdi
  00324	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00328	48 8b ea	 mov	 rbp, rdx
  0032b	48 8d 8d 88 03
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  00332	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00337	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0033b	5f		 pop	 rdi
  0033c	5d		 pop	 rbp
  0033d	c3		 ret	 0
?dtor$21@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$21
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$22
  0033e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00343	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00348	55		 push	 rbp
  00349	57		 push	 rdi
  0034a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0034e	48 8b ea	 mov	 rbp, rdx
  00351	48 8d 8d b0 03
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  00358	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0035d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00361	5f		 pop	 rdi
  00362	5d		 pop	 rbp
  00363	c3		 ret	 0
?dtor$22@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$22
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$23
  00364	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00369	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0036e	55		 push	 rbp
  0036f	57		 push	 rdi
  00370	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00374	48 8b ea	 mov	 rbp, rdx
  00377	48 8d 8d d8 03
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  0037e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00383	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00387	5f		 pop	 rdi
  00388	5d		 pop	 rbp
  00389	c3		 ret	 0
?dtor$23@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$23
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$24
  0038a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0038f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00394	55		 push	 rbp
  00395	57		 push	 rdi
  00396	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0039a	48 8b ea	 mov	 rbp, rdx
  0039d	48 8d 8d 00 04
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  003a4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003ad	5f		 pop	 rdi
  003ae	5d		 pop	 rbp
  003af	c3		 ret	 0
?dtor$24@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$24
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$25
  003b0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003b5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003ba	55		 push	 rbp
  003bb	57		 push	 rdi
  003bc	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003c0	48 8b ea	 mov	 rbp, rdx
  003c3	48 8d 8d 28 04
	00 00		 lea	 rcx, QWORD PTR $T28[rbp]
  003ca	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003cf	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003d3	5f		 pop	 rdi
  003d4	5d		 pop	 rbp
  003d5	c3		 ret	 0
?dtor$25@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$25
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$26
  003d6	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  003db	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  003e0	55		 push	 rbp
  003e1	57		 push	 rdi
  003e2	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  003e6	48 8b ea	 mov	 rbp, rdx
  003e9	48 8d 8d 50 04
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  003f0	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003f5	48 83 c4 28	 add	 rsp, 40			; 00000028H
  003f9	5f		 pop	 rdi
  003fa	5d		 pop	 rbp
  003fb	c3		 ret	 0
?dtor$26@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$26
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$27
  003fc	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00401	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00406	55		 push	 rbp
  00407	57		 push	 rdi
  00408	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0040c	48 8b ea	 mov	 rbp, rdx
  0040f	48 8d 8d 78 04
	00 00		 lea	 rcx, QWORD PTR $T30[rbp]
  00416	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0041b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0041f	5f		 pop	 rdi
  00420	5d		 pop	 rbp
  00421	c3		 ret	 0
?dtor$27@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$27
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$28
  00422	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00427	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0042c	55		 push	 rbp
  0042d	57		 push	 rdi
  0042e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00432	48 8b ea	 mov	 rbp, rdx
  00435	48 8d 8d a0 04
	00 00		 lea	 rcx, QWORD PTR $T31[rbp]
  0043c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00441	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00445	5f		 pop	 rdi
  00446	5d		 pop	 rbp
  00447	c3		 ret	 0
?dtor$28@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$28
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$29
  00448	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0044d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00452	55		 push	 rbp
  00453	57		 push	 rdi
  00454	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00458	48 8b ea	 mov	 rbp, rdx
  0045b	48 8d 8d c8 04
	00 00		 lea	 rcx, QWORD PTR $T32[rbp]
  00462	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00467	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0046b	5f		 pop	 rdi
  0046c	5d		 pop	 rbp
  0046d	c3		 ret	 0
?dtor$29@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$29
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$30
  0046e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00473	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00478	55		 push	 rbp
  00479	57		 push	 rdi
  0047a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0047e	48 8b ea	 mov	 rbp, rdx
  00481	48 8d 8d f0 04
	00 00		 lea	 rcx, QWORD PTR $T33[rbp]
  00488	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0048d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00491	5f		 pop	 rdi
  00492	5d		 pop	 rbp
  00493	c3		 ret	 0
?dtor$30@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$30
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
pInfo$ = 32
str$ = 56
$T4 = 104
$T5 = 144
$T6 = 184
$T7 = 224
$T8 = 264
$T9 = 304
$T10 = 344
$T11 = 384
$T12 = 424
$T13 = 464
$T14 = 504
$T15 = 544
$T16 = 584
$T17 = 624
$T18 = 664
$T19 = 704
$T20 = 744
$T21 = 784
$T22 = 824
$T23 = 864
$T24 = 904
$T25 = 944
$T26 = 984
$T27 = 1024
$T28 = 1064
$T29 = 1104
$T30 = 1144
$T31 = 1184
$T32 = 1224
$T33 = 1264
$T34 = 1304
tv72 = 1352
tv509 = 1360
tv602 = 1368
tv511 = 1376
tv603 = 1384
tv545 = 1392
tv604 = 1400
tv547 = 1408
tv605 = 1416
tv549 = 1424
tv606 = 1432
tv551 = 1440
tv607 = 1448
tv553 = 1456
tv608 = 1464
tv555 = 1472
tv609 = 1480
tv557 = 1488
tv610 = 1496
tv559 = 1504
tv611 = 1512
tv561 = 1520
tv612 = 1528
tv563 = 1536
tv613 = 1544
tv565 = 1552
tv614 = 1560
tv567 = 1568
tv615 = 1576
tv569 = 1584
tv616 = 1592
tv571 = 1600
tv617 = 1608
tv573 = 1616
tv618 = 1624
tv575 = 1632
tv619 = 1640
tv577 = 1648
tv620 = 1656
tv579 = 1664
tv621 = 1672
tv581 = 1680
tv622 = 1688
tv583 = 1696
tv623 = 1704
tv585 = 1712
tv624 = 1720
tv587 = 1728
tv625 = 1736
tv589 = 1744
tv626 = 1752
tv591 = 1760
tv627 = 1768
tv593 = 1776
tv628 = 1784
tv595 = 1792
tv629 = 1800
tv597 = 1808
tv630 = 1816
tv599 = 1824
tv631 = 1832
tv601 = 1840
tv498 = 1848
__$ArrayPad$ = 1856
this$ = 1888
fp$ = 1896
nSelect$ = 1904
?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write'::`1'::dtor$31
  00494	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00499	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0049e	55		 push	 rbp
  0049f	57		 push	 rdi
  004a0	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  004a4	48 8b ea	 mov	 rbp, rdx
  004a7	48 8d 8d 18 05
	00 00		 lea	 rcx, QWORD PTR $T34[rbp]
  004ae	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  004b3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  004b7	5f		 pop	 rdi
  004b8	5d		 pop	 rbp
  004b9	c3		 ret	 0
?dtor$31@?0??write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write'::`1'::dtor$31
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
str$ = 40
tv222 = 96
__$ArrayPad$ = 104
this$ = 128
fp$ = 136
nSelect$ = 144
?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z PROC	; CPerfMonitor::write_header

; 567  : void CPerfMonitor::write_header(FILE *fp, int nSelect) {

$LN35:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 568  :     if (fp == NULL || nSelect == 0) {

  0003a	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR fp$[rsp], 0
  00043	74 0a		 je	 SHORT $LN3@write_head
  00045	83 bc 24 90 00
	00 00 00	 cmp	 DWORD PTR nSelect$[rsp], 0
  0004d	75 05		 jne	 SHORT $LN2@write_head
$LN3@write_head:

; 569  :         return;

  0004f	e9 1b 04 00 00	 jmp	 $LN1@write_head
$LN2@write_head:

; 570  :     }
; 571  :     std::string str;

  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00059	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005e	90		 npad	 1

; 572  :     if (nSelect & PERF_MONITOR_CPU) {

  0005f	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00066	83 e0 01	 and	 eax, 1
  00069	85 c0		 test	 eax, eax
  0006b	74 11		 je	 SHORT $LN4@write_head

; 573  :         str += ",cpu (%)";

  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117417
  00074	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00079	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN4@write_head:

; 574  :     }
; 575  :     if (nSelect & PERF_MONITOR_CPU_KERNEL) {

  0007e	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00085	83 e0 02	 and	 eax, 2
  00088	85 c0		 test	 eax, eax
  0008a	74 11		 je	 SHORT $LN5@write_head

; 576  :         str += ",cpu kernel (%)";

  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117419
  00093	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00098	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN5@write_head:

; 577  :     }
; 578  :     if (nSelect & PERF_MONITOR_THREAD_MAIN) {

  0009d	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  000a4	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  000a9	85 c0		 test	 eax, eax
  000ab	74 11		 je	 SHORT $LN6@write_head

; 579  :         str += ",cpu main thread (%)";

  000ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117421
  000b4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000b9	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN6@write_head:

; 580  :     }
; 581  :     if (nSelect & PERF_MONITOR_THREAD_ENC) {

  000be	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  000c5	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  000ca	85 c0		 test	 eax, eax
  000cc	74 11		 je	 SHORT $LN7@write_head

; 582  :         str += ",cpu enc thread (%)";

  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117423
  000d5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000da	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN7@write_head:

; 583  :     }
; 584  :     if (nSelect & PERF_MONITOR_THREAD_AUDP) {

  000df	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  000e6	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  000eb	85 c0		 test	 eax, eax
  000ed	74 11		 je	 SHORT $LN8@write_head

; 585  :         str += ",cpu aud proc thread (%)";

  000ef	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117425
  000f6	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000fb	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN8@write_head:

; 586  :     }
; 587  :     if (nSelect & PERF_MONITOR_THREAD_AUDE) {

  00100	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00107	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  0010c	85 c0		 test	 eax, eax
  0010e	74 11		 je	 SHORT $LN9@write_head

; 588  :         str += ",cpu aud enc thread (%)";

  00110	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117427
  00117	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0011c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN9@write_head:

; 589  :     }
; 590  :     if (nSelect & PERF_MONITOR_THREAD_IN) {

  00121	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00128	25 00 80 00 00	 and	 eax, 32768		; 00008000H
  0012d	85 c0		 test	 eax, eax
  0012f	74 11		 je	 SHORT $LN10@write_head

; 591  :         str += ",cpu in thread (%)";

  00131	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117429
  00138	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0013d	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN10@write_head:

; 592  :     }
; 593  :     if (nSelect & PERF_MONITOR_THREAD_OUT) {

  00142	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00149	25 00 40 00 00	 and	 eax, 16384		; 00004000H
  0014e	85 c0		 test	 eax, eax
  00150	74 11		 je	 SHORT $LN11@write_head

; 594  :         str += ",cpu out thread (%)";

  00152	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117431
  00159	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0015e	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN11@write_head:

; 595  :     }
; 596  :     if (nSelect & PERF_MONITOR_GPU_LOAD) {

  00163	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0016a	25 00 00 04 00	 and	 eax, 262144		; 00040000H
  0016f	85 c0		 test	 eax, eax
  00171	74 11		 je	 SHORT $LN12@write_head

; 597  :         str += ",gpu load (%)";

  00173	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117433
  0017a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0017f	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN12@write_head:

; 598  :     }
; 599  :     if (nSelect & PERF_MONITOR_GPU_CLOCK) {

  00184	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0018b	25 00 00 08 00	 and	 eax, 524288		; 00080000H
  00190	85 c0		 test	 eax, eax
  00192	74 11		 je	 SHORT $LN13@write_head

; 600  :         str += ",gpu clock (MHz)";

  00194	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117435
  0019b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001a0	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN13@write_head:

; 601  :     }
; 602  :     if (nSelect & PERF_MONITOR_MFX_LOAD) {

  001a5	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  001ac	25 00 00 00 01	 and	 eax, 16777216		; 01000000H
  001b1	85 c0		 test	 eax, eax
  001b3	74 11		 je	 SHORT $LN14@write_head

; 603  :         str += ",mfx load (%)";

  001b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117437
  001bc	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001c1	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN14@write_head:

; 604  :     }
; 605  :     if (nSelect & PERF_MONITOR_VEE_LOAD) {

  001c6	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  001cd	25 00 00 00 04	 and	 eax, 67108864		; 04000000H
  001d2	85 c0		 test	 eax, eax
  001d4	74 11		 je	 SHORT $LN15@write_head

; 606  :         str += ",video encoder load (%)";

  001d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117439
  001dd	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001e2	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN15@write_head:

; 607  :     }
; 608  :     if (nSelect & PERF_MONITOR_VED_LOAD) {

  001e7	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  001ee	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  001f3	85 c0		 test	 eax, eax
  001f5	74 11		 je	 SHORT $LN16@write_head

; 609  :         str += ",video decoder load (%)";

  001f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117441
  001fe	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00203	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN16@write_head:

; 610  :     }
; 611  :     if (nSelect & PERF_MONITOR_VE_CLOCK) {

  00208	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  0020f	25 00 00 00 02	 and	 eax, 33554432		; 02000000H
  00214	85 c0		 test	 eax, eax
  00216	74 11		 je	 SHORT $LN17@write_head

; 612  :         str += ",video engine clock (MHz)";

  00218	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117443
  0021f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00224	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN17@write_head:

; 613  :     }
; 614  :     if (nSelect & PERF_MONITOR_PCIE_LOAD) {

  00229	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00230	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00235	85 c0		 test	 eax, eax
  00237	74 11		 je	 SHORT $LN18@write_head

; 615  :         str += ",pcie link,pcie tx, pci rx";

  00239	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117445
  00240	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00245	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN18@write_head:

; 616  :     }
; 617  :     if (nSelect & PERF_MONITOR_QUEUE_VID_IN) {

  0024a	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00251	25 00 00 10 00	 and	 eax, 1048576		; 00100000H
  00256	85 c0		 test	 eax, eax
  00258	74 11		 je	 SHORT $LN19@write_head

; 618  :         str += ",queue vid in";

  0025a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117447
  00261	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00266	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN19@write_head:

; 619  :     }
; 620  :     if (nSelect & PERF_MONITOR_QUEUE_AUD_IN) {

  0026b	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00272	25 00 00 40 00	 and	 eax, 4194304		; 00400000H
  00277	85 c0		 test	 eax, eax
  00279	74 11		 je	 SHORT $LN20@write_head

; 621  :         str += ",queue aud in";

  0027b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117449
  00282	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00287	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN20@write_head:

; 622  :     }
; 623  :     if (nSelect & PERF_MONITOR_QUEUE_VID_OUT) {

  0028c	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00293	25 00 00 20 00	 and	 eax, 2097152		; 00200000H
  00298	85 c0		 test	 eax, eax
  0029a	74 11		 je	 SHORT $LN21@write_head

; 624  :         str += ",queue vid out";

  0029c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117451
  002a3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  002a8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN21@write_head:

; 625  :     }
; 626  :     if (nSelect & PERF_MONITOR_QUEUE_AUD_OUT) {

  002ad	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  002b4	25 00 00 80 00	 and	 eax, 8388608		; 00800000H
  002b9	85 c0		 test	 eax, eax
  002bb	74 11		 je	 SHORT $LN22@write_head

; 627  :         str += ",queue aud out";

  002bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117453
  002c4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  002c9	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN22@write_head:

; 628  :     }
; 629  :     if (nSelect & PERF_MONITOR_MEM_PRIVATE) {

  002ce	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  002d5	83 e0 04	 and	 eax, 4
  002d8	85 c0		 test	 eax, eax
  002da	74 11		 je	 SHORT $LN23@write_head

; 630  :         str += ",mem private (MB)";

  002dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117455
  002e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  002e8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN23@write_head:

; 631  :     }
; 632  :     if (nSelect & PERF_MONITOR_MEM_VIRTUAL) {

  002ed	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  002f4	83 e0 08	 and	 eax, 8
  002f7	85 c0		 test	 eax, eax
  002f9	74 11		 je	 SHORT $LN24@write_head

; 633  :         str += ",mem virtual (MB)";

  002fb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117457
  00302	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00307	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN24@write_head:

; 634  :     }
; 635  :     if (nSelect & PERF_MONITOR_FRAME_IN) {

  0030c	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00313	25 00 00 01 00	 and	 eax, 65536		; 00010000H
  00318	85 c0		 test	 eax, eax
  0031a	74 11		 je	 SHORT $LN25@write_head

; 636  :         str += ",frame in";

  0031c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117459
  00323	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00328	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN25@write_head:

; 637  :     }
; 638  :     if (nSelect & PERF_MONITOR_FRAME_OUT) {

  0032d	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00334	25 00 00 02 00	 and	 eax, 131072		; 00020000H
  00339	85 c0		 test	 eax, eax
  0033b	74 11		 je	 SHORT $LN26@write_head

; 639  :         str += ",frame out";

  0033d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117461
  00344	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00349	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN26@write_head:

; 640  :     }
; 641  :     if (nSelect & PERF_MONITOR_FPS) {

  0034e	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00355	83 e0 10	 and	 eax, 16
  00358	85 c0		 test	 eax, eax
  0035a	74 11		 je	 SHORT $LN27@write_head

; 642  :         str += ",enc speed (fps)";

  0035c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117463
  00363	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00368	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN27@write_head:

; 643  :     }
; 644  :     if (nSelect & PERF_MONITOR_FPS_AVG) {

  0036d	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00374	83 e0 20	 and	 eax, 32			; 00000020H
  00377	85 c0		 test	 eax, eax
  00379	74 11		 je	 SHORT $LN28@write_head

; 645  :         str += ",enc speed avg (fps)";

  0037b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117465
  00382	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00387	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN28@write_head:

; 646  :     }
; 647  :     if (nSelect & PERF_MONITOR_BITRATE) {

  0038c	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  00393	83 e0 40	 and	 eax, 64			; 00000040H
  00396	85 c0		 test	 eax, eax
  00398	74 11		 je	 SHORT $LN29@write_head

; 648  :         str += ",bitrate (kbps)";

  0039a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117467
  003a1	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  003a6	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN29@write_head:

; 649  :     }
; 650  :     if (nSelect & PERF_MONITOR_BITRATE_AVG) {

  003ab	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  003b2	25 80 00 00 00	 and	 eax, 128		; 00000080H
  003b7	85 c0		 test	 eax, eax
  003b9	74 11		 je	 SHORT $LN30@write_head

; 651  :         str += ",bitrate avg (kbps)";

  003bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117469
  003c2	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  003c7	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN30@write_head:

; 652  :     }
; 653  :     if (nSelect & PERF_MONITOR_IO_READ) {

  003cc	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  003d3	25 00 01 00 00	 and	 eax, 256		; 00000100H
  003d8	85 c0		 test	 eax, eax
  003da	74 11		 je	 SHORT $LN31@write_head

; 654  :         str += ",read (MB/s)";

  003dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117471
  003e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  003e8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN31@write_head:

; 655  :     }
; 656  :     if (nSelect & PERF_MONITOR_IO_WRITE) {

  003ed	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR nSelect$[rsp]
  003f4	25 00 02 00 00	 and	 eax, 512		; 00000200H
  003f9	85 c0		 test	 eax, eax
  003fb	74 11		 je	 SHORT $LN32@write_head

; 657  :         str += ",write (MB/s)";

  003fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117473
  00404	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00409	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN32@write_head:

; 658  :     }
; 659  :     str += "\n";

  0040e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117474
  00415	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0041a	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 660  :     fwrite(str.c_str(), 1, str.length(), fp);

  0041f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00424	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00429	48 89 44 24 60	 mov	 QWORD PTR tv222[rsp], rax
  0042e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00433	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00438	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR fp$[rsp]
  00440	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv222[rsp]
  00445	4c 8b c1	 mov	 r8, rcx
  00448	ba 01 00 00 00	 mov	 edx, 1
  0044d	48 8b c8	 mov	 rcx, rax
  00450	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite

; 661  :     fflush(fp);

  00456	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR fp$[rsp]
  0045e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush
  00464	90		 npad	 1

; 662  : }

  00465	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0046a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@write_head:
  0046f	48 8b cc	 mov	 rcx, rsp
  00472	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z$rtcFrameData
  00479	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0047e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00483	48 33 cc	 xor	 rcx, rsp
  00486	e8 00 00 00 00	 call	 __security_check_cookie
  0048b	48 83 c4 70	 add	 rsp, 112		; 00000070H
  0048f	5f		 pop	 rdi
  00490	c3		 ret	 0
?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ENDP	; CPerfMonitor::write_header
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
tv222 = 96
__$ArrayPad$ = 104
this$ = 128
fp$ = 136
nSelect$ = 144
?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write_header'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write_header'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
tv222 = 96
__$ArrayPad$ = 104
this$ = 128
fp$ = 136
nSelect$ = 144
?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA PROC ; `CPerfMonitor::write_header'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z@4HA ENDP ; `CPerfMonitor::write_header'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
$T1 = 32
tv77 = 40
tv129 = 48
this$ = 80
?run@CPerfMonitor@@IEAAXXZ PROC				; CPerfMonitor::run

; 1247 : void CPerfMonitor::run() {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN2@run:

; 1248 :     while (!m_bAbort) {

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 80 78 0b
	00 00		 movzx	 eax, BYTE PTR [rax+2936]
  0002a	85 c0		 test	 eax, eax
  0002c	0f 85 50 01 00
	00		 jne	 $LN3@run

; 1249 :         check();

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?check@CPerfMonitor@@IEAAXXZ ; CPerfMonitor::check

; 1250 :         if (m_pProcess && !m_pProcess->processAlive()) {

  0003c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??B?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBA_NXZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator bool
  0004f	0f b6 c0	 movzx	 eax, al
  00052	85 c0		 test	 eax, eax
  00054	0f 84 b5 00 00
	00		 je	 $LN4@run
  0005a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator->
  0006d	48 89 44 24 28	 mov	 QWORD PTR tv77[rsp], rax
  00072	48 8b 44 24 28	 mov	 rax, QWORD PTR tv77[rsp]
  00077	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv77[rsp]
  0007f	ff 50 20	 call	 QWORD PTR [rax+32]
  00082	0f b6 c0	 movzx	 eax, al
  00085	85 c0		 test	 eax, eax
  00087	0f 85 82 00 00
	00		 jne	 $LN4@run

; 1251 :             if (m_pipes.f_stdin) {

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 83 b8 08 03
	00 00 00	 cmp	 QWORD PTR [rax+776], 0
  0009a	74 12		 je	 SHORT $LN5@run

; 1252 :                 fclose(m_pipes.f_stdin);

  0009c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a1	48 8b 88 08 03
	00 00		 mov	 rcx, QWORD PTR [rax+776]
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
$LN5@run:

; 1253 :             }
; 1254 :             m_pipes.f_stdin = NULL;

  000ae	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b3	48 c7 80 08 03
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+776], 0

; 1255 :             if (m_nSelectOutputPlot) {

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000c3	83 b8 b8 0b 00
	00 00		 cmp	 DWORD PTR [rax+3000], 0
  000ca	74 43		 je	 SHORT $LN6@run

; 1256 :                 m_pRGYLog->write(RGY_LOG_WARN, _T("Error occured running python for perf-monitor-plot.\n"));

  000cc	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000d1	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  000d7	48 8b c8	 mov	 rcx, rax
  000da	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  000df	48 89 44 24 30	 mov	 QWORD PTR tv129[rsp], rax
  000e4	48 8b 44 24 30	 mov	 rax, QWORD PTR tv129[rsp]
  000e9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ec	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118491
  000f3	ba 01 00 00 00	 mov	 edx, 1
  000f8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv129[rsp]
  000fd	ff 50 20	 call	 QWORD PTR [rax+32]

; 1257 :                 m_nSelectOutputPlot = 0;

  00100	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00105	c7 80 b8 0b 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+3000], 0
$LN6@run:
$LN4@run:

; 1258 :             }
; 1259 :         }
; 1260 :         write(m_fpLog.get(),   m_nSelectOutputLog);

  0010f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00114	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  0011a	48 8b c8	 mov	 rcx, rax
  0011d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00122	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00127	44 8b 81 b4 0b
	00 00		 mov	 r8d, DWORD PTR [rcx+2996]
  0012e	48 8b d0	 mov	 rdx, rax
  00131	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00136	e8 00 00 00 00	 call	 ?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write

; 1261 :         write(m_pipes.f_stdin, m_nSelectOutputPlot);

  0013b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00140	44 8b 80 b8 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3000]
  00147	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0014c	48 8b 90 08 03
	00 00		 mov	 rdx, QWORD PTR [rax+776]
  00153	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00158	e8 00 00 00 00	 call	 ?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write

; 1262 :         std::this_thread::sleep_for(std::chrono::milliseconds(m_nInterval));

  0015d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00162	48 05 7c 0b 00
	00		 add	 rax, 2940		; 00000b7cH
  00168	48 8b d0	 mov	 rdx, rax
  0016b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00170	e8 00 00 00 00	 call	 ??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
  00175	48 8b c8	 mov	 rcx, rax
  00178	e8 00 00 00 00	 call	 ??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >

; 1263 :     }

  0017d	e9 9c fe ff ff	 jmp	 $LN2@run
$LN3@run:

; 1264 :     check();

  00182	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00187	e8 00 00 00 00	 call	 ?check@CPerfMonitor@@IEAAXXZ ; CPerfMonitor::check

; 1265 :     write(m_fpLog.get(),   m_nSelectOutputLog);

  0018c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00191	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  00197	48 8b c8	 mov	 rcx, rax
  0019a	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  0019f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  001a4	44 8b 81 b4 0b
	00 00		 mov	 r8d, DWORD PTR [rcx+2996]
  001ab	48 8b d0	 mov	 rdx, rax
  001ae	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write

; 1266 :     write(m_pipes.f_stdin, m_nSelectOutputPlot);

  001b8	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  001bd	44 8b 80 b8 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3000]
  001c4	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  001c9	48 8b 90 08 03
	00 00		 mov	 rdx, QWORD PTR [rax+776]
  001d0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  001d5	e8 00 00 00 00	 call	 ?write@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write

; 1267 : }

  001da	48 83 c4 40	 add	 rsp, 64			; 00000040H
  001de	5f		 pop	 rdi
  001df	c3		 ret	 0
?run@CPerfMonitor@@IEAAXXZ ENDP				; CPerfMonitor::run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
pInfoNew$ = 48
pInfoOld$ = 56
hProcess$ = 64
getThreadTime$ = 84
mem_counters$ = 128
io_counters$ = 232
current_time$ = 312
systime$ = 344
pt$ = 392
time_diff_inv$ = 440
logical_cpu_inv$15 = 448
exit_code$16 = 468
exit_code$17 = 500
exit_code$18 = 532
exit_code$19 = 564
exit_code$20 = 596
data$21 = 640
videoSec$22 = 824
videoSecDiff$23 = 832
$T24 = 848
__$ArrayPad$ = 856
this$ = 880
?check@CPerfMonitor@@IEAAXXZ PROC			; CPerfMonitor::check

; 872  : void CPerfMonitor::check() {

$LN29:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 60 03
	00 00		 sub	 rsp, 864		; 00000360H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 d8 00 00 00	 mov	 ecx, 216		; 000000d8H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR [rsp+880]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 58
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 873  :     PerfInfo *pInfoNew = &m_info[(m_nStep + 1) & 1];

  00036	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003e	8b 00		 mov	 eax, DWORD PTR [rax]
  00040	ff c0		 inc	 eax
  00042	83 e0 01	 and	 eax, 1
  00045	48 98		 cdqe
  00047	48 69 c0 38 01
	00 00		 imul	 rax, rax, 312		; 00000138H
  0004e	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8d 44 01 30	 lea	 rax, QWORD PTR [rcx+rax+48]
  0005b	48 89 44 24 30	 mov	 QWORD PTR pInfoNew$[rsp], rax

; 874  :     PerfInfo *pInfoOld = &m_info[ m_nStep      & 1];

  00060	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00068	8b 00		 mov	 eax, DWORD PTR [rax]
  0006a	83 e0 01	 and	 eax, 1
  0006d	48 98		 cdqe
  0006f	48 69 c0 38 01
	00 00		 imul	 rax, rax, 312		; 00000138H
  00076	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	48 8d 44 01 30	 lea	 rax, QWORD PTR [rcx+rax+48]
  00083	48 89 44 24 38	 mov	 QWORD PTR pInfoOld$[rsp], rax

; 875  :     memcpy(pInfoNew, pInfoOld, sizeof(pInfoNew[0]));

  00088	41 b8 38 01 00
	00		 mov	 r8d, 312		; 00000138H
  0008e	48 8b 54 24 38	 mov	 rdx, QWORD PTR pInfoOld$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00098	e8 00 00 00 00	 call	 memcpy

; 876  : 
; 877  : #if defined(_WIN32) || defined(_WIN64)
; 878  :     const auto hProcess = GetCurrentProcess();

  0009d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCurrentProcess
  000a3	48 89 44 24 40	 mov	 QWORD PTR hProcess$[rsp], rax

; 879  :     auto getThreadTime = [](HANDLE hThread, PROCESS_TIME *time) {

  000a8	48 8d 84 24 50
	03 00 00	 lea	 rax, QWORD PTR $T24[rsp]
  000b0	48 8b f8	 mov	 rdi, rax
  000b3	33 c0		 xor	 eax, eax
  000b5	b9 01 00 00 00	 mov	 ecx, 1
  000ba	f3 aa		 rep stosb

; 880  :         GetThreadTimes(hThread, (FILETIME *)&time->creation, (FILETIME *)&time->exit, (FILETIME *)&time->kernel, (FILETIME *)&time->user);
; 881  :     };
; 882  : 
; 883  :     //メモリ情報
; 884  :     PROCESS_MEMORY_COUNTERS mem_counters = { 0 };

  000bc	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR mem_counters$[rsp]
  000c4	48 8b f8	 mov	 rdi, rax
  000c7	33 c0		 xor	 eax, eax
  000c9	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  000ce	f3 aa		 rep stosb

; 885  :     mem_counters.cb = sizeof(PROCESS_MEMORY_COUNTERS);

  000d0	c7 84 24 80 00
	00 00 48 00 00
	00		 mov	 DWORD PTR mem_counters$[rsp], 72 ; 00000048H

; 886  :     GetProcessMemoryInfo(hProcess, &mem_counters, sizeof(mem_counters));

  000db	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  000e1	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR mem_counters$[rsp]
  000e9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hProcess$[rsp]
  000ee	e8 00 00 00 00	 call	 K32GetProcessMemoryInfo

; 887  :     pInfoNew->mem_private = mem_counters.WorkingSetSize;

  000f3	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  000f8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR mem_counters$[rsp+16]
  00100	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx

; 888  :     pInfoNew->mem_virtual = mem_counters.PagefileUsage;

  00104	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00109	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR mem_counters$[rsp+56]
  00111	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx

; 889  : 
; 890  :     //IO情報
; 891  :     IO_COUNTERS io_counters = { 0 };

  00115	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR io_counters$[rsp]
  0011d	48 8b f8	 mov	 rdi, rax
  00120	33 c0		 xor	 eax, eax
  00122	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00127	f3 aa		 rep stosb

; 892  :     GetProcessIoCounters(hProcess, &io_counters);

  00129	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR io_counters$[rsp]
  00131	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hProcess$[rsp]
  00136	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetProcessIoCounters

; 893  :     pInfoNew->io_total_read = io_counters.ReadTransferCount;

  0013c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00141	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR io_counters$[rsp+24]
  00149	48 89 48 58	 mov	 QWORD PTR [rax+88], rcx

; 894  :     pInfoNew->io_total_write = io_counters.WriteTransferCount;

  0014d	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00152	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR io_counters$[rsp+32]
  0015a	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 895  : 
; 896  :     //現在時刻
; 897  :     uint64_t current_time = 0;

  0015e	48 c7 84 24 38
	01 00 00 00 00
	00 00		 mov	 QWORD PTR current_time$[rsp], 0

; 898  :     SYSTEMTIME systime = { 0 };

  0016a	48 8d 84 24 58
	01 00 00	 lea	 rax, QWORD PTR systime$[rsp]
  00172	48 8b f8	 mov	 rdi, rax
  00175	33 c0		 xor	 eax, eax
  00177	b9 10 00 00 00	 mov	 ecx, 16
  0017c	f3 aa		 rep stosb

; 899  :     GetSystemTime(&systime);

  0017e	48 8d 8c 24 58
	01 00 00	 lea	 rcx, QWORD PTR systime$[rsp]
  00186	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetSystemTime

; 900  :     SystemTimeToFileTime(&systime, (FILETIME *)&current_time);

  0018c	48 8d 94 24 38
	01 00 00	 lea	 rdx, QWORD PTR current_time$[rsp]
  00194	48 8d 8c 24 58
	01 00 00	 lea	 rcx, QWORD PTR systime$[rsp]
  0019c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SystemTimeToFileTime

; 901  : 
; 902  :     //CPU情報
; 903  :     PROCESS_TIME pt = { 0 };

  001a2	48 8d 84 24 88
	01 00 00	 lea	 rax, QWORD PTR pt$[rsp]
  001aa	48 8b f8	 mov	 rdi, rax
  001ad	33 c0		 xor	 eax, eax
  001af	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  001b4	f3 aa		 rep stosb

; 904  :     GetProcessTimes(hProcess, (FILETIME *)&pt.creation, (FILETIME *)&pt.exit, (FILETIME *)&pt.kernel, (FILETIME *)&pt.user);

  001b6	48 8d 84 24 a0
	01 00 00	 lea	 rax, QWORD PTR pt$[rsp+24]
  001be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001c3	4c 8d 8c 24 98
	01 00 00	 lea	 r9, QWORD PTR pt$[rsp+16]
  001cb	4c 8d 84 24 90
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp+8]
  001d3	48 8d 94 24 88
	01 00 00	 lea	 rdx, QWORD PTR pt$[rsp]
  001db	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hProcess$[rsp]
  001e0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetProcessTimes

; 905  :     pInfoNew->time_us = (current_time - pt.creation) / 10;

  001e6	48 8b 84 24 88
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp]
  001ee	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR current_time$[rsp]
  001f6	48 2b c8	 sub	 rcx, rax
  001f9	48 8b c1	 mov	 rax, rcx
  001fc	33 d2		 xor	 edx, edx
  001fe	b9 0a 00 00 00	 mov	 ecx, 10
  00203	48 f7 f1	 div	 rcx
  00206	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  0020b	48 89 01	 mov	 QWORD PTR [rcx], rax

; 906  :     const double time_diff_inv = 1.0 / (pInfoNew->time_us - pInfoOld->time_us);

  0020e	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00213	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00218	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0021b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0021e	48 2b c1	 sub	 rax, rcx
  00221	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00226	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0022e	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00232	0f 28 c1	 movaps	 xmm0, xmm1
  00235	f2 0f 11 84 24
	b8 01 00 00	 movsd	 QWORD PTR time_diff_inv$[rsp], xmm0

; 907  : 
; 908  :     //GPU情報
; 909  :     m_bGPUZInfoValid = false;

  0023e	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00246	c6 80 0c 1a 03
	00 00		 mov	 BYTE PTR [rax+203276], 0

; 910  :     pInfoNew->gpu_info_valid = FALSE;

  0024d	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00252	c7 80 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+240], 0

; 911  : #if ENABLE_METRIC_FRAMEWORK
; 912  :     QSVGPUInfo qsvinfo = { 0 };
; 913  :     if (m_Consumer.getMFXLoad(&qsvinfo)) {
; 914  :         pInfoNew->gpu_info_valid = TRUE;
; 915  :         pInfoNew->mfx_load_percent = qsvinfo.dMFXLoad;
; 916  :         pInfoNew->gpu_load_percent = qsvinfo.dEULoad;
; 917  :         pInfoNew->gpu_clock = qsvinfo.dGPUFreq;
; 918  :     } else {
; 919  : #endif //#if ENABLE_METRIC_FRAMEWORK
; 920  : #if ENABLE_NVML
; 921  :     pInfoNew->gpu_info_valid   = FALSE;
; 922  :     pInfoNew->gpu_clock = 0.0;
; 923  :     pInfoNew->gpu_load_percent = 0.0;
; 924  :     pInfoNew->ve_clock = 0.0;
; 925  :     pInfoNew->vee_load_percent = 0.0;
; 926  :     pInfoNew->ved_load_percent = 0.0;
; 927  :     pInfoNew->pcie_gen = 0;
; 928  :     pInfoNew->pcie_link = 0;
; 929  :     pInfoNew->pcie_throughput_tx_per_sec = 0;
; 930  :     pInfoNew->pcie_throughput_rx_per_sec = 0;
; 931  :     NVMLMonitorInfo nvmlInfo;
; 932  :     if (m_nvmlMonitor.getData(&nvmlInfo) == NVML_SUCCESS) {
; 933  :         m_nvmlInfo = nvmlInfo;
; 934  :         pInfoNew->gpu_info_valid   = TRUE;
; 935  :         pInfoNew->gpu_clock        = m_nvmlInfo.GPUFreq;
; 936  :         pInfoNew->gpu_load_percent = m_nvmlInfo.GPULoad;
; 937  :         pInfoNew->ve_clock         = m_nvmlInfo.VEFreq;
; 938  :         pInfoNew->vee_load_percent = m_nvmlInfo.VEELoad;
; 939  :         pInfoNew->ved_load_percent = m_nvmlInfo.VEDLoad;
; 940  :         pInfoNew->pcie_gen         = m_nvmlInfo.pcieGen;
; 941  :         pInfoNew->pcie_link        = m_nvmlInfo.pcieLink;
; 942  :         pInfoNew->pcie_throughput_tx_per_sec = m_nvmlInfo.pcieLoadTX;
; 943  :         pInfoNew->pcie_throughput_rx_per_sec = m_nvmlInfo.pcieLoadRX;
; 944  :     } else {
; 945  : #endif //#if ENABLE_NVML
; 946  :         pInfoNew->gpu_clock = 0.0;

  0025c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00261	0f 57 c0	 xorps	 xmm0, xmm0
  00264	f2 0f 11 80 00
	01 00 00	 movsd	 QWORD PTR [rax+256], xmm0

; 947  :         pInfoNew->gpu_load_percent = 0.0;

  0026c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00271	0f 57 c0	 xorps	 xmm0, xmm0
  00274	f2 0f 11 80 f8
	00 00 00	 movsd	 QWORD PTR [rax+248], xmm0

; 948  :         pInfoNew->ve_clock = 0.0;

  0027c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00281	0f 57 c0	 xorps	 xmm0, xmm0
  00284	f2 0f 11 80 20
	01 00 00	 movsd	 QWORD PTR [rax+288], xmm0

; 949  :         pInfoNew->vee_load_percent = 0.0;

  0028c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00291	0f 57 c0	 xorps	 xmm0, xmm0
  00294	f2 0f 11 80 10
	01 00 00	 movsd	 QWORD PTR [rax+272], xmm0

; 950  :         pInfoNew->ved_load_percent = 0.0;

  0029c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  002a1	0f 57 c0	 xorps	 xmm0, xmm0
  002a4	f2 0f 11 80 18
	01 00 00	 movsd	 QWORD PTR [rax+280], xmm0

; 951  :         pInfoNew->pcie_gen = 0;

  002ac	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  002b1	c7 80 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+296], 0

; 952  :         pInfoNew->pcie_link = 0;

  002bb	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  002c0	c7 80 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+300], 0

; 953  :         pInfoNew->pcie_throughput_tx_per_sec = 0;

  002ca	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  002cf	c7 80 30 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+304], 0

; 954  :         pInfoNew->pcie_throughput_rx_per_sec = 0;

  002d9	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  002de	c7 80 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+308], 0

; 955  : #if ENABLE_GPUZ_INFO
; 956  :         memset(&m_GPUZInfo, 0, sizeof(m_GPUZInfo));

  002e8	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002f0	48 05 00 0c 00
	00		 add	 rax, 3072		; 00000c00H
  002f6	41 b8 0c 0e 03
	00		 mov	 r8d, 200204		; 00030e0cH
  002fc	33 d2		 xor	 edx, edx
  002fe	48 8b c8	 mov	 rcx, rax
  00301	e8 00 00 00 00	 call	 memset

; 957  :         if (0 == get_gpuz_info(&m_GPUZInfo)) {

  00306	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0030e	48 05 00 0c 00
	00		 add	 rax, 3072		; 00000c00H
  00314	48 8b c8	 mov	 rcx, rax
  00317	e8 00 00 00 00	 call	 ?get_gpuz_info@@YAHPEAUGPUZ_SH_MEM@@@Z ; get_gpuz_info
  0031c	85 c0		 test	 eax, eax
  0031e	0f 85 89 00 00
	00		 jne	 $LN2@check

; 958  :             m_bGPUZInfoValid = true;

  00324	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0032c	c6 80 0c 1a 03
	00 01		 mov	 BYTE PTR [rax+203276], 1

; 959  :             pInfoNew->gpu_info_valid = TRUE;

  00333	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00338	c7 80 f0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+240], 1

; 960  :             pInfoNew->gpu_load_percent = gpu_load(&m_GPUZInfo);

  00342	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0034a	48 05 00 0c 00
	00		 add	 rax, 3072		; 00000c00H
  00350	48 8b c8	 mov	 rcx, rax
  00353	e8 00 00 00 00	 call	 ?gpu_load@@YANPEAUGPUZ_SH_MEM@@@Z ; gpu_load
  00358	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  0035d	f2 0f 11 80 f8
	00 00 00	 movsd	 QWORD PTR [rax+248], xmm0

; 961  :             pInfoNew->vee_load_percent = video_engine_load(&m_GPUZInfo, nullptr);

  00365	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0036d	48 05 00 0c 00
	00		 add	 rax, 3072		; 00000c00H
  00373	33 d2		 xor	 edx, edx
  00375	48 8b c8	 mov	 rcx, rax
  00378	e8 00 00 00 00	 call	 ?video_engine_load@@YANPEAUGPUZ_SH_MEM@@PEA_N@Z ; video_engine_load
  0037d	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00382	f2 0f 11 80 10
	01 00 00	 movsd	 QWORD PTR [rax+272], xmm0

; 962  :             pInfoNew->gpu_clock = gpu_core_clock(&m_GPUZInfo);

  0038a	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00392	48 05 00 0c 00
	00		 add	 rax, 3072		; 00000c00H
  00398	48 8b c8	 mov	 rcx, rax
  0039b	e8 00 00 00 00	 call	 ?gpu_core_clock@@YANPEAUGPUZ_SH_MEM@@@Z ; gpu_core_clock
  003a0	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  003a5	f2 0f 11 80 00
	01 00 00	 movsd	 QWORD PTR [rax+256], xmm0
$LN2@check:

; 963  :         }
; 964  : #endif //#if ENABLE_GPUZ_INFO
; 965  : #if ENABLE_METRIC_FRAMEWORK || ENABLE_NVML
; 966  :     }
; 967  : #endif //#if ENABLE_METRIC_FRAMEWORK || ENABLE_NVML
; 968  : #else
; 969  :     struct rusage usage = { 0 };
; 970  :     getrusage(RUSAGE_SELF, &usage);
; 971  : 
; 972  :     //現在時間
; 973  :     uint64_t current_time = clock() * (1e7 / CLOCKS_PER_SEC);
; 974  : 
; 975  :     std::string proc_dir = strsprintf("/proc/%d/", (int)getpid());
; 976  :     //メモリ情報
; 977  :     FILE *fp_mem = popen((std::string("cat ") + proc_dir + std::string("status")).c_str(), "r");
; 978  :     if (fp_mem) {
; 979  :         char buffer[2048] = { 0 };
; 980  :         while (NULL != fgets(buffer, _countof(buffer), fp_mem)) {
; 981  :             if (nullptr != strstr(buffer, "VmSize")) {
; 982  :                 long long i = 0;
; 983  :                 if (1 == sscanf(buffer, "VmSize: %lld kB", &i)) {
; 984  :                     pInfoNew->mem_virtual = i << 10;
; 985  :                 }
; 986  :             } else if (nullptr != strstr(buffer, "VmRSS")) {
; 987  :                 long long i = 0;
; 988  :                 if (1 == sscanf(buffer, "VmRSS: %lld kB", &i)) {
; 989  :                     pInfoNew->mem_private = i << 10;
; 990  :                 }
; 991  :             }
; 992  :         }
; 993  :         fclose(fp_mem);
; 994  :     }
; 995  :     //IO情報
; 996  :     FILE *fp_io = popen((std::string("cat ") + proc_dir + std::string("io")).c_str(), "r");
; 997  :     if (fp_io) {
; 998  :         char buffer[2048] = { 0 };
; 999  :         while (NULL != fgets(buffer, _countof(buffer), fp_io)) {
; 1000 :             if (nullptr != strstr(buffer, "rchar:")) {
; 1001 :                 long long i = 0;
; 1002 :                 if (1 == sscanf(buffer, "rchar: %lld", &i)) {
; 1003 :                     pInfoNew->io_total_read = i;
; 1004 :                 }
; 1005 :             } else if (nullptr != strstr(buffer, "wchar")) {
; 1006 :                 long long i = 0;
; 1007 :                 if (1 == sscanf(buffer, "wchar: %lld", &i)) {
; 1008 :                     pInfoNew->io_total_write = i;
; 1009 :                 }
; 1010 :             }
; 1011 :         }
; 1012 :         fclose(fp_io);
; 1013 :     }
; 1014 : 
; 1015 :     //CPU情報
; 1016 :     pInfoNew->time_us = (current_time - m_nCreateTime100ns) / 10;
; 1017 :     const double time_diff_inv = 1.0 / (pInfoNew->time_us - pInfoOld->time_us);
; 1018 : #endif
; 1019 : 
; 1020 :     if (pInfoNew->time_us > pInfoOld->time_us) {

  003ad	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  003b2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  003b7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  003ba	48 39 08	 cmp	 QWORD PTR [rax], rcx
  003bd	0f 8e d8 06 00
	00		 jle	 $LN3@check

; 1021 : #if defined(_WIN32) || defined(_WIN64)
; 1022 :         pInfoNew->cpu_total_us = (pt.user + pt.kernel) / 10;

  003c3	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  003cb	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  003d3	48 03 c8	 add	 rcx, rax
  003d6	48 8b c1	 mov	 rax, rcx
  003d9	33 d2		 xor	 edx, edx
  003db	b9 0a 00 00 00	 mov	 ecx, 10
  003e0	48 f7 f1	 div	 rcx
  003e3	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  003e8	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1023 :         pInfoNew->cpu_total_kernel_us = pt.kernel / 10;

  003ec	33 d2		 xor	 edx, edx
  003ee	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  003f6	b9 0a 00 00 00	 mov	 ecx, 10
  003fb	48 f7 f1	 div	 rcx
  003fe	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00403	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 1024 : #else
; 1025 :         int64_t cpu_user_us = usage.ru_utime.tv_sec * 1000000 + usage.ru_utime.tv_usec;
; 1026 :         int64_t cpu_kernel_us = usage.ru_stime.tv_sec * 1000000 + usage.ru_stime.tv_usec;
; 1027 :         pInfoNew->cpu_total_us = cpu_user_us + cpu_kernel_us;
; 1028 :         pInfoNew->cpu_total_kernel_us = cpu_kernel_us;
; 1029 : #endif //#if defined(_WIN32) || defined(_WIN64)
; 1030 : 
; 1031 :         //CPU使用率
; 1032 :         const double logical_cpu_inv       = 1.0 / m_nLogicalCPU;

  00407	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0040f	f2 0f 2a 80 40
	0b 00 00	 cvtsi2sd xmm0, DWORD PTR [rax+2880]
  00417	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0041f	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00423	0f 28 c1	 movaps	 xmm0, xmm1
  00426	f2 0f 11 84 24
	c0 01 00 00	 movsd	 QWORD PTR logical_cpu_inv$15[rsp], xmm0

; 1033 :         pInfoNew->cpu_percent        = (pInfoNew->cpu_total_us        - pInfoOld->cpu_total_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  0042f	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00434	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00439	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0043d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00441	48 2b c1	 sub	 rax, rcx
  00444	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00449	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00451	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  0045a	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  00463	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00468	f2 0f 11 80 b0
	00 00 00	 movsd	 QWORD PTR [rax+176], xmm0

; 1034 :         pInfoNew->cpu_kernel_percent = (pInfoNew->cpu_total_kernel_us - pInfoOld->cpu_total_kernel_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  00470	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00475	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  0047a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0047e	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00482	48 2b c1	 sub	 rax, rcx
  00485	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  0048a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00492	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  0049b	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  004a4	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  004a9	f2 0f 11 80 b8
	00 00 00	 movsd	 QWORD PTR [rax+184], xmm0

; 1035 : 
; 1036 :         //IO情報
; 1037 :         pInfoNew->io_read_per_sec = (pInfoNew->io_total_read - pInfoOld->io_total_read) * time_diff_inv * 1e6;

  004b1	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  004b6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  004bb	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  004bf	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  004c3	48 2b c1	 sub	 rax, rcx
  004c6	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  004cb	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  004d4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@412e848000000000
  004dc	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  004e1	f2 0f 11 80 a0
	00 00 00	 movsd	 QWORD PTR [rax+160], xmm0

; 1038 :         pInfoNew->io_write_per_sec = (pInfoNew->io_total_write - pInfoOld->io_total_write) * time_diff_inv * 1e6;

  004e9	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  004ee	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  004f3	48 8b 49 60	 mov	 rcx, QWORD PTR [rcx+96]
  004f7	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  004fb	48 2b c1	 sub	 rax, rcx
  004fe	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00503	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  0050c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@412e848000000000
  00514	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00519	f2 0f 11 80 a8
	00 00 00	 movsd	 QWORD PTR [rax+168], xmm0

; 1039 : 
; 1040 : #if defined(_WIN32) || defined(_WIN64)
; 1041 :         //スレッドCPU使用率
; 1042 :         if (m_thMainThread) {

  00521	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00529	48 05 b0 02 00
	00		 add	 rax, 688		; 000002b0H
  0052f	48 8b c8	 mov	 rcx, rax
  00532	e8 00 00 00 00	 call	 ??B?$unique_ptr@XUhandle_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<void,handle_deleter>::operator bool
  00537	0f b6 c0	 movzx	 eax, al
  0053a	85 c0		 test	 eax, eax
  0053c	0f 84 95 00 00
	00		 je	 $LN4@check

; 1043 :             getThreadTime(m_thMainThread.get(), &pt);

  00542	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0054a	48 05 b0 02 00
	00		 add	 rax, 688		; 000002b0H
  00550	48 8b c8	 mov	 rcx, rax
  00553	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
  00558	4c 8d 84 24 88
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp]
  00560	48 8b d0	 mov	 rdx, rax
  00563	48 8d 4c 24 54	 lea	 rcx, QWORD PTR getThreadTime$[rsp]
  00568	e8 00 00 00 00	 call	 ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()

; 1044 :             pInfoNew->main_thread_total_active_us = (pt.user + pt.kernel) / 10;

  0056d	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  00575	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  0057d	48 03 c8	 add	 rcx, rax
  00580	48 8b c1	 mov	 rax, rcx
  00583	33 d2		 xor	 edx, edx
  00585	b9 0a 00 00 00	 mov	 ecx, 10
  0058a	48 f7 f1	 div	 rcx
  0058d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00592	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 1045 :             pInfoNew->main_thread_percent = (pInfoNew->main_thread_total_active_us - pInfoOld->main_thread_total_active_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  00596	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  0059b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  005a0	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  005a4	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  005a8	48 2b c1	 sub	 rax, rcx
  005ab	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  005b0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  005b8	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  005c1	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  005ca	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  005cf	f2 0f 11 80 c0
	00 00 00	 movsd	 QWORD PTR [rax+192], xmm0
$LN4@check:

; 1046 :         }
; 1047 : 
; 1048 :         if (m_thEncThread) {

  005d7	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005df	48 83 b8 18 0b
	00 00 00	 cmp	 QWORD PTR [rax+2840], 0
  005e7	0f 84 de 00 00
	00		 je	 $LN5@check

; 1049 :             DWORD exit_code = 0;

  005ed	c7 84 24 d4 01
	00 00 00 00 00
	00		 mov	 DWORD PTR exit_code$16[rsp], 0

; 1050 :             if (0 != GetExitCodeThread(m_thEncThread, &exit_code) && exit_code == STILL_ACTIVE) {

  005f8	48 8d 94 24 d4
	01 00 00	 lea	 rdx, QWORD PTR exit_code$16[rsp]
  00600	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00608	48 8b 88 18 0b
	00 00		 mov	 rcx, QWORD PTR [rax+2840]
  0060f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetExitCodeThread
  00615	85 c0		 test	 eax, eax
  00617	0f 84 9e 00 00
	00		 je	 $LN6@check
  0061d	81 bc 24 d4 01
	00 00 03 01 00
	00		 cmp	 DWORD PTR exit_code$16[rsp], 259 ; 00000103H
  00628	0f 85 8d 00 00
	00		 jne	 $LN6@check

; 1051 :                 getThreadTime(m_thEncThread, &pt);

  0062e	4c 8d 84 24 88
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp]
  00636	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0063e	48 8b 90 18 0b
	00 00		 mov	 rdx, QWORD PTR [rax+2840]
  00645	48 8d 4c 24 54	 lea	 rcx, QWORD PTR getThreadTime$[rsp]
  0064a	e8 00 00 00 00	 call	 ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()

; 1052 :                 pInfoNew->enc_thread_total_active_us = (pt.user + pt.kernel) / 10;

  0064f	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  00657	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  0065f	48 03 c8	 add	 rcx, rax
  00662	48 8b c1	 mov	 rax, rcx
  00665	33 d2		 xor	 edx, edx
  00667	b9 0a 00 00 00	 mov	 ecx, 10
  0066c	48 f7 f1	 div	 rcx
  0066f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00674	48 89 41 20	 mov	 QWORD PTR [rcx+32], rax

; 1053 :                 pInfoNew->enc_thread_percent  = (pInfoNew->enc_thread_total_active_us  - pInfoOld->enc_thread_total_active_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  00678	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  0067d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00682	48 8b 49 20	 mov	 rcx, QWORD PTR [rcx+32]
  00686	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0068a	48 2b c1	 sub	 rax, rcx
  0068d	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00692	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  0069a	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  006a3	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  006ac	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  006b1	f2 0f 11 80 c8
	00 00 00	 movsd	 QWORD PTR [rax+200], xmm0

; 1054 :             } else {

  006b9	eb 10		 jmp	 SHORT $LN7@check
$LN6@check:

; 1055 :                 pInfoNew->enc_thread_percent = 0.0;

  006bb	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  006c0	0f 57 c0	 xorps	 xmm0, xmm0
  006c3	f2 0f 11 80 c8
	00 00 00	 movsd	 QWORD PTR [rax+200], xmm0
$LN7@check:
$LN5@check:

; 1056 :             }
; 1057 :         }
; 1058 : 
; 1059 :         if (m_thAudProcThread) {

  006cb	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  006d3	48 83 b8 30 0b
	00 00 00	 cmp	 QWORD PTR [rax+2864], 0
  006db	0f 84 de 00 00
	00		 je	 $LN8@check

; 1060 :             DWORD exit_code = 0;

  006e1	c7 84 24 f4 01
	00 00 00 00 00
	00		 mov	 DWORD PTR exit_code$17[rsp], 0

; 1061 :             if (0 != GetExitCodeThread(m_thAudProcThread, &exit_code) && exit_code == STILL_ACTIVE) {

  006ec	48 8d 94 24 f4
	01 00 00	 lea	 rdx, QWORD PTR exit_code$17[rsp]
  006f4	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  006fc	48 8b 88 30 0b
	00 00		 mov	 rcx, QWORD PTR [rax+2864]
  00703	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetExitCodeThread
  00709	85 c0		 test	 eax, eax
  0070b	0f 84 9e 00 00
	00		 je	 $LN9@check
  00711	81 bc 24 f4 01
	00 00 03 01 00
	00		 cmp	 DWORD PTR exit_code$17[rsp], 259 ; 00000103H
  0071c	0f 85 8d 00 00
	00		 jne	 $LN9@check

; 1062 :                 getThreadTime(m_thAudProcThread, &pt);

  00722	4c 8d 84 24 88
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp]
  0072a	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00732	48 8b 90 30 0b
	00 00		 mov	 rdx, QWORD PTR [rax+2864]
  00739	48 8d 4c 24 54	 lea	 rcx, QWORD PTR getThreadTime$[rsp]
  0073e	e8 00 00 00 00	 call	 ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()

; 1063 :                 pInfoNew->aud_proc_thread_total_active_us = (pt.user + pt.kernel) / 10;

  00743	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  0074b	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  00753	48 03 c8	 add	 rcx, rax
  00756	48 8b c1	 mov	 rax, rcx
  00759	33 d2		 xor	 edx, edx
  0075b	b9 0a 00 00 00	 mov	 ecx, 10
  00760	48 f7 f1	 div	 rcx
  00763	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00768	48 89 41 28	 mov	 QWORD PTR [rcx+40], rax

; 1064 :                 pInfoNew->aud_proc_thread_percent  = (pInfoNew->aud_proc_thread_total_active_us  - pInfoOld->aud_proc_thread_total_active_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  0076c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00771	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00776	48 8b 49 28	 mov	 rcx, QWORD PTR [rcx+40]
  0077a	48 8b 40 28	 mov	 rax, QWORD PTR [rax+40]
  0077e	48 2b c1	 sub	 rax, rcx
  00781	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00786	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  0078e	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  00797	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  007a0	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  007a5	f2 0f 11 80 d0
	00 00 00	 movsd	 QWORD PTR [rax+208], xmm0

; 1065 :             } else {

  007ad	eb 10		 jmp	 SHORT $LN10@check
$LN9@check:

; 1066 :                 pInfoNew->aud_proc_thread_percent = 0.0;

  007af	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  007b4	0f 57 c0	 xorps	 xmm0, xmm0
  007b7	f2 0f 11 80 d0
	00 00 00	 movsd	 QWORD PTR [rax+208], xmm0
$LN10@check:
$LN8@check:

; 1067 :             }
; 1068 :         }
; 1069 : 
; 1070 :         if (m_thAudEncThread) {

  007bf	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007c7	48 83 b8 38 0b
	00 00 00	 cmp	 QWORD PTR [rax+2872], 0
  007cf	0f 84 de 00 00
	00		 je	 $LN11@check

; 1071 :             DWORD exit_code = 0;

  007d5	c7 84 24 14 02
	00 00 00 00 00
	00		 mov	 DWORD PTR exit_code$18[rsp], 0

; 1072 :             if (0 != GetExitCodeThread(m_thAudEncThread, &exit_code) && exit_code == STILL_ACTIVE) {

  007e0	48 8d 94 24 14
	02 00 00	 lea	 rdx, QWORD PTR exit_code$18[rsp]
  007e8	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007f0	48 8b 88 38 0b
	00 00		 mov	 rcx, QWORD PTR [rax+2872]
  007f7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetExitCodeThread
  007fd	85 c0		 test	 eax, eax
  007ff	0f 84 9e 00 00
	00		 je	 $LN12@check
  00805	81 bc 24 14 02
	00 00 03 01 00
	00		 cmp	 DWORD PTR exit_code$18[rsp], 259 ; 00000103H
  00810	0f 85 8d 00 00
	00		 jne	 $LN12@check

; 1073 :                 getThreadTime(m_thAudEncThread, &pt);

  00816	4c 8d 84 24 88
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp]
  0081e	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00826	48 8b 90 38 0b
	00 00		 mov	 rdx, QWORD PTR [rax+2872]
  0082d	48 8d 4c 24 54	 lea	 rcx, QWORD PTR getThreadTime$[rsp]
  00832	e8 00 00 00 00	 call	 ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()

; 1074 :                 pInfoNew->aud_enc_thread_total_active_us = (pt.user + pt.kernel) / 10;

  00837	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  0083f	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  00847	48 03 c8	 add	 rcx, rax
  0084a	48 8b c1	 mov	 rax, rcx
  0084d	33 d2		 xor	 edx, edx
  0084f	b9 0a 00 00 00	 mov	 ecx, 10
  00854	48 f7 f1	 div	 rcx
  00857	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  0085c	48 89 41 30	 mov	 QWORD PTR [rcx+48], rax

; 1075 :                 pInfoNew->aud_enc_thread_percent  = (pInfoNew->aud_enc_thread_total_active_us  - pInfoOld->aud_enc_thread_total_active_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  00860	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00865	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  0086a	48 8b 49 30	 mov	 rcx, QWORD PTR [rcx+48]
  0086e	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  00872	48 2b c1	 sub	 rax, rcx
  00875	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  0087a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00882	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  0088b	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  00894	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00899	f2 0f 11 80 d8
	00 00 00	 movsd	 QWORD PTR [rax+216], xmm0

; 1076 :             } else {

  008a1	eb 10		 jmp	 SHORT $LN13@check
$LN12@check:

; 1077 :                 pInfoNew->aud_enc_thread_percent = 0.0;

  008a3	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  008a8	0f 57 c0	 xorps	 xmm0, xmm0
  008ab	f2 0f 11 80 d8
	00 00 00	 movsd	 QWORD PTR [rax+216], xmm0
$LN13@check:
$LN11@check:

; 1078 :             }
; 1079 :         }
; 1080 : 
; 1081 :         if (m_thInThread) {

  008b3	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  008bb	48 83 b8 20 0b
	00 00 00	 cmp	 QWORD PTR [rax+2848], 0
  008c3	0f 84 de 00 00
	00		 je	 $LN14@check

; 1082 :             DWORD exit_code = 0;

  008c9	c7 84 24 34 02
	00 00 00 00 00
	00		 mov	 DWORD PTR exit_code$19[rsp], 0

; 1083 :             if (0 != GetExitCodeThread(m_thInThread, &exit_code) && exit_code == STILL_ACTIVE) {

  008d4	48 8d 94 24 34
	02 00 00	 lea	 rdx, QWORD PTR exit_code$19[rsp]
  008dc	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  008e4	48 8b 88 20 0b
	00 00		 mov	 rcx, QWORD PTR [rax+2848]
  008eb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetExitCodeThread
  008f1	85 c0		 test	 eax, eax
  008f3	0f 84 9e 00 00
	00		 je	 $LN15@check
  008f9	81 bc 24 34 02
	00 00 03 01 00
	00		 cmp	 DWORD PTR exit_code$19[rsp], 259 ; 00000103H
  00904	0f 85 8d 00 00
	00		 jne	 $LN15@check

; 1084 :                 getThreadTime(m_thInThread, &pt);

  0090a	4c 8d 84 24 88
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp]
  00912	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0091a	48 8b 90 20 0b
	00 00		 mov	 rdx, QWORD PTR [rax+2848]
  00921	48 8d 4c 24 54	 lea	 rcx, QWORD PTR getThreadTime$[rsp]
  00926	e8 00 00 00 00	 call	 ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()

; 1085 :                 pInfoNew->in_thread_total_active_us = (pt.user + pt.kernel) / 10;

  0092b	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  00933	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  0093b	48 03 c8	 add	 rcx, rax
  0093e	48 8b c1	 mov	 rax, rcx
  00941	33 d2		 xor	 edx, edx
  00943	b9 0a 00 00 00	 mov	 ecx, 10
  00948	48 f7 f1	 div	 rcx
  0094b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00950	48 89 41 40	 mov	 QWORD PTR [rcx+64], rax

; 1086 :                 pInfoNew->in_thread_percent  = (pInfoNew->in_thread_total_active_us  - pInfoOld->in_thread_total_active_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  00954	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00959	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  0095e	48 8b 49 40	 mov	 rcx, QWORD PTR [rcx+64]
  00962	48 8b 40 40	 mov	 rax, QWORD PTR [rax+64]
  00966	48 2b c1	 sub	 rax, rcx
  00969	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  0096e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00976	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  0097f	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  00988	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  0098d	f2 0f 11 80 e8
	00 00 00	 movsd	 QWORD PTR [rax+232], xmm0

; 1087 :             } else {

  00995	eb 10		 jmp	 SHORT $LN16@check
$LN15@check:

; 1088 :                 pInfoNew->in_thread_percent = 0.0;

  00997	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  0099c	0f 57 c0	 xorps	 xmm0, xmm0
  0099f	f2 0f 11 80 e8
	00 00 00	 movsd	 QWORD PTR [rax+232], xmm0
$LN16@check:
$LN14@check:

; 1089 :             }
; 1090 :         }
; 1091 : 
; 1092 :         if (m_thOutThread) {

  009a7	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009af	48 83 b8 28 0b
	00 00 00	 cmp	 QWORD PTR [rax+2856], 0
  009b7	0f 84 de 00 00
	00		 je	 $LN17@check

; 1093 :             DWORD exit_code = 0;

  009bd	c7 84 24 54 02
	00 00 00 00 00
	00		 mov	 DWORD PTR exit_code$20[rsp], 0

; 1094 :             if (0 != GetExitCodeThread(m_thOutThread, &exit_code) && exit_code == STILL_ACTIVE) {

  009c8	48 8d 94 24 54
	02 00 00	 lea	 rdx, QWORD PTR exit_code$20[rsp]
  009d0	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009d8	48 8b 88 28 0b
	00 00		 mov	 rcx, QWORD PTR [rax+2856]
  009df	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetExitCodeThread
  009e5	85 c0		 test	 eax, eax
  009e7	0f 84 9e 00 00
	00		 je	 $LN18@check
  009ed	81 bc 24 54 02
	00 00 03 01 00
	00		 cmp	 DWORD PTR exit_code$20[rsp], 259 ; 00000103H
  009f8	0f 85 8d 00 00
	00		 jne	 $LN18@check

; 1095 :                 getThreadTime(m_thOutThread, &pt);

  009fe	4c 8d 84 24 88
	01 00 00	 lea	 r8, QWORD PTR pt$[rsp]
  00a06	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a0e	48 8b 90 28 0b
	00 00		 mov	 rdx, QWORD PTR [rax+2856]
  00a15	48 8d 4c 24 54	 lea	 rcx, QWORD PTR getThreadTime$[rsp]
  00a1a	e8 00 00 00 00	 call	 ??R<lambda_5a0ebdb53bca1837caa8d6a14c3bf926>@@QEBAXPEAXPEAUPROCESS_TIME@@@Z ; <lambda_5a0ebdb53bca1837caa8d6a14c3bf926>::operator()

; 1096 :                 pInfoNew->out_thread_total_active_us = (pt.user + pt.kernel) / 10;

  00a1f	48 8b 84 24 98
	01 00 00	 mov	 rax, QWORD PTR pt$[rsp+16]
  00a27	48 8b 8c 24 a0
	01 00 00	 mov	 rcx, QWORD PTR pt$[rsp+24]
  00a2f	48 03 c8	 add	 rcx, rax
  00a32	48 8b c1	 mov	 rax, rcx
  00a35	33 d2		 xor	 edx, edx
  00a37	b9 0a 00 00 00	 mov	 ecx, 10
  00a3c	48 f7 f1	 div	 rcx
  00a3f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00a44	48 89 41 38	 mov	 QWORD PTR [rcx+56], rax

; 1097 :                 pInfoNew->out_thread_percent  = (pInfoNew->out_thread_total_active_us  - pInfoOld->out_thread_total_active_us) * 100.0 * logical_cpu_inv * time_diff_inv;

  00a48	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00a4d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00a52	48 8b 49 38	 mov	 rcx, QWORD PTR [rcx+56]
  00a56	48 8b 40 38	 mov	 rax, QWORD PTR [rax+56]
  00a5a	48 2b c1	 sub	 rax, rcx
  00a5d	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00a62	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00a6a	f2 0f 59 84 24
	c0 01 00 00	 mulsd	 xmm0, QWORD PTR logical_cpu_inv$15[rsp]
  00a73	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  00a7c	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00a81	f2 0f 11 80 e0
	00 00 00	 movsd	 QWORD PTR [rax+224], xmm0

; 1098 :             } else {

  00a89	eb 10		 jmp	 SHORT $LN19@check
$LN18@check:

; 1099 :                 pInfoNew->out_thread_percent = 0.0;

  00a8b	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00a90	0f 57 c0	 xorps	 xmm0, xmm0
  00a93	f2 0f 11 80 e0
	00 00 00	 movsd	 QWORD PTR [rax+224], xmm0
$LN19@check:
$LN17@check:
$LN3@check:

; 1100 :             }
; 1101 :         }
; 1102 : #endif //defined(_WIN32) || defined(_WIN64)
; 1103 :     }
; 1104 : 
; 1105 :     if (!m_bEncStarted && m_pEncStatus) {

  00a9b	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00aa3	0f b6 80 79 0b
	00 00		 movzx	 eax, BYTE PTR [rax+2937]
  00aaa	85 c0		 test	 eax, eax
  00aac	0f 85 89 00 00
	00		 jne	 $LN20@check
  00ab2	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00aba	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00ac0	48 8b c8	 mov	 rcx, rax
  00ac3	e8 00 00 00 00	 call	 ??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ ; std::shared_ptr<EncodeStatus>::operator bool
  00ac8	0f b6 c0	 movzx	 eax, al
  00acb	85 c0		 test	 eax, eax
  00acd	74 6c		 je	 SHORT $LN20@check

; 1106 :         m_bEncStarted = m_pEncStatus->getEncStarted();

  00acf	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00ad7	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00add	48 8b c8	 mov	 rcx, rax
  00ae0	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  00ae5	48 8b c8	 mov	 rcx, rax
  00ae8	e8 00 00 00 00	 call	 ?getEncStarted@EncodeStatus@@QEAA_NXZ ; EncodeStatus::getEncStarted
  00aed	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00af5	88 81 79 0b 00
	00		 mov	 BYTE PTR [rcx+2937], al

; 1107 :         if (m_bEncStarted) {

  00afb	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b03	0f b6 80 79 0b
	00 00		 movzx	 eax, BYTE PTR [rax+2937]
  00b0a	85 c0		 test	 eax, eax
  00b0c	74 2d		 je	 SHORT $LN21@check

; 1108 :             m_nEncStartTime = m_pEncStatus->getStartTimeMicroSec();

  00b0e	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b16	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00b1c	48 8b c8	 mov	 rcx, rax
  00b1f	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  00b24	48 8b c8	 mov	 rcx, rax
  00b27	e8 00 00 00 00	 call	 ?getStartTimeMicroSec@EncodeStatus@@QEAA_JXZ ; EncodeStatus::getStartTimeMicroSec
  00b2c	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b34	48 89 81 58 0b
	00 00		 mov	 QWORD PTR [rcx+2904], rax
$LN21@check:
$LN20@check:

; 1109 :         }
; 1110 :     }
; 1111 : 
; 1112 :     pInfoNew->bitrate_kbps = 0;

  00b3b	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00b40	0f 57 c0	 xorps	 xmm0, xmm0
  00b43	f2 0f 11 80 90
	00 00 00	 movsd	 QWORD PTR [rax+144], xmm0

; 1113 :     pInfoNew->frames_out_byte = 0;

  00b4b	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00b50	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0

; 1114 :     pInfoNew->fps = 0.0;

  00b58	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00b5d	0f 57 c0	 xorps	 xmm0, xmm0
  00b60	f2 0f 11 80 80
	00 00 00	 movsd	 QWORD PTR [rax+128], xmm0

; 1115 :     if (m_bEncStarted && m_pEncStatus) {

  00b68	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b70	0f b6 80 79 0b
	00 00		 movzx	 eax, BYTE PTR [rax+2937]
  00b77	85 c0		 test	 eax, eax
  00b79	0f 84 3b 02 00
	00		 je	 $LN22@check
  00b7f	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b87	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00b8d	48 8b c8	 mov	 rcx, rax
  00b90	e8 00 00 00 00	 call	 ??B?$shared_ptr@VEncodeStatus@@@std@@QEBA_NXZ ; std::shared_ptr<EncodeStatus>::operator bool
  00b95	0f b6 c0	 movzx	 eax, al
  00b98	85 c0		 test	 eax, eax
  00b9a	0f 84 1a 02 00
	00		 je	 $LN22@check

; 1116 :         EncodeStatusData data = m_pEncStatus->GetEncodeData();

  00ba0	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00ba8	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00bae	48 8b c8	 mov	 rcx, rax
  00bb1	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  00bb6	48 8d 94 24 80
	02 00 00	 lea	 rdx, QWORD PTR data$21[rsp]
  00bbe	48 8b c8	 mov	 rcx, rax
  00bc1	e8 00 00 00 00	 call	 ?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ ; EncodeStatus::GetEncodeData

; 1117 : 
; 1118 :         //fps情報
; 1119 :         pInfoNew->frames_out = data.frameTotal;

  00bc6	8b 84 24 98 02
	00 00		 mov	 eax, DWORD PTR data$21[rsp+24]
  00bcd	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pInfoNew$[rsp]
  00bd2	48 89 41 70	 mov	 QWORD PTR [rcx+112], rax

; 1120 :         if (pInfoNew->frames_out > pInfoOld->frames_out) {

  00bd6	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00bdb	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00be0	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  00be4	48 39 48 70	 cmp	 QWORD PTR [rax+112], rcx
  00be8	0f 8e cc 01 00
	00		 jle	 $LN23@check

; 1121 :             pInfoNew->fps_avg = pInfoNew->frames_out / (double)(current_time / 10 - m_nEncStartTime) * 1e6;

  00bee	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00bf3	f2 48 0f 2a 40
	70		 cvtsi2sd xmm0, QWORD PTR [rax+112]
  00bf9	33 d2		 xor	 edx, edx
  00bfb	48 8b 84 24 38
	01 00 00	 mov	 rax, QWORD PTR current_time$[rsp]
  00c03	b9 0a 00 00 00	 mov	 ecx, 10
  00c08	48 f7 f1	 div	 rcx
  00c0b	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c13	48 2b 81 58 0b
	00 00		 sub	 rax, QWORD PTR [rcx+2904]
  00c1a	48 85 c0	 test	 rax, rax
  00c1d	7c 07		 jl	 SHORT $LN27@check
  00c1f	f2 48 0f 2a c8	 cvtsi2sd xmm1, rax
  00c24	eb 19		 jmp	 SHORT $LN28@check
$LN27@check:
  00c26	48 8b c8	 mov	 rcx, rax
  00c29	48 d1 e9	 shr	 rcx, 1
  00c2c	48 83 e0 01	 and	 rax, 1
  00c30	48 0b c8	 or	 rcx, rax
  00c33	f2 48 0f 2a d1	 cvtsi2sd xmm2, rcx
  00c38	f2 0f 58 d2	 addsd	 xmm2, xmm2
  00c3c	0f 28 ca	 movaps	 xmm1, xmm2
$LN28@check:
  00c3f	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00c43	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@412e848000000000
  00c4b	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00c50	f2 0f 11 80 88
	00 00 00	 movsd	 QWORD PTR [rax+136], xmm0

; 1122 :             if (pInfoNew->time_us > pInfoOld->time_us) {

  00c58	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00c5d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00c62	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00c65	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00c68	7e 38		 jle	 SHORT $LN24@check

; 1123 :                 pInfoNew->fps     = (pInfoNew->frames_out - pInfoOld->frames_out) * time_diff_inv * 1e6;

  00c6a	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00c6f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00c74	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  00c78	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00c7c	48 2b c1	 sub	 rax, rcx
  00c7f	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00c84	f2 0f 59 84 24
	b8 01 00 00	 mulsd	 xmm0, QWORD PTR time_diff_inv$[rsp]
  00c8d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@412e848000000000
  00c95	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00c9a	f2 0f 11 80 80
	00 00 00	 movsd	 QWORD PTR [rax+128], xmm0
$LN24@check:

; 1124 :             }
; 1125 : 
; 1126 :             //ビットレート情報
; 1127 :             double videoSec     = pInfoNew->frames_out * m_nOutputFPSScale / (double)m_nOutputFPSRate;

  00ca2	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00ca7	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00caf	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00cb3	48 0f af 81 68
	0b 00 00	 imul	 rax, QWORD PTR [rcx+2920]
  00cbb	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00cc0	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00cc8	f2 48 0f 2a 88
	60 0b 00 00	 cvtsi2sd xmm1, QWORD PTR [rax+2912]
  00cd1	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00cd5	f2 0f 11 84 24
	38 03 00 00	 movsd	 QWORD PTR videoSec$22[rsp], xmm0

; 1128 :             double videoSecDiff = (pInfoNew->frames_out - pInfoOld->frames_out) * m_nOutputFPSScale / (double)m_nOutputFPSRate;

  00cde	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00ce3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00ce8	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  00cec	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00cf0	48 2b c1	 sub	 rax, rcx
  00cf3	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00cfb	48 0f af 81 68
	0b 00 00	 imul	 rax, QWORD PTR [rcx+2920]
  00d03	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00d08	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00d10	f2 48 0f 2a 88
	60 0b 00 00	 cvtsi2sd xmm1, QWORD PTR [rax+2912]
  00d19	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00d1d	f2 0f 11 84 24
	40 03 00 00	 movsd	 QWORD PTR videoSecDiff$23[rsp], xmm0

; 1129 : 
; 1130 :             pInfoNew->frames_out_byte = data.outFileSize;

  00d26	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00d2b	48 8b 8c 24 88
	02 00 00	 mov	 rcx, QWORD PTR data$21[rsp+8]
  00d33	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 1131 :             pInfoNew->bitrate_kbps_avg =  pInfoNew->frames_out_byte * 8.0 / videoSec * 1e-3;

  00d37	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00d3c	f2 48 0f 2a 40
	78		 cvtsi2sd xmm0, QWORD PTR [rax+120]
  00d42	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4020000000000000
  00d4a	f2 0f 5e 84 24
	38 03 00 00	 divsd	 xmm0, QWORD PTR videoSec$22[rsp]
  00d53	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00d5b	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00d60	f2 0f 11 80 98
	00 00 00	 movsd	 QWORD PTR [rax+152], xmm0

; 1132 :             if (pInfoNew->time_us > pInfoOld->time_us) {

  00d68	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00d6d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00d72	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00d75	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00d78	7e 40		 jle	 SHORT $LN25@check

; 1133 :                 pInfoNew->bitrate_kbps     = (pInfoNew->frames_out_byte - pInfoOld->frames_out_byte) * 8.0 / videoSecDiff * 1e-3;

  00d7a	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00d7f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR pInfoOld$[rsp]
  00d84	48 8b 49 78	 mov	 rcx, QWORD PTR [rcx+120]
  00d88	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00d8c	48 2b c1	 sub	 rax, rcx
  00d8f	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00d94	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4020000000000000
  00d9c	f2 0f 5e 84 24
	40 03 00 00	 divsd	 xmm0, QWORD PTR videoSecDiff$23[rsp]
  00da5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00dad	48 8b 44 24 30	 mov	 rax, QWORD PTR pInfoNew$[rsp]
  00db2	f2 0f 11 80 90
	00 00 00	 movsd	 QWORD PTR [rax+144], xmm0
$LN25@check:
$LN23@check:
$LN22@check:

; 1134 :             }
; 1135 :         }
; 1136 :     }
; 1137 : 
; 1138 :     m_nStep++;

  00dba	48 8b 84 24 70
	03 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00dc2	8b 00		 mov	 eax, DWORD PTR [rax]
  00dc4	ff c0		 inc	 eax
  00dc6	48 8b 8c 24 70
	03 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00dce	89 01		 mov	 DWORD PTR [rcx], eax

; 1139 : }

  00dd0	48 8b cc	 mov	 rcx, rsp
  00dd3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?check@CPerfMonitor@@IEAAXXZ$rtcFrameData
  00dda	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00ddf	48 8b 8c 24 58
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00de7	48 33 cc	 xor	 rcx, rsp
  00dea	e8 00 00 00 00	 call	 __security_check_cookie
  00def	48 81 c4 60 03
	00 00		 add	 rsp, 864		; 00000360H
  00df6	5f		 pop	 rdi
  00df7	c3		 ret	 0
?check@CPerfMonitor@@IEAAXXZ ENDP			; CPerfMonitor::check
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
ret$ = 32
resourceSize$ = 36
fp$ = 56
pDataPtr$ = 72
hResource$ = 80
hResourceData$ = 88
hModule$ = 96
tv89 = 104
this$ = 128
pywPath$ = 136
?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z PROC	; CPerfMonitor::createPerfMpnitorPyw

; 532  : int CPerfMonitor::createPerfMpnitorPyw(const TCHAR *pywPath) {

$LN11:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 533  :     //リソースを取り出し
; 534  :     int ret = 0;

  00026	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR ret$[rsp], 0

; 535  :     uint32_t resourceSize = 0;

  0002e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR resourceSize$[rsp], 0

; 536  :     FILE *fp = NULL;

  00036	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR fp$[rsp], 0

; 537  :     const char *pDataPtr = NULL;

  0003f	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR pDataPtr$[rsp], 0

; 538  : #if defined(_WIN32) || defined(_WIN64)
; 539  :     HRSRC hResource = NULL;

  00048	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR hResource$[rsp], 0

; 540  :     HGLOBAL hResourceData = NULL;

  00051	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR hResourceData$[rsp], 0

; 541  : #if BUILD_AUO
; 542  :     HMODULE hModule = GetModuleHandleA(AUO_NAME);
; 543  : #else
; 544  :     HMODULE hModule = GetModuleHandleA(NULL);

  0005a	33 c9		 xor	 ecx, ecx
  0005c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleHandleA
  00062	48 89 44 24 60	 mov	 QWORD PTR hModule$[rsp], rax

; 545  : #endif
; 546  :     if (   NULL == hModule
; 547  :         || NULL == (hResource = FindResource(hModule, _T("PERF_MONITOR_PYW"), _T("PERF_MONITOR_SRC")))
; 548  :         || NULL == (hResourceData = LoadResource(hModule, hResource))
; 549  :         || NULL == (pDataPtr = (const char *)LockResource(hResourceData))
; 550  :         || 0    == (resourceSize = SizeofResource(hModule, hResource))) {

  00067	48 83 7c 24 60
	00		 cmp	 QWORD PTR hModule$[rsp], 0
  0006d	74 76		 je	 SHORT $LN4@createPerf
  0006f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG117400
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117401
  0007d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR hModule$[rsp]
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FindResourceA
  00088	48 89 44 24 50	 mov	 QWORD PTR hResource$[rsp], rax
  0008d	48 83 7c 24 50
	00		 cmp	 QWORD PTR hResource$[rsp], 0
  00093	74 50		 je	 SHORT $LN4@createPerf
  00095	48 8b 54 24 50	 mov	 rdx, QWORD PTR hResource$[rsp]
  0009a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR hModule$[rsp]
  0009f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadResource
  000a5	48 89 44 24 58	 mov	 QWORD PTR hResourceData$[rsp], rax
  000aa	48 83 7c 24 58
	00		 cmp	 QWORD PTR hResourceData$[rsp], 0
  000b0	74 33		 je	 SHORT $LN4@createPerf
  000b2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR hResourceData$[rsp]
  000b7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LockResource
  000bd	48 89 44 24 48	 mov	 QWORD PTR pDataPtr$[rsp], rax
  000c2	48 83 7c 24 48
	00		 cmp	 QWORD PTR pDataPtr$[rsp], 0
  000c8	74 1b		 je	 SHORT $LN4@createPerf
  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR hResource$[rsp]
  000cf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR hModule$[rsp]
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SizeofResource
  000da	89 44 24 24	 mov	 DWORD PTR resourceSize$[rsp], eax
  000de	83 7c 24 24 00	 cmp	 DWORD PTR resourceSize$[rsp], 0
  000e3	75 0a		 jne	 SHORT $LN2@createPerf
$LN4@createPerf:

; 551  :         ret = 1;

  000e5	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR ret$[rsp], 1

; 552  :     } else

  000ed	eb 67		 jmp	 SHORT $LN3@createPerf
$LN2@createPerf:

; 553  : #else
; 554  :     pDataPtr = _binary_PerfMonitor_perf_monitor_pyw_start;
; 555  :     resourceSize = (uint32_t)(size_t)_binary_PerfMonitor_perf_monitor_pyw_size;
; 556  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 557  :     if (_tfopen_s(&fp, pywPath, _T("wb")) || NULL == fp) {

  000ef	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG117405
  000f6	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR pywPath$[rsp]
  000fe	48 8d 4c 24 38	 lea	 rcx, QWORD PTR fp$[rsp]
  00103	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen_s
  00109	85 c0		 test	 eax, eax
  0010b	75 08		 jne	 SHORT $LN7@createPerf
  0010d	48 83 7c 24 38
	00		 cmp	 QWORD PTR fp$[rsp], 0
  00113	75 0a		 jne	 SHORT $LN5@createPerf
$LN7@createPerf:

; 558  :         ret = 1;

  00115	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR ret$[rsp], 1
  0011d	eb 37		 jmp	 SHORT $LN6@createPerf
$LN5@createPerf:

; 559  :     } else if (resourceSize != fwrite(pDataPtr, 1, resourceSize, fp)) {

  0011f	8b 44 24 24	 mov	 eax, DWORD PTR resourceSize$[rsp]
  00123	48 89 44 24 68	 mov	 QWORD PTR tv89[rsp], rax
  00128	8b 4c 24 24	 mov	 ecx, DWORD PTR resourceSize$[rsp]
  0012c	4c 8b 4c 24 38	 mov	 r9, QWORD PTR fp$[rsp]
  00131	44 8b c1	 mov	 r8d, ecx
  00134	ba 01 00 00 00	 mov	 edx, 1
  00139	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pDataPtr$[rsp]
  0013e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00144	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv89[rsp]
  00149	48 3b c8	 cmp	 rcx, rax
  0014c	74 08		 je	 SHORT $LN8@createPerf

; 560  :         ret = 1;

  0014e	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR ret$[rsp], 1
$LN8@createPerf:
$LN6@createPerf:
$LN3@createPerf:

; 561  :     }
; 562  :     if (fp)

  00156	48 83 7c 24 38
	00		 cmp	 QWORD PTR fp$[rsp], 0
  0015c	74 0b		 je	 SHORT $LN9@createPerf

; 563  :         fclose(fp);

  0015e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR fp$[rsp]
  00163	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
$LN9@createPerf:

; 564  :     return ret;

  00169	8b 44 24 20	 mov	 eax, DWORD PTR ret$[rsp]

; 565  : }

  0016d	8b f8		 mov	 edi, eax
  0016f	48 8b cc	 mov	 rcx, rsp
  00172	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z$rtcFrameData
  00179	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0017e	8b c7		 mov	 eax, edi
  00180	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00184	5f		 pop	 rdi
  00185	c3		 ret	 0
?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z ENDP	; CPerfMonitor::createPerfMpnitorPyw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
this$ = 48
?clear@CPerfMonitor@@QEAAXXZ PROC			; CPerfMonitor::clear

; 496  : void CPerfMonitor::clear() {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 497  :     if (m_thCheck.joinable()) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 a0 02 00
	00		 add	 rax, 672		; 000002a0H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00031	0f b6 c0	 movzx	 eax, al
  00034	85 c0		 test	 eax, eax
  00036	74 1f		 je	 SHORT $LN2@clear

; 498  :         m_bAbort = true;

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	c6 80 78 0b 00
	00 01		 mov	 BYTE PTR [rax+2936], 1

; 499  :         m_thCheck.join();

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 05 a0 02 00
	00		 add	 rax, 672		; 000002a0H
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ?join@thread@std@@QEAAXXZ ; std::thread::join
$LN2@clear:

; 500  :     }
; 501  :     memset(m_info, 0, sizeof(m_info));

  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c0 30	 add	 rax, 48			; 00000030H
  00060	41 b8 70 02 00
	00		 mov	 r8d, 624		; 00000270H
  00066	33 d2		 xor	 edx, edx
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 memset

; 502  :     memset(&m_QueueInfo, 0, sizeof(m_QueueInfo));

  00070	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00075	48 05 c0 0b 00
	00		 add	 rax, 3008		; 00000bc0H
  0007b	41 b8 30 00 00
	00		 mov	 r8d, 48			; 00000030H
  00081	33 d2		 xor	 edx, edx
  00083	48 8b c8	 mov	 rcx, rax
  00086	e8 00 00 00 00	 call	 memset

; 503  : #if ENABLE_METRIC_FRAMEWORK
; 504  :     if (m_pManager) {
; 505  :         const auto metricsUsed = m_Consumer.getMetricUsed();
; 506  :         for (auto metric = metricsUsed.cbegin(); metric != metricsUsed.cend(); metric++) {
; 507  :             m_pManager->UnsubscribeMetric(m_Consumer, metric->first);
; 508  :         }
; 509  :     }
; 510  :     m_pManager.reset();
; 511  : #endif //#if ENABLE_METRIC_FRAMEWORK
; 512  : 
; 513  :     m_nStep = 0;

  0008b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00090	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 514  :     m_thMainThread.reset();

  00096	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009b	48 05 b0 02 00
	00		 add	 rax, 688		; 000002b0H
  000a1	33 d2		 xor	 edx, edx
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@XUhandle_deleter@@@std@@QEAAXPEAX@Z ; std::unique_ptr<void,handle_deleter>::reset

; 515  :     m_thAudProcThread = NULL;

  000ab	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 c7 80 30 0b
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+2864], 0

; 516  :     m_thEncThread = NULL;

  000bb	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000c0	48 c7 80 18 0b
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+2840], 0

; 517  :     m_thOutThread = NULL;

  000cb	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d0	48 c7 80 28 0b
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+2856], 0

; 518  :     m_bAbort = false;

  000db	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e0	c6 80 78 0b 00
	00 00		 mov	 BYTE PTR [rax+2936], 0

; 519  :     m_bEncStarted = false;

  000e7	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ec	c6 80 79 0b 00
	00 00		 mov	 BYTE PTR [rax+2937], 0

; 520  :     if (m_fpLog) {

  000f3	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000f8	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  000fe	48 8b c8	 mov	 rcx, rax
  00101	e8 00 00 00 00	 call	 ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
  00106	0f b6 c0	 movzx	 eax, al
  00109	85 c0		 test	 eax, eax
  0010b	74 22		 je	 SHORT $LN3@clear

; 521  :         fprintf(m_fpLog.get(), "\n\n");

  0010d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00112	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  00118	48 8b c8	 mov	 rcx, rax
  0011b	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00120	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117383
  00127	48 8b c8	 mov	 rcx, rax
  0012a	e8 00 00 00 00	 call	 fprintf
$LN3@clear:

; 522  :     }
; 523  :     m_fpLog.reset();

  0012f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00134	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  0013a	33 d2		 xor	 edx, edx
  0013c	48 8b c8	 mov	 rcx, rax
  0013f	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAXPEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::reset

; 524  :     if (m_pipes.f_stdin) {

  00144	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00149	48 83 b8 08 03
	00 00 00	 cmp	 QWORD PTR [rax+776], 0
  00151	74 22		 je	 SHORT $LN4@clear

; 525  :         fclose(m_pipes.f_stdin);

  00153	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00158	48 8b 88 08 03
	00 00		 mov	 rcx, QWORD PTR [rax+776]
  0015f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose

; 526  :         m_pipes.f_stdin = NULL;

  00165	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0016a	48 c7 80 08 03
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+776], 0
$LN4@clear:

; 527  :     }
; 528  :     m_pProcess.reset();

  00175	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0017a	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  00180	33 d2		 xor	 edx, edx
  00182	48 8b c8	 mov	 rcx, rax
  00185	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAXPEAVRGYPipeProcess@@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::reset

; 529  :     m_pRGYLog.reset();

  0018a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0018f	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  00195	48 8b c8	 mov	 rcx, rax
  00198	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ; std::shared_ptr<RGYLog>::reset

; 530  : }

  0019d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001a1	5f		 pop	 rdi
  001a2	c3		 ret	 0
?clear@CPerfMonitor@@QEAAXXZ ENDP			; CPerfMonitor::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
this$ = 16
thEncThread$ = 24
thInThread$ = 32
thOutThread$ = 40
thAudProcThread$ = 48
thAudEncThread$ = 56
?SetThreadHandles@CPerfMonitor@@QEAAXPEAX0000@Z PROC	; CPerfMonitor::SetThreadHandles

; 864  : void CPerfMonitor::SetThreadHandles(HANDLE thEncThread, HANDLE thInThread, HANDLE thOutThread, HANDLE thAudProcThread, HANDLE thAudEncThread) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi

; 865  :     m_thEncThread = thEncThread;

  00015	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001a	48 8b 4c 24 18	 mov	 rcx, QWORD PTR thEncThread$[rsp]
  0001f	48 89 88 18 0b
	00 00		 mov	 QWORD PTR [rax+2840], rcx

; 866  :     m_thInThread = thInThread;

  00026	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR thInThread$[rsp]
  00030	48 89 88 20 0b
	00 00		 mov	 QWORD PTR [rax+2848], rcx

; 867  :     m_thOutThread = thOutThread;

  00037	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR thOutThread$[rsp]
  00041	48 89 88 28 0b
	00 00		 mov	 QWORD PTR [rax+2856], rcx

; 868  :     m_thAudProcThread = thAudProcThread;

  00048	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR thAudProcThread$[rsp]
  00052	48 89 88 30 0b
	00 00		 mov	 QWORD PTR [rax+2864], rcx

; 869  :     m_thAudEncThread = thAudEncThread;

  00059	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR thAudEncThread$[rsp]
  00063	48 89 88 38 0b
	00 00		 mov	 QWORD PTR [rax+2872], rcx

; 870  : }

  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
?SetThreadHandles@CPerfMonitor@@QEAAXPEAX0000@Z ENDP	; CPerfMonitor::SetThreadHandles
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
data$ = 48
__$ArrayPad$ = 240
this$ = 272
encStatus$ = 280
?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z PROC ; CPerfMonitor::SetEncStatus

; 857  : void CPerfMonitor::SetEncStatus(std::shared_ptr<EncodeStatus> encStatus) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 00 01
	00 00		 sub	 rsp, 256		; 00000100H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR [rsp+272]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 f0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 858  :     m_pEncStatus = encStatus;

  0003b	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00049	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR encStatus$[rsp]
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??4?$shared_ptr@VEncodeStatus@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<EncodeStatus>::operator=

; 859  :     EncodeStatusData data = m_pEncStatus->GetEncodeData();

  00059	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00061	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00067	48 8b c8	 mov	 rcx, rax
  0006a	e8 00 00 00 00	 call	 ??$?CVEncodeStatus@@$0A@@?$shared_ptr@VEncodeStatus@@@std@@QEBAPEAVEncodeStatus@@XZ ; std::shared_ptr<EncodeStatus>::operator-><EncodeStatus,0>
  0006f	48 8d 54 24 30	 lea	 rdx, QWORD PTR data$[rsp]
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ?GetEncodeData@EncodeStatus@@QEAA?AUEncodeStatusData@@XZ ; EncodeStatus::GetEncodeData

; 860  :     m_nOutputFPSScale = data.outputFPSScale;

  0007c	8b 44 24 34	 mov	 eax, DWORD PTR data$[rsp+4]
  00080	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00088	48 89 81 68 0b
	00 00		 mov	 QWORD PTR [rcx+2920], rax

; 861  :     m_nOutputFPSRate = data.outputFPSRate;

  0008f	8b 44 24 30	 mov	 eax, DWORD PTR data$[rsp]
  00093	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	48 89 81 60 0b
	00 00		 mov	 QWORD PTR [rcx+2912], rax

; 862  : }

  000a2	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR encStatus$[rsp]
  000aa	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000af	48 8b cc	 mov	 rcx, rsp
  000b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z$rtcFrameData
  000b9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000be	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000c6	48 33 cc	 xor	 rcx, rsp
  000c9	e8 00 00 00 00	 call	 __security_check_cookie
  000ce	48 81 c4 00 01
	00 00		 add	 rsp, 256		; 00000100H
  000d5	5f		 pop	 rdi
  000d6	c3		 ret	 0
?SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z ENDP ; CPerfMonitor::SetEncStatus
_TEXT	ENDS
text$x	SEGMENT
data$ = 48
__$ArrayPad$ = 240
this$ = 272
encStatus$ = 280
?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA PROC ; `CPerfMonitor::SetEncStatus'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR encStatus$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA ENDP ; `CPerfMonitor::SetEncStatus'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
data$ = 48
__$ArrayPad$ = 240
this$ = 272
encStatus$ = 280
?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA PROC ; `CPerfMonitor::SetEncStatus'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR encStatus$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??SetEncStatus@CPerfMonitor@@QEAAXV?$shared_ptr@VEncodeStatus@@@std@@@Z@4HA ENDP ; `CPerfMonitor::SetEncStatus'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
this$ = 48
??1CPerfMonitor@@QEAA@XZ PROC				; CPerfMonitor::~CPerfMonitor

; 492  : CPerfMonitor::~CPerfMonitor() {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 493  :     clear();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?clear@CPerfMonitor@@QEAAXXZ ; CPerfMonitor::clear
  00028	90		 npad	 1

; 494  : }

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  00034	48 8b c8	 mov	 rcx, rax
  00037	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0003c	90		 npad	 1
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00050	90		 npad	 1
  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 05 80 0b 00
	00		 add	 rax, 2944		; 00000b80H
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00064	90		 npad	 1
  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00078	90		 npad	 1
  00079	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007e	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  0008c	90		 npad	 1
  0008d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 05 b0 02 00
	00		 add	 rax, 688		; 000002b0H
  00098	48 8b c8	 mov	 rcx, rax
  0009b	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  000a0	90		 npad	 1
  000a1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a6	48 05 a0 02 00
	00		 add	 rax, 672		; 000002a0H
  000ac	48 8b c8	 mov	 rcx, rax
  000af	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  000b4	90		 npad	 1
  000b5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000ba	48 83 c0 08	 add	 rax, 8
  000be	48 8b c8	 mov	 rcx, rax
  000c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c6	90		 npad	 1
  000c7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000cb	5f		 pop	 rdi
  000cc	c3		 ret	 0
??1CPerfMonitor@@QEAA@XZ ENDP				; CPerfMonitor::~CPerfMonitor
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$0
this$ = 48
?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 81 c1 a0 02
	00 00		 add	 rcx, 672		; 000002a0H
  00045	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0004a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$1
this$ = 48
?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$2
  00051	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00056	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005b	55		 push	 rbp
  0005c	57		 push	 rdi
  0005d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00061	48 8b ea	 mov	 rbp, rdx
  00064	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00068	48 81 c1 b0 02
	00 00		 add	 rcx, 688		; 000002b0H
  0006f	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$2
this$ = 48
?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$3
  0007b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00080	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00085	55		 push	 rbp
  00086	57		 push	 rdi
  00087	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0008b	48 8b ea	 mov	 rbp, rdx
  0008e	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00092	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  00099	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  0009e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$3
this$ = 48
?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$4
  000a5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000aa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000af	55		 push	 rbp
  000b0	57		 push	 rdi
  000b1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b5	48 8b ea	 mov	 rbp, rdx
  000b8	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000bc	48 81 c1 48 0b
	00 00		 add	 rcx, 2888		; 00000b48H
  000c3	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$4
this$ = 48
?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 81 c1 80 0b
	00 00		 add	 rcx, 2944		; 00000b80H
  000ed	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000f2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f6	5f		 pop	 rdi
  000f7	5d		 pop	 rbp
  000f8	c3		 ret	 0
?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$5
this$ = 48
?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$6
  000f9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000fe	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00103	55		 push	 rbp
  00104	57		 push	 rdi
  00105	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00109	48 8b ea	 mov	 rbp, rdx
  0010c	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00110	48 81 c1 a8 0b
	00 00		 add	 rcx, 2984		; 00000ba8H
  00117	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  0011c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00120	5f		 pop	 rdi
  00121	5d		 pop	 rbp
  00122	c3		 ret	 0
?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$6
this$ = 48
?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$7
  00123	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00128	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0012d	55		 push	 rbp
  0012e	57		 push	 rdi
  0012f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00133	48 8b ea	 mov	 rbp, rdx
  00136	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0013a	48 81 c1 f0 0b
	00 00		 add	 rcx, 3056		; 00000bf0H
  00141	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00146	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014a	5f		 pop	 rdi
  0014b	5d		 pop	 rbp
  0014c	c3		 ret	 0
?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 81 c1 a0 02
	00 00		 add	 rcx, 672		; 000002a0H
  00045	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0004a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$1@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$2
  00051	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00056	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005b	55		 push	 rbp
  0005c	57		 push	 rdi
  0005d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00061	48 8b ea	 mov	 rbp, rdx
  00064	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00068	48 81 c1 b0 02
	00 00		 add	 rcx, 688		; 000002b0H
  0006f	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
?dtor$2@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$3
  0007b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00080	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00085	55		 push	 rbp
  00086	57		 push	 rdi
  00087	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0008b	48 8b ea	 mov	 rbp, rdx
  0008e	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00092	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  00099	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  0009e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?dtor$3@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$4
  000a5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000aa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000af	55		 push	 rbp
  000b0	57		 push	 rdi
  000b1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b5	48 8b ea	 mov	 rbp, rdx
  000b8	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000bc	48 81 c1 48 0b
	00 00		 add	 rcx, 2888		; 00000b48H
  000c3	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 81 c1 80 0b
	00 00		 add	 rcx, 2944		; 00000b80H
  000ed	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000f2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f6	5f		 pop	 rdi
  000f7	5d		 pop	 rbp
  000f8	c3		 ret	 0
?dtor$5@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$6
  000f9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000fe	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00103	55		 push	 rbp
  00104	57		 push	 rdi
  00105	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00109	48 8b ea	 mov	 rbp, rdx
  0010c	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00110	48 81 c1 a8 0b
	00 00		 add	 rcx, 2984		; 00000ba8H
  00117	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  0011c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00120	5f		 pop	 rdi
  00121	5d		 pop	 rbp
  00122	c3		 ret	 0
?dtor$6@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$7
  00123	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00128	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0012d	55		 push	 rbp
  0012e	57		 push	 rdi
  0012f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00133	48 8b ea	 mov	 rbp, rdx
  00136	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0013a	48 81 c1 f0 0b
	00 00		 add	 rcx, 3056		; 00000bf0H
  00141	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00146	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0014a	5f		 pop	 rdi
  0014b	5d		 pop	 rbp
  0014c	c3		 ret	 0
?dtor$7@?0???1CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::~CPerfMonitor'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z PROC ; CPerfMonitor::init

; 667  :     std::shared_ptr<RGYLog> pRGYLog, CPerfMonitorPrm *prm) {

$LN35:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec e0 0c
	00 00		 sub	 rsp, 3296		; 00000ce0H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 38 03 00 00	 mov	 ecx, 824		; 00000338H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR [rsp+3312]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 d0
	0c 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 668  :     clear();

  00045	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	e8 00 00 00 00	 call	 ?clear@CPerfMonitor@@QEAAXXZ ; CPerfMonitor::clear

; 669  :     m_pRGYLog = pRGYLog;

  00052	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  00060	48 8b 94 24 28
	0d 00 00	 mov	 rdx, QWORD PTR pRGYLog$[rsp]
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??4?$shared_ptr@VRGYLog@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<RGYLog>::operator=

; 670  : 
; 671  :     m_nCreateTime100ns = (int64_t)(clock() * (1e7 / CLOCKS_PER_SEC) + 0.5);

  00070	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_clock
  00076	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0007a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40c3880000000000
  00082	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0008a	f2 48 0f 2c c0	 cvttsd2si rax, xmm0
  0008f	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00097	48 89 81 70 0b
	00 00		 mov	 QWORD PTR [rcx+2928], rax

; 672  :     m_sMonitorFilename = filename;

  0009e	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a6	48 05 80 0b 00
	00		 add	 rax, 2944		; 00000b80H
  000ac	48 8b 94 24 f8
	0c 00 00	 mov	 rdx, QWORD PTR filename$[rsp]
  000b4	48 8b c8	 mov	 rcx, rax
  000b7	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 673  :     m_nInterval = interval;

  000bc	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c4	8b 8c 24 08 0d
	00 00		 mov	 ecx, DWORD PTR interval$[rsp]
  000cb	89 88 7c 0b 00
	00		 mov	 DWORD PTR [rax+2940], ecx

; 674  :     m_nSelectOutputPlot = nSelectOutputPlot;

  000d1	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d9	8b 8c 24 18 0d
	00 00		 mov	 ecx, DWORD PTR nSelectOutputPlot$[rsp]
  000e0	89 88 b8 0b 00
	00		 mov	 DWORD PTR [rax+3000], ecx

; 675  :     m_nSelectOutputLog = nSelectOutputLog;

  000e6	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ee	8b 8c 24 10 0d
	00 00		 mov	 ecx, DWORD PTR nSelectOutputLog$[rsp]
  000f5	89 88 b4 0b 00
	00		 mov	 DWORD PTR [rax+2996], ecx

; 676  :     m_nSelectCheck = m_nSelectOutputLog | m_nSelectOutputPlot;

  000fb	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00103	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0010b	8b 89 b8 0b 00
	00		 mov	 ecx, DWORD PTR [rcx+3000]
  00111	8b 80 b4 0b 00
	00		 mov	 eax, DWORD PTR [rax+2996]
  00117	0b c1		 or	 eax, ecx
  00119	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00121	89 81 b0 0b 00
	00		 mov	 DWORD PTR [rcx+2992], eax

; 677  :     m_thMainThread = std::move(thMainThread);

  00127	48 8b 8c 24 20
	0d 00 00	 mov	 rcx, QWORD PTR thMainThread$[rsp]
  0012f	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
  00134	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013c	48 81 c1 b0 02
	00 00		 add	 rcx, 688		; 000002b0H
  00143	48 8b d0	 mov	 rdx, rax
  00146	e8 00 00 00 00	 call	 ??4?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<void,handle_deleter>::operator=

; 678  : 
; 679  :     if (!m_fpLog && m_sMonitorFilename.length() > 0) {

  0014b	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00153	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  00159	48 8b c8	 mov	 rcx, rax
  0015c	e8 00 00 00 00	 call	 ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
  00161	0f b6 c0	 movzx	 eax, al
  00164	85 c0		 test	 eax, eax
  00166	0f 85 a3 01 00
	00		 jne	 $LN2@init
  0016c	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00174	48 05 80 0b 00
	00		 add	 rax, 2944		; 00000b80H
  0017a	48 8b c8	 mov	 rcx, rax
  0017d	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  00182	48 85 c0	 test	 rax, rax
  00185	0f 86 84 01 00
	00		 jbe	 $LN2@init

; 680  :         m_fpLog = std::unique_ptr<FILE, fp_deleter>(_tfopen(m_sMonitorFilename.c_str(), _T("a")));

  0018b	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00193	48 05 80 0b 00
	00		 add	 rax, 2944		; 00000b80H
  00199	48 8b c8	 mov	 rcx, rax
  0019c	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  001a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118201
  001a8	48 8b c8	 mov	 rcx, rax
  001ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fopen
  001b1	48 8b d0	 mov	 rdx, rax
  001b4	48 8d 8c 24 00
	0b 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  001bc	e8 00 00 00 00	 call	 ??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@PEAU_iobuf@@@Z ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
  001c1	48 89 84 24 70
	0b 00 00	 mov	 QWORD PTR tv540[rsp], rax
  001c9	48 8b 84 24 70
	0b 00 00	 mov	 rax, QWORD PTR tv540[rsp]
  001d1	48 89 84 24 78
	0b 00 00	 mov	 QWORD PTR tv502[rsp], rax
  001d9	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e1	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  001e7	48 8b 94 24 78
	0b 00 00	 mov	 rdx, QWORD PTR tv502[rsp]
  001ef	48 8b c8	 mov	 rcx, rax
  001f2	e8 00 00 00 00	 call	 ??4?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<_iobuf,fp_deleter>::operator=
  001f7	90		 npad	 1
  001f8	48 8d 8c 24 00
	0b 00 00	 lea	 rcx, QWORD PTR $T25[rsp]
  00200	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>

; 681  :         if (!m_fpLog) {

  00205	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0020d	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  00213	48 8b c8	 mov	 rcx, rax
  00216	e8 00 00 00 00	 call	 ??B?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBA_NXZ ; std::unique_ptr<_iobuf,fp_deleter>::operator bool
  0021b	0f b6 c0	 movzx	 eax, al
  0021e	85 c0		 test	 eax, eax
  00220	0f 85 e9 00 00
	00		 jne	 $LN2@init

; 682  :             m_pRGYLog->write(RGY_LOG_WARN, _T("Failed to open performance monitor log file: %s\n"), m_sMonitorFilename.c_str());

  00226	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0022e	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  00234	48 8b c8	 mov	 rcx, rax
  00237	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  0023c	48 89 84 24 80
	0b 00 00	 mov	 QWORD PTR tv157[rsp], rax
  00244	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0024c	48 05 80 0b 00
	00		 add	 rax, 2944		; 00000b80H
  00252	48 8b c8	 mov	 rcx, rax
  00255	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0025a	48 8b 8c 24 80
	0b 00 00	 mov	 rcx, QWORD PTR tv157[rsp]
  00262	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00265	48 89 8c 24 88
	0b 00 00	 mov	 QWORD PTR tv559[rsp], rcx
  0026d	4c 8b c8	 mov	 r9, rax
  00270	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118203
  00277	ba 01 00 00 00	 mov	 edx, 1
  0027c	48 8b 8c 24 80
	0b 00 00	 mov	 rcx, QWORD PTR tv157[rsp]
  00284	48 8b 84 24 88
	0b 00 00	 mov	 rax, QWORD PTR tv559[rsp]
  0028c	ff 50 20	 call	 QWORD PTR [rax+32]

; 683  :             m_pRGYLog->write(RGY_LOG_WARN, _T("performance monitoring disabled.\n"));

  0028f	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00297	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  0029d	48 8b c8	 mov	 rcx, rax
  002a0	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  002a5	48 89 84 24 90
	0b 00 00	 mov	 QWORD PTR tv170[rsp], rax
  002ad	48 8b 84 24 90
	0b 00 00	 mov	 rax, QWORD PTR tv170[rsp]
  002b5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002b8	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118204
  002bf	ba 01 00 00 00	 mov	 edx, 1
  002c4	48 8b 8c 24 90
	0b 00 00	 mov	 rcx, QWORD PTR tv170[rsp]
  002cc	ff 50 20	 call	 QWORD PTR [rax+32]

; 684  :             return 1;

  002cf	c7 84 24 08 0b
	00 00 01 00 00
	00		 mov	 DWORD PTR $T26[rsp], 1
  002da	48 8b 8c 24 f8
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  002e2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002e7	90		 npad	 1
  002e8	48 8b 8c 24 20
	0d 00 00	 mov	 rcx, QWORD PTR thMainThread$[rsp]
  002f0	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  002f5	90		 npad	 1
  002f6	48 8b 8c 24 28
	0d 00 00	 mov	 rcx, QWORD PTR pRGYLog$[rsp]
  002fe	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00303	8b 84 24 08 0b
	00 00		 mov	 eax, DWORD PTR $T26[rsp]
  0030a	e9 8b 0a 00 00	 jmp	 $LN1@init
$LN2@init:

; 685  :         }
; 686  :     }
; 687  : #if ENABLE_METRIC_FRAMEWORK
; 688  :     //LoadAllを使用する場合、下記のように使わないモジュールを書くことで取得するモジュールを制限できる
; 689  :     //putenv("GM_EXTENSION_LIB_SKIP_LIST=SEPPublisher,PVRPublisher,CPUInfoPublisher,RenderPerfPublisher");
; 690  :     m_pLoader = ExtensionLoader::Create();
; 691  :     //m_pLoader->AddSearchPath(loadPath.c_str());
; 692  :     if (m_pLoader->Load("DefaultManager") == 0) {
; 693  :         pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to load DefaultManager\n"));
; 694  :     } else if (m_pLoader->CommitExtensions() == 0) {
; 695  :     //} else if (m_pLoader->Load("LogPublisher") == 0) {
; 696  :         //pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to load LogPublisher\n"));
; 697  :     //下記のようにLoadAllでもよいが非常に重い
; 698  :     //} else if (m_pLoader->LoadAll() == 0) {
; 699  :         //pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to load Metric dlls\n"));
; 700  :     //mfxの使用率をとるには下記の2つが必要
; 701  :     } else if (m_pLoader->Load("MediaPerfPublisher") == 0) {
; 702  :         pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to load MediaPerfPublisher\n"));
; 703  :     } else if (m_pLoader->Load("RenderPerfPublisher") == 0) {
; 704  :         pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to load RenderPerfPublisher\n"));
; 705  :     //以下でGPU平均使用率などがとれるはずだが・・・
; 706  :     //} else if (m_pLoader->Load("GfxDrvSampledPublisher") == 0) {
; 707  :         //pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to load GfxDrvSampledPublisher\n"));
; 708  :     } else if (m_pLoader->CommitExtensions() == 0) {
; 709  :         //pRGYLog->write(RGY_LOG_DEBUG, _T("PerfMonitor: Failed to CommitExtensions\n"));
; 710  :     } else {
; 711  :         //定義した情報の受け取り口を登録
; 712  :         m_pLoader->AddExtension("CQSVConsumer", &m_Consumer);
; 713  :         m_pManager.reset(GM_GET_DEFAULT_CLIENT_MANAGER(m_pLoader));
; 714  :         if (m_pManager == nullptr) {
; 715  :             pRGYLog->write(RGY_LOG_WARN, _T("No default Client Manager available\n"));
; 716  :         } else {
; 717  :             RegistrySearcher regsearcher(m_pManager.get(), RESOURCE_TYPE_METRIC, PAYLOAD_TYPE_ANY, 0);
; 718  :             std::map<MetricHandle, std::string> validMetrics;
; 719  :             for (int i = 0; i < _countof(METRIC_NAMES); i++) {
; 720  :                 PathHandle h = regsearcher[METRIC_NAMES[i]];
; 721  :                 if (h != 0) {
; 722  :                     validMetrics[h] = METRIC_NAMES[i];
; 723  :                 }
; 724  :             }
; 725  :             std::map<MetricHandle, std::string> subscribedMetrics;
; 726  :             for (auto metric = validMetrics.cbegin(); metric != validMetrics.cend(); metric++) {
; 727  :                 GM_STATUS status = m_pManager->SubscribeMetric(m_Consumer.GetHandle(), metric->first);
; 728  :                 if (GM_STATUS_SUCCESS != status) {
; 729  :                     pRGYLog->write(RGY_LOG_WARN, _T("Failure to subscribe %s metric: %d.\n"), char_to_tstring(metric->second).c_str(), status);
; 730  :                 } else {
; 731  :                     pRGYLog->write(RGY_LOG_DEBUG, _T("subscribed %s metric\n"), char_to_tstring(metric->second).c_str());
; 732  :                     subscribedMetrics[metric->first] = metric->second;
; 733  :                 }
; 734  :             }
; 735  :             m_Consumer.AddMetrics(subscribedMetrics);
; 736  :             if (subscribedMetrics.size() != _countof(METRIC_NAMES)) {
; 737  :                 pRGYLog->write(RGY_LOG_DEBUG, _T("metrics was not fully load, disable metric framework features.\n"));
; 738  :                 if (m_pManager) {
; 739  :                     const auto metricsUsed = m_Consumer.getMetricUsed();
; 740  :                     for (auto metric = metricsUsed.cbegin(); metric != metricsUsed.cend(); metric++) {
; 741  :                         m_pManager->UnsubscribeMetric(m_Consumer, metric->first);
; 742  :                     }
; 743  :                 }
; 744  :                 m_pManager.reset();
; 745  :             }
; 746  :         }
; 747  :     }
; 748  : #endif //#if ENABLE_METRIC_FRAMEWORK
; 749  : #if ENABLE_NVML
; 750  :     auto nvml_ret = m_nvmlMonitor.Init(prm->pciBusId);
; 751  :     if (nvml_ret != NVML_SUCCESS) {
; 752  :         pRGYLog->write(RGY_LOG_INFO, _T("Failed to start NVML Monitoring for \"%s\": %s.\n"), char_to_tstring(prm->pciBusId).c_str(), nvmlErrStr(nvml_ret));
; 753  :     } else {
; 754  :         pRGYLog->write(RGY_LOG_DEBUG, _T("Eanble NVML Monitoring\n"));
; 755  :     }
; 756  : #else
; 757  :     UNREFERENCED_PARAMETER(prm);
; 758  : #endif //#if ENABLE_NVML
; 759  : 
; 760  :     if (m_nSelectOutputPlot) {

  0030f	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00317	83 b8 b8 0b 00
	00 00		 cmp	 DWORD PTR [rax+3000], 0
  0031e	0f 84 51 07 00
	00		 je	 $LN4@init

; 761  : #if defined(_WIN32) || defined(_WIN64)
; 762  :         m_pProcess = std::unique_ptr<RGYPipeProcess>(new RGYPipeProcessWin());

  00324	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00329	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0032e	48 89 84 24 20
	0b 00 00	 mov	 QWORD PTR $T29[rsp], rax
  00336	48 83 bc 24 20
	0b 00 00 00	 cmp	 QWORD PTR $T29[rsp], 0
  0033f	74 17		 je	 SHORT $LN10@init
  00341	48 8b 8c 24 20
	0b 00 00	 mov	 rcx, QWORD PTR $T29[rsp]
  00349	e8 00 00 00 00	 call	 ??0RGYPipeProcessWin@@QEAA@XZ ; RGYPipeProcessWin::RGYPipeProcessWin
  0034e	48 89 84 24 98
	0b 00 00	 mov	 QWORD PTR tv196[rsp], rax
  00356	eb 0c		 jmp	 SHORT $LN11@init
$LN10@init:
  00358	48 c7 84 24 98
	0b 00 00 00 00
	00 00		 mov	 QWORD PTR tv196[rsp], 0
$LN11@init:
  00364	48 8b 84 24 98
	0b 00 00	 mov	 rax, QWORD PTR tv196[rsp]
  0036c	48 89 84 24 18
	0b 00 00	 mov	 QWORD PTR $T28[rsp], rax
  00374	48 8b 94 24 18
	0b 00 00	 mov	 rdx, QWORD PTR $T28[rsp]
  0037c	48 8d 8c 24 10
	0b 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  00384	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@PEAVRGYPipeProcess@@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>
  00389	48 89 84 24 a0
	0b 00 00	 mov	 QWORD PTR tv541[rsp], rax
  00391	48 8b 84 24 a0
	0b 00 00	 mov	 rax, QWORD PTR tv541[rsp]
  00399	48 89 84 24 a8
	0b 00 00	 mov	 QWORD PTR tv509[rsp], rax
  003a1	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003a9	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  003af	48 8b 94 24 a8
	0b 00 00	 mov	 rdx, QWORD PTR tv509[rsp]
  003b7	48 8b c8	 mov	 rcx, rax
  003ba	e8 00 00 00 00	 call	 ??4?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator=
  003bf	90		 npad	 1
  003c0	48 8d 8c 24 10
	0b 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  003c8	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >

; 763  :         m_pipes.stdIn.mode = PIPE_MODE_ENABLE;

  003cd	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003d5	c7 80 d0 02 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+720], 1

; 764  :         TCHAR tempDir[1024] = { 0 };

  003df	48 8d 44 24 50	 lea	 rax, QWORD PTR tempDir$8[rsp]
  003e4	48 8b f8	 mov	 rdi, rax
  003e7	33 c0		 xor	 eax, eax
  003e9	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  003ee	f3 aa		 rep stosb

; 765  :         TCHAR tempPath[1024] = { 0 };

  003f0	48 8d 84 24 70
	04 00 00	 lea	 rax, QWORD PTR tempPath$9[rsp]
  003f8	48 8b f8	 mov	 rdi, rax
  003fb	33 c0		 xor	 eax, eax
  003fd	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00402	f3 aa		 rep stosb

; 766  :         GetModuleFileName(NULL, tempDir, _countof(tempDir));

  00404	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  0040a	48 8d 54 24 50	 lea	 rdx, QWORD PTR tempDir$8[rsp]
  0040f	33 c9		 xor	 ecx, ecx
  00411	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleFileNameA

; 767  :         PathRemoveFileSpec(tempDir);

  00417	48 8d 4c 24 50	 lea	 rcx, QWORD PTR tempDir$8[rsp]
  0041c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathRemoveFileSpecA

; 768  :         PathCombine(tempPath, tempDir, strsprintf(_T("qsvencc_perf_monitor_%d.pyw"), GetProcessId(GetCurrentProcess())).c_str());

  00422	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetCurrentProcess
  00428	48 8b c8	 mov	 rcx, rax
  0042b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetProcessId
  00431	44 8b c0	 mov	 r8d, eax
  00434	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118208
  0043b	48 8d 8c 24 78
	08 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00443	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00448	48 89 84 24 b0
	0b 00 00	 mov	 QWORD PTR tv542[rsp], rax
  00450	48 8b 84 24 b0
	0b 00 00	 mov	 rax, QWORD PTR tv542[rsp]
  00458	48 89 84 24 b8
	0b 00 00	 mov	 QWORD PTR tv511[rsp], rax
  00460	48 8b 8c 24 b8
	0b 00 00	 mov	 rcx, QWORD PTR tv511[rsp]
  00468	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0046d	4c 8b c0	 mov	 r8, rax
  00470	48 8d 54 24 50	 lea	 rdx, QWORD PTR tempDir$8[rsp]
  00475	48 8d 8c 24 70
	04 00 00	 lea	 rcx, QWORD PTR tempPath$9[rsp]
  0047d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PathCombineA
  00483	90		 npad	 1
  00484	48 8d 8c 24 78
	08 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  0048c	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 769  :         m_sPywPath = tempPath;

  00491	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00499	48 83 c0 08	 add	 rax, 8
  0049d	48 8d 94 24 70
	04 00 00	 lea	 rdx, QWORD PTR tempPath$9[rsp]
  004a5	48 8b c8	 mov	 rcx, rax
  004a8	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=

; 770  :         uint32_t priority = NORMAL_PRIORITY_CLASS;

  004ad	c7 84 24 a0 08
	00 00 20 00 00
	00		 mov	 DWORD PTR priority$11[rsp], 32 ; 00000020H

; 771  : #else
; 772  :         m_pProcess = std::unique_ptr<RGYPipeProcess>(new RGYPipeProcessLinux());
; 773  :         m_pipes.stdIn.mode = PIPE_MODE_ENABLE;
; 774  :         m_sPywPath = tstring(_T("/tmp/")) + strsprintf(_T("qsvencc_perf_monitor_%d.pyw"), (int)getpid());
; 775  :         uint32_t priority = 0;
; 776  : #endif
; 777  :         tstring sPythonPath = (pPythonPath) ? pPythonPath : _T("python");

  004b8	48 83 bc 24 00
	0d 00 00 00	 cmp	 QWORD PTR pPythonPath$[rsp], 0
  004c1	74 12		 je	 SHORT $LN12@init
  004c3	48 8b 84 24 00
	0d 00 00	 mov	 rax, QWORD PTR pPythonPath$[rsp]
  004cb	48 89 84 24 c0
	0b 00 00	 mov	 QWORD PTR tv235[rsp], rax
  004d3	eb 0f		 jmp	 SHORT $LN13@init
$LN12@init:
  004d5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118209
  004dc	48 89 84 24 c0
	0b 00 00	 mov	 QWORD PTR tv235[rsp], rax
$LN13@init:
  004e4	48 8b 94 24 c0
	0b 00 00	 mov	 rdx, QWORD PTR tv235[rsp]
  004ec	48 8d 8c 24 b8
	08 00 00	 lea	 rcx, QWORD PTR sPythonPath$12[rsp]
  004f4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004f9	90		 npad	 1

; 778  : #if defined(_WIN32) || defined(_WIN64)
; 779  :         sPythonPath = tstring(_T("\"")) + sPythonPath + tstring(_T("\""));

  004fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118210
  00501	48 8d 8c 24 38
	09 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00509	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0050e	48 89 84 24 c8
	0b 00 00	 mov	 QWORD PTR tv233[rsp], rax
  00516	48 8b 84 24 c8
	0b 00 00	 mov	 rax, QWORD PTR tv233[rsp]
  0051e	48 89 84 24 d0
	0b 00 00	 mov	 QWORD PTR tv514[rsp], rax
  00526	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118211
  0052d	48 8d 8c 24 e8
	08 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  00535	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0053a	48 89 84 24 d8
	0b 00 00	 mov	 QWORD PTR tv543[rsp], rax
  00542	48 8b 84 24 d8
	0b 00 00	 mov	 rax, QWORD PTR tv543[rsp]
  0054a	48 89 84 24 e0
	0b 00 00	 mov	 QWORD PTR tv516[rsp], rax
  00552	4c 8d 84 24 b8
	08 00 00	 lea	 r8, QWORD PTR sPythonPath$12[rsp]
  0055a	48 8b 94 24 e0
	0b 00 00	 mov	 rdx, QWORD PTR tv516[rsp]
  00562	48 8d 8c 24 10
	09 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  0056a	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  0056f	48 89 84 24 e8
	0b 00 00	 mov	 QWORD PTR tv544[rsp], rax
  00577	48 8b 84 24 e8
	0b 00 00	 mov	 rax, QWORD PTR tv544[rsp]
  0057f	48 89 84 24 f0
	0b 00 00	 mov	 QWORD PTR tv518[rsp], rax
  00587	4c 8b 84 24 d0
	0b 00 00	 mov	 r8, QWORD PTR tv514[rsp]
  0058f	48 8b 94 24 f0
	0b 00 00	 mov	 rdx, QWORD PTR tv518[rsp]
  00597	48 8d 8c 24 60
	09 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  0059f	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  005a4	48 89 84 24 f8
	0b 00 00	 mov	 QWORD PTR tv545[rsp], rax
  005ac	48 8b 84 24 f8
	0b 00 00	 mov	 rax, QWORD PTR tv545[rsp]
  005b4	48 89 84 24 00
	0c 00 00	 mov	 QWORD PTR tv520[rsp], rax
  005bc	48 8b 94 24 00
	0c 00 00	 mov	 rdx, QWORD PTR tv520[rsp]
  005c4	48 8d 8c 24 b8
	08 00 00	 lea	 rcx, QWORD PTR sPythonPath$12[rsp]
  005cc	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  005d1	90		 npad	 1
  005d2	48 8d 8c 24 60
	09 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  005da	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  005df	90		 npad	 1
  005e0	48 8d 8c 24 10
	09 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  005e8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  005ed	90		 npad	 1
  005ee	48 8d 8c 24 e8
	08 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  005f6	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  005fb	90		 npad	 1
  005fc	48 8d 8c 24 38
	09 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00604	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 780  :         m_sPywPath = tstring(_T("\"")) + m_sPywPath + tstring(_T("\""));

  00609	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118212
  00610	48 8d 8c 24 d8
	09 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  00618	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0061d	48 89 84 24 08
	0c 00 00	 mov	 QWORD PTR tv546[rsp], rax
  00625	48 8b 84 24 08
	0c 00 00	 mov	 rax, QWORD PTR tv546[rsp]
  0062d	48 89 84 24 10
	0c 00 00	 mov	 QWORD PTR tv522[rsp], rax
  00635	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0063d	48 83 c0 08	 add	 rax, 8
  00641	48 89 84 24 18
	0c 00 00	 mov	 QWORD PTR tv273[rsp], rax
  00649	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118213
  00650	48 8d 8c 24 88
	09 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00658	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0065d	48 89 84 24 20
	0c 00 00	 mov	 QWORD PTR tv547[rsp], rax
  00665	48 8b 84 24 20
	0c 00 00	 mov	 rax, QWORD PTR tv547[rsp]
  0066d	48 89 84 24 28
	0c 00 00	 mov	 QWORD PTR tv524[rsp], rax
  00675	48 8b 84 24 18
	0c 00 00	 mov	 rax, QWORD PTR tv273[rsp]
  0067d	4c 8b c0	 mov	 r8, rax
  00680	48 8b 94 24 28
	0c 00 00	 mov	 rdx, QWORD PTR tv524[rsp]
  00688	48 8d 8c 24 b0
	09 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00690	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00695	48 89 84 24 30
	0c 00 00	 mov	 QWORD PTR tv548[rsp], rax
  0069d	48 8b 84 24 30
	0c 00 00	 mov	 rax, QWORD PTR tv548[rsp]
  006a5	48 89 84 24 38
	0c 00 00	 mov	 QWORD PTR tv526[rsp], rax
  006ad	4c 8b 84 24 10
	0c 00 00	 mov	 r8, QWORD PTR tv522[rsp]
  006b5	48 8b 94 24 38
	0c 00 00	 mov	 rdx, QWORD PTR tv526[rsp]
  006bd	48 8d 8c 24 00
	0a 00 00	 lea	 rcx, QWORD PTR $T20[rsp]
  006c5	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  006ca	48 89 84 24 40
	0c 00 00	 mov	 QWORD PTR tv549[rsp], rax
  006d2	48 8b 84 24 40
	0c 00 00	 mov	 rax, QWORD PTR tv549[rsp]
  006da	48 89 84 24 48
	0c 00 00	 mov	 QWORD PTR tv528[rsp], rax
  006e2	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  006ea	48 83 c0 08	 add	 rax, 8
  006ee	48 8b 94 24 48
	0c 00 00	 mov	 rdx, QWORD PTR tv528[rsp]
  006f6	48 8b c8	 mov	 rcx, rax
  006f9	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  006fe	90		 npad	 1
  006ff	48 8d 8c 24 00
	0a 00 00	 lea	 rcx, QWORD PTR $T20[rsp]
  00707	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0070c	90		 npad	 1
  0070d	48 8d 8c 24 b0
	09 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00715	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0071a	90		 npad	 1
  0071b	48 8d 8c 24 88
	09 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00723	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00728	90		 npad	 1
  00729	48 8d 8c 24 d8
	09 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  00731	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 781  : #else
; 782  :         int ret = 0;
; 783  :         if (0 > (ret = system((sPythonPath + " --version > /dev/null 2>&1").c_str()))) {
; 784  :             m_pRGYLog->write(RGY_LOG_WARN, _T("Failed to run \"%s\". \n")
; 785  :                 _T("--perf-monitor-plot requires python3.x, please set python3 path by \"--python\".\n"), sPythonPath.c_str());
; 786  :             m_nSelectOutputPlot = 0;
; 787  :         } else if (0 > (ret = system((sPythonPath + " -c \"print 'test'\" > /dev/null 2>&1").c_str())) || WEXITSTATUS(ret) == 0) {
; 788  :             m_pRGYLog->write(RGY_LOG_WARN, _T("\"%s\" is not python3.x.\n")
; 789  :                     _T("--perf-monitor-plot requires python3.x, please set python3 path by \"--python\".\n"), sPythonPath.c_str());
; 790  :             m_nSelectOutputPlot = 0;
; 791  :         }
; 792  : #endif
; 793  :         if (createPerfMpnitorPyw(m_sPywPath.c_str())) {

  00736	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0073e	48 83 c0 08	 add	 rax, 8
  00742	48 8b c8	 mov	 rcx, rax
  00745	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0074a	48 8b d0	 mov	 rdx, rax
  0074d	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00755	e8 00 00 00 00	 call	 ?createPerfMpnitorPyw@CPerfMonitor@@IEAAHPEBD@Z ; CPerfMonitor::createPerfMpnitorPyw
  0075a	85 c0		 test	 eax, eax
  0075c	0f 84 97 00 00
	00		 je	 $LN5@init

; 794  :             m_pRGYLog->write(RGY_LOG_WARN, _T("Failed to create file qsvencc_perf_monitor.pyw for performance monitor plot.\n"));

  00762	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0076a	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  00770	48 8b c8	 mov	 rcx, rax
  00773	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00778	48 89 84 24 50
	0c 00 00	 mov	 QWORD PTR tv299[rsp], rax
  00780	48 8b 84 24 50
	0c 00 00	 mov	 rax, QWORD PTR tv299[rsp]
  00788	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0078b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118216
  00792	ba 01 00 00 00	 mov	 edx, 1
  00797	48 8b 8c 24 50
	0c 00 00	 mov	 rcx, QWORD PTR tv299[rsp]
  0079f	ff 50 20	 call	 QWORD PTR [rax+32]

; 795  :             m_pRGYLog->write(RGY_LOG_WARN, _T("performance monitor plot disabled.\n"));

  007a2	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007aa	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  007b0	48 8b c8	 mov	 rcx, rax
  007b3	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  007b8	48 89 84 24 58
	0c 00 00	 mov	 QWORD PTR tv308[rsp], rax
  007c0	48 8b 84 24 58
	0c 00 00	 mov	 rax, QWORD PTR tv308[rsp]
  007c8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  007cb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118217
  007d2	ba 01 00 00 00	 mov	 edx, 1
  007d7	48 8b 8c 24 58
	0c 00 00	 mov	 rcx, QWORD PTR tv308[rsp]
  007df	ff 50 20	 call	 QWORD PTR [rax+32]

; 796  :             m_nSelectOutputPlot = 0;

  007e2	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  007ea	c7 80 b8 0b 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+3000], 0

; 797  :         } else {

  007f4	e9 6f 02 00 00	 jmp	 $LN6@init
$LN5@init:

; 798  :             tstring sInterval = strsprintf(_T("%d"), interval);

  007f9	44 8b 84 24 08
	0d 00 00	 mov	 r8d, DWORD PTR interval$[rsp]
  00801	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG118218
  00808	48 8d 8c 24 38
	0a 00 00	 lea	 rcx, QWORD PTR sInterval$21[rsp]
  00810	e8 00 00 00 00	 call	 ?strsprintf@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDZZ ; strsprintf
  00815	90		 npad	 1

; 799  :             std::vector<const TCHAR *> args;

  00816	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  0081e	e8 00 00 00 00	 call	 ??0?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::vector<char const *,std::allocator<char const *> >
  00823	90		 npad	 1

; 800  :             args.push_back(sPythonPath.c_str());

  00824	48 8d 8c 24 b8
	08 00 00	 lea	 rcx, QWORD PTR sPythonPath$12[rsp]
  0082c	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00831	48 89 84 24 28
	0b 00 00	 mov	 QWORD PTR $T30[rsp], rax
  00839	48 8d 94 24 28
	0b 00 00	 lea	 rdx, QWORD PTR $T30[rsp]
  00841	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  00849	e8 00 00 00 00	 call	 ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back

; 801  :             args.push_back(m_sPywPath.c_str());

  0084e	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00856	48 83 c0 08	 add	 rax, 8
  0085a	48 8b c8	 mov	 rcx, rax
  0085d	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00862	48 89 84 24 30
	0b 00 00	 mov	 QWORD PTR $T31[rsp], rax
  0086a	48 8d 94 24 30
	0b 00 00	 lea	 rdx, QWORD PTR $T31[rsp]
  00872	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  0087a	e8 00 00 00 00	 call	 ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back

; 802  :             args.push_back(_T("-i"));

  0087f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118219
  00886	48 89 84 24 38
	0b 00 00	 mov	 QWORD PTR $T32[rsp], rax
  0088e	48 8d 94 24 38
	0b 00 00	 lea	 rdx, QWORD PTR $T32[rsp]
  00896	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  0089e	e8 00 00 00 00	 call	 ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAXAEBQEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back

; 803  :             args.push_back(sInterval.c_str());

  008a3	48 8d 8c 24 38
	0a 00 00	 lea	 rcx, QWORD PTR sInterval$21[rsp]
  008ab	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  008b0	48 89 84 24 40
	0b 00 00	 mov	 QWORD PTR $T33[rsp], rax
  008b8	48 8d 94 24 40
	0b 00 00	 lea	 rdx, QWORD PTR $T33[rsp]
  008c0	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  008c8	e8 00 00 00 00	 call	 ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back

; 804  :             args.push_back(nullptr);

  008cd	48 c7 84 24 48
	0b 00 00 00 00
	00 00		 mov	 QWORD PTR $T34[rsp], 0
  008d9	48 8d 94 24 48
	0b 00 00	 lea	 rdx, QWORD PTR $T34[rsp]
  008e1	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  008e9	e8 00 00 00 00	 call	 ?push_back@?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAAX$$QEAPEBD@Z ; std::vector<char const *,std::allocator<char const *> >::push_back

; 805  :             if (m_pProcess->run(args, nullptr, &m_pipes, priority, false, false)) {

  008ee	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  008f6	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  008fc	48 8b c8	 mov	 rcx, rax
  008ff	e8 00 00 00 00	 call	 ??C?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::operator->
  00904	48 89 84 24 60
	0c 00 00	 mov	 QWORD PTR tv343[rsp], rax
  0090c	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00914	48 05 c0 02 00
	00		 add	 rax, 704		; 000002c0H
  0091a	48 8b 8c 24 60
	0c 00 00	 mov	 rcx, QWORD PTR tv343[rsp]
  00922	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00925	48 89 8c 24 68
	0c 00 00	 mov	 QWORD PTR tv555[rsp], rcx
  0092d	c6 44 24 30 00	 mov	 BYTE PTR [rsp+48], 0
  00932	c6 44 24 28 00	 mov	 BYTE PTR [rsp+40], 0
  00937	8b 94 24 a0 08
	00 00		 mov	 edx, DWORD PTR priority$11[rsp]
  0093e	89 54 24 20	 mov	 DWORD PTR [rsp+32], edx
  00942	4c 8b c8	 mov	 r9, rax
  00945	45 33 c0	 xor	 r8d, r8d
  00948	48 8d 94 24 78
	0a 00 00	 lea	 rdx, QWORD PTR args$22[rsp]
  00950	48 8b 8c 24 60
	0c 00 00	 mov	 rcx, QWORD PTR tv343[rsp]
  00958	48 8b 84 24 68
	0c 00 00	 mov	 rax, QWORD PTR tv555[rsp]
  00960	ff 50 10	 call	 QWORD PTR [rax+16]
  00963	85 c0		 test	 eax, eax
  00965	0f 84 94 00 00
	00		 je	 $LN7@init

; 806  :                 m_pRGYLog->write(RGY_LOG_WARN, _T("Failed to run performance monitor plot.\n"));

  0096b	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00973	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  00979	48 8b c8	 mov	 rcx, rax
  0097c	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00981	48 89 84 24 70
	0c 00 00	 mov	 QWORD PTR tv391[rsp], rax
  00989	48 8b 84 24 70
	0c 00 00	 mov	 rax, QWORD PTR tv391[rsp]
  00991	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00994	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118222
  0099b	ba 01 00 00 00	 mov	 edx, 1
  009a0	48 8b 8c 24 70
	0c 00 00	 mov	 rcx, QWORD PTR tv391[rsp]
  009a8	ff 50 20	 call	 QWORD PTR [rax+32]

; 807  :                 m_pRGYLog->write(RGY_LOG_WARN, _T("performance monitor plot disabled.\n"));

  009ab	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009b3	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  009b9	48 8b c8	 mov	 rcx, rax
  009bc	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  009c1	48 89 84 24 78
	0c 00 00	 mov	 QWORD PTR tv400[rsp], rax
  009c9	48 8b 84 24 78
	0c 00 00	 mov	 rax, QWORD PTR tv400[rsp]
  009d1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  009d4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118223
  009db	ba 01 00 00 00	 mov	 edx, 1
  009e0	48 8b 8c 24 78
	0c 00 00	 mov	 rcx, QWORD PTR tv400[rsp]
  009e8	ff 50 20	 call	 QWORD PTR [rax+32]

; 808  :                 m_nSelectOutputPlot = 0;

  009eb	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  009f3	c7 80 b8 0b 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+3000], 0

; 809  : #if defined(_WIN32) || defined(_WIN64)
; 810  :             } else {

  009fd	eb 4d		 jmp	 SHORT $LN8@init
$LN7@init:

; 811  :                 WaitForInputIdle(dynamic_cast<RGYPipeProcessWin *>(m_pProcess.get())->getProcessInfo().hProcess, INFINITE);

  009ff	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a07	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  00a0d	48 8b c8	 mov	 rcx, rax
  00a10	e8 00 00 00 00	 call	 ?get@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEBAPEAVRGYPipeProcess@@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::get
  00a15	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00a1d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:??_R0?AVRGYPipeProcessWin@@@8
  00a24	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_R0?AVRGYPipeProcess@@@8
  00a2b	33 d2		 xor	 edx, edx
  00a2d	48 8b c8	 mov	 rcx, rax
  00a30	e8 00 00 00 00	 call	 __RTDynamicCast
  00a35	48 8b c8	 mov	 rcx, rax
  00a38	e8 00 00 00 00	 call	 ?getProcessInfo@RGYPipeProcessWin@@QEAAAEBU_PROCESS_INFORMATION@@XZ ; RGYPipeProcessWin::getProcessInfo
  00a3d	ba ff ff ff ff	 mov	 edx, -1			; ffffffffH
  00a42	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00a45	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WaitForInputIdle
  00a4b	90		 npad	 1
$LN8@init:

; 812  : #endif
; 813  :             }
; 814  :         }

  00a4c	48 8d 8c 24 78
	0a 00 00	 lea	 rcx, QWORD PTR args$22[rsp]
  00a54	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  00a59	90		 npad	 1
  00a5a	48 8d 8c 24 38
	0a 00 00	 lea	 rcx, QWORD PTR sInterval$21[rsp]
  00a62	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a67	90		 npad	 1
$LN6@init:

; 815  :     }

  00a68	48 8d 8c 24 b8
	08 00 00	 lea	 rcx, QWORD PTR sPythonPath$12[rsp]
  00a70	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@init:

; 816  : 
; 817  :     //未実装
; 818  :     m_nSelectCheck &= (~PERF_MONITOR_FRAME_IN);

  00a75	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a7d	8b 80 b0 0b 00
	00		 mov	 eax, DWORD PTR [rax+2992]
  00a83	0f ba f0 10	 btr	 eax, 16
  00a87	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00a8f	89 81 b0 0b 00
	00		 mov	 DWORD PTR [rcx+2992], eax

; 819  : 
; 820  :     //未実装
; 821  : #if !(defined(_WIN32) || defined(_WIN64))
; 822  :     m_nSelectCheck &= (~PERF_MONITOR_THREAD_MAIN);
; 823  :     m_nSelectCheck &= (~PERF_MONITOR_THREAD_ENC);
; 824  :     m_nSelectCheck &= (~PERF_MONITOR_THREAD_AUDP);
; 825  :     m_nSelectCheck &= (~PERF_MONITOR_THREAD_AUDE);
; 826  :     m_nSelectCheck &= (~PERF_MONITOR_THREAD_OUT);
; 827  :     m_nSelectCheck &= (~PERF_MONITOR_THREAD_IN);
; 828  :     m_nSelectCheck &= (~PERF_MONITOR_GPU_CLOCK);
; 829  :     m_nSelectCheck &= (~PERF_MONITOR_GPU_LOAD);
; 830  :     m_nSelectCheck &= (~PERF_MONITOR_MFX_LOAD);
; 831  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 832  : 
; 833  : #if ENCODER_QSV
; 834  :     m_nSelectCheck &= (~PERF_MONITOR_VED_LOAD);

  00a95	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00a9d	8b 80 b0 0b 00
	00		 mov	 eax, DWORD PTR [rax+2992]
  00aa3	0f ba f0 1b	 btr	 eax, 27
  00aa7	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00aaf	89 81 b0 0b 00
	00		 mov	 DWORD PTR [rcx+2992], eax

; 835  :     m_nSelectCheck &= (~PERF_MONITOR_VEE_LOAD);

  00ab5	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00abd	8b 80 b0 0b 00
	00		 mov	 eax, DWORD PTR [rax+2992]
  00ac3	0f ba f0 1a	 btr	 eax, 26
  00ac7	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00acf	89 81 b0 0b 00
	00		 mov	 DWORD PTR [rcx+2992], eax

; 836  :     m_nSelectCheck &= (~PERF_MONITOR_VE_CLOCK);

  00ad5	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00add	8b 80 b0 0b 00
	00		 mov	 eax, DWORD PTR [rax+2992]
  00ae3	0f ba f0 19	 btr	 eax, 25
  00ae7	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00aef	89 81 b0 0b 00
	00		 mov	 DWORD PTR [rcx+2992], eax

; 837  : #endif
; 838  : #if ENCODER_NVENC
; 839  :     m_nSelectCheck &= (~PERF_MONITOR_MFX_LOAD);
; 840  :     //うまくとれてなさそう
; 841  :     m_nSelectCheck &= (~PERF_MONITOR_VED_LOAD);
; 842  : #endif
; 843  : 
; 844  :     m_nSelectOutputLog &= m_nSelectCheck;

  00af5	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00afd	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b05	8b 89 b0 0b 00
	00		 mov	 ecx, DWORD PTR [rcx+2992]
  00b0b	8b 80 b4 0b 00
	00		 mov	 eax, DWORD PTR [rax+2996]
  00b11	23 c1		 and	 eax, ecx
  00b13	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b1b	89 81 b4 0b 00
	00		 mov	 DWORD PTR [rcx+2996], eax

; 845  :     m_nSelectOutputPlot &= m_nSelectCheck;

  00b21	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b29	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b31	8b 89 b0 0b 00
	00		 mov	 ecx, DWORD PTR [rcx+2992]
  00b37	8b 80 b8 0b 00
	00		 mov	 eax, DWORD PTR [rax+3000]
  00b3d	23 c1		 and	 eax, ecx
  00b3f	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b47	89 81 b8 0b 00
	00		 mov	 DWORD PTR [rcx+3000], eax

; 846  : 
; 847  :     pRGYLog->write(RGY_LOG_DEBUG, _T("Performace Monitor: %s\n"), CPerfMonitor::SelectedCounters(m_nSelectOutputLog).c_str());

  00b4d	48 8b 8c 24 28
	0d 00 00	 mov	 rcx, QWORD PTR pRGYLog$[rsp]
  00b55	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00b5a	48 89 84 24 80
	0c 00 00	 mov	 QWORD PTR tv443[rsp], rax
  00b62	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00b6a	44 8b 80 b4 0b
	00 00		 mov	 r8d, DWORD PTR [rax+2996]
  00b71	48 8d 94 24 a8
	0a 00 00	 lea	 rdx, QWORD PTR $T23[rsp]
  00b79	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00b81	e8 00 00 00 00	 call	 ?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; CPerfMonitor::SelectedCounters
  00b86	48 89 84 24 88
	0c 00 00	 mov	 QWORD PTR tv320[rsp], rax
  00b8e	48 8b 84 24 88
	0c 00 00	 mov	 rax, QWORD PTR tv320[rsp]
  00b96	48 89 84 24 90
	0c 00 00	 mov	 QWORD PTR tv532[rsp], rax
  00b9e	48 8b 8c 24 90
	0c 00 00	 mov	 rcx, QWORD PTR tv532[rsp]
  00ba6	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00bab	48 8b 8c 24 80
	0c 00 00	 mov	 rcx, QWORD PTR tv443[rsp]
  00bb3	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00bb6	48 89 8c 24 98
	0c 00 00	 mov	 QWORD PTR tv552[rsp], rcx
  00bbe	4c 8b c8	 mov	 r9, rax
  00bc1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118224
  00bc8	ba fe ff ff ff	 mov	 edx, -2
  00bcd	48 8b 8c 24 80
	0c 00 00	 mov	 rcx, QWORD PTR tv443[rsp]
  00bd5	48 8b 84 24 98
	0c 00 00	 mov	 rax, QWORD PTR tv552[rsp]
  00bdd	ff 50 20	 call	 QWORD PTR [rax+32]
  00be0	90		 npad	 1
  00be1	48 8d 8c 24 a8
	0a 00 00	 lea	 rcx, QWORD PTR $T23[rsp]
  00be9	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 848  :     pRGYLog->write(RGY_LOG_DEBUG, _T("Performace Plot   : %s\n"), CPerfMonitor::SelectedCounters(m_nSelectOutputPlot).c_str());

  00bee	48 8b 8c 24 28
	0d 00 00	 mov	 rcx, QWORD PTR pRGYLog$[rsp]
  00bf6	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00bfb	48 89 84 24 a0
	0c 00 00	 mov	 QWORD PTR tv461[rsp], rax
  00c03	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c0b	44 8b 80 b8 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3000]
  00c12	48 8d 94 24 d0
	0a 00 00	 lea	 rdx, QWORD PTR $T24[rsp]
  00c1a	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00c22	e8 00 00 00 00	 call	 ?SelectedCounters@CPerfMonitor@@IEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z ; CPerfMonitor::SelectedCounters
  00c27	48 89 84 24 a8
	0c 00 00	 mov	 QWORD PTR tv314[rsp], rax
  00c2f	48 8b 84 24 a8
	0c 00 00	 mov	 rax, QWORD PTR tv314[rsp]
  00c37	48 89 84 24 b0
	0c 00 00	 mov	 QWORD PTR tv534[rsp], rax
  00c3f	48 8b 8c 24 b0
	0c 00 00	 mov	 rcx, QWORD PTR tv534[rsp]
  00c47	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00c4c	48 8b 8c 24 a0
	0c 00 00	 mov	 rcx, QWORD PTR tv461[rsp]
  00c54	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00c57	48 89 8c 24 b8
	0c 00 00	 mov	 QWORD PTR tv551[rsp], rcx
  00c5f	4c 8b c8	 mov	 r9, rax
  00c62	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG118225
  00c69	ba fe ff ff ff	 mov	 edx, -2
  00c6e	48 8b 8c 24 a0
	0c 00 00	 mov	 rcx, QWORD PTR tv461[rsp]
  00c76	48 8b 84 24 b8
	0c 00 00	 mov	 rax, QWORD PTR tv551[rsp]
  00c7e	ff 50 20	 call	 QWORD PTR [rax+32]
  00c81	90		 npad	 1
  00c82	48 8d 8c 24 d0
	0a 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  00c8a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 849  : 
; 850  :     write_header(m_fpLog.get(),   m_nSelectOutputLog);

  00c8f	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00c97	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  00c9d	48 8b c8	 mov	 rcx, rax
  00ca0	e8 00 00 00 00	 call	 ?get@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEBAPEAU_iobuf@@XZ ; std::unique_ptr<_iobuf,fp_deleter>::get
  00ca5	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00cad	44 8b 81 b4 0b
	00 00		 mov	 r8d, DWORD PTR [rcx+2996]
  00cb4	48 8b d0	 mov	 rdx, rax
  00cb7	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00cbf	e8 00 00 00 00	 call	 ?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write_header

; 851  :     write_header(m_pipes.f_stdin, m_nSelectOutputPlot);

  00cc4	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00ccc	44 8b 80 b8 0b
	00 00		 mov	 r8d, DWORD PTR [rax+3000]
  00cd3	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00cdb	48 8b 90 08 03
	00 00		 mov	 rdx, QWORD PTR [rax+776]
  00ce2	48 8b 8c 24 f0
	0c 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00cea	e8 00 00 00 00	 call	 ?write_header@CPerfMonitor@@IEAAXPEAU_iobuf@@H@Z ; CPerfMonitor::write_header

; 852  : 
; 853  :     m_thCheck = std::thread(loader, this);

  00cef	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00cf7	48 89 84 24 60
	0b 00 00	 mov	 QWORD PTR $T36[rsp], rax
  00cff	4c 8d 84 24 60
	0b 00 00	 lea	 r8, QWORD PTR $T36[rsp]
  00d07	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?loader@CPerfMonitor@@KAXPEAX@Z ; CPerfMonitor::loader
  00d0e	48 8d 8c 24 50
	0b 00 00	 lea	 rcx, QWORD PTR $T35[rsp]
  00d16	e8 00 00 00 00	 call	 ??$?0A6AXPEAX@ZPEAVCPerfMonitor@@X@thread@std@@QEAA@A6AXPEAX@Z$$QEAPEAVCPerfMonitor@@@Z ; std::thread::thread<void (__cdecl&)(void *),CPerfMonitor *,void>
  00d1b	48 89 84 24 c0
	0c 00 00	 mov	 QWORD PTR tv550[rsp], rax
  00d23	48 8b 84 24 c0
	0c 00 00	 mov	 rax, QWORD PTR tv550[rsp]
  00d2b	48 89 84 24 c8
	0c 00 00	 mov	 QWORD PTR tv536[rsp], rax
  00d33	48 8b 84 24 f0
	0c 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00d3b	48 05 a0 02 00
	00		 add	 rax, 672		; 000002a0H
  00d41	48 8b 94 24 c8
	0c 00 00	 mov	 rdx, QWORD PTR tv536[rsp]
  00d49	48 8b c8	 mov	 rcx, rax
  00d4c	e8 00 00 00 00	 call	 ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ; std::thread::operator=
  00d51	90		 npad	 1
  00d52	48 8d 8c 24 50
	0b 00 00	 lea	 rcx, QWORD PTR $T35[rsp]
  00d5a	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread

; 854  :     return 0;

  00d5f	c7 84 24 68 0b
	00 00 00 00 00
	00		 mov	 DWORD PTR $T37[rsp], 0
  00d6a	48 8b 8c 24 f8
	0c 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00d72	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00d77	90		 npad	 1
  00d78	48 8b 8c 24 20
	0d 00 00	 mov	 rcx, QWORD PTR thMainThread$[rsp]
  00d80	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00d85	90		 npad	 1
  00d86	48 8b 8c 24 28
	0d 00 00	 mov	 rcx, QWORD PTR pRGYLog$[rsp]
  00d8e	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00d93	8b 84 24 68 0b
	00 00		 mov	 eax, DWORD PTR $T37[rsp]
$LN1@init:

; 855  : }

  00d9a	48 8b f8	 mov	 rdi, rax
  00d9d	48 8b cc	 mov	 rcx, rsp
  00da0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z$rtcFrameData
  00da7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00dac	48 8b c7	 mov	 rax, rdi
  00daf	48 8b 8c 24 d0
	0c 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00db7	48 33 cc	 xor	 rcx, rsp
  00dba	e8 00 00 00 00	 call	 __security_check_cookie
  00dbf	48 81 c4 e0 0c
	00 00		 add	 rsp, 3296		; 00000ce0H
  00dc6	5f		 pop	 rdi
  00dc7	c3		 ret	 0
?init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z ENDP ; CPerfMonitor::init
_TEXT	ENDS
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 28 0d
	00 00		 mov	 rcx, QWORD PTR pRGYLog$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$0
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8b 8d 20 0d
	00 00		 mov	 rcx, QWORD PTR thMainThread$[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$1
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8b 8d f8 0c
	00 00		 mov	 rcx, QWORD PTR filename$[rbp]
  00066	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$2
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$3
  00072	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00077	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007c	55		 push	 rbp
  0007d	57		 push	 rdi
  0007e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00082	48 8b ea	 mov	 rbp, rdx
  00085	48 8d 8d 00 0b
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$3
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  000b0	48 8b 8d 20 0b
	00 00		 mov	 rcx, QWORD PTR $T29[rbp]
  000b7	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  000bc	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c0	5f		 pop	 rdi
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$4
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$5
  000c3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000cd	55		 push	 rbp
  000ce	57		 push	 rdi
  000cf	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d3	48 8b ea	 mov	 rbp, rdx
  000d6	48 8d 8d 10 0b
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  000dd	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  000e2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e6	5f		 pop	 rdi
  000e7	5d		 pop	 rbp
  000e8	c3		 ret	 0
?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$5
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$6
  000e9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000ee	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000f3	55		 push	 rbp
  000f4	57		 push	 rdi
  000f5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f9	48 8b ea	 mov	 rbp, rdx
  000fc	48 8d 8d 78 08
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00103	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00108	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0010c	5f		 pop	 rdi
  0010d	5d		 pop	 rbp
  0010e	c3		 ret	 0
?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$6
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$7
  0010f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00114	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00119	55		 push	 rbp
  0011a	57		 push	 rdi
  0011b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011f	48 8b ea	 mov	 rbp, rdx
  00122	48 8d 8d b8 08
	00 00		 lea	 rcx, QWORD PTR sPythonPath$12[rbp]
  00129	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00132	5f		 pop	 rdi
  00133	5d		 pop	 rbp
  00134	c3		 ret	 0
?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$7
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$8
  00135	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0013a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0013f	55		 push	 rbp
  00140	57		 push	 rdi
  00141	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00145	48 8b ea	 mov	 rbp, rdx
  00148	48 8d 8d 38 09
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0014f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00154	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00158	5f		 pop	 rdi
  00159	5d		 pop	 rbp
  0015a	c3		 ret	 0
?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$8
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$9
  0015b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00160	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00165	55		 push	 rbp
  00166	57		 push	 rdi
  00167	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0016b	48 8b ea	 mov	 rbp, rdx
  0016e	48 8d 8d e8 08
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00175	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0017a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0017e	5f		 pop	 rdi
  0017f	5d		 pop	 rbp
  00180	c3		 ret	 0
?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$9
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$10
  00181	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00186	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0018b	55		 push	 rbp
  0018c	57		 push	 rdi
  0018d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00191	48 8b ea	 mov	 rbp, rdx
  00194	48 8d 8d 10 09
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  0019b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001a4	5f		 pop	 rdi
  001a5	5d		 pop	 rbp
  001a6	c3		 ret	 0
?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$10
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$11
  001a7	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ac	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001b1	55		 push	 rbp
  001b2	57		 push	 rdi
  001b3	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001b7	48 8b ea	 mov	 rbp, rdx
  001ba	48 8d 8d 60 09
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  001c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001c6	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001ca	5f		 pop	 rdi
  001cb	5d		 pop	 rbp
  001cc	c3		 ret	 0
?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$11
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$12
  001cd	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001d2	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001d7	55		 push	 rbp
  001d8	57		 push	 rdi
  001d9	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001dd	48 8b ea	 mov	 rbp, rdx
  001e0	48 8d 8d d8 09
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  001e7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001ec	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001f0	5f		 pop	 rdi
  001f1	5d		 pop	 rbp
  001f2	c3		 ret	 0
?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$12
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$13
  001f3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001fd	55		 push	 rbp
  001fe	57		 push	 rdi
  001ff	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00203	48 8b ea	 mov	 rbp, rdx
  00206	48 8d 8d 88 09
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0020d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00212	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00216	5f		 pop	 rdi
  00217	5d		 pop	 rbp
  00218	c3		 ret	 0
?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$13
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$14
  00219	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0021e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00223	55		 push	 rbp
  00224	57		 push	 rdi
  00225	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00229	48 8b ea	 mov	 rbp, rdx
  0022c	48 8d 8d b0 09
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00233	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00238	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0023c	5f		 pop	 rdi
  0023d	5d		 pop	 rbp
  0023e	c3		 ret	 0
?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$14
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$15
  0023f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00244	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00249	55		 push	 rbp
  0024a	57		 push	 rdi
  0024b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0024f	48 8b ea	 mov	 rbp, rdx
  00252	48 8d 8d 00 0a
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  00259	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0025e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00262	5f		 pop	 rdi
  00263	5d		 pop	 rbp
  00264	c3		 ret	 0
?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$15
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$16
  00265	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0026a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0026f	55		 push	 rbp
  00270	57		 push	 rdi
  00271	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00275	48 8b ea	 mov	 rbp, rdx
  00278	48 8d 8d 38 0a
	00 00		 lea	 rcx, QWORD PTR sInterval$21[rbp]
  0027f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00284	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00288	5f		 pop	 rdi
  00289	5d		 pop	 rbp
  0028a	c3		 ret	 0
?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$16
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$17
  0028b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00290	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00295	55		 push	 rbp
  00296	57		 push	 rdi
  00297	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0029b	48 8b ea	 mov	 rbp, rdx
  0029e	48 8d 8d 78 0a
	00 00		 lea	 rcx, QWORD PTR args$22[rbp]
  002a5	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  002aa	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002ae	5f		 pop	 rdi
  002af	5d		 pop	 rbp
  002b0	c3		 ret	 0
?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$17
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$18
  002b1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002b6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002bb	55		 push	 rbp
  002bc	57		 push	 rdi
  002bd	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002c1	48 8b ea	 mov	 rbp, rdx
  002c4	48 8d 8d a8 0a
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  002cb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002d0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002d4	5f		 pop	 rdi
  002d5	5d		 pop	 rbp
  002d6	c3		 ret	 0
?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$18
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$19
  002d7	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002dc	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002e1	55		 push	 rbp
  002e2	57		 push	 rdi
  002e3	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002e7	48 8b ea	 mov	 rbp, rdx
  002ea	48 8d 8d d0 0a
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  002f1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002f6	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002fa	5f		 pop	 rdi
  002fb	5d		 pop	 rbp
  002fc	c3		 ret	 0
?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$19
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$20
  002fd	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00302	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00307	55		 push	 rbp
  00308	57		 push	 rdi
  00309	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0030d	48 8b ea	 mov	 rbp, rdx
  00310	48 8d 8d 50 0b
	00 00		 lea	 rcx, QWORD PTR $T35[rbp]
  00317	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0031c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00320	5f		 pop	 rdi
  00321	5d		 pop	 rbp
  00322	c3		 ret	 0
?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 28 0d
	00 00		 mov	 rcx, QWORD PTR pRGYLog$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8b 8d 20 0d
	00 00		 mov	 rcx, QWORD PTR thMainThread$[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8b 8d f8 0c
	00 00		 mov	 rcx, QWORD PTR filename$[rbp]
  00066	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$3
  00072	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00077	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007c	55		 push	 rbp
  0007d	57		 push	 rdi
  0007e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00082	48 8b ea	 mov	 rbp, rdx
  00085	48 8d 8d 00 0b
	00 00		 lea	 rcx, QWORD PTR $T25[rbp]
  0008c	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00091	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00095	5f		 pop	 rdi
  00096	5d		 pop	 rbp
  00097	c3		 ret	 0
?dtor$3@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$4
  00098	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0009d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000a2	55		 push	 rbp
  000a3	57		 push	 rdi
  000a4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000a8	48 8b ea	 mov	 rbp, rdx
  000ab	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  000b0	48 8b 8d 20 0b
	00 00		 mov	 rcx, QWORD PTR $T29[rbp]
  000b7	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  000bc	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c0	5f		 pop	 rdi
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
?dtor$4@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$5
  000c3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000c8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000cd	55		 push	 rbp
  000ce	57		 push	 rdi
  000cf	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000d3	48 8b ea	 mov	 rbp, rdx
  000d6	48 8d 8d 10 0b
	00 00		 lea	 rcx, QWORD PTR $T27[rbp]
  000dd	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  000e2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000e6	5f		 pop	 rdi
  000e7	5d		 pop	 rbp
  000e8	c3		 ret	 0
?dtor$5@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$6
  000e9	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000ee	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000f3	55		 push	 rbp
  000f4	57		 push	 rdi
  000f5	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000f9	48 8b ea	 mov	 rbp, rdx
  000fc	48 8d 8d 78 08
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00103	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00108	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0010c	5f		 pop	 rdi
  0010d	5d		 pop	 rbp
  0010e	c3		 ret	 0
?dtor$6@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$7
  0010f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00114	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00119	55		 push	 rbp
  0011a	57		 push	 rdi
  0011b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011f	48 8b ea	 mov	 rbp, rdx
  00122	48 8d 8d b8 08
	00 00		 lea	 rcx, QWORD PTR sPythonPath$12[rbp]
  00129	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0012e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00132	5f		 pop	 rdi
  00133	5d		 pop	 rbp
  00134	c3		 ret	 0
?dtor$7@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$8
  00135	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0013a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0013f	55		 push	 rbp
  00140	57		 push	 rdi
  00141	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00145	48 8b ea	 mov	 rbp, rdx
  00148	48 8d 8d 38 09
	00 00		 lea	 rcx, QWORD PTR $T15[rbp]
  0014f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00154	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00158	5f		 pop	 rdi
  00159	5d		 pop	 rbp
  0015a	c3		 ret	 0
?dtor$8@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$9
  0015b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00160	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00165	55		 push	 rbp
  00166	57		 push	 rdi
  00167	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0016b	48 8b ea	 mov	 rbp, rdx
  0016e	48 8d 8d e8 08
	00 00		 lea	 rcx, QWORD PTR $T13[rbp]
  00175	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0017a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0017e	5f		 pop	 rdi
  0017f	5d		 pop	 rbp
  00180	c3		 ret	 0
?dtor$9@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$9
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$10
  00181	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00186	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0018b	55		 push	 rbp
  0018c	57		 push	 rdi
  0018d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00191	48 8b ea	 mov	 rbp, rdx
  00194	48 8d 8d 10 09
	00 00		 lea	 rcx, QWORD PTR $T14[rbp]
  0019b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001a4	5f		 pop	 rdi
  001a5	5d		 pop	 rbp
  001a6	c3		 ret	 0
?dtor$10@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$11
  001a7	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001ac	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001b1	55		 push	 rbp
  001b2	57		 push	 rdi
  001b3	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001b7	48 8b ea	 mov	 rbp, rdx
  001ba	48 8d 8d 60 09
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  001c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001c6	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001ca	5f		 pop	 rdi
  001cb	5d		 pop	 rbp
  001cc	c3		 ret	 0
?dtor$11@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$11
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$12
  001cd	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001d2	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001d7	55		 push	 rbp
  001d8	57		 push	 rdi
  001d9	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  001dd	48 8b ea	 mov	 rbp, rdx
  001e0	48 8d 8d d8 09
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  001e7	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001ec	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001f0	5f		 pop	 rdi
  001f1	5d		 pop	 rbp
  001f2	c3		 ret	 0
?dtor$12@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$12
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$13
  001f3	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  001f8	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  001fd	55		 push	 rbp
  001fe	57		 push	 rdi
  001ff	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00203	48 8b ea	 mov	 rbp, rdx
  00206	48 8d 8d 88 09
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  0020d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00212	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00216	5f		 pop	 rdi
  00217	5d		 pop	 rbp
  00218	c3		 ret	 0
?dtor$13@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$13
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$14
  00219	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0021e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00223	55		 push	 rbp
  00224	57		 push	 rdi
  00225	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00229	48 8b ea	 mov	 rbp, rdx
  0022c	48 8d 8d b0 09
	00 00		 lea	 rcx, QWORD PTR $T18[rbp]
  00233	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00238	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0023c	5f		 pop	 rdi
  0023d	5d		 pop	 rbp
  0023e	c3		 ret	 0
?dtor$14@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$14
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$15
  0023f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00244	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00249	55		 push	 rbp
  0024a	57		 push	 rdi
  0024b	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0024f	48 8b ea	 mov	 rbp, rdx
  00252	48 8d 8d 00 0a
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  00259	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0025e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00262	5f		 pop	 rdi
  00263	5d		 pop	 rbp
  00264	c3		 ret	 0
?dtor$15@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$16
  00265	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0026a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0026f	55		 push	 rbp
  00270	57		 push	 rdi
  00271	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00275	48 8b ea	 mov	 rbp, rdx
  00278	48 8d 8d 38 0a
	00 00		 lea	 rcx, QWORD PTR sInterval$21[rbp]
  0027f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00284	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00288	5f		 pop	 rdi
  00289	5d		 pop	 rbp
  0028a	c3		 ret	 0
?dtor$16@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$16
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$17
  0028b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00290	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00295	55		 push	 rbp
  00296	57		 push	 rdi
  00297	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0029b	48 8b ea	 mov	 rbp, rdx
  0029e	48 8d 8d 78 0a
	00 00		 lea	 rcx, QWORD PTR args$22[rbp]
  002a5	e8 00 00 00 00	 call	 ??1?$vector@PEBDV?$allocator@PEBD@std@@@std@@QEAA@XZ ; std::vector<char const *,std::allocator<char const *> >::~vector<char const *,std::allocator<char const *> >
  002aa	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002ae	5f		 pop	 rdi
  002af	5d		 pop	 rbp
  002b0	c3		 ret	 0
?dtor$17@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$17
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$18
  002b1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002b6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002bb	55		 push	 rbp
  002bc	57		 push	 rdi
  002bd	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002c1	48 8b ea	 mov	 rbp, rdx
  002c4	48 8d 8d a8 0a
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  002cb	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002d0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002d4	5f		 pop	 rdi
  002d5	5d		 pop	 rbp
  002d6	c3		 ret	 0
?dtor$18@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$19
  002d7	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  002dc	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  002e1	55		 push	 rbp
  002e2	57		 push	 rdi
  002e3	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  002e7	48 8b ea	 mov	 rbp, rdx
  002ea	48 8d 8d d0 0a
	00 00		 lea	 rcx, QWORD PTR $T24[rbp]
  002f1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002f6	48 83 c4 28	 add	 rsp, 40			; 00000028H
  002fa	5f		 pop	 rdi
  002fb	5d		 pop	 rbp
  002fc	c3		 ret	 0
?dtor$19@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$19
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
tempDir$8 = 80
tempPath$9 = 1136
$T10 = 2168
priority$11 = 2208
sPythonPath$12 = 2232
$T13 = 2280
$T14 = 2320
$T15 = 2360
$T16 = 2400
$T17 = 2440
$T18 = 2480
$T19 = 2520
$T20 = 2560
sInterval$21 = 2616
args$22 = 2680
$T23 = 2728
$T24 = 2768
$T25 = 2816
$T26 = 2824
$T27 = 2832
$T28 = 2840
$T29 = 2848
$T30 = 2856
$T31 = 2864
$T32 = 2872
$T33 = 2880
$T34 = 2888
$T35 = 2896
$T36 = 2912
$T37 = 2920
tv540 = 2928
tv502 = 2936
tv157 = 2944
tv559 = 2952
tv170 = 2960
tv196 = 2968
tv541 = 2976
tv509 = 2984
tv542 = 2992
tv511 = 3000
tv235 = 3008
tv233 = 3016
tv514 = 3024
tv543 = 3032
tv516 = 3040
tv544 = 3048
tv518 = 3056
tv545 = 3064
tv520 = 3072
tv546 = 3080
tv522 = 3088
tv273 = 3096
tv547 = 3104
tv524 = 3112
tv548 = 3120
tv526 = 3128
tv549 = 3136
tv528 = 3144
tv299 = 3152
tv308 = 3160
tv343 = 3168
tv555 = 3176
tv391 = 3184
tv400 = 3192
tv443 = 3200
tv320 = 3208
tv532 = 3216
tv552 = 3224
tv461 = 3232
tv314 = 3240
tv534 = 3248
tv551 = 3256
tv550 = 3264
tv536 = 3272
__$ArrayPad$ = 3280
this$ = 3312
filename$ = 3320
pPythonPath$ = 3328
interval$ = 3336
nSelectOutputLog$ = 3344
nSelectOutputPlot$ = 3352
thMainThread$ = 3360
pRGYLog$ = 3368
prm$ = 3376
?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA PROC ; `CPerfMonitor::init'::`1'::dtor$20
  002fd	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00302	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00307	55		 push	 rbp
  00308	57		 push	 rdi
  00309	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0030d	48 8b ea	 mov	 rbp, rdx
  00310	48 8d 8d 50 0b
	00 00		 lea	 rcx, QWORD PTR $T35[rbp]
  00317	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0031c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00320	5f		 pop	 rdi
  00321	5d		 pop	 rbp
  00322	c3		 ret	 0
?dtor$20@?0??init@CPerfMonitor@@QEAAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBDHHHV?$unique_ptr@XUhandle_deleter@@@3@V?$shared_ptr@VRGYLog@@@3@PEAUCPerfMonitorPrm@@@Z@4HA ENDP ; `CPerfMonitor::init'::`1'::dtor$20
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
_TEXT	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
??0CPerfMonitor@@QEAA@XZ PROC				; CPerfMonitor::CPerfMonitor

; 469  : CPerfMonitor::CPerfMonitor() {

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+208]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00036	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c0 08	 add	 rax, 8
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004a	90		 npad	 1
  0004b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 05 a0 02 00
	00		 add	 rax, 672		; 000002a0H
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ??0thread@std@@QEAA@XZ	; std::thread::thread
  00061	90		 npad	 1
  00062	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 05 b0 02 00
	00		 add	 rax, 688		; 000002b0H
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
  00078	90		 npad	 1
  00079	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00081	48 05 b8 02 00
	00		 add	 rax, 696		; 000002b8H
  00087	48 8b c8	 mov	 rcx, rax
  0008a	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VRGYPipeProcess@@@std@@$0A@@?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> ><std::default_delete<RGYPipeProcess>,0>
  0008f	90		 npad	 1
  00090	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00098	48 05 48 0b 00
	00		 add	 rax, 2888		; 00000b48H
  0009e	48 8b c8	 mov	 rcx, rax
  000a1	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  000a6	90		 npad	 1
  000a7	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000af	48 05 80 0b 00
	00		 add	 rax, 2944		; 00000b80H
  000b5	48 8b c8	 mov	 rcx, rax
  000b8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000bd	90		 npad	 1
  000be	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c6	48 05 a8 0b 00
	00		 add	 rax, 2984		; 00000ba8H
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ??$?0Ufp_deleter@@$0A@@?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::unique_ptr<_iobuf,fp_deleter><fp_deleter,0>
  000d4	90		 npad	 1
  000d5	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000dd	48 05 f0 0b 00
	00		 add	 rax, 3056		; 00000bf0H
  000e3	48 8b c8	 mov	 rcx, rax
  000e6	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  000eb	90		 npad	 1

; 470  :     memset(m_info, 0, sizeof(m_info));

  000ec	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f4	48 83 c0 30	 add	 rax, 48			; 00000030H
  000f8	41 b8 70 02 00
	00		 mov	 r8d, 624		; 00000270H
  000fe	33 d2		 xor	 edx, edx
  00100	48 8b c8	 mov	 rcx, rax
  00103	e8 00 00 00 00	 call	 memset

; 471  :     memset(&m_pipes, 0, sizeof(m_pipes));

  00108	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00110	48 05 c0 02 00
	00		 add	 rax, 704		; 000002c0H
  00116	41 b8 58 08 00
	00		 mov	 r8d, 2136		; 00000858H
  0011c	33 d2		 xor	 edx, edx
  0011e	48 8b c8	 mov	 rcx, rax
  00121	e8 00 00 00 00	 call	 memset

; 472  :     memset(&m_QueueInfo, 0, sizeof(m_QueueInfo));

  00126	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012e	48 05 c0 0b 00
	00		 add	 rax, 3008		; 00000bc0H
  00134	41 b8 30 00 00
	00		 mov	 r8d, 48			; 00000030H
  0013a	33 d2		 xor	 edx, edx
  0013c	48 8b c8	 mov	 rcx, rax
  0013f	e8 00 00 00 00	 call	 memset

; 473  : #if ENABLE_METRIC_FRAMEWORK
; 474  :     m_pManager = nullptr;
; 475  : #endif //#if ENABLE_METRIC_FRAMEWORK
; 476  : #if ENABLE_NVML
; 477  :     memset(&m_nvmlInfo, 0, sizeof(m_nvmlInfo));
; 478  : #endif
; 479  : #if ENABLE_GPUZ_INFO
; 480  :     memset(&m_GPUZInfo, 0, sizeof(m_GPUZInfo));

  00144	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0014c	48 05 00 0c 00
	00		 add	 rax, 3072		; 00000c00H
  00152	41 b8 0c 0e 03
	00		 mov	 r8d, 200204		; 00030e0cH
  00158	33 d2		 xor	 edx, edx
  0015a	48 8b c8	 mov	 rcx, rax
  0015d	e8 00 00 00 00	 call	 memset

; 481  : #endif //#if ENABLE_GPUZ_INFO
; 482  :     m_bGPUZInfoValid = false;

  00162	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0016a	c6 80 0c 1a 03
	00 00		 mov	 BYTE PTR [rax+203276], 0

; 483  : 
; 484  :     cpu_info_t cpu_info;
; 485  :     get_cpu_info(&cpu_info);

  00171	48 8d 4c 24 30	 lea	 rcx, QWORD PTR cpu_info$[rsp]
  00176	e8 00 00 00 00	 call	 ?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z ; get_cpu_info

; 486  :     m_nLogicalCPU = cpu_info.logical_cores;

  0017b	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00183	8b 4c 24 38	 mov	 ecx, DWORD PTR cpu_info$[rsp+8]
  00187	89 88 40 0b 00
	00		 mov	 DWORD PTR [rax+2880], ecx

; 487  :     m_thAudProcThread = NULL;

  0018d	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00195	48 c7 80 30 0b
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+2864], 0

; 488  :     m_thEncThread = NULL;

  001a0	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001a8	48 c7 80 18 0b
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+2840], 0

; 489  :     m_thOutThread = NULL;

  001b3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001bb	48 c7 80 28 0b
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+2856], 0

; 490  : }

  001c6	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ce	48 8b f8	 mov	 rdi, rax
  001d1	48 8b cc	 mov	 rcx, rsp
  001d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0CPerfMonitor@@QEAA@XZ$rtcFrameData
  001db	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001e0	48 8b c7	 mov	 rax, rdi
  001e3	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001eb	48 33 cc	 xor	 rcx, rsp
  001ee	e8 00 00 00 00	 call	 __security_check_cookie
  001f3	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  001fa	5f		 pop	 rdi
  001fb	c3		 ret	 0
??0CPerfMonitor@@QEAA@XZ ENDP				; CPerfMonitor::CPerfMonitor
_TEXT	ENDS
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	48 83 c1 08	 add	 rcx, 8
  0001e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00027	5f		 pop	 rdi
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$0
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$1
  0002a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00034	55		 push	 rbp
  00035	57		 push	 rdi
  00036	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003a	48 8b ea	 mov	 rbp, rdx
  0003d	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00044	48 81 c1 a0 02
	00 00		 add	 rcx, 672		; 000002a0H
  0004b	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$1
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$2
  00057	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0005c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00061	55		 push	 rbp
  00062	57		 push	 rdi
  00063	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00067	48 8b ea	 mov	 rbp, rdx
  0006a	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00071	48 81 c1 b0 02
	00 00		 add	 rcx, 688		; 000002b0H
  00078	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  0007d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$2
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$3
  00084	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00089	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008e	55		 push	 rbp
  0008f	57		 push	 rdi
  00090	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00094	48 8b ea	 mov	 rbp, rdx
  00097	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009e	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  000a5	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  000aa	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ae	5f		 pop	 rdi
  000af	5d		 pop	 rbp
  000b0	c3		 ret	 0
?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$3
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$4
  000b1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000b6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000bb	55		 push	 rbp
  000bc	57		 push	 rdi
  000bd	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c1	48 8b ea	 mov	 rbp, rdx
  000c4	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000cb	48 81 c1 48 0b
	00 00		 add	 rcx, 2888		; 00000b48H
  000d2	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$4
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$5
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f8	48 81 c1 80 0b
	00 00		 add	 rcx, 2944		; 00000b80H
  000ff	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00104	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00108	5f		 pop	 rdi
  00109	5d		 pop	 rbp
  0010a	c3		 ret	 0
?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$5
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$6
  0010b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00110	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00115	55		 push	 rbp
  00116	57		 push	 rdi
  00117	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011b	48 8b ea	 mov	 rbp, rdx
  0011e	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00125	48 81 c1 a8 0b
	00 00		 add	 rcx, 2984		; 00000ba8H
  0012c	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00131	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00135	5f		 pop	 rdi
  00136	5d		 pop	 rbp
  00137	c3		 ret	 0
?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$6
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$7
  00138	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0013d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00142	55		 push	 rbp
  00143	57		 push	 rdi
  00144	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00148	48 8b ea	 mov	 rbp, rdx
  0014b	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00152	48 81 c1 f0 0b
	00 00		 add	 rcx, 3056		; 00000bf0H
  00159	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0015e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00162	5f		 pop	 rdi
  00163	5d		 pop	 rbp
  00164	c3		 ret	 0
?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	48 83 c1 08	 add	 rcx, 8
  0001e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00023	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00027	5f		 pop	 rdi
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?dtor$0@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$1
  0002a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002f	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00034	55		 push	 rbp
  00035	57		 push	 rdi
  00036	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0003a	48 8b ea	 mov	 rbp, rdx
  0003d	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00044	48 81 c1 a0 02
	00 00		 add	 rcx, 672		; 000002a0H
  0004b	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$2
  00057	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0005c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00061	55		 push	 rbp
  00062	57		 push	 rdi
  00063	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00067	48 8b ea	 mov	 rbp, rdx
  0006a	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00071	48 81 c1 b0 02
	00 00		 add	 rcx, 688		; 000002b0H
  00078	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  0007d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
?dtor$2@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$3
  00084	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00089	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008e	55		 push	 rbp
  0008f	57		 push	 rdi
  00090	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00094	48 8b ea	 mov	 rbp, rdx
  00097	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009e	48 81 c1 b8 02
	00 00		 add	 rcx, 696		; 000002b8H
  000a5	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYPipeProcess@@U?$default_delete@VRGYPipeProcess@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >::~unique_ptr<RGYPipeProcess,std::default_delete<RGYPipeProcess> >
  000aa	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000ae	5f		 pop	 rdi
  000af	5d		 pop	 rbp
  000b0	c3		 ret	 0
?dtor$3@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$4
  000b1	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000b6	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000bb	55		 push	 rbp
  000bc	57		 push	 rdi
  000bd	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000c1	48 8b ea	 mov	 rbp, rdx
  000c4	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000cb	48 81 c1 48 0b
	00 00		 add	 rcx, 2888		; 00000b48H
  000d2	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000d7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000db	5f		 pop	 rdi
  000dc	5d		 pop	 rbp
  000dd	c3		 ret	 0
?dtor$4@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$5
  000de	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000e3	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e8	55		 push	 rbp
  000e9	57		 push	 rdi
  000ea	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000ee	48 8b ea	 mov	 rbp, rdx
  000f1	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f8	48 81 c1 80 0b
	00 00		 add	 rcx, 2944		; 00000b80H
  000ff	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00104	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00108	5f		 pop	 rdi
  00109	5d		 pop	 rbp
  0010a	c3		 ret	 0
?dtor$5@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$6
  0010b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00110	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00115	55		 push	 rbp
  00116	57		 push	 rdi
  00117	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0011b	48 8b ea	 mov	 rbp, rdx
  0011e	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00125	48 81 c1 a8 0b
	00 00		 add	 rcx, 2984		; 00000ba8H
  0012c	e8 00 00 00 00	 call	 ??1?$unique_ptr@U_iobuf@@Ufp_deleter@@@std@@QEAA@XZ ; std::unique_ptr<_iobuf,fp_deleter>::~unique_ptr<_iobuf,fp_deleter>
  00131	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00135	5f		 pop	 rdi
  00136	5d		 pop	 rbp
  00137	c3		 ret	 0
?dtor$6@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
__$ArrayPad$ = 176
this$ = 208
?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA PROC		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$7
  00138	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0013d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00142	55		 push	 rbp
  00143	57		 push	 rdi
  00144	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00148	48 8b ea	 mov	 rbp, rdx
  0014b	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00152	48 81 c1 f0 0b
	00 00		 add	 rcx, 3056		; 00000bf0H
  00159	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0015e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00162	5f		 pop	 rdi
  00163	5d		 pop	 rbp
  00164	c3		 ret	 0
?dtor$7@?0???0CPerfMonitor@@QEAA@XZ@4HA ENDP		; `CPerfMonitor::CPerfMonitor'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z
_TEXT	SEGMENT
$T1 = 32
tv65 = 40
tv67 = 48
tv73 = 56
tv76 = 64
__$ReturnUdt$ = 96
_Left$ = 104
_Right$ = 112
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4299 :     basic_string<_Elem, _Traits, _Alloc>&& _Right) { // return string + string

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4300 :     if (_Right.size() <= _Left.capacity() - _Left.size() || _Right.capacity() - _Right.size() < _Left.size()) {

  00030	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0003a	48 89 44 24 28	 mov	 QWORD PTR tv65[rsp], rax
  0003f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	e8 00 00 00 00	 call	 ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
  00049	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  0004e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Left$[rsp]
  00053	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00058	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv65[rsp]
  00068	48 3b c8	 cmp	 rcx, rax
  0006b	76 3d		 jbe	 SHORT $LN4@operator
  0006d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
  00077	48 89 44 24 38	 mov	 QWORD PTR tv73[rsp], rax
  0007c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Right$[rsp]
  00081	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00086	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv73[rsp]
  0008b	48 2b c8	 sub	 rcx, rax
  0008e	48 8b c1	 mov	 rax, rcx
  00091	48 89 44 24 40	 mov	 QWORD PTR tv76[rsp], rax
  00096	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Left$[rsp]
  0009b	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  000a0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv76[rsp]
  000a5	48 3b c8	 cmp	 rcx, rax
  000a8	73 39		 jae	 SHORT $LN2@operator
$LN4@operator:

; 4301 :         return _STD move(_Left.append(_Right));

  000aa	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Right$[rsp]
  000af	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Left$[rsp]
  000b4	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  000b9	48 8b c8	 mov	 rcx, rax
  000bc	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  000c1	48 8b d0	 mov	 rdx, rax
  000c4	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000ce	90		 npad	 1
  000cf	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  000d3	83 c8 01	 or	 eax, 1
  000d6	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  000da	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000df	eb 39		 jmp	 SHORT $LN1@operator

; 4302 :     } else {

  000e1	eb 37		 jmp	 SHORT $LN1@operator
$LN2@operator:

; 4303 :         return _STD move(_Right.insert(0, _Left));

  000e3	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Left$[rsp]
  000e8	33 d2		 xor	 edx, edx
  000ea	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Right$[rsp]
  000ef	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
  000f4	48 8b c8	 mov	 rcx, rax
  000f7	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  000fc	48 8b d0	 mov	 rdx, rax
  000ff	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00104	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00109	90		 npad	 1
  0010a	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0010e	83 c8 01	 or	 eax, 1
  00111	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00115	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@operator:

; 4304 :     }
; 4305 : }

  0011a	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0011e	5f		 pop	 rdi
  0011f	c3		 ret	 0
  00120	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv65 = 40
tv67 = 48
tv73 = 56
tv76 = 64
__$ReturnUdt$ = 96
_Left$ = 104
_Right$ = 112
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN7@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv65 = 40
tv67 = 48
tv73 = 56
tv76 = 64
__$ReturnUdt$ = 96
_Left$ = 104
_Right$ = 112
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN7@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@0@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4293 :     const basic_string<_Elem, _Traits, _Alloc>& _Right) { // return string + string

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4294 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4295 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Rhandle_deleter@@QEBAXPEAX@Z
_TEXT	SEGMENT
this$ = 48
handle$ = 56
??Rhandle_deleter@@QEBAXPEAX@Z PROC			; handle_deleter::operator(), COMDAT

; 188  :     void operator()(HANDLE handle) const {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 189  :         if (handle) {

  00023	48 83 7c 24 38
	00		 cmp	 QWORD PTR handle$[rsp], 0
  00029	74 0b		 je	 SHORT $LN2@operator

; 190  : #if defined(_WIN32) || defined(_WIN64)
; 191  :             CloseHandle(handle);

  0002b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR handle$[rsp]
  00030	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle
$LN2@operator:

; 192  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 193  :         }
; 194  :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??Rhandle_deleter@@QEBAXPEAX@Z ENDP			; handle_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z
_TEXT	SEGMENT
this$ = 48
fp$ = 56
??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z PROC			; fp_deleter::operator(), COMDAT

; 179  :     void operator()(FILE* fp) const {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 180  :         if (fp) {

  00023	48 83 7c 24 38
	00		 cmp	 QWORD PTR fp$[rsp], 0
  00029	74 16		 je	 SHORT $LN2@operator

; 181  :             fflush(fp);

  0002b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR fp$[rsp]
  00030	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush

; 182  :             fclose(fp);

  00036	48 8b 4c 24 38	 mov	 rcx, QWORD PTR fp$[rsp]
  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
$LN2@operator:

; 183  :         }
; 184  :     }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??Rfp_deleter@@QEBAXPEAU_iobuf@@@Z ENDP			; fp_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity, COMDAT

; 3589 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3590 :         return _Mypair._Myval2._Myres;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]

; 3591 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?capacity@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT

; 3562 :     _NODISCARD size_type length() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3563 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3564 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
_Insert_at$2 = 64
_Ptr_shifted_after$3 = 72
$T4 = 80
tv138 = 88
this$ = 112
_Off$ = 120
_Ptr$ = 128
_Count$ = 136
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT

; 2957 :         const size_type _Off, _In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN9:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 2958 :         // insert [_Ptr, _Ptr + _Count) at _Off
; 2959 :         _Mypair._Myval2._Check_offset(_Off);

  0002d	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Off$[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 2960 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  0003f	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00048	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2961 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  0004d	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00057	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005b	48 2b c1	 sub	 rax, rcx
  0005e	48 39 84 24 88
	00 00 00	 cmp	 QWORD PTR _Count$[rsp], rax
  00066	0f 87 62 01 00
	00		 ja	 $LN2@insert

; 2962 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  0006c	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00084	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2963 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00088	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 8b c8	 mov	 rcx, rax
  00090	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00095	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2964 :             _Elem* const _Insert_at = _Old_ptr + _Off;

  0009a	48 8b 44 24 78	 mov	 rax, QWORD PTR _Off$[rsp]
  0009f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000a4	48 03 c8	 add	 rcx, rax
  000a7	48 8b c1	 mov	 rax, rcx
  000aa	48 89 44 24 40	 mov	 QWORD PTR _Insert_at$2[rsp], rax

; 2965 :             // the range [_Ptr, _Ptr + _Ptr_shifted_after) is left alone by moving the suffix out,
; 2966 :             // while the range [_Ptr + _Ptr_shifted_after, _Ptr + _Count) shifts down by _Count
; 2967 :             size_type _Ptr_shifted_after;
; 2968 :             if (_Ptr + _Count <= _Insert_at
; 2969 :                 || _Ptr > _Old_ptr + _Old_size) { // inserted content is before the shifted region, or does not alias

  000af	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  000b7	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000bf	48 03 c8	 add	 rcx, rax
  000c2	48 8b c1	 mov	 rax, rcx
  000c5	48 3b 44 24 40	 cmp	 rax, QWORD PTR _Insert_at$2[rsp]
  000ca	76 1a		 jbe	 SHORT $LN5@insert
  000cc	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  000d1	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000d6	48 03 c8	 add	 rcx, rax
  000d9	48 8b c1	 mov	 rax, rcx
  000dc	48 39 84 24 80
	00 00 00	 cmp	 QWORD PTR _Ptr$[rsp], rax
  000e4	76 0f		 jbe	 SHORT $LN3@insert
$LN5@insert:

; 2970 :                 _Ptr_shifted_after = _Count; // none of _Ptr's data shifts

  000e6	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  000ee	48 89 44 24 48	 mov	 QWORD PTR _Ptr_shifted_after$3[rsp], rax
  000f3	eb 32		 jmp	 SHORT $LN4@insert
$LN3@insert:

; 2971 :             } else if (_Insert_at <= _Ptr) { // all of [_Ptr, _Ptr + _Count) shifts

  000f5	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fd	48 39 44 24 40	 cmp	 QWORD PTR _Insert_at$2[rsp], rax
  00102	77 0b		 ja	 SHORT $LN6@insert

; 2972 :                 _Ptr_shifted_after = 0;

  00104	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _Ptr_shifted_after$3[rsp], 0

; 2973 :             } else { // [_Ptr, _Ptr + _Count) contains _Insert_at, so only the part after _Insert_at shifts

  0010d	eb 18		 jmp	 SHORT $LN7@insert
$LN6@insert:

; 2974 :                 _Ptr_shifted_after = static_cast<size_type>(_Insert_at - _Ptr);

  0010f	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00117	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Insert_at$2[rsp]
  0011c	48 2b c8	 sub	 rcx, rax
  0011f	48 8b c1	 mov	 rax, rcx
  00122	48 89 44 24 48	 mov	 QWORD PTR _Ptr_shifted_after$3[rsp], rax
$LN7@insert:
$LN4@insert:

; 2975 :             }
; 2976 : 
; 2977 :             _Traits::move(_Insert_at + _Count, _Insert_at, _Old_size - _Off + 1); // move suffix + null down

  00127	48 8b 44 24 78	 mov	 rax, QWORD PTR _Off$[rsp]
  0012c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00131	48 2b c8	 sub	 rcx, rax
  00134	48 8b c1	 mov	 rax, rcx
  00137	48 ff c0	 inc	 rax
  0013a	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  00142	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Insert_at$2[rsp]
  00147	48 03 d1	 add	 rdx, rcx
  0014a	48 8b ca	 mov	 rcx, rdx
  0014d	4c 8b c0	 mov	 r8, rax
  00150	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Insert_at$2[rsp]
  00155	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2978 :             _Traits::copy(_Insert_at, _Ptr, _Ptr_shifted_after);

  0015a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Ptr_shifted_after$3[rsp]
  0015f	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00167	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Insert_at$2[rsp]
  0016c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2979 :             _Traits::copy(

  00171	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr_shifted_after$3[rsp]
  00176	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  0017e	48 2b c8	 sub	 rcx, rax
  00181	48 8b c1	 mov	 rax, rcx
  00184	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Count$[rsp]
  0018c	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00194	48 03 d1	 add	 rdx, rcx
  00197	48 8b ca	 mov	 rcx, rdx
  0019a	48 03 4c 24 48	 add	 rcx, QWORD PTR _Ptr_shifted_after$3[rsp]
  0019f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr_shifted_after$3[rsp]
  001a4	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Insert_at$2[rsp]
  001a9	4c 03 c2	 add	 r8, rdx
  001ac	49 8b d0	 mov	 rdx, r8
  001af	48 89 54 24 58	 mov	 QWORD PTR tv138[rsp], rdx
  001b4	4c 8b c0	 mov	 r8, rax
  001b7	48 8b d1	 mov	 rdx, rcx
  001ba	48 8b 44 24 58	 mov	 rax, QWORD PTR tv138[rsp]
  001bf	48 8b c8	 mov	 rcx, rax
  001c2	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2980 :                 _Insert_at + _Ptr_shifted_after, _Ptr + _Count + _Ptr_shifted_after, _Count - _Ptr_shifted_after);
; 2981 :             return *this;

  001c7	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001cc	eb 48		 jmp	 SHORT $LN1@insert
$LN2@insert:

; 2982 :         }
; 2983 : 
; 2984 :         return _Reallocate_grow_by(

  001ce	48 8d 44 24 50	 lea	 rax, QWORD PTR $T4[rsp]
  001d3	48 8b f8	 mov	 rdi, rax
  001d6	33 c0		 xor	 eax, eax
  001d8	b9 01 00 00 00	 mov	 ecx, 1
  001dd	f3 aa		 rep stosb
  001df	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  001e7	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001ec	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Ptr$[rsp]
  001f4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001f9	4c 8b 4c 24 78	 mov	 r9, QWORD PTR _Off$[rsp]
  001fe	44 0f b6 44 24
	50		 movzx	 r8d, BYTE PTR $T4[rsp]
  00204	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  0020c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00211	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_f3a66ab6a0570788f31503db83886f49>@@_KPEBD2@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_f3a66ab6a0570788f31503db83886f49>,unsigned __int64,char const *,unsigned __int64>
$LN1@insert:

; 2985 :             _Count,
; 2986 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Off,
; 2987 :                 const _Elem* const _Ptr, const size_type _Count) {
; 2988 :                 _Traits::copy(_New_ptr, _Old_ptr, _Off);
; 2989 :                 _Traits::copy(_New_ptr + _Off, _Ptr, _Count);
; 2990 :                 _Traits::copy(_New_ptr + _Off + _Count, _Old_ptr + _Off, _Old_size - _Off + 1);
; 2991 :             },
; 2992 :             _Off, _Ptr, _Count);
; 2993 :     }

  00216	48 83 c4 60	 add	 rsp, 96			; 00000060H
  0021a	5f		 pop	 rdi
  0021b	c3		 ret	 0
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
_Right$ = 64
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert, COMDAT

; 2929 :     basic_string& insert(const size_type _Off, const basic_string& _Right) { // insert _Right at _Off

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2930 :         return insert(_Off, _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00035	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	4c 8b 49 18	 mov	 r9, QWORD PTR [rcx+24]
  0003e	4c 8b c0	 mov	 r8, rax
  00041	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KQEBD0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert

; 2931 :     }

  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2688 :     basic_string& operator+=(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2689 :         return append(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2690 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2676 :     basic_string& operator=(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2677 :         return assign(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2678 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2661 :     basic_string& operator=(const basic_string& _Right) { // assign _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2662 :         if (this != _STD addressof(_Right)) { // different, assign it

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2663 :             _Copy_assign(_Right, _Choose_pocca<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
$LN2@operator:

; 2664 :         }
; 2665 : 
; 2666 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2667 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z
_TEXT	SEGMENT
tv65 = 32
this$ = 64
_Right$ = 72
__formal$ = 80
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign, COMDAT

; 2625 :     void _Copy_assign(const basic_string& _Right, false_type) {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2626 :         _Pocca(_Getal(), _Right._Getal());

  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00032	48 89 44 24 20	 mov	 QWORD PTR tv65[rsp], rax
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv65[rsp]
  00046	48 8b d1	 mov	 rdx, rcx
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$_Pocca@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@AEBV10@@Z ; std::_Pocca<std::allocator<char> >

; 2627 :         assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00051	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00063	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00067	48 8b d0	 mov	 rdx, rax
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2628 :     }

  00074	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
?_Copy_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@U?$integral_constant@_N$0A@@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S10$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S10$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S10$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2460 :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2461 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2462 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:

; 2463 :         }
; 2464 : 
; 2465 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2466 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT

; 2431 :     void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2432 :         _Tidy_deallocate();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2433 :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003c	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >

; 2434 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  0005b	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00060	48 8b f8	 mov	 rdi, rax
  00063	33 c0		 xor	 eax, eax
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	f3 aa		 rep stosb
  0006c	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00072	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2435 :     }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S12$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S12$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S12$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2136 :     [[noreturn]] static void _Xran() { // report an out_of_range error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 2137 :         _Xout_of_range("invalid string position");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2138 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2124 :     void _Check_offset(const size_type _Off) const { // checks whether _Off is in the bounds of [0, size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2125 :         if (_Mysize < _Off) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	73 05		 jae	 SHORT $LN2@Check_offs

; 2126 :             _Xran();

  00033	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2127 :         }
; 2128 :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
_TEXT	SEGMENT
_Old_val$ = 40
$T4 = 112
_Val$ = 120
_New_val$ = 128
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z PROC ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 16 00 00 00	 mov	 ecx, 22
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00029	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  0002e	48 8b f8	 mov	 rdi, rax
  00031	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Val$[rsp]
  00036	b9 10 00 00 00	 mov	 ecx, 16
  0003b	f3 a4		 rep movsb

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0003d	48 8b 7c 24 78	 mov	 rdi, QWORD PTR _Val$[rsp]
  00042	48 8b b4 24 80
	00 00 00	 mov	 rsi, QWORD PTR _New_val$[rsp]
  0004a	b9 10 00 00 00	 mov	 ecx, 16
  0004f	f3 a4		 rep movsb

; 529  :     return _Old_val;

  00051	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  00056	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T4[rsp]
  0005b	48 8b f0	 mov	 rsi, rax
  0005e	b9 10 00 00 00	 mov	 ecx, 16
  00063	f3 a4		 rep movsb
  00065	48 8b 44 24 70	 mov	 rax, QWORD PTR $T4[rsp]

; 530  : }

  0006a	48 8b f8	 mov	 rdi, rax
  0006d	48 8b cc	 mov	 rcx, rsp
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData
  00077	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0007c	48 8b c7	 mov	 rax, rdi
  0007f	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00083	5f		 pop	 rdi
  00084	5e		 pop	 rsi
  00085	c3		 ret	 0
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ENDP ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 104  :     void join() { // join thread

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000b	48 8b fc	 mov	 rdi, rsp
  0000e	b9 12 00 00 00	 mov	 ecx, 18
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 105  :         if (!joinable()) {

  0001f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00024	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00029	0f b6 c0	 movzx	 eax, al
  0002c	85 c0		 test	 eax, eax
  0002e	75 0a		 jne	 SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

  0003a	e8 00 00 00 00	 call	 _Thrd_id
  0003f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00044	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00047	75 0a		 jne	 SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  00049	b9 05 00 00 00	 mov	 ecx, 5
  0004e	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

  00053	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b 74 24 60	 mov	 rsi, QWORD PTR this$[rsp]
  00060	b9 10 00 00 00	 mov	 ecx, 16
  00065	f3 a4		 rep movsb
  00067	33 d2		 xor	 edx, edx
  00069	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  0006e	e8 00 00 00 00	 call	 _Thrd_join
  00073	85 c0		 test	 eax, eax
  00075	74 0a		 je	 SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

  00081	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00086	48 8b f8	 mov	 rdi, rax
  00089	33 c0		 xor	 eax, eax
  0008b	b9 10 00 00 00	 mov	 ecx, 16
  00090	f3 aa		 rep stosb
  00092	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00097	48 8b 7c 24 60	 mov	 rdi, QWORD PTR this$[rsp]
  0009c	48 8b f0	 mov	 rsi, rax
  0009f	b9 10 00 00 00	 mov	 ecx, 16
  000a4	f3 a4		 rep movsb
$LN5@join:

; 118  :     }

  000a6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000aa	5f		 pop	 rdi
  000ab	5e		 pop	 rsi
  000ac	c3		 ret	 0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 100  :     _NODISCARD bool joinable() const noexcept { // return true if this thread can be joined

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 101  :         return _Thr._Id != 0;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00027	74 09		 je	 SHORT $LN3@joinable
  00029	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00030	eb 07		 jmp	 SHORT $LN4@joinable
$LN3@joinable:
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@joinable:
  00039	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 102  :     }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
this$ = 112
_Other$ = 120
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z PROC		; std::thread::operator=, COMDAT

; 83   :     thread& operator=(thread&& _Other) noexcept { // move from _Other

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 16 00 00 00	 mov	 ecx, 22
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 84   : 
; 85   :         if (joinable()) {

  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00029	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  0002e	90		 npad	 1
  0002f	0f b6 c0	 movzx	 eax, al
  00032	85 c0		 test	 eax, eax
  00034	74 07		 je	 SHORT $LN2@operator

; 86   :             _STD terminate();

  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
  0003c	90		 npad	 1
$LN2@operator:

; 87   :         }
; 88   : 
; 89   :         _Thr = _STD exchange(_Other._Thr, {});

  0003d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00042	48 8b f8	 mov	 rdi, rax
  00045	33 c0		 xor	 eax, eax
  00047	b9 10 00 00 00	 mov	 ecx, 16
  0004c	f3 aa		 rep stosb
  0004e	48 8b 44 24 78	 mov	 rax, QWORD PTR _Other$[rsp]
  00053	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T2[rsp]
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  00060	e8 00 00 00 00	 call	 ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
  00065	90		 npad	 1
  00066	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006b	48 8b f9	 mov	 rdi, rcx
  0006e	48 8b f0	 mov	 rsi, rax
  00071	b9 10 00 00 00	 mov	 ecx, 16
  00076	f3 a4		 rep movsb
  00078	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0007d	48 8b 7c 24 70	 mov	 rdi, QWORD PTR this$[rsp]
  00082	48 8b f0	 mov	 rsi, rax
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 90   :         return *this;

  0008c	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]

; 91   :     }

  00091	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00095	5f		 pop	 rdi
  00096	5e		 pop	 rsi
  00097	c3		 ret	 0
$LN4@operator:
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ENDP		; std::thread::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 74   :     ~thread() noexcept { // clean up

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 75   :         if (joinable()) {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	74 06		 je	 SHORT $LN2@thread

; 76   :             _STD terminate();

  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
$LN2@thread:
$LN3@thread:

; 77   :         }
; 78   :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??0thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0thread@std@@QEAA@XZ PROC				; std::thread::thread, COMDAT

; 31   :     thread() noexcept : _Thr{} { // construct with no thread

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR this$[rsp]
  00010	33 c0		 xor	 eax, eax
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	f3 aa		 rep stosb

; 32   :     }

  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0thread@std@@QEAA@XZ ENDP				; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Incref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT

; 642  :     void _Incref() noexcept { // increment use count

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 643  :         _MT_INCR(_Uses);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 83 c0 08	 add	 rax, 8
  0000f	f0 ff 00	 lock inc DWORD PTR [rax]

; 644  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Incref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
_TEXT	SEGMENT
this$ = 32
?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 89   :             return _MyRep;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 90   :         }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 89   :             return _MyRep;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
_TEXT	SEGMENT
this$ = 32
?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ PROC ; std::chrono::duration<double,std::ratio<1,1> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 89   :             return _MyRep;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 90   :         }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ENDP ; std::chrono::duration<double,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 89   :             return _MyRep;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 16
__$ReturnUdt$ = 24
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch, COMDAT

; 194  :         _NODISCARD constexpr _Duration time_since_epoch() const _NOEXCEPT_COND(is_arithmetic_v<rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 195  :             // get duration from epoch
; 196  :             return _MyDur;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 18	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001b	48 8b 44 24 18	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 197  :         }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 16
_Other$ = 24
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 184  :         constexpr explicit time_point(const _Duration& _Other) _NOEXCEPT_COND(is_arithmetic_v<rep>) // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 185  :             : _MyDur(_Other) { // construct from a duration

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Other$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 186  :         }

  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 16
_Right$ = 24
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=, COMDAT

; 127  :             _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 128  :             _MyRep -= _Right._MyRep;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001b	48 2b c1	 sub	 rax, rcx
  0001e	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00023	48 89 01	 mov	 QWORD PTR [rcx], rax

; 129  :             return *this;

  00026	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 130  :         }

  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 16
_Right$ = 24
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=, COMDAT

; 121  :             _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 122  :             _MyRep += _Right._MyRep;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00018	48 03 01	 add	 rax, QWORD PTR [rcx]
  0001b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00020	48 89 01	 mov	 QWORD PTR [rcx], rax

; 123  :             return *this;

  00023	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 124  :         }

  00028	5f		 pop	 rdi
  00029	c3		 ret	 0
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 89   :             return _MyRep;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
_TEXT	SEGMENT
_Freq$ = 32
_Ctr$ = 40
_Whole$ = 48
_Part$ = 56
$T1 = 64
$T2 = 72
__$ReturnUdt$ = 96
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ PROC ; std::chrono::steady_clock::now, COMDAT

; 647  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 648  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

  0001e	e8 00 00 00 00	 call	 _Query_perf_frequency
  00023	90		 npad	 1
  00024	48 89 44 24 20	 mov	 QWORD PTR _Freq$[rsp], rax

; 649  :             const long long _Ctr  = _Query_perf_counter();

  00029	e8 00 00 00 00	 call	 _Query_perf_counter
  0002e	90		 npad	 1
  0002f	48 89 44 24 28	 mov	 QWORD PTR _Ctr$[rsp], rax

; 650  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 651  :             const long long _Whole = (_Ctr / _Freq) * period::den;

  00034	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ctr$[rsp]
  00039	48 99		 cdq
  0003b	48 f7 7c 24 20	 idiv	 QWORD PTR _Freq$[rsp]
  00040	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  00047	48 89 44 24 30	 mov	 QWORD PTR _Whole$[rsp], rax

; 652  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

  0004c	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ctr$[rsp]
  00051	48 99		 cdq
  00053	48 f7 7c 24 20	 idiv	 QWORD PTR _Freq$[rsp]
  00058	48 8b c2	 mov	 rax, rdx
  0005b	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  00062	48 99		 cdq
  00064	48 f7 7c 24 20	 idiv	 QWORD PTR _Freq$[rsp]
  00069	48 89 44 24 38	 mov	 QWORD PTR _Part$[rsp], rax

; 653  :             return time_point(duration(_Whole + _Part));

  0006e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Part$[rsp]
  00073	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Whole$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp], rax
  00083	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T2[rsp]
  00088	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  0008d	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00092	90		 npad	 1
  00093	48 8b d0	 mov	 rdx, rax
  00096	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0009b	e8 00 00 00 00	 call	 ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  000a0	90		 npad	 1
  000a1	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 654  :         }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ENDP ; std::chrono::steady_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 16
__$ReturnUdt$ = 24
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch, COMDAT

; 194  :         _NODISCARD constexpr _Duration time_since_epoch() const _NOEXCEPT_COND(is_arithmetic_v<rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 195  :             // get duration from epoch
; 196  :             return _MyDur;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 18	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001b	48 8b 44 24 18	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 197  :         }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 16
_Other$ = 24
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >, COMDAT

; 184  :         constexpr explicit time_point(const _Duration& _Other) _NOEXCEPT_COND(is_arithmetic_v<rep>) // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 185  :             : _MyDur(_Other) { // construct from a duration

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Other$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 186  :         }

  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 89   :             return _MyRep;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
__$ReturnUdt$ = 64
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ PROC ; std::chrono::system_clock::now, COMDAT

; 627  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 628  :             return time_point(duration(_Xtime_get_ticks()));

  0001e	e8 00 00 00 00	 call	 _Xtime_get_ticks
  00023	90		 npad	 1
  00024	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00029	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  0002e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00033	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
  00038	90		 npad	 1
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00041	e8 00 00 00 00	 call	 ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
  00046	90		 npad	 1
  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 629  :         }

  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ENDP ; std::chrono::system_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT fprintf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Stream$ = 96
_Format$ = 104
fprintf	PROC						; COMDAT

; 835  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 44 24 70	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  00037	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0003c	45 33 c0	 xor	 r8d, r8d
  0003f	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Format$[rsp]
  00044	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Stream$[rsp]
  00049	e8 00 00 00 00	 call	 _vfprintf_l
  0004e	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 840  :         __crt_va_end(_ArgList);

  00052	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 841  :         return _Result;

  0005b	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 842  :     }

  0005f	8b f8		 mov	 edi, eax
  00061	48 8b cc	 mov	 rcx, rsp
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:fprintf$rtcFrameData
  0006b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00070	8b c7		 mov	 eax, edi
  00072	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
fprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0003c	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00041	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_perf_monitor.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
