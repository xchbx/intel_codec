; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z ; convert_yuy2_to_nv12
EXTRN	?convert_yuy2_to_nv12_i_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_i_sse2
EXTRN	?convert_yuy2_to_nv12_i_ssse3@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_i_ssse3
EXTRN	?convert_yuy2_to_nv12_i_avx@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_i_avx
EXTRN	?convert_yuy2_to_nv12_i_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_i_avx2
EXTRN	?copy_nv12_to_nv12_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; copy_nv12_to_nv12_sse2
EXTRN	?copy_p010_to_p010_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; copy_p010_to_p010_sse2
EXTRN	?copy_nv12_to_nv12_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; copy_nv12_to_nv12_avx2
EXTRN	?copy_p010_to_p010_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; copy_p010_to_p010_avx2
EXTRN	?convert_yuy2_to_nv12_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_sse2
EXTRN	?convert_yuy2_to_nv12_avx@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_avx
EXTRN	?convert_yuy2_to_nv12_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z:PROC ; convert_yuy2_to_nv12_avx2
CONST	SEGMENT
$SG25432 DB	'Invalid', 00H
$SG25433 DB	'nv12', 00H
	ORG $+3
$SG25434 DB	'yv12', 00H
	ORG $+3
$SG25435 DB	'yuy2', 00H
	ORG $+3
$SG25436 DB	'yuv422', 00H
	ORG $+1
$SG25437 DB	'nv16', 00H
	ORG $+3
$SG25438 DB	'yuv444', 00H
	ORG $+1
$SG25439 DB	'yv12(9bit)', 00H
	ORG $+1
$SG25464 DB	'rgb', 00H
$SG25440 DB	'yv12(10bit)', 00H
$SG25466 DB	'gbr', 00H
$SG25441 DB	'yv12(12bit)', 00H
$SG25469 DB	'y8', 00H
	ORG $+1
$SG25442 DB	'yv12(14bit)', 00H
$SG77706 DB	'%s', 00H
	ORG $+1
$SG25443 DB	'yv12(16bit)', 00H
$SG25444 DB	'p010', 00H
	ORG $+3
$SG25458 DB	'rgb24r', 00H
	ORG $+1
$SG69789 DB	'AVX', 00H
$SG25445 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG25446 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG25447 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG25448 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG25449 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG25450 DB	'p210', 00H
	ORG $+3
$SG25451 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG25452 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG25453 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG25454 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG25455 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG25456 DB	'yuva444', 00H
$SG25457 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG25459 DB	'rgb32r', 00H
	ORG $+1
$SG25460 DB	'rgb24', 00H
	ORG $+2
$SG25461 DB	'rgb32', 00H
	ORG $+2
$SG25462 DB	'bgr24', 00H
	ORG $+2
$SG25463 DB	'bgr32', 00H
	ORG $+2
$SG25465 DB	'rgba', 00H
	ORG $+3
$SG25467 DB	'gbra', 00H
	ORG $+3
$SG25468 DB	'yc48', 00H
	ORG $+3
$SG25470 DB	'yc16', 00H
	ORG $+3
?funcList@@3QBUConvertCSP@@B DD 01H			; funcList
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?copy_nv12_to_nv12_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?copy_nv12_to_nv12_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	0c0H
	ORG $+4
	DD	01H
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?copy_nv12_to_nv12_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?copy_nv12_to_nv12_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	01H
	ORG $+4
	DD	0cH
	DD	0cH
	DB	00H
	ORG $+7
	DQ	FLAT:?copy_p010_to_p010_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?copy_p010_to_p010_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	0c0H
	ORG $+4
	DD	0cH
	DD	0cH
	DB	00H
	ORG $+7
	DQ	FLAT:?copy_p010_to_p010_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?copy_p010_to_p010_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	01H
	ORG $+4
	DD	03H
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?convert_yuy2_to_nv12_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?convert_yuy2_to_nv12_i_avx2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	0c0H
	ORG $+4
	DD	03H
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?convert_yuy2_to_nv12_avx@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?convert_yuy2_to_nv12_i_avx@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	040H
	ORG $+4
	DD	03H
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?convert_yuy2_to_nv12_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?convert_yuy2_to_nv12_i_ssse3@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	05H
	ORG $+4
	DD	03H
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?convert_yuy2_to_nv12_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?convert_yuy2_to_nv12_i_sse2@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	01H
	ORG $+4
	DD	03H
	DD	01H
	DB	00H
	ORG $+7
	DQ	FLAT:?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	00H
	ORG $+4
	DD	03H
	DD	06H
	DB	00H
	ORG $+7
	DQ	FLAT:?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DQ	FLAT:?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	00H
	ORG $+4
$SG77705 DB	'invalid argument', 00H
	ORG $+7
$SG77710 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG77707 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG69788 DB	'AVX2', 00H
	ORG $+3
$SG77708 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG77709 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG69790 DB	'SSE4.2', 00H
	ORG $+1
$SG69791 DB	'SSE4.1', 00H
	ORG $+1
$SG69792 DB	'SSSE3', 00H
	ORG $+2
$SG69793 DB	'SSE2', 00H
	ORG $+3
$SG69795 DB	'-', 00H
CONST	ENDS
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z ; get_convert_csp_func
PUBLIC	?get_simd_str@@YAPEBDI@Z			; get_simd_str
PUBLIC	?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z ; convert_yuy2_to_nv12_i
PUBLIC	??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ	; std::allocator<std::pair<unsigned int,char const *> >::allocator<std::pair<unsigned int,char const *> >
PUBLIC	?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z ; std::allocator<std::pair<unsigned int,char const *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z ; std::allocator<std::pair<unsigned int,char const *> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::max_size
PUBLIC	??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
PUBLIC	??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
PUBLIC	?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_end
PUBLIC	?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::max_size
PUBLIC	?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Destroy
PUBLIC	?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z ; std::initializer_list<std::pair<unsigned int,char const *> >::initializer_list<std::pair<unsigned int,char const *> >
PUBLIC	?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ ; std::initializer_list<std::pair<unsigned int,char const *> >::begin
PUBLIC	?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ ; std::initializer_list<std::pair<unsigned int,char const *> >::end
PUBLIC	??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[5],0>
PUBLIC	??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[4],0>
PUBLIC	??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[7],0>
PUBLIC	??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[6],0>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<unsigned int,char const *> >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1><std::allocator<std::pair<unsigned int,char const *> > const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,char const *> > >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-NONE> >
PUBLIC	??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z ; std::forward<char const (&)[5]>
PUBLIC	??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z ; std::forward<char const (&)[4]>
PUBLIC	??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z ; std::forward<char const (&)[7]>
PUBLIC	??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z ; std::forward<char const (&)[6]>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<unsigned int,char const *> > const &>
PUBLIC	??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z ; std::distance<std::pair<unsigned int,char const *> const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >::~_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >
PUBLIC	??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Ucopy<std::pair<unsigned int,char const *> const *>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >
PUBLIC	??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<unsigned int,char const *> const >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Emplace_back<std::pair<unsigned int,char const *> const &>
PUBLIC	??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z ; std::_Unfancy<std::pair<unsigned int,char const *> >
PUBLIC	??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z ; std::forward<std::pair<unsigned int,char const *> const &>
PUBLIC	??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::construct<std::pair<unsigned int,char const *>,std::pair<unsigned int,char const *> const &>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	atexit:PROC
EXTRN	_Init_thread_header:PROC
EXTRN	_Init_thread_abort:PROC
EXTRN	_Init_thread_footer:PROC
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?get_availableSIMD@@YAIXZ:PROC			; get_availableSIMD
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	_Init_thread_epoch:DWORD
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?simd_str_list@?1??get_simd_str@@YAPEBDI@Z@4V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@A
_BSS	SEGMENT
?simd_str_list@?1??get_simd_str@@YAPEBDI@Z@4V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@A DB 020H DUP (?) ; `get_simd_str'::`2'::simd_str_list
_BSS	ENDS
;	COMDAT ?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA
_BSS	SEGMENT
?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA DD 01H DUP (?)	; TSS0<`template-parameter-2',et_simd_str,int, ?? &>
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z DD imagerel $LN10
	DD	imagerel $LN10+290
	DD	imagerel $unwind$?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z
$pdata$?get_simd_str@@YAPEBDI@Z DD imagerel $LN9
	DD	imagerel $LN9+673
	DD	imagerel $unwind$?get_simd_str@@YAPEBDI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA DD imagerel ?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA
	DD	imagerel ?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z DD imagerel ?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z
	DD	imagerel ?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z+284
	DD	imagerel $unwind$?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z
$pdata$?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z DD imagerel $LN9
	DD	imagerel $LN9+1143
	DD	imagerel $unwind$?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
$pdata$?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z DD imagerel $LN9
	DD	imagerel $LN9+1545
	DD	imagerel $unwind$?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
$pdata$?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z DD imagerel ?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
	DD	imagerel ?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z+1307
	DD	imagerel $unwind$?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+258
	DD	imagerel $unwind$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ DD imagerel ??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ
	DD	imagerel ??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ+39
	DD	imagerel $unwind$??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+210
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	')', 02H
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
	DD	imagerel $ip2state$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcName$0 DB 024H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DB	053H
	DB	032H
	DB	00H
??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcName$1 DB 05fH ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+5
??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcVarDesc DD 058H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DD	010H
	DQ	FLAT:??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcName$0
	ORG $+96
??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcFrameData DD 02H ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
	DD	00H
	DQ	FLAT:??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+6
?get_simd_str@@YAPEBDI@Z$rtcName$0 DB 073H		; get_simd_str
	DB	069H
	DB	06dH
	DB	064H
	DB	05fH
	DB	073H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
?get_simd_str@@YAPEBDI@Z$rtcFrameData DD 01H		; get_simd_str
	DD	00H
	DQ	FLAT:?get_simd_str@@YAPEBDI@Z$rtcVarDesc
?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z$rtcName$0 DB 079H ; thread_y_range
	DB	05fH
	DB	072H
	DB	061H
	DB	06eH
	DB	067H
	DB	065H
	DB	00H
?get_simd_str@@YAPEBDI@Z$rtcVarDesc DD 0b8H		; get_simd_str
	DD	010H
	DQ	FLAT:?get_simd_str@@YAPEBDI@Z$rtcName$0
	ORG $+48
?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z$rtcVarDesc DD 038H ; thread_y_range
	DD	0cH
	DQ	FLAT:?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z$rtcName$0
	ORG $+48
?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z$rtcFrameData DD 01H ; thread_y_range
	DD	00H
	DQ	FLAT:?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z$rtcVarDesc
?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcName$0 DB 079H ; convert_yuy2_to_nv12
	DB	05fH
	DB	072H
	DB	061H
	DB	06eH
	DB	067H
	DB	065H
	DB	00H
?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcName$0 DB 079H ; convert_yuy2_to_nv12_i
	DB	05fH
	DB	072H
	DB	061H
	DB	06eH
	DB	067H
	DB	065H
	DB	00H
?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcVarDesc DD 058H ; convert_yuy2_to_nv12
	DD	0cH
	DQ	FLAT:?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcName$0
	ORG $+48
?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcFrameData DD 01H ; convert_yuy2_to_nv12
	DD	00H
	DQ	FLAT:?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcVarDesc
?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcVarDesc DD 058H ; convert_yuy2_to_nv12_i
	DD	0cH
	DQ	FLAT:?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcName$0
	ORG $+48
?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcFrameData DD 01H ; convert_yuy2_to_nv12_i
	DD	00H
	DQ	FLAT:?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcVarDesc
?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcName$0 DB 079H ; convert_yuy2_to_yuv444
	DB	05fH
	DB	072H
	DB	061H
	DB	06eH
	DB	067H
	DB	065H
	DB	00H
	ORG $+8
?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcVarDesc DD 048H ; convert_yuy2_to_yuv444
	DD	0cH
	DQ	FLAT:?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcName$0
	ORG $+48
?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcFrameData DD 01H ; convert_yuy2_to_yuv444
	DD	00H
	DQ	FLAT:?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcVarDesc
CONST	ENDS
xdata	SEGMENT
$unwind$?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z DD 022a01H
	DD	070137217H
$unwind$?get_simd_str@@YAPEBDI@Z DD 043519H
	DD	027010dH
	DD	060057006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?get_simd_str@@YAPEBDI@Z
	DD	012aH
$cppxdata$?get_simd_str@@YAPEBDI@Z DB 08H
	DD	imagerel $stateUnwindMap$?get_simd_str@@YAPEBDI@Z
	DD	imagerel $ip2state$?get_simd_str@@YAPEBDI@Z
$stateUnwindMap$?get_simd_str@@YAPEBDI@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA
$ip2state$?get_simd_str@@YAPEBDI@Z DB 06H
	DB	00H
	DB	00H
	DB	0eeH
	DB	02H
	DB	'-', 05H
	DB	00H
	ORG $+1
$unwind$?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z DD 033f19H
	DD	07015e219H
	DD	06014H
	DD	imagerel __GSHandlerCheck
	DD	068H
$unwind$?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z DD 044619H
	DD	01f011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
$unwind$?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z DD 044619H
	DD	021011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0f8H
$unwind$?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z DD 044619H
	DD	023011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0100H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::construct<std::pair<unsigned int,char const *>,std::pair<unsigned int,char const *> const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 10 00 00 00	 mov	 ecx, 16
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z ; std::forward<std::pair<unsigned int,char const *> const &>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::construct<std::pair<unsigned int,char const *>,std::pair<unsigned int,char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z PROC ; std::forward<std::pair<unsigned int,char const *> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z ENDP ; std::forward<std::pair<unsigned int,char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z PROC ; std::_Unfancy<std::pair<unsigned int,char const *> >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z ENDP ; std::_Unfancy<std::pair<unsigned int,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Emplace_back<std::pair<unsigned int,char const *> const &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEBU?$pair@IPEBD@std@@@std@@YAAEBU?$pair@IPEBD@0@AEBU10@@Z ; std::forward<std::pair<unsigned int,char const *> const &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@U?$pair@IPEBD@std@@@std@@YAPEAU?$pair@IPEBD@0@PEAU10@@Z ; std::_Unfancy<std::pair<unsigned int,char const *> >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@U?$pair@IPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@IPEBD@std@@@1@QEAU?$pair@IPEBD@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::construct<std::pair<unsigned int,char const *>,std::pair<unsigned int,char const *> const &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 10	 add	 rax, 16
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Emplace_back<std::pair<unsigned int,char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,char const *> > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z PROC ; std::_Get_unwrapped<std::pair<unsigned int,char const *> const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z ENDP ; std::_Get_unwrapped<std::pair<unsigned int,char const *> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<unsigned int,char const *> const >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBU?$pair@IPEBD@std@@@std@@YAPEBU?$pair@IPEBD@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<unsigned int,char const *> const >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1611 :         _Dest += _ULast - _UFirst;
; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@IPEBD@1@AEAV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
  00065	90		 npad	 1

; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 10	 add	 rax, 16
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 11		 je	 SHORT $LN3@Uninitiali

; 1616 :             _Backout._Emplace_back(*_UFirst);

  00082	48 8b 54 24 20	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  00087	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Emplace_back@AEBU?$pair@IPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@IPEBD@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Emplace_back<std::pair<unsigned int,char const *> const &>

; 1617 :         }

  00091	eb d5		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1618 : 
; 1619 :         _Dest = _Backout._Release();

  00093	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00098	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::_Release
  0009d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Dest$[rsp], rax

; 1620 :     }

  000a5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000aa	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >

; 1621 : 
; 1622 :     return _Dest;

  000af	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	48 8b c7	 mov	 rax, rdi
  000cc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<unsigned int,char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG77705
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG77706
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG77707
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG77708
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG77709
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG77710
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Ucopy<std::pair<unsigned int,char const *> const *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEBU?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@YAPEAU?$pair@IPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<unsigned int,char const *> const *,std::allocator<std::pair<unsigned int,char const *> > >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Ucopy<std::pair<unsigned int,char const *> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >::~_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >::~_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z PROC ; std::distance<std::pair<unsigned int,char const *> const *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 c1 f8 04	 sar	 rax, 4

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  0001f	5f		 pop	 rdi
  00020	c3		 ret	 0
??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z ENDP ; std::distance<std::pair<unsigned int,char const *> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<unsigned int,char const *> > const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<unsigned int,char const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z PROC ; std::forward<char const (&)[6]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z ENDP ; std::forward<char const (&)[6]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z PROC ; std::forward<char const (&)[7]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z ENDP ; std::forward<char const (&)[7]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z PROC ; std::forward<char const (&)[4]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z ENDP ; std::forward<char const (&)[4]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z PROC ; std::forward<char const (&)[5]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z ENDP ; std::forward<char const (&)[5]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z PROC ; std::forward<enum <unnamed-enum-NONE> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z ENDP ; std::forward<enum <unnamed-enum-NONE> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned int,char const *> > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEBU?$pair@IPEBD@std@@@std@@YA_JPEBU?$pair@IPEBD@0@0@Z ; std::distance<std::pair<unsigned int,char const *> const *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAPEAU?$pair@IPEBD@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Ucopy<std::pair<unsigned int,char const *> const *>
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >::~_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >::~_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >::~_Tidy_guard<std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1><std::allocator<std::pair<unsigned int,char const *> > const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@IPEBD@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<unsigned int,char const *> > const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1><std::allocator<std::pair<unsigned int,char const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<unsigned int,char const *> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<unsigned int,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ
text$yd	SEGMENT
??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ PROC ; `get_simd_str'::`2'::`dynamic atexit destructor for 'simd_str_list'', COMDAT
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?simd_str_list@?1??get_simd_str@@YAPEBDI@Z@4V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@A
  0001c	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ ENDP ; `get_simd_str'::`2'::`dynamic atexit destructor for 'simd_str_list''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z PROC ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[6],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-NONE> >
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEAY05$$CBD@std@@YAAEAY05$$CBDAEAY05$$CBD@Z ; std::forward<char const (&)[6]>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z ENDP ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[6],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z PROC ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[7],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-NONE> >
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEAY06$$CBD@std@@YAAEAY06$$CBDAEAY06$$CBD@Z ; std::forward<char const (&)[7]>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z ENDP ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[7],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z PROC ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[4],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-NONE> >
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEAY03$$CBD@std@@YAAEAY03$$CBDAEAY03$$CBD@Z ; std::forward<char const (&)[4]>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z ENDP ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[4],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z PROC ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[5],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-NONE>@@@std@@YA$$QEAW4<unnamed-enum-NONE>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-NONE> >
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@AEAY04$$CBD@std@@YAAEAY04$$CBDAEAY04$$CBD@Z ; std::forward<char const (&)[5]>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z ENDP ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[5],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ PROC ; std::initializer_list<std::pair<unsigned int,char const *> >::end, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 39   :         return _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 40   :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ ENDP ; std::initializer_list<std::pair<unsigned int,char const *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ PROC ; std::initializer_list<std::pair<unsigned int,char const *> >::begin, COMDAT

; 34   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 35   :         return _First;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 36   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ ENDP ; std::initializer_list<std::pair<unsigned int,char const *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z PROC ; std::initializer_list<std::pair<unsigned int,char const *> >::initializer_list<std::pair<unsigned int,char const *> >, COMDAT

; 32   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _First_arg$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Last_arg$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z ENDP ; std::initializer_list<std::pair<unsigned int,char const *> >::initializer_list<std::pair<unsigned int,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 04	 sar	 rax, 4
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z ; std::allocator<std::pair<unsigned int,char const *> >::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@CAXXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z ; std::allocator<std::pair<unsigned int,char const *> >::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 6b 44 24 68
	10		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 16
  00093	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a3	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?_Buy_raw@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@YAXPEAU?$pair@IPEBD@0@QEAU10@AEAV?$allocator@U?$pair@IPEBD@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned int,char const *> > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEAU?$pair@IPEBD@2@0@Z ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<unsigned int,char const *> >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::~vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z PROC ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >, COMDAT

; 458  :     vector(initializer_list<_Ty> _Ilist, const _Alloc& _Al = _Alloc())

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 459  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from initializer_list, optional allocator

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  0003e	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@U?$pair@IPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@IPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@IPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<unsigned int,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<unsigned int,char const *> > >,1><std::allocator<std::pair<unsigned int,char const *> > const &>

; 460  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0004b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@IPEBD@std@@@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Getal
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  00060	e8 00 00 00 00	 call	 ??$?0U?$pair@IPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<unsigned int,char const *> >
  00065	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  0006a	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 461  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0006f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00077	4c 8b c0	 mov	 r8, rax
  0007a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0007f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00084	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00089	90		 npad	 1

; 462  :         _Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

  0008a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  00092	e8 00 00 00 00	 call	 ?end@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ ; std::initializer_list<std::pair<unsigned int,char const *> >::end
  00097	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  0009c	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  000a4	e8 00 00 00 00	 call	 ?begin@?$initializer_list@U?$pair@IPEBD@std@@@std@@QEBAPEBU?$pair@IPEBD@2@XZ ; std::initializer_list<std::pair<unsigned int,char const *> >::begin
  000a9	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000af	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  000b4	4c 8b c1	 mov	 r8, rcx
  000b7	48 8b d0	 mov	 rdx, rax
  000ba	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@PEBU?$pair@IPEBD@std@@@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@AEAAXPEBU?$pair@IPEBD@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Range_construct_or_tidy<std::pair<unsigned int,char const *> const *>

; 463  :         _Proxy._Release();

  000c7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000cc	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000d1	90		 npad	 1

; 464  :     }

  000d2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d7	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000dc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e4	48 8b f8	 mov	 rdi, rax
  000e7	48 8b cc	 mov	 rcx, rsp
  000ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z$rtcFrameData
  000f1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f6	48 8b c7	 mov	 rax, rdi
  000f9	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00100	5f		 pop	 rdi
  00101	c3		 ret	 0
??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ENDP ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA PROC ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA ENDP ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA PROC ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z@4HA ENDP ; `std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@IPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@IPEBD@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned int,char const *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z PROC ; std::allocator<std::pair<unsigned int,char const *> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAPEAU?$pair@IPEBD@2@_K@Z ENDP ; std::allocator<std::pair<unsigned int,char const *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z PROC ; std::allocator<std::pair<unsigned int,char const *> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@U?$pair@IPEBD@std@@@std@@QEAAXQEAU?$pair@IPEBD@2@_K@Z ENDP ; std::allocator<std::pair<unsigned int,char const *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ PROC	; std::allocator<std::pair<unsigned int,char const *> >::allocator<std::pair<unsigned int,char const *> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ ENDP	; std::allocator<std::pair<unsigned int,char const *> >::allocator<std::pair<unsigned int,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.cpp
_TEXT	SEGMENT
crop_left$ = 48
crop_up$ = 52
crop_right$ = 56
crop_bottom$ = 60
y_range$ = 72
$T4 = 104
srcLine$ = 120
dstYLine$ = 128
dstULine$ = 136
dstVLine$ = 144
y_width$ = 152
y$5 = 156
srcP$6 = 160
dstY$7 = 168
dstU$8 = 176
dstV$9 = 184
x_fin$10 = 192
x$11 = 196
cxplus$12 = 200
ux0$13 = 204
vx0$14 = 208
ux2$15 = 212
vx2$16 = 216
$T17 = 232
tv157 = 248
__$ArrayPad$ = 256
dst$ = 304
src$ = 312
width$ = 320
src_y_pitch_byte$ = 328
src_uv_pitch_byte$ = 336
dst_y_pitch_byte$ = 344
height$ = 352
dst_height$ = 360
thread_id$ = 368
thread_n$ = 376
crop$ = 384
?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z PROC ; convert_yuy2_to_yuv444

; 538  : static void convert_yuy2_to_yuv444(void **dst, const void **src, int width, int src_y_pitch_byte, int src_uv_pitch_byte, int dst_y_pitch_byte, int height, int dst_height, int thread_id, int thread_n, int *crop) {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR [rsp+304]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 539  :     const int crop_left   = crop[0];

  00046	b8 04 00 00 00	 mov	 eax, 4
  0004b	48 6b c0 00	 imul	 rax, rax, 0
  0004f	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00057	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  0005a	89 44 24 30	 mov	 DWORD PTR crop_left$[rsp], eax

; 540  :     const int crop_up     = crop[1];

  0005e	b8 04 00 00 00	 mov	 eax, 4
  00063	48 6b c0 01	 imul	 rax, rax, 1
  00067	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  0006f	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  00072	89 44 24 34	 mov	 DWORD PTR crop_up$[rsp], eax

; 541  :     const int crop_right  = crop[2];

  00076	b8 04 00 00 00	 mov	 eax, 4
  0007b	48 6b c0 02	 imul	 rax, rax, 2
  0007f	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00087	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  0008a	89 44 24 38	 mov	 DWORD PTR crop_right$[rsp], eax

; 542  :     const int crop_bottom = crop[3];

  0008e	b8 04 00 00 00	 mov	 eax, 4
  00093	48 6b c0 03	 imul	 rax, rax, 3
  00097	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  0009f	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  000a2	89 44 24 3c	 mov	 DWORD PTR crop_bottom$[rsp], eax

; 543  :     const auto y_range = thread_y_range(crop_up, height - crop_bottom, thread_id, thread_n);

  000a6	8b 44 24 3c	 mov	 eax, DWORD PTR crop_bottom$[rsp]
  000aa	8b 8c 24 60 01
	00 00		 mov	 ecx, DWORD PTR height$[rsp]
  000b1	2b c8		 sub	 ecx, eax
  000b3	8b c1		 mov	 eax, ecx
  000b5	8b 8c 24 78 01
	00 00		 mov	 ecx, DWORD PTR thread_n$[rsp]
  000bc	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  000c0	44 8b 8c 24 70
	01 00 00	 mov	 r9d, DWORD PTR thread_id$[rsp]
  000c8	44 8b c0	 mov	 r8d, eax
  000cb	8b 54 24 34	 mov	 edx, DWORD PTR crop_up$[rsp]
  000cf	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  000d7	e8 00 00 00 00	 call	 ?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z ; thread_y_range
  000dc	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  000e1	48 8b f9	 mov	 rdi, rcx
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 0c 00 00 00	 mov	 ecx, 12
  000ec	f3 a4		 rep movsb
  000ee	48 8d 44 24 48	 lea	 rax, QWORD PTR y_range$[rsp]
  000f3	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T4[rsp]
  000f8	48 8b f8	 mov	 rdi, rax
  000fb	48 8b f1	 mov	 rsi, rcx
  000fe	b9 0c 00 00 00	 mov	 ecx, 12
  00103	f3 a4		 rep movsb

; 544  :     uint8_t *srcLine = (uint8_t *)src[0] + src_y_pitch_byte * y_range.start_src + crop_left * 2;

  00105	b8 08 00 00 00	 mov	 eax, 8
  0010a	48 6b c0 00	 imul	 rax, rax, 0
  0010e	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  00115	0f af 4c 24 48	 imul	 ecx, DWORD PTR y_range$[rsp]
  0011a	48 63 c9	 movsxd	 rcx, ecx
  0011d	48 8b 94 24 38
	01 00 00	 mov	 rdx, QWORD PTR src$[rsp]
  00125	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  00129	48 03 c1	 add	 rax, rcx
  0012c	8b 4c 24 30	 mov	 ecx, DWORD PTR crop_left$[rsp]
  00130	d1 e1		 shl	 ecx, 1
  00132	48 63 c9	 movsxd	 rcx, ecx
  00135	48 03 c1	 add	 rax, rcx
  00138	48 89 44 24 78	 mov	 QWORD PTR srcLine$[rsp], rax

; 545  :     uint8_t *dstYLine = (uint8_t *)dst[0] + dst_y_pitch_byte * y_range.start_dst;

  0013d	b8 08 00 00 00	 mov	 eax, 8
  00142	48 6b c0 00	 imul	 rax, rax, 0
  00146	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  0014d	0f af 4c 24 4c	 imul	 ecx, DWORD PTR y_range$[rsp+4]
  00152	48 63 c9	 movsxd	 rcx, ecx
  00155	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR dst$[rsp]
  0015d	48 03 0c 02	 add	 rcx, QWORD PTR [rdx+rax]
  00161	48 8b c1	 mov	 rax, rcx
  00164	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR dstYLine$[rsp], rax

; 546  :     uint8_t *dstULine = (uint8_t *)dst[1] + dst_y_pitch_byte * y_range.start_dst;

  0016c	b8 08 00 00 00	 mov	 eax, 8
  00171	48 6b c0 01	 imul	 rax, rax, 1
  00175	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  0017c	0f af 4c 24 4c	 imul	 ecx, DWORD PTR y_range$[rsp+4]
  00181	48 63 c9	 movsxd	 rcx, ecx
  00184	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR dst$[rsp]
  0018c	48 03 0c 02	 add	 rcx, QWORD PTR [rdx+rax]
  00190	48 8b c1	 mov	 rax, rcx
  00193	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR dstULine$[rsp], rax

; 547  :     uint8_t *dstVLine = (uint8_t *)dst[2] + dst_y_pitch_byte * y_range.start_dst;

  0019b	b8 08 00 00 00	 mov	 eax, 8
  001a0	48 6b c0 02	 imul	 rax, rax, 2
  001a4	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  001ab	0f af 4c 24 4c	 imul	 ecx, DWORD PTR y_range$[rsp+4]
  001b0	48 63 c9	 movsxd	 rcx, ecx
  001b3	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR dst$[rsp]
  001bb	48 03 0c 02	 add	 rcx, QWORD PTR [rdx+rax]
  001bf	48 8b c1	 mov	 rax, rcx
  001c2	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR dstVLine$[rsp], rax

; 548  :     const int y_width = width - crop_right - crop_left;

  001ca	8b 44 24 38	 mov	 eax, DWORD PTR crop_right$[rsp]
  001ce	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR width$[rsp]
  001d5	2b c8		 sub	 ecx, eax
  001d7	8b c1		 mov	 eax, ecx
  001d9	2b 44 24 30	 sub	 eax, DWORD PTR crop_left$[rsp]
  001dd	89 84 24 98 00
	00 00		 mov	 DWORD PTR y_width$[rsp], eax

; 549  :     for (int y = 0; y < y_range.len; y++, srcLine += src_y_pitch_byte, dstYLine += dst_y_pitch_byte, dstULine += dst_y_pitch_byte, dstVLine += dst_y_pitch_byte) {

  001e4	c7 84 24 9c 00
	00 00 00 00 00
	00		 mov	 DWORD PTR y$5[rsp], 0
  001ef	e9 82 00 00 00	 jmp	 $LN4@convert_yu
$LN2@convert_yu:
  001f4	8b 84 24 9c 00
	00 00		 mov	 eax, DWORD PTR y$5[rsp]
  001fb	ff c0		 inc	 eax
  001fd	89 84 24 9c 00
	00 00		 mov	 DWORD PTR y$5[rsp], eax
  00204	48 63 84 24 48
	01 00 00	 movsxd	 rax, DWORD PTR src_y_pitch_byte$[rsp]
  0020c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR srcLine$[rsp]
  00211	48 03 c8	 add	 rcx, rax
  00214	48 8b c1	 mov	 rax, rcx
  00217	48 89 44 24 78	 mov	 QWORD PTR srcLine$[rsp], rax
  0021c	48 63 84 24 58
	01 00 00	 movsxd	 rax, DWORD PTR dst_y_pitch_byte$[rsp]
  00224	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR dstYLine$[rsp]
  0022c	48 03 c8	 add	 rcx, rax
  0022f	48 8b c1	 mov	 rax, rcx
  00232	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR dstYLine$[rsp], rax
  0023a	48 63 84 24 58
	01 00 00	 movsxd	 rax, DWORD PTR dst_y_pitch_byte$[rsp]
  00242	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR dstULine$[rsp]
  0024a	48 03 c8	 add	 rcx, rax
  0024d	48 8b c1	 mov	 rax, rcx
  00250	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR dstULine$[rsp], rax
  00258	48 63 84 24 58
	01 00 00	 movsxd	 rax, DWORD PTR dst_y_pitch_byte$[rsp]
  00260	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR dstVLine$[rsp]
  00268	48 03 c8	 add	 rcx, rax
  0026b	48 8b c1	 mov	 rax, rcx
  0026e	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR dstVLine$[rsp], rax
$LN4@convert_yu:
  00276	8b 44 24 50	 mov	 eax, DWORD PTR y_range$[rsp+8]
  0027a	39 84 24 9c 00
	00 00		 cmp	 DWORD PTR y$5[rsp], eax
  00281	0f 8d 6b 02 00
	00		 jge	 $LN3@convert_yu

; 550  :         uint8_t *srcP = srcLine;

  00287	48 8b 44 24 78	 mov	 rax, QWORD PTR srcLine$[rsp]
  0028c	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR srcP$6[rsp], rax

; 551  :         uint8_t *dstY = dstYLine;

  00294	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR dstYLine$[rsp]
  0029c	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR dstY$7[rsp], rax

; 552  :         uint8_t *dstU = dstULine;

  002a4	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR dstULine$[rsp]
  002ac	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR dstU$8[rsp], rax

; 553  :         uint8_t *dstV = dstVLine;

  002b4	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR dstVLine$[rsp]
  002bc	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR dstV$9[rsp], rax

; 554  :         const int x_fin = width - crop_right - crop_left;

  002c4	8b 44 24 38	 mov	 eax, DWORD PTR crop_right$[rsp]
  002c8	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR width$[rsp]
  002cf	2b c8		 sub	 ecx, eax
  002d1	8b c1		 mov	 eax, ecx
  002d3	2b 44 24 30	 sub	 eax, DWORD PTR crop_left$[rsp]
  002d7	89 84 24 c0 00
	00 00		 mov	 DWORD PTR x_fin$10[rsp], eax

; 555  :         for (int x = 0; x < x_fin; x += 2, srcP += 4, dstY += 2, dstU += 2, dstV += 2) {

  002de	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR x$11[rsp], 0
  002e9	eb 61		 jmp	 SHORT $LN7@convert_yu
$LN5@convert_yu:
  002eb	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR x$11[rsp]
  002f2	83 c0 02	 add	 eax, 2
  002f5	89 84 24 c4 00
	00 00		 mov	 DWORD PTR x$11[rsp], eax
  002fc	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR srcP$6[rsp]
  00304	48 83 c0 04	 add	 rax, 4
  00308	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR srcP$6[rsp], rax
  00310	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR dstY$7[rsp]
  00318	48 83 c0 02	 add	 rax, 2
  0031c	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR dstY$7[rsp], rax
  00324	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR dstU$8[rsp]
  0032c	48 83 c0 02	 add	 rax, 2
  00330	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR dstU$8[rsp], rax
  00338	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR dstV$9[rsp]
  00340	48 83 c0 02	 add	 rax, 2
  00344	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR dstV$9[rsp], rax
$LN7@convert_yu:
  0034c	8b 84 24 c0 00
	00 00		 mov	 eax, DWORD PTR x_fin$10[rsp]
  00353	39 84 24 c4 00
	00 00		 cmp	 DWORD PTR x$11[rsp], eax
  0035a	0f 8d 8d 01 00
	00		 jge	 $LN6@convert_yu

; 556  :             int cxplus = (x + 2 < x_fin) ? 4 : 0;

  00360	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR x$11[rsp]
  00367	83 c0 02	 add	 eax, 2
  0036a	3b 84 24 c0 00
	00 00		 cmp	 eax, DWORD PTR x_fin$10[rsp]
  00371	7d 0d		 jge	 SHORT $LN9@convert_yu
  00373	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR tv157[rsp], 4
  0037e	eb 0b		 jmp	 SHORT $LN10@convert_yu
$LN9@convert_yu:
  00380	c7 84 24 f8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv157[rsp], 0
$LN10@convert_yu:
  0038b	8b 84 24 f8 00
	00 00		 mov	 eax, DWORD PTR tv157[rsp]
  00392	89 84 24 c8 00
	00 00		 mov	 DWORD PTR cxplus$12[rsp], eax

; 557  :             dstY[0] = srcP[0];

  00399	b8 01 00 00 00	 mov	 eax, 1
  0039e	48 6b c0 00	 imul	 rax, rax, 0
  003a2	b9 01 00 00 00	 mov	 ecx, 1
  003a7	48 6b c9 00	 imul	 rcx, rcx, 0
  003ab	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR dstY$7[rsp]
  003b3	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR srcP$6[rsp]
  003bb	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  003bf	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 558  :             dstY[1] = srcP[2];

  003c2	b8 01 00 00 00	 mov	 eax, 1
  003c7	48 6b c0 02	 imul	 rax, rax, 2
  003cb	b9 01 00 00 00	 mov	 ecx, 1
  003d0	48 6b c9 01	 imul	 rcx, rcx, 1
  003d4	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR dstY$7[rsp]
  003dc	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR srcP$6[rsp]
  003e4	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  003e8	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 559  : 
; 560  :             int ux0 = srcP[1];

  003eb	b8 01 00 00 00	 mov	 eax, 1
  003f0	48 6b c0 01	 imul	 rax, rax, 1
  003f4	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR srcP$6[rsp]
  003fc	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00400	89 84 24 cc 00
	00 00		 mov	 DWORD PTR ux0$13[rsp], eax

; 561  :             int vx0 = srcP[3];

  00407	b8 01 00 00 00	 mov	 eax, 1
  0040c	48 6b c0 03	 imul	 rax, rax, 3
  00410	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR srcP$6[rsp]
  00418	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0041c	89 84 24 d0 00
	00 00		 mov	 DWORD PTR vx0$14[rsp], eax

; 562  :             int ux2 = srcP[1+cxplus];

  00423	8b 84 24 c8 00
	00 00		 mov	 eax, DWORD PTR cxplus$12[rsp]
  0042a	ff c0		 inc	 eax
  0042c	48 98		 cdqe
  0042e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR srcP$6[rsp]
  00436	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  0043a	89 84 24 d4 00
	00 00		 mov	 DWORD PTR ux2$15[rsp], eax

; 563  :             int vx2 = srcP[3+cxplus];

  00441	8b 84 24 c8 00
	00 00		 mov	 eax, DWORD PTR cxplus$12[rsp]
  00448	83 c0 03	 add	 eax, 3
  0044b	48 98		 cdqe
  0044d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR srcP$6[rsp]
  00455	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00459	89 84 24 d8 00
	00 00		 mov	 DWORD PTR vx2$16[rsp], eax

; 564  :             dstU[0] = (uint8_t)ux0;

  00460	b8 01 00 00 00	 mov	 eax, 1
  00465	48 6b c0 00	 imul	 rax, rax, 0
  00469	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR dstU$8[rsp]
  00471	0f b6 94 24 cc
	00 00 00	 movzx	 edx, BYTE PTR ux0$13[rsp]
  00479	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 565  :             dstU[1] = (uint8_t)((ux0 + ux2 + 1) >> 1);

  0047c	8b 84 24 cc 00
	00 00		 mov	 eax, DWORD PTR ux0$13[rsp]
  00483	8b 8c 24 d4 00
	00 00		 mov	 ecx, DWORD PTR ux2$15[rsp]
  0048a	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  0048e	d1 f8		 sar	 eax, 1
  00490	b9 01 00 00 00	 mov	 ecx, 1
  00495	48 6b c9 01	 imul	 rcx, rcx, 1
  00499	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstU$8[rsp]
  004a1	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 566  :             dstV[0] = (uint8_t)vx0;

  004a4	b8 01 00 00 00	 mov	 eax, 1
  004a9	48 6b c0 00	 imul	 rax, rax, 0
  004ad	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR dstV$9[rsp]
  004b5	0f b6 94 24 d0
	00 00 00	 movzx	 edx, BYTE PTR vx0$14[rsp]
  004bd	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 567  :             dstV[1] = (uint8_t)((vx2 + vx2 + 1) >> 1);

  004c0	8b 84 24 d8 00
	00 00		 mov	 eax, DWORD PTR vx2$16[rsp]
  004c7	8b 8c 24 d8 00
	00 00		 mov	 ecx, DWORD PTR vx2$16[rsp]
  004ce	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  004d2	d1 f8		 sar	 eax, 1
  004d4	b9 01 00 00 00	 mov	 ecx, 1
  004d9	48 6b c9 01	 imul	 rcx, rcx, 1
  004dd	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR dstV$9[rsp]
  004e5	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 568  :         }

  004e8	e9 fe fd ff ff	 jmp	 $LN5@convert_yu
$LN6@convert_yu:

; 569  :     }

  004ed	e9 02 fd ff ff	 jmp	 $LN2@convert_yu
$LN3@convert_yu:

; 570  : }

  004f2	48 8b cc	 mov	 rcx, rsp
  004f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcFrameData
  004fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00501	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00509	48 33 cc	 xor	 rcx, rsp
  0050c	e8 00 00 00 00	 call	 __security_check_cookie
  00511	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00518	5f		 pop	 rdi
  00519	5e		 pop	 rsi
  0051a	c3		 ret	 0
?convert_yuy2_to_yuv444@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z ENDP ; convert_yuy2_to_yuv444
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.cpp
_TEXT	SEGMENT
crop_left$ = 48
crop_up$ = 52
crop_right$ = 56
crop_bottom$ = 60
dst$ = 64
y_range$ = 88
$T4 = 120
src$ = 136
srcFrame$ = 144
dstYFrame$ = 152
dstCFrame$ = 160
y$5 = 168
dstY$6 = 176
dstC$7 = 184
srcP$8 = 192
x_fin$9 = 200
x$10 = 204
$T11 = 216
tv275 = 232
tv298 = 236
tv321 = 240
tv344 = 244
__$ArrayPad$ = 248
dst_array$ = 288
src_array$ = 296
width$ = 304
src_y_pitch_byte$ = 312
src_uv_pitch_byte$ = 320
dst_y_pitch_byte$ = 328
height$ = 336
dst_height$ = 344
thread_id$ = 352
thread_n$ = 360
crop$ = 368
?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z PROC ; convert_yuy2_to_nv12_i

; 223  : void convert_yuy2_to_nv12_i(void **dst_array, const void **src_array, int width, int src_y_pitch_byte, int src_uv_pitch_byte, int dst_y_pitch_byte, int height, int dst_height, int thread_id, int thread_n, int *crop) {

$LN9:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR [rsp+288]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 224  :     int crop_left   = crop[0];

  00046	b8 04 00 00 00	 mov	 eax, 4
  0004b	48 6b c0 00	 imul	 rax, rax, 0
  0004f	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00057	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  0005a	89 44 24 30	 mov	 DWORD PTR crop_left$[rsp], eax

; 225  :     int crop_up     = crop[1];

  0005e	b8 04 00 00 00	 mov	 eax, 4
  00063	48 6b c0 01	 imul	 rax, rax, 1
  00067	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  0006f	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  00072	89 44 24 34	 mov	 DWORD PTR crop_up$[rsp], eax

; 226  :     int crop_right  = crop[2];

  00076	b8 04 00 00 00	 mov	 eax, 4
  0007b	48 6b c0 02	 imul	 rax, rax, 2
  0007f	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00087	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  0008a	89 44 24 38	 mov	 DWORD PTR crop_right$[rsp], eax

; 227  :     int crop_bottom = crop[3];

  0008e	b8 04 00 00 00	 mov	 eax, 4
  00093	48 6b c0 03	 imul	 rax, rax, 3
  00097	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  0009f	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  000a2	89 44 24 3c	 mov	 DWORD PTR crop_bottom$[rsp], eax

; 228  :     void *dst = dst_array[0];

  000a6	b8 08 00 00 00	 mov	 eax, 8
  000ab	48 6b c0 00	 imul	 rax, rax, 0
  000af	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR dst_array$[rsp]
  000b7	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  000bb	48 89 44 24 40	 mov	 QWORD PTR dst$[rsp], rax

; 229  :     const auto y_range = thread_y_range(crop_up, height - crop_bottom, thread_id, thread_n);

  000c0	8b 44 24 3c	 mov	 eax, DWORD PTR crop_bottom$[rsp]
  000c4	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR height$[rsp]
  000cb	2b c8		 sub	 ecx, eax
  000cd	8b c1		 mov	 eax, ecx
  000cf	8b 8c 24 68 01
	00 00		 mov	 ecx, DWORD PTR thread_n$[rsp]
  000d6	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  000da	44 8b 8c 24 60
	01 00 00	 mov	 r9d, DWORD PTR thread_id$[rsp]
  000e2	44 8b c0	 mov	 r8d, eax
  000e5	8b 54 24 34	 mov	 edx, DWORD PTR crop_up$[rsp]
  000e9	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  000f1	e8 00 00 00 00	 call	 ?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z ; thread_y_range
  000f6	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  000fb	48 8b f9	 mov	 rdi, rcx
  000fe	48 8b f0	 mov	 rsi, rax
  00101	b9 0c 00 00 00	 mov	 ecx, 12
  00106	f3 a4		 rep movsb
  00108	48 8d 44 24 58	 lea	 rax, QWORD PTR y_range$[rsp]
  0010d	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  00112	48 8b f8	 mov	 rdi, rax
  00115	48 8b f1	 mov	 rsi, rcx
  00118	b9 0c 00 00 00	 mov	 ecx, 12
  0011d	f3 a4		 rep movsb

; 230  :     const void *src = src_array[0];

  0011f	b8 08 00 00 00	 mov	 eax, 8
  00124	48 6b c0 00	 imul	 rax, rax, 0
  00128	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR src_array$[rsp]
  00130	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00134	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR src$[rsp], rax

; 231  :     uint8_t *srcFrame = (uint8_t *)src;

  0013c	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR src$[rsp]
  00144	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR srcFrame$[rsp], rax

; 232  :     uint8_t *dstYFrame = (uint8_t *)dst;

  0014c	48 8b 44 24 40	 mov	 rax, QWORD PTR dst$[rsp]
  00151	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR dstYFrame$[rsp], rax

; 233  :     uint8_t *dstCFrame = dstYFrame + dst_y_pitch_byte * dst_height;

  00159	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  00160	0f af 84 24 58
	01 00 00	 imul	 eax, DWORD PTR dst_height$[rsp]
  00168	48 98		 cdqe
  0016a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dstYFrame$[rsp]
  00172	48 03 c8	 add	 rcx, rax
  00175	48 8b c1	 mov	 rax, rcx
  00178	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR dstCFrame$[rsp], rax

; 234  :     for (int y = y_range.start_dst; y < (y_range.start_dst + y_range.len); y += 4) {

  00180	8b 44 24 5c	 mov	 eax, DWORD PTR y_range$[rsp+4]
  00184	89 84 24 a8 00
	00 00		 mov	 DWORD PTR y$5[rsp], eax
  0018b	eb 11		 jmp	 SHORT $LN4@convert_yu
$LN2@convert_yu:
  0018d	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR y$5[rsp]
  00194	83 c0 04	 add	 eax, 4
  00197	89 84 24 a8 00
	00 00		 mov	 DWORD PTR y$5[rsp], eax
$LN4@convert_yu:
  0019e	8b 44 24 60	 mov	 eax, DWORD PTR y_range$[rsp+8]
  001a2	8b 4c 24 5c	 mov	 ecx, DWORD PTR y_range$[rsp+4]
  001a6	03 c8		 add	 ecx, eax
  001a8	8b c1		 mov	 eax, ecx
  001aa	39 84 24 a8 00
	00 00		 cmp	 DWORD PTR y$5[rsp], eax
  001b1	0f 8d 29 04 00
	00		 jge	 $LN3@convert_yu

; 235  :         uint8_t *dstY = dstYFrame +   dst_y_pitch_byte * y;

  001b7	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  001be	0f af 84 24 a8
	00 00 00	 imul	 eax, DWORD PTR y$5[rsp]
  001c6	48 98		 cdqe
  001c8	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dstYFrame$[rsp]
  001d0	48 03 c8	 add	 rcx, rax
  001d3	48 8b c1	 mov	 rax, rcx
  001d6	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR dstY$6[rsp], rax

; 236  :         uint8_t *dstC = dstCFrame + ((dst_y_pitch_byte * y) >> 1);

  001de	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  001e5	0f af 84 24 a8
	00 00 00	 imul	 eax, DWORD PTR y$5[rsp]
  001ed	d1 f8		 sar	 eax, 1
  001ef	48 98		 cdqe
  001f1	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR dstCFrame$[rsp]
  001f9	48 03 c8	 add	 rcx, rax
  001fc	48 8b c1	 mov	 rax, rcx
  001ff	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR dstC$7[rsp], rax

; 237  :         uint8_t *srcP = srcFrame  +   src_y_pitch_byte * (y + crop_up) + crop_left;

  00207	8b 44 24 34	 mov	 eax, DWORD PTR crop_up$[rsp]
  0020b	8b 8c 24 a8 00
	00 00		 mov	 ecx, DWORD PTR y$5[rsp]
  00212	03 c8		 add	 ecx, eax
  00214	8b c1		 mov	 eax, ecx
  00216	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  0021d	0f af c8	 imul	 ecx, eax
  00220	8b c1		 mov	 eax, ecx
  00222	48 98		 cdqe
  00224	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR srcFrame$[rsp]
  0022c	48 03 c8	 add	 rcx, rax
  0022f	48 8b c1	 mov	 rax, rcx
  00232	48 63 4c 24 30	 movsxd	 rcx, DWORD PTR crop_left$[rsp]
  00237	48 03 c1	 add	 rax, rcx
  0023a	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR srcP$8[rsp], rax

; 238  :         const int x_fin = width - crop_right - crop_left;

  00242	8b 44 24 38	 mov	 eax, DWORD PTR crop_right$[rsp]
  00246	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR width$[rsp]
  0024d	2b c8		 sub	 ecx, eax
  0024f	8b c1		 mov	 eax, ecx
  00251	2b 44 24 30	 sub	 eax, DWORD PTR crop_left$[rsp]
  00255	89 84 24 c8 00
	00 00		 mov	 DWORD PTR x_fin$9[rsp], eax

; 239  :         for (int x = 0; x < x_fin; x += 2, dstY += 2, dstC += 2, srcP += 4) {

  0025c	c7 84 24 cc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR x$10[rsp], 0
  00267	eb 4d		 jmp	 SHORT $LN7@convert_yu
$LN5@convert_yu:
  00269	8b 84 24 cc 00
	00 00		 mov	 eax, DWORD PTR x$10[rsp]
  00270	83 c0 02	 add	 eax, 2
  00273	89 84 24 cc 00
	00 00		 mov	 DWORD PTR x$10[rsp], eax
  0027a	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR dstY$6[rsp]
  00282	48 83 c0 02	 add	 rax, 2
  00286	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR dstY$6[rsp], rax
  0028e	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR dstC$7[rsp]
  00296	48 83 c0 02	 add	 rax, 2
  0029a	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR dstC$7[rsp], rax
  002a2	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR srcP$8[rsp]
  002aa	48 83 c0 04	 add	 rax, 4
  002ae	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR srcP$8[rsp], rax
$LN7@convert_yu:
  002b6	8b 84 24 c8 00
	00 00		 mov	 eax, DWORD PTR x_fin$9[rsp]
  002bd	39 84 24 cc 00
	00 00		 cmp	 DWORD PTR x$10[rsp], eax
  002c4	0f 8d 11 03 00
	00		 jge	 $LN6@convert_yu

; 240  :             dstY[0*dst_y_pitch_byte   + 0] = srcP[0*src_y_pitch_byte + 0];

  002ca	6b 84 24 38 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  002d2	48 98		 cdqe
  002d4	6b 8c 24 48 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  002dc	48 63 c9	 movsxd	 rcx, ecx
  002df	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  002e7	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  002ef	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  002f3	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 241  :             dstY[0*dst_y_pitch_byte   + 1] = srcP[0*src_y_pitch_byte + 2];

  002f6	6b 84 24 38 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  002fe	83 c0 02	 add	 eax, 2
  00301	48 98		 cdqe
  00303	6b 8c 24 48 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  0030b	ff c1		 inc	 ecx
  0030d	48 63 c9	 movsxd	 rcx, ecx
  00310	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  00318	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  00320	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  00324	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 242  :             dstY[1*dst_y_pitch_byte   + 0] = srcP[1*src_y_pitch_byte + 0];

  00327	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  0032e	48 98		 cdqe
  00330	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  00337	48 63 c9	 movsxd	 rcx, ecx
  0033a	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  00342	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  0034a	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  0034e	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 243  :             dstY[1*dst_y_pitch_byte   + 1] = srcP[1*src_y_pitch_byte + 2];

  00351	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  00358	83 c0 02	 add	 eax, 2
  0035b	48 98		 cdqe
  0035d	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  00364	ff c1		 inc	 ecx
  00366	48 63 c9	 movsxd	 rcx, ecx
  00369	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  00371	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  00379	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  0037d	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 244  :             dstY[2*dst_y_pitch_byte   + 0] = srcP[2*src_y_pitch_byte + 0];

  00380	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  00387	03 c0		 add	 eax, eax
  00389	48 98		 cdqe
  0038b	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  00392	03 c9		 add	 ecx, ecx
  00394	48 63 c9	 movsxd	 rcx, ecx
  00397	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  0039f	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  003a7	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  003ab	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 245  :             dstY[2*dst_y_pitch_byte   + 1] = srcP[2*src_y_pitch_byte + 2];

  003ae	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  003b5	8d 44 00 02	 lea	 eax, DWORD PTR [rax+rax+2]
  003b9	48 98		 cdqe
  003bb	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  003c2	8d 4c 09 01	 lea	 ecx, DWORD PTR [rcx+rcx+1]
  003c6	48 63 c9	 movsxd	 rcx, ecx
  003c9	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  003d1	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  003d9	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  003dd	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 246  :             dstY[3*dst_y_pitch_byte   + 0] = srcP[3*src_y_pitch_byte + 0];

  003e0	6b 84 24 38 01
	00 00 03	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 3
  003e8	48 98		 cdqe
  003ea	6b 8c 24 48 01
	00 00 03	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 3
  003f2	48 63 c9	 movsxd	 rcx, ecx
  003f5	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  003fd	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  00405	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  00409	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 247  :             dstY[3*dst_y_pitch_byte   + 1] = srcP[3*src_y_pitch_byte + 2];

  0040c	6b 84 24 38 01
	00 00 03	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 3
  00414	83 c0 02	 add	 eax, 2
  00417	48 98		 cdqe
  00419	6b 8c 24 48 01
	00 00 03	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 3
  00421	ff c1		 inc	 ecx
  00423	48 63 c9	 movsxd	 rcx, ecx
  00426	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  0042e	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  00436	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  0043a	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 248  :             dstC[0*dst_y_pitch_byte/2 + 0] =(srcP[0*src_y_pitch_byte + 1] * 3 + srcP[2*src_y_pitch_byte + 1] * 1 + 2)>>2;

  0043d	6b 84 24 38 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  00445	ff c0		 inc	 eax
  00447	48 98		 cdqe
  00449	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR srcP$8[rsp]
  00451	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00455	6b c0 03	 imul	 eax, eax, 3
  00458	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  0045f	8d 4c 09 01	 lea	 ecx, DWORD PTR [rcx+rcx+1]
  00463	48 63 c9	 movsxd	 rcx, ecx
  00466	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR srcP$8[rsp]
  0046e	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [rdx+rcx]
  00472	8d 44 08 02	 lea	 eax, DWORD PTR [rax+rcx+2]
  00476	c1 f8 02	 sar	 eax, 2
  00479	89 84 24 e8 00
	00 00		 mov	 DWORD PTR tv275[rsp], eax
  00480	6b 8c 24 48 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  00488	8b c1		 mov	 eax, ecx
  0048a	99		 cdq
  0048b	2b c2		 sub	 eax, edx
  0048d	d1 f8		 sar	 eax, 1
  0048f	48 98		 cdqe
  00491	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR dstC$7[rsp]
  00499	8b 94 24 e8 00
	00 00		 mov	 edx, DWORD PTR tv275[rsp]
  004a0	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 249  :             dstC[0*dst_y_pitch_byte/2 + 1] =(srcP[0*src_y_pitch_byte + 3] * 3 + srcP[2*src_y_pitch_byte + 3] * 1 + 2)>>2;

  004a3	6b 84 24 38 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  004ab	83 c0 03	 add	 eax, 3
  004ae	48 98		 cdqe
  004b0	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR srcP$8[rsp]
  004b8	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  004bc	6b c0 03	 imul	 eax, eax, 3
  004bf	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  004c6	8d 4c 09 03	 lea	 ecx, DWORD PTR [rcx+rcx+3]
  004ca	48 63 c9	 movsxd	 rcx, ecx
  004cd	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR srcP$8[rsp]
  004d5	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [rdx+rcx]
  004d9	8d 44 08 02	 lea	 eax, DWORD PTR [rax+rcx+2]
  004dd	c1 f8 02	 sar	 eax, 2
  004e0	89 84 24 ec 00
	00 00		 mov	 DWORD PTR tv298[rsp], eax
  004e7	6b 8c 24 48 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  004ef	8b c1		 mov	 eax, ecx
  004f1	99		 cdq
  004f2	2b c2		 sub	 eax, edx
  004f4	d1 f8		 sar	 eax, 1
  004f6	ff c0		 inc	 eax
  004f8	48 98		 cdqe
  004fa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR dstC$7[rsp]
  00502	8b 94 24 ec 00
	00 00		 mov	 edx, DWORD PTR tv298[rsp]
  00509	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 250  :             dstC[1*dst_y_pitch_byte/2 + 0] =(srcP[1*src_y_pitch_byte + 1] * 1 + srcP[3*src_y_pitch_byte + 1] * 3 + 2)>>2;

  0050c	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  00513	ff c0		 inc	 eax
  00515	48 98		 cdqe
  00517	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR srcP$8[rsp]
  0051f	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00523	6b 8c 24 38 01
	00 00 03	 imul	 ecx, DWORD PTR src_y_pitch_byte$[rsp], 3
  0052b	ff c1		 inc	 ecx
  0052d	48 63 c9	 movsxd	 rcx, ecx
  00530	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR srcP$8[rsp]
  00538	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [rdx+rcx]
  0053c	6b c9 03	 imul	 ecx, ecx, 3
  0053f	8d 44 08 02	 lea	 eax, DWORD PTR [rax+rcx+2]
  00543	c1 f8 02	 sar	 eax, 2
  00546	89 84 24 f0 00
	00 00		 mov	 DWORD PTR tv321[rsp], eax
  0054d	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  00554	8b c1		 mov	 eax, ecx
  00556	99		 cdq
  00557	2b c2		 sub	 eax, edx
  00559	d1 f8		 sar	 eax, 1
  0055b	48 98		 cdqe
  0055d	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR dstC$7[rsp]
  00565	8b 94 24 f0 00
	00 00		 mov	 edx, DWORD PTR tv321[rsp]
  0056c	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 251  :             dstC[1*dst_y_pitch_byte/2 + 1] =(srcP[1*src_y_pitch_byte + 3] * 1 + srcP[3*src_y_pitch_byte + 3] * 3 + 2)>>2;

  0056f	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  00576	83 c0 03	 add	 eax, 3
  00579	48 98		 cdqe
  0057b	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR srcP$8[rsp]
  00583	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00587	6b 8c 24 38 01
	00 00 03	 imul	 ecx, DWORD PTR src_y_pitch_byte$[rsp], 3
  0058f	83 c1 03	 add	 ecx, 3
  00592	48 63 c9	 movsxd	 rcx, ecx
  00595	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR srcP$8[rsp]
  0059d	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [rdx+rcx]
  005a1	6b c9 03	 imul	 ecx, ecx, 3
  005a4	8d 44 08 02	 lea	 eax, DWORD PTR [rax+rcx+2]
  005a8	c1 f8 02	 sar	 eax, 2
  005ab	89 84 24 f4 00
	00 00		 mov	 DWORD PTR tv344[rsp], eax
  005b2	8b 8c 24 48 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  005b9	8b c1		 mov	 eax, ecx
  005bb	99		 cdq
  005bc	2b c2		 sub	 eax, edx
  005be	d1 f8		 sar	 eax, 1
  005c0	ff c0		 inc	 eax
  005c2	48 98		 cdqe
  005c4	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR dstC$7[rsp]
  005cc	8b 94 24 f4 00
	00 00		 mov	 edx, DWORD PTR tv344[rsp]
  005d3	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 252  :         }

  005d6	e9 8e fc ff ff	 jmp	 $LN5@convert_yu
$LN6@convert_yu:

; 253  :     }

  005db	e9 ad fb ff ff	 jmp	 $LN2@convert_yu
$LN3@convert_yu:

; 254  : }

  005e0	48 8b cc	 mov	 rcx, rsp
  005e3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcFrameData
  005ea	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  005ef	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  005f7	48 33 cc	 xor	 rcx, rsp
  005fa	e8 00 00 00 00	 call	 __security_check_cookie
  005ff	48 81 c4 08 01
	00 00		 add	 rsp, 264		; 00000108H
  00606	5f		 pop	 rdi
  00607	5e		 pop	 rsi
  00608	c3		 ret	 0
?convert_yuy2_to_nv12_i@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z ENDP ; convert_yuy2_to_nv12_i
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.cpp
_TEXT	SEGMENT
crop_left$ = 48
crop_up$ = 52
crop_right$ = 56
crop_bottom$ = 60
dst$ = 64
src$ = 72
y_range$ = 88
$T4 = 120
srcFrame$ = 136
dstYFrame$ = 144
dstCFrame$ = 152
y$5 = 160
dstY$6 = 168
dstC$7 = 176
srcP$8 = 184
x_fin$9 = 192
x$10 = 196
$T11 = 208
tv234 = 224
tv256 = 228
__$ArrayPad$ = 232
dst_array$ = 272
src_array$ = 280
width$ = 288
src_y_pitch_byte$ = 296
src_uv_pitch_byte$ = 304
dst_y_pitch_byte$ = 312
height$ = 320
dst_height$ = 328
thread_id$ = 336
thread_n$ = 344
crop$ = 352
?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z PROC ; convert_yuy2_to_nv12

; 195  : void convert_yuy2_to_nv12(void **dst_array, const void **src_array, int width, int src_y_pitch_byte, int src_uv_pitch_byte, int dst_y_pitch_byte, int height, int dst_height, int thread_id, int thread_n, int *crop) {

$LN9:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR [rsp+272]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 196  :     int crop_left   = crop[0];

  00046	b8 04 00 00 00	 mov	 eax, 4
  0004b	48 6b c0 00	 imul	 rax, rax, 0
  0004f	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00057	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  0005a	89 44 24 30	 mov	 DWORD PTR crop_left$[rsp], eax

; 197  :     int crop_up     = crop[1];

  0005e	b8 04 00 00 00	 mov	 eax, 4
  00063	48 6b c0 01	 imul	 rax, rax, 1
  00067	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  0006f	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  00072	89 44 24 34	 mov	 DWORD PTR crop_up$[rsp], eax

; 198  :     int crop_right  = crop[2];

  00076	b8 04 00 00 00	 mov	 eax, 4
  0007b	48 6b c0 02	 imul	 rax, rax, 2
  0007f	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00087	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  0008a	89 44 24 38	 mov	 DWORD PTR crop_right$[rsp], eax

; 199  :     int crop_bottom = crop[3];

  0008e	b8 04 00 00 00	 mov	 eax, 4
  00093	48 6b c0 03	 imul	 rax, rax, 3
  00097	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  0009f	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  000a2	89 44 24 3c	 mov	 DWORD PTR crop_bottom$[rsp], eax

; 200  :     void *dst = dst_array[0];

  000a6	b8 08 00 00 00	 mov	 eax, 8
  000ab	48 6b c0 00	 imul	 rax, rax, 0
  000af	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR dst_array$[rsp]
  000b7	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  000bb	48 89 44 24 40	 mov	 QWORD PTR dst$[rsp], rax

; 201  :     const void *src = src_array[0];

  000c0	b8 08 00 00 00	 mov	 eax, 8
  000c5	48 6b c0 00	 imul	 rax, rax, 0
  000c9	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR src_array$[rsp]
  000d1	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  000d5	48 89 44 24 48	 mov	 QWORD PTR src$[rsp], rax

; 202  :     const auto y_range = thread_y_range(crop_up, height - crop_bottom, thread_id, thread_n);

  000da	8b 44 24 3c	 mov	 eax, DWORD PTR crop_bottom$[rsp]
  000de	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR height$[rsp]
  000e5	2b c8		 sub	 ecx, eax
  000e7	8b c1		 mov	 eax, ecx
  000e9	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR thread_n$[rsp]
  000f0	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  000f4	44 8b 8c 24 50
	01 00 00	 mov	 r9d, DWORD PTR thread_id$[rsp]
  000fc	44 8b c0	 mov	 r8d, eax
  000ff	8b 54 24 34	 mov	 edx, DWORD PTR crop_up$[rsp]
  00103	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  0010b	e8 00 00 00 00	 call	 ?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z ; thread_y_range
  00110	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  00115	48 8b f9	 mov	 rdi, rcx
  00118	48 8b f0	 mov	 rsi, rax
  0011b	b9 0c 00 00 00	 mov	 ecx, 12
  00120	f3 a4		 rep movsb
  00122	48 8d 44 24 58	 lea	 rax, QWORD PTR y_range$[rsp]
  00127	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T4[rsp]
  0012c	48 8b f8	 mov	 rdi, rax
  0012f	48 8b f1	 mov	 rsi, rcx
  00132	b9 0c 00 00 00	 mov	 ecx, 12
  00137	f3 a4		 rep movsb

; 203  :     uint8_t *srcFrame = (uint8_t *)src;

  00139	48 8b 44 24 48	 mov	 rax, QWORD PTR src$[rsp]
  0013e	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR srcFrame$[rsp], rax

; 204  :     uint8_t *dstYFrame = (uint8_t *)dst;

  00146	48 8b 44 24 40	 mov	 rax, QWORD PTR dst$[rsp]
  0014b	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR dstYFrame$[rsp], rax

; 205  :     uint8_t *dstCFrame = dstYFrame + dst_y_pitch_byte * dst_height;

  00153	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  0015a	0f af 84 24 48
	01 00 00	 imul	 eax, DWORD PTR dst_height$[rsp]
  00162	48 98		 cdqe
  00164	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR dstYFrame$[rsp]
  0016c	48 03 c8	 add	 rcx, rax
  0016f	48 8b c1	 mov	 rax, rcx
  00172	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR dstCFrame$[rsp], rax

; 206  :     for (int y = y_range.start_dst; y < (y_range.start_dst + y_range.len); y += 2) {

  0017a	8b 44 24 5c	 mov	 eax, DWORD PTR y_range$[rsp+4]
  0017e	89 84 24 a0 00
	00 00		 mov	 DWORD PTR y$5[rsp], eax
  00185	eb 11		 jmp	 SHORT $LN4@convert_yu
$LN2@convert_yu:
  00187	8b 84 24 a0 00
	00 00		 mov	 eax, DWORD PTR y$5[rsp]
  0018e	83 c0 02	 add	 eax, 2
  00191	89 84 24 a0 00
	00 00		 mov	 DWORD PTR y$5[rsp], eax
$LN4@convert_yu:
  00198	8b 44 24 60	 mov	 eax, DWORD PTR y_range$[rsp+8]
  0019c	8b 4c 24 5c	 mov	 ecx, DWORD PTR y_range$[rsp+4]
  001a0	03 c8		 add	 ecx, eax
  001a2	8b c1		 mov	 eax, ecx
  001a4	39 84 24 a0 00
	00 00		 cmp	 DWORD PTR y$5[rsp], eax
  001ab	0f 8d 9d 02 00
	00		 jge	 $LN3@convert_yu

; 207  :         uint8_t *dstY = dstYFrame +   dst_y_pitch_byte * y;

  001b1	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  001b8	0f af 84 24 a0
	00 00 00	 imul	 eax, DWORD PTR y$5[rsp]
  001c0	48 98		 cdqe
  001c2	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR dstYFrame$[rsp]
  001ca	48 03 c8	 add	 rcx, rax
  001cd	48 8b c1	 mov	 rax, rcx
  001d0	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR dstY$6[rsp], rax

; 208  :         uint8_t *dstC = dstCFrame + ((dst_y_pitch_byte * y) >> 1);

  001d8	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  001df	0f af 84 24 a0
	00 00 00	 imul	 eax, DWORD PTR y$5[rsp]
  001e7	d1 f8		 sar	 eax, 1
  001e9	48 98		 cdqe
  001eb	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR dstCFrame$[rsp]
  001f3	48 03 c8	 add	 rcx, rax
  001f6	48 8b c1	 mov	 rax, rcx
  001f9	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR dstC$7[rsp], rax

; 209  :         uint8_t *srcP = srcFrame  +   src_y_pitch_byte * (y + crop_up) + crop_left;

  00201	8b 44 24 34	 mov	 eax, DWORD PTR crop_up$[rsp]
  00205	8b 8c 24 a0 00
	00 00		 mov	 ecx, DWORD PTR y$5[rsp]
  0020c	03 c8		 add	 ecx, eax
  0020e	8b c1		 mov	 eax, ecx
  00210	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  00217	0f af c8	 imul	 ecx, eax
  0021a	8b c1		 mov	 eax, ecx
  0021c	48 98		 cdqe
  0021e	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR srcFrame$[rsp]
  00226	48 03 c8	 add	 rcx, rax
  00229	48 8b c1	 mov	 rax, rcx
  0022c	48 63 4c 24 30	 movsxd	 rcx, DWORD PTR crop_left$[rsp]
  00231	48 03 c1	 add	 rax, rcx
  00234	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR srcP$8[rsp], rax

; 210  :         const int x_fin = width - crop_right - crop_left;

  0023c	8b 44 24 38	 mov	 eax, DWORD PTR crop_right$[rsp]
  00240	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR width$[rsp]
  00247	2b c8		 sub	 ecx, eax
  00249	8b c1		 mov	 eax, ecx
  0024b	2b 44 24 30	 sub	 eax, DWORD PTR crop_left$[rsp]
  0024f	89 84 24 c0 00
	00 00		 mov	 DWORD PTR x_fin$9[rsp], eax

; 211  :         for (int x = 0; x < x_fin; x += 2, dstY += 2, dstC += 2, srcP += 4) {

  00256	c7 84 24 c4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR x$10[rsp], 0
  00261	eb 4d		 jmp	 SHORT $LN7@convert_yu
$LN5@convert_yu:
  00263	8b 84 24 c4 00
	00 00		 mov	 eax, DWORD PTR x$10[rsp]
  0026a	83 c0 02	 add	 eax, 2
  0026d	89 84 24 c4 00
	00 00		 mov	 DWORD PTR x$10[rsp], eax
  00274	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR dstY$6[rsp]
  0027c	48 83 c0 02	 add	 rax, 2
  00280	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR dstY$6[rsp], rax
  00288	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR dstC$7[rsp]
  00290	48 83 c0 02	 add	 rax, 2
  00294	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR dstC$7[rsp], rax
  0029c	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR srcP$8[rsp]
  002a4	48 83 c0 04	 add	 rax, 4
  002a8	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR srcP$8[rsp], rax
$LN7@convert_yu:
  002b0	8b 84 24 c0 00
	00 00		 mov	 eax, DWORD PTR x_fin$9[rsp]
  002b7	39 84 24 c4 00
	00 00		 cmp	 DWORD PTR x$10[rsp], eax
  002be	0f 8d 85 01 00
	00		 jge	 $LN6@convert_yu

; 212  :             dstY[0*dst_y_pitch_byte  + 0] = srcP[0*src_y_pitch_byte + 0];

  002c4	6b 84 24 28 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  002cc	48 98		 cdqe
  002ce	6b 8c 24 38 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  002d6	48 63 c9	 movsxd	 rcx, ecx
  002d9	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  002e1	48 8b bc 24 b8
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  002e9	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  002ed	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 213  :             dstY[0*dst_y_pitch_byte  + 1] = srcP[0*src_y_pitch_byte + 2];

  002f0	6b 84 24 28 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  002f8	83 c0 02	 add	 eax, 2
  002fb	48 98		 cdqe
  002fd	6b 8c 24 38 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  00305	ff c1		 inc	 ecx
  00307	48 63 c9	 movsxd	 rcx, ecx
  0030a	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  00312	48 8b bc 24 b8
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  0031a	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  0031e	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 214  :             dstY[1*dst_y_pitch_byte  + 0] = srcP[1*src_y_pitch_byte + 0];

  00321	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  00328	48 98		 cdqe
  0032a	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  00331	48 63 c9	 movsxd	 rcx, ecx
  00334	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  0033c	48 8b bc 24 b8
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  00344	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  00348	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 215  :             dstY[1*dst_y_pitch_byte  + 1] = srcP[1*src_y_pitch_byte + 2];

  0034b	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR src_y_pitch_byte$[rsp]
  00352	83 c0 02	 add	 eax, 2
  00355	48 98		 cdqe
  00357	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  0035e	ff c1		 inc	 ecx
  00360	48 63 c9	 movsxd	 rcx, ecx
  00363	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR dstY$6[rsp]
  0036b	48 8b bc 24 b8
	00 00 00	 mov	 rdi, QWORD PTR srcP$8[rsp]
  00373	0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+rax]
  00377	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al

; 216  :             dstC[0*dst_y_pitch_byte/2+ 0] =(srcP[0*src_y_pitch_byte + 1] + srcP[1*src_y_pitch_byte + 1] + 1)/2;

  0037a	6b 84 24 28 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  00382	ff c0		 inc	 eax
  00384	48 98		 cdqe
  00386	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR srcP$8[rsp]
  0038e	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00392	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  00399	ff c1		 inc	 ecx
  0039b	48 63 c9	 movsxd	 rcx, ecx
  0039e	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR srcP$8[rsp]
  003a6	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [rdx+rcx]
  003aa	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  003ae	99		 cdq
  003af	2b c2		 sub	 eax, edx
  003b1	d1 f8		 sar	 eax, 1
  003b3	89 84 24 e0 00
	00 00		 mov	 DWORD PTR tv234[rsp], eax
  003ba	6b 8c 24 38 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  003c2	8b c1		 mov	 eax, ecx
  003c4	99		 cdq
  003c5	2b c2		 sub	 eax, edx
  003c7	d1 f8		 sar	 eax, 1
  003c9	48 98		 cdqe
  003cb	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR dstC$7[rsp]
  003d3	8b 94 24 e0 00
	00 00		 mov	 edx, DWORD PTR tv234[rsp]
  003da	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 217  :             dstC[0*dst_y_pitch_byte/2+ 1] =(srcP[0*src_y_pitch_byte + 3] + srcP[1*src_y_pitch_byte + 3] + 1)/2;

  003dd	6b 84 24 28 01
	00 00 00	 imul	 eax, DWORD PTR src_y_pitch_byte$[rsp], 0
  003e5	83 c0 03	 add	 eax, 3
  003e8	48 98		 cdqe
  003ea	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR srcP$8[rsp]
  003f2	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  003f6	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  003fd	83 c1 03	 add	 ecx, 3
  00400	48 63 c9	 movsxd	 rcx, ecx
  00403	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR srcP$8[rsp]
  0040b	0f b6 0c 0a	 movzx	 ecx, BYTE PTR [rdx+rcx]
  0040f	8d 44 08 01	 lea	 eax, DWORD PTR [rax+rcx+1]
  00413	99		 cdq
  00414	2b c2		 sub	 eax, edx
  00416	d1 f8		 sar	 eax, 1
  00418	89 84 24 e4 00
	00 00		 mov	 DWORD PTR tv256[rsp], eax
  0041f	6b 8c 24 38 01
	00 00 00	 imul	 ecx, DWORD PTR dst_y_pitch_byte$[rsp], 0
  00427	8b c1		 mov	 eax, ecx
  00429	99		 cdq
  0042a	2b c2		 sub	 eax, edx
  0042c	d1 f8		 sar	 eax, 1
  0042e	ff c0		 inc	 eax
  00430	48 98		 cdqe
  00432	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR dstC$7[rsp]
  0043a	8b 94 24 e4 00
	00 00		 mov	 edx, DWORD PTR tv256[rsp]
  00441	88 14 01	 mov	 BYTE PTR [rcx+rax], dl

; 218  :         }

  00444	e9 1a fe ff ff	 jmp	 $LN5@convert_yu
$LN6@convert_yu:

; 219  :     }

  00449	e9 39 fd ff ff	 jmp	 $LN2@convert_yu
$LN3@convert_yu:

; 220  : }

  0044e	48 8b cc	 mov	 rcx, rsp
  00451	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z$rtcFrameData
  00458	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0045d	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00465	48 33 cc	 xor	 rcx, rsp
  00468	e8 00 00 00 00	 call	 __security_check_cookie
  0046d	48 81 c4 f8 00
	00 00		 add	 rsp, 248		; 000000f8H
  00474	5f		 pop	 rdi
  00475	5e		 pop	 rsi
  00476	c3		 ret	 0
?convert_yuy2_to_nv12@@YAXPEAPEAXPEAPEBXHHHHHHHHPEAH@Z ENDP ; convert_yuy2_to_nv12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.h
_TEXT	SEGMENT
h$ = 32
y_range$ = 56
y0$ = 84
y1$ = 88
__$ArrayPad$ = 104
$T4 = 144
y_start$ = 152
y_end$ = 160
thread_id$ = 168
thread_n$ = 176
?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z PROC	; thread_y_range

; 375  : static inline THREAD_Y_RANGE thread_y_range(int y_start, int y_end, int thread_id, int thread_n) {

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	56		 push	 rsi
  00014	57		 push	 rdi
  00015	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 1e 00 00 00	 mov	 ecx, 30
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00030	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00037	48 33 c4	 xor	 rax, rsp
  0003a	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 376  :     const int h = y_end - y_start;

  0003f	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR y_start$[rsp]
  00046	8b 8c 24 a0 00
	00 00		 mov	 ecx, DWORD PTR y_end$[rsp]
  0004d	2b c8		 sub	 ecx, eax
  0004f	8b c1		 mov	 eax, ecx
  00051	89 44 24 20	 mov	 DWORD PTR h$[rsp], eax

; 377  :     THREAD_Y_RANGE y_range;
; 378  :     int y0 = ((((h *  thread_id)    / thread_n) + 3) & ~3);

  00055	8b 44 24 20	 mov	 eax, DWORD PTR h$[rsp]
  00059	0f af 84 24 a8
	00 00 00	 imul	 eax, DWORD PTR thread_id$[rsp]
  00061	99		 cdq
  00062	f7 bc 24 b0 00
	00 00		 idiv	 DWORD PTR thread_n$[rsp]
  00069	83 c0 03	 add	 eax, 3
  0006c	83 e0 fc	 and	 eax, -4
  0006f	89 44 24 54	 mov	 DWORD PTR y0$[rsp], eax

; 379  :     int y1 = ((((h * (thread_id+1)) / thread_n) + 3) & ~3);

  00073	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR thread_id$[rsp]
  0007a	ff c0		 inc	 eax
  0007c	8b 4c 24 20	 mov	 ecx, DWORD PTR h$[rsp]
  00080	0f af c8	 imul	 ecx, eax
  00083	8b c1		 mov	 eax, ecx
  00085	99		 cdq
  00086	f7 bc 24 b0 00
	00 00		 idiv	 DWORD PTR thread_n$[rsp]
  0008d	83 c0 03	 add	 eax, 3
  00090	83 e0 fc	 and	 eax, -4
  00093	89 44 24 58	 mov	 DWORD PTR y1$[rsp], eax

; 380  :     if (y1 > h) {

  00097	8b 44 24 20	 mov	 eax, DWORD PTR h$[rsp]
  0009b	39 44 24 58	 cmp	 DWORD PTR y1$[rsp], eax
  0009f	7e 08		 jle	 SHORT $LN2@thread_y_r

; 381  :         y1 = h;

  000a1	8b 44 24 20	 mov	 eax, DWORD PTR h$[rsp]
  000a5	89 44 24 58	 mov	 DWORD PTR y1$[rsp], eax
$LN2@thread_y_r:

; 382  :     }
; 383  :     y_range.start_src = y_start + y0;

  000a9	8b 44 24 54	 mov	 eax, DWORD PTR y0$[rsp]
  000ad	8b 8c 24 98 00
	00 00		 mov	 ecx, DWORD PTR y_start$[rsp]
  000b4	03 c8		 add	 ecx, eax
  000b6	8b c1		 mov	 eax, ecx
  000b8	89 44 24 38	 mov	 DWORD PTR y_range$[rsp], eax

; 384  :     y_range.start_dst = y0;

  000bc	8b 44 24 54	 mov	 eax, DWORD PTR y0$[rsp]
  000c0	89 44 24 3c	 mov	 DWORD PTR y_range$[rsp+4], eax

; 385  :     y_range.len = y1 - y0;

  000c4	8b 44 24 54	 mov	 eax, DWORD PTR y0$[rsp]
  000c8	8b 4c 24 58	 mov	 ecx, DWORD PTR y1$[rsp]
  000cc	2b c8		 sub	 ecx, eax
  000ce	8b c1		 mov	 eax, ecx
  000d0	89 44 24 40	 mov	 DWORD PTR y_range$[rsp+8], eax

; 386  :     return y_range;

  000d4	48 8d 44 24 38	 lea	 rax, QWORD PTR y_range$[rsp]
  000d9	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T4[rsp]
  000e1	48 8b f0	 mov	 rsi, rax
  000e4	b9 0c 00 00 00	 mov	 ecx, 12
  000e9	f3 a4		 rep movsb
  000eb	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T4[rsp]

; 387  : }

  000f3	48 8b f8	 mov	 rdi, rax
  000f6	48 8b cc	 mov	 rcx, rsp
  000f9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z$rtcFrameData
  00100	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00105	48 8b c7	 mov	 rax, rdi
  00108	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0010d	48 33 cc	 xor	 rcx, rsp
  00110	e8 00 00 00 00	 call	 __security_check_cookie
  00115	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00119	5f		 pop	 rdi
  0011a	5e		 pop	 rsi
  0011b	c3		 ret	 0
?thread_y_range@@YA?AUTHREAD_Y_RANGE@@HHHH@Z ENDP	; thread_y_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.cpp
_TEXT	SEGMENT
$T4 = 32
<range>$L1$5 = 144
<begin>$L1$6 = 152
<end>$L1$7 = 160
simd_str$8 = 184
$T9 = 224
$T10 = 228
$T11 = 232
$T12 = 236
$T13 = 240
$T14 = 244
$T15 = 248
$T16 = 256
$T17 = 272
tv77 = 288
__$ArrayPad$ = 296
simd$ = 336
?get_simd_str@@YAPEBDI@Z PROC				; get_simd_str

; 959  : const TCHAR *get_simd_str(unsigned int simd) {

$LN9:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 50 01
	00 00		 mov	 ecx, DWORD PTR [rsp+336]
  00023	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002a	48 33 c4	 xor	 rax, rsp
  0002d	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 960  :     static std::vector<std::pair<uint32_t, const TCHAR*>> simd_str_list = {

  00035	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:_Init_thread_epoch
  0003a	8b c0		 mov	 eax, eax
  0003c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _tls_index
  00042	65 48 8b 14 25
	58 00 00 00	 mov	 rdx, QWORD PTR gs:88
  0004b	48 8b 0c ca	 mov	 rcx, QWORD PTR [rdx+rcx*8]
  0004f	8b 04 08	 mov	 eax, DWORD PTR [rax+rcx]
  00052	39 05 00 00 00
	00		 cmp	 DWORD PTR ?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA, eax
  00058	0f 8e 70 01 00
	00		 jle	 $LN2@get_simd_s
  0005e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA
  00065	e8 00 00 00 00	 call	 _Init_thread_header
  0006a	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA, -1
  00071	0f 85 57 01 00
	00		 jne	 $LN2@get_simd_s
  00077	c7 84 24 e4 00
	00 00 80 00 00
	00		 mov	 DWORD PTR $T10[rsp], 128 ; 00000080H
  00082	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG69788
  00089	48 8d 94 24 e4
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  00091	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T4[rsp]
  00096	e8 00 00 00 00	 call	 ??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[5],0>
  0009b	c7 84 24 e8 00
	00 00 40 00 00
	00		 mov	 DWORD PTR $T11[rsp], 64	; 00000040H
  000a6	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG69789
  000ad	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  000b5	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T4[rsp+16]
  000ba	e8 00 00 00 00	 call	 ??$?0W4<unnamed-enum-NONE>@@AEAY03$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY03$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[4],0>
  000bf	c7 84 24 ec 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T12[rsp], 16
  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG69790
  000d1	48 8d 94 24 ec
	00 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  000d9	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T4[rsp+32]
  000de	e8 00 00 00 00	 call	 ??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[7],0>
  000e3	c7 84 24 f0 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T13[rsp], 8
  000ee	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG69791
  000f5	48 8d 94 24 f0
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  000fd	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T4[rsp+48]
  00102	e8 00 00 00 00	 call	 ??$?0W4<unnamed-enum-NONE>@@AEAY06$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY06$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[7],0>
  00107	c7 84 24 f4 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  00112	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG69792
  00119	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  00121	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T4[rsp+64]
  00126	e8 00 00 00 00	 call	 ??$?0W4<unnamed-enum-NONE>@@AEAY05$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY05$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[6],0>
  0012b	c7 84 24 f8 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T15[rsp], 1
  00136	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG69793
  0013d	48 8d 94 24 f8
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  00145	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T4[rsp+80]
  0014a	e8 00 00 00 00	 call	 ??$?0W4<unnamed-enum-NONE>@@AEAY04$$CBD$0A@@?$pair@IPEBD@std@@QEAA@$$QEAW4<unnamed-enum-NONE>@@AEAY04$$CBD@Z ; std::pair<unsigned int,char const *>::pair<unsigned int,char const *><enum <unnamed-enum-NONE>,char const (&)[5],0>
  0014f	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00157	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@IPEBD@std@@@std@@QEAA@XZ ; std::allocator<std::pair<unsigned int,char const *> >::allocator<std::pair<unsigned int,char const *> >
  0015c	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv77[rsp], rax
  00164	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T4[rsp+96]
  0016c	4c 8b c1	 mov	 r8, rcx
  0016f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T4[rsp]
  00174	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  0017c	e8 00 00 00 00	 call	 ??0?$initializer_list@U?$pair@IPEBD@std@@@std@@QEAA@PEBU?$pair@IPEBD@1@0@Z ; std::initializer_list<std::pair<unsigned int,char const *> >::initializer_list<std::pair<unsigned int,char const *> >
  00181	48 8d 8c 24 10
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00189	48 8b f9	 mov	 rdi, rcx
  0018c	48 8b f0	 mov	 rsi, rax
  0018f	b9 10 00 00 00	 mov	 ecx, 16
  00194	f3 a4		 rep movsb
  00196	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR tv77[rsp]
  0019e	4c 8b c0	 mov	 r8, rax
  001a1	48 8d 94 24 10
	01 00 00	 lea	 rdx, QWORD PTR $T17[rsp]
  001a9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?simd_str_list@?1??get_simd_str@@YAPEBDI@Z@4V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@A
  001b0	e8 00 00 00 00	 call	 ??0?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@IPEBD@std@@@1@AEBV?$allocator@U?$pair@IPEBD@std@@@1@@Z ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >
  001b5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??__Fsimd_str_list@?1??get_simd_str@@YAPEBDI@Z@YAXXZ ; `get_simd_str'::`2'::`dynamic atexit destructor for 'simd_str_list''
  001bc	e8 00 00 00 00	 call	 atexit
  001c1	90		 npad	 1
  001c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA
  001c9	e8 00 00 00 00	 call	 _Init_thread_footer
$LN2@get_simd_s:

; 961  :         { AVX2,  _T("AVX2")   },
; 962  :         { AVX,   _T("AVX")    },
; 963  :         { SSE42, _T("SSE4.2") },
; 964  :         { SSE41, _T("SSE4.1") },
; 965  :         { SSSE3, _T("SSSE3")  },
; 966  :         { SSE2,  _T("SSE2")   },
; 967  :     };
; 968  :     for (auto simd_str : simd_str_list) {

  001ce	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?simd_str_list@?1??get_simd_str@@YAPEBDI@Z@4V?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@A
  001d5	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR <range>$L1$5[rsp], rax
  001dd	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR <range>$L1$5[rsp]
  001e5	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_begin
  001ea	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR <begin>$L1$6[rsp], rax
  001f2	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR <range>$L1$5[rsp]
  001fa	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@U?$pair@IPEBD@std@@V?$allocator@U?$pair@IPEBD@std@@@2@@std@@QEAAPEAU?$pair@IPEBD@2@XZ ; std::vector<std::pair<unsigned int,char const *>,std::allocator<std::pair<unsigned int,char const *> > >::_Unchecked_end
  001ff	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR <end>$L1$7[rsp], rax
  00207	eb 14		 jmp	 SHORT $LN5@get_simd_s
$LN3@get_simd_s:
  00209	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <begin>$L1$6[rsp]
  00211	48 83 c0 10	 add	 rax, 16
  00215	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR <begin>$L1$6[rsp], rax
$LN5@get_simd_s:
  0021d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <end>$L1$7[rsp]
  00225	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR <begin>$L1$6[rsp], rax
  0022d	74 3c		 je	 SHORT $LN4@get_simd_s
  0022f	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR simd_str$8[rsp]
  00237	48 8b f8	 mov	 rdi, rax
  0023a	48 8b b4 24 98
	00 00 00	 mov	 rsi, QWORD PTR <begin>$L1$6[rsp]
  00242	b9 10 00 00 00	 mov	 ecx, 16
  00247	f3 a4		 rep movsb

; 969  :         if (simd_str.first & simd)

  00249	8b 84 24 50 01
	00 00		 mov	 eax, DWORD PTR simd$[rsp]
  00250	8b 8c 24 b8 00
	00 00		 mov	 ecx, DWORD PTR simd_str$8[rsp]
  00257	23 c8		 and	 ecx, eax
  00259	8b c1		 mov	 eax, ecx
  0025b	85 c0		 test	 eax, eax
  0025d	74 0a		 je	 SHORT $LN6@get_simd_s

; 970  :             return simd_str.second;

  0025f	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR simd_str$8[rsp+8]
  00267	eb 09		 jmp	 SHORT $LN1@get_simd_s
$LN6@get_simd_s:

; 971  :     }

  00269	eb 9e		 jmp	 SHORT $LN3@get_simd_s
$LN4@get_simd_s:

; 972  :     return _T("-");

  0026b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG69795
$LN1@get_simd_s:

; 973  : }

  00272	48 8b f8	 mov	 rdi, rax
  00275	48 8b cc	 mov	 rcx, rsp
  00278	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?get_simd_str@@YAPEBDI@Z$rtcFrameData
  0027f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00284	48 8b c7	 mov	 rax, rdi
  00287	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0028f	48 33 cc	 xor	 rcx, rsp
  00292	e8 00 00 00 00	 call	 __security_check_cookie
  00297	48 81 c4 38 01
	00 00		 add	 rsp, 312		; 00000138H
  0029e	5f		 pop	 rdi
  0029f	5e		 pop	 rsi
  002a0	c3		 ret	 0
?get_simd_str@@YAPEBDI@Z ENDP				; get_simd_str
_TEXT	ENDS
text$x	SEGMENT
$T4 = 32
<range>$L1$5 = 144
<begin>$L1$6 = 152
<end>$L1$7 = 160
simd_str$8 = 184
$T9 = 224
$T10 = 228
$T11 = 232
$T12 = 236
$T13 = 240
$T14 = 244
$T15 = 248
$T16 = 256
$T17 = 272
tv77 = 288
__$ArrayPad$ = 296
simd$ = 336
?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA PROC		; `get_simd_str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA
  0001a	e8 00 00 00 00	 call	 _Init_thread_abort
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA ENDP		; `get_simd_str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T4 = 32
<range>$L1$5 = 144
<begin>$L1$6 = 152
<end>$L1$7 = 160
simd_str$8 = 184
$T9 = 224
$T10 = 228
$T11 = 232
$T12 = 236
$T13 = 240
$T14 = 244
$T15 = 248
$T16 = 256
$T17 = 272
tv77 = 288
__$ArrayPad$ = 296
simd$ = 336
?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA PROC		; `get_simd_str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?$TSS0@?1??get_simd_str@@YAPEBDI@Z@4HA
  0001a	e8 00 00 00 00	 call	 _Init_thread_abort
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??get_simd_str@@YAPEBDI@Z@4HA ENDP		; `get_simd_str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.cpp
_TEXT	SEGMENT
availableSIMD$ = 32
convert$ = 40
i$1 = 48
csp_from$ = 80
csp_to$ = 88
uv_only$ = 96
simd$ = 104
?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z PROC ; get_convert_csp_func

; 937  : const ConvertCSP *get_convert_csp_func(RGY_CSP csp_from, RGY_CSP csp_to, bool uv_only, uint32_t simd) {

$LN10:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00012	57		 push	 rdi
  00013	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 10 00 00 00	 mov	 ecx, 16
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	8b 4c 24 50	 mov	 ecx, DWORD PTR [rsp+80]

; 938  :     uint32_t availableSIMD = get_availableSIMD() & simd;

  0002a	e8 00 00 00 00	 call	 ?get_availableSIMD@@YAIXZ ; get_availableSIMD
  0002f	23 44 24 68	 and	 eax, DWORD PTR simd$[rsp]
  00033	89 44 24 20	 mov	 DWORD PTR availableSIMD$[rsp], eax

; 939  :     const ConvertCSP *convert = nullptr;

  00037	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR convert$[rsp], 0

; 940  :     for (int i = 0; i < _countof(funcList); i++) {

  00040	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  00048	eb 0a		 jmp	 SHORT $LN4@get_conver
$LN2@get_conver:
  0004a	8b 44 24 30	 mov	 eax, DWORD PTR i$1[rsp]
  0004e	ff c0		 inc	 eax
  00050	89 44 24 30	 mov	 DWORD PTR i$1[rsp], eax
$LN4@get_conver:
  00054	48 63 44 24 30	 movsxd	 rax, DWORD PTR i$1[rsp]
  00059	48 83 f8 0a	 cmp	 rax, 10
  0005d	0f 83 b4 00 00
	00		 jae	 $LN3@get_conver

; 941  :         if (csp_from != funcList[i].csp_from)

  00063	48 63 44 24 30	 movsxd	 rax, DWORD PTR i$1[rsp]
  00068	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  0006c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?funcList@@3QBUConvertCSP@@B
  00073	8b 04 01	 mov	 eax, DWORD PTR [rcx+rax]
  00076	39 44 24 50	 cmp	 DWORD PTR csp_from$[rsp], eax
  0007a	74 02		 je	 SHORT $LN5@get_conver

; 942  :             continue;

  0007c	eb cc		 jmp	 SHORT $LN2@get_conver
$LN5@get_conver:

; 943  : 
; 944  :         if (csp_to != funcList[i].csp_to)

  0007e	48 63 44 24 30	 movsxd	 rax, DWORD PTR i$1[rsp]
  00083	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  00087	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?funcList@@3QBUConvertCSP@@B
  0008e	8b 44 01 04	 mov	 eax, DWORD PTR [rcx+rax+4]
  00092	39 44 24 58	 cmp	 DWORD PTR csp_to$[rsp], eax
  00096	74 02		 je	 SHORT $LN6@get_conver

; 945  :             continue;

  00098	eb b0		 jmp	 SHORT $LN2@get_conver
$LN6@get_conver:

; 946  : 
; 947  :         if (uv_only != funcList[i].uv_only)

  0009a	0f b6 44 24 60	 movzx	 eax, BYTE PTR uv_only$[rsp]
  0009f	48 63 4c 24 30	 movsxd	 rcx, DWORD PTR i$1[rsp]
  000a4	48 6b c9 28	 imul	 rcx, rcx, 40		; 00000028H
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?funcList@@3QBUConvertCSP@@B
  000af	0f b6 4c 0a 08	 movzx	 ecx, BYTE PTR [rdx+rcx+8]
  000b4	3b c1		 cmp	 eax, ecx
  000b6	74 02		 je	 SHORT $LN7@get_conver

; 948  :             continue;

  000b8	eb 90		 jmp	 SHORT $LN2@get_conver
$LN7@get_conver:

; 949  : 
; 950  :         if (funcList[i].simd != (availableSIMD & funcList[i].simd))

  000ba	48 63 44 24 30	 movsxd	 rax, DWORD PTR i$1[rsp]
  000bf	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  000c3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?funcList@@3QBUConvertCSP@@B
  000ca	48 63 54 24 30	 movsxd	 rdx, DWORD PTR i$1[rsp]
  000cf	48 6b d2 28	 imul	 rdx, rdx, 40		; 00000028H
  000d3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?funcList@@3QBUConvertCSP@@B
  000da	41 8b 54 10 20	 mov	 edx, DWORD PTR [r8+rdx+32]
  000df	44 8b 44 24 20	 mov	 r8d, DWORD PTR availableSIMD$[rsp]
  000e4	44 23 c2	 and	 r8d, edx
  000e7	41 8b d0	 mov	 edx, r8d
  000ea	39 54 01 20	 cmp	 DWORD PTR [rcx+rax+32], edx
  000ee	74 05		 je	 SHORT $LN8@get_conver

; 951  :             continue;

  000f0	e9 55 ff ff ff	 jmp	 $LN2@get_conver
$LN8@get_conver:

; 952  : 
; 953  :         convert = &funcList[i];

  000f5	48 63 44 24 30	 movsxd	 rax, DWORD PTR i$1[rsp]
  000fa	48 6b c0 28	 imul	 rax, rax, 40		; 00000028H
  000fe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?funcList@@3QBUConvertCSP@@B
  00105	48 03 c8	 add	 rcx, rax
  00108	48 8b c1	 mov	 rax, rcx
  0010b	48 89 44 24 28	 mov	 QWORD PTR convert$[rsp], rax

; 954  :         break;

  00110	eb 05		 jmp	 SHORT $LN3@get_conver

; 955  :     }

  00112	e9 33 ff ff ff	 jmp	 $LN2@get_conver
$LN3@get_conver:

; 956  :     return convert;

  00117	48 8b 44 24 28	 mov	 rax, QWORD PTR convert$[rsp]

; 957  : }

  0011c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00120	5f		 pop	 rdi
  00121	c3		 ret	 0
?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z ENDP ; get_convert_csp_func
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
