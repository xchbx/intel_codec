; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG114689 DB	'auto', 00H
$SG117818 DB	00H
	ORG $+2
$SG114690 DB	'16', 00H
	ORG $+1
$SG114691 DB	'32', 00H
	ORG $+1
$SG114692 DB	'64', 00H
	ORG $+1
$SG114696 DB	'auto', 00H
	ORG $+3
$SG114697 DB	'none', 00H
	ORG $+3
$SG114698 DB	'luma', 00H
	ORG $+3
$SG114699 DB	'chroma', 00H
	ORG $+1
$SG114700 DB	'all', 00H
$SG114702 DB	'none', 00H
	ORG $+3
$SG114703 DB	'upscale', 00H
$SG114704 DB	'box', 00H
$SG114706 DB	'off', 00H
$SG114707 DB	'x2', 00H
	ORG $+1
$SG114708 DB	'x2.5', 00H
	ORG $+3
$SG114710 DB	'simple', 00H
	ORG $+1
$SG114713 DB	'0', 00H
	ORG $+2
$SG114711 DB	'complex', 00H
$SG114714 DB	'90', 00H
	ORG $+1
$SG114715 DB	'180', 00H
$SG114716 DB	'270', 00H
$SG114718 DB	'n', 00H
	ORG $+2
$SG114719 DB	'h', 00H
	ORG $+2
$SG114720 DB	'v', 00H
	ORG $+2
$SG114722 DB	'auto', 00H
	ORG $+3
$SG114723 DB	'simple', 00H
	ORG $+1
$SG114724 DB	'fine', 00H
	ORG $+3
$SG114726 DB	'auto', 00H
	ORG $+3
$SG114727 DB	'none', 00H
	ORG $+3
$SG114728 DB	'sse2', 00H
	ORG $+3
$SG114729 DB	'sse3', 00H
	ORG $+3
$SG114730 DB	'ssse3', 00H
	ORG $+2
$SG114731 DB	'sse41', 00H
	ORG $+2
$SG114732 DB	'avx', 00H
$SG114733 DB	'avx2', 00H
	ORG $+3
$SG115125 DB	'%s', 00H
	ORG $+1
$SG117753 DB	'no error.', 00H
	ORG $+2
$SG117814 DB	' PG', 00H
$SG117755 DB	'unknown error.', 00H
	ORG $+1
$SG117757 DB	'null pointer.', 00H
	ORG $+2
$SG117759 DB	'undeveloped feature.', 00H
	ORG $+3
$SG117761 DB	'failed to allocate memory.', 00H
	ORG $+1
$SG117816 DB	' FF', 00H
$SG117763 DB	'insufficient buffer at input/output.', 00H
	ORG $+3
$SG117765 DB	'invalid handle.', 00H
$SG117767 DB	'failed to lock the memory block.', 00H
	ORG $+3
$SG117842 DB	'vppin,', 00H
	ORG $+1
$SG117933 DB	'VP8', 00H
$SG117769 DB	'member function called before initialization.', 00H
	ORG $+2
$SG117771 DB	'the specified object is not found.', 00H
	ORG $+1
$SG117935 DB	'VP9', 00H
$SG117773 DB	'expect more data at input.', 00H
	ORG $+1
$SG110580 DB	'rgb', 00H
$SG117775 DB	'expect more surface at output.', 00H
	ORG $+1
$SG117777 DB	'operation aborted.', 00H
	ORG $+1
$SG110582 DB	'gbr', 00H
$SG117779 DB	'lose the HW acceleration device.', 00H
	ORG $+3
$SG117846 DB	'none,', 00H
	ORG $+2
$SG117998 DB	'system', 00H
	ORG $+1
$SG110585 DB	'y8', 00H
	ORG $+1
$SG117781 DB	'incompatible video parameters.', 00H
	ORG $+1
$SG117783 DB	'invalid video parameters.', 00H
	ORG $+2
$SG118015 DB	'boxing', 00H
	ORG $+1
$SG111530 DB	'VP8', 00H
$SG117785 DB	'undefined behavior.', 00H
$SG111532 DB	'VP9', 00H
$SG117787 DB	'device operation failure.', 00H
	ORG $+2
$SG110552 DB	'yuv422', 00H
	ORG $+1
$SG128033 DB	'%s', 00H
	ORG $+1
$SG117789 DB	'gpu hang.', 00H
	ORG $+2
$SG110554 DB	'yuv444', 00H
	ORG $+1
$SG112143 DB	'fcc', 00H
$SG117791 DB	'failed to realloc surface.', 00H
	ORG $+1
$SG112144 DB	'GBR', 00H
$SG117793 DB	'the previous asynchrous operation is in execution.', 00H
	ORG $+1
$SG112457 DB	'pal', 00H
$SG117795 DB	'the HW acceleration device is busy.', 00H
$SG112459 DB	'mac', 00H
$SG117797 DB	'the video parameters are changed during decoding.', 00H
	ORG $+2
$SG110574 DB	'rgb24r', 00H
	ORG $+1
$SG112461 DB	'0', 00H
	ORG $+2
$SG117799 DB	'SW is used.', 00H
$SG112462 DB	'1', 00H
	ORG $+2
$SG117801 DB	'incompatible video parameters.', 00H
	ORG $+1
$SG117803 DB	'the value is saturated based on its valid range.', 00H
	ORG $+3
$SG117908 DB	'rgb24', 00H
	ORG $+2
$SG110575 DB	'rgb32r', 00H
	ORG $+1
$SG112463 DB	'2', 00H
	ORG $+2
$SG117805 DB	'the value is out of valid range.', 00H
	ORG $+3
$SG117910 DB	'rgb32', 00H
	ORG $+2
$SG112295 DB	'bt470m', 00H
	ORG $+1
$SG112464 DB	'3', 00H
	ORG $+2
$SG117807 DB	'unknown error.', 00H
	ORG $+1
$SG117826 DB	'internal,', 00H
	ORG $+2
$SG112298 DB	'linear', 00H
	ORG $+1
$SG112465 DB	'4', 00H
	ORG $+2
$SG117828 DB	'external,', 00H
	ORG $+2
$SG112299 DB	'log100', 00H
	ORG $+1
$SG112466 DB	'5', 00H
	ORG $+2
$SG117830 DB	'opaque,', 00H
$SG117832 DB	'dxvadec,', 00H
	ORG $+3
$SG117912 DB	'bgr32', 00H
	ORG $+2
$SG112300 DB	'log316', 00H
	ORG $+1
$SG112470 DB	'tv', 00H
	ORG $+1
$SG117834 DB	'dxvaproc,', 00H
	ORG $+2
$SG112444 DB	'bt470m', 00H
	ORG $+1
$SG112471 DB	'pc', 00H
	ORG $+1
$SG117836 DB	'system,', 00H
$SG117838 DB	'enc,', 00H
	ORG $+3
$SG117840 DB	'dec,', 00H
	ORG $+3
$SG117844 DB	'vppout,', 00H
$SG117900 DB	'nv12', 00H
	ORG $+3
$SG117902 DB	'nv16', 00H
	ORG $+3
$SG117904 DB	'yv12', 00H
	ORG $+3
$SG117906 DB	'yuy2', 00H
	ORG $+3
$SG117914 DB	'p010', 00H
	ORG $+3
$SG117916 DB	'p210', 00H
	ORG $+3
$SG117918 DB	'unsupported', 00H
$SG113560 DB	'cfr', 00H
$SG117925 DB	'H.264/AVC', 00H
	ORG $+2
$SG117927 DB	'VC-1', 00H
	ORG $+3
$SG117929 DB	'HEVC', 00H
	ORG $+3
$SG117931 DB	'MPEG2', 00H
	ORG $+2
$SG117937 DB	'JPEG', 00H
	ORG $+3
$SG118002 DB	'd3d11', 00H
	ORG $+2
$SG112448 DB	'bt2020', 00H
	ORG $+1
$SG113561 DB	'vfr', 00H
$SG117939 DB	'NOT_SUPPORTED', 00H
	ORG $+2
$SG117946 DB	'1 - best', 00H
	ORG $+3
$SG110576 DB	'rgb24', 00H
	ORG $+2
$SG113564 DB	'swr', 00H
$SG117948 DB	'2 - higher', 00H
	ORG $+1
$SG114456 DB	'vp8', 00H
$SG117950 DB	'3 - high', 00H
	ORG $+3
$SG110577 DB	'rgb32', 00H
	ORG $+2
$SG114457 DB	'raw', 00H
$SG117952 DB	'4 - balanced', 00H
	ORG $+3
$SG117954 DB	'5 - fast', 00H
	ORG $+3
$SG110578 DB	'bgr24', 00H
	ORG $+2
$SG114459 DB	'CBR', 00H
$SG117956 DB	'6 - faster', 00H
	ORG $+1
$SG114460 DB	'VBR', 00H
$SG117958 DB	'7 - fastest', 00H
$SG114461 DB	'CQP', 00H
$SG117960 DB	'unknown', 00H
$SG117962 DB	'unsupported', 00H
$SG114463 DB	'LA', 00H
	ORG $+1
$SG117969 DB	'Bitrate Mode - CBR', 00H
	ORG $+1
$SG114467 DB	'ICQ', 00H
$SG117971 DB	'Bitrate Mode - VBR', 00H
	ORG $+1
$SG114469 DB	'VCM', 00H
$SG117973 DB	'Bitrate Mode - AVBR', 00H
$SG114494 DB	'0', 00H
	ORG $+2
$SG117975 DB	'Constant QP (CQP)', 00H
	ORG $+2
$SG114464 DB	'LA-EXT', 00H
	ORG $+1
$SG114495 DB	'1', 00H
	ORG $+2
$SG117977 DB	'Bitrate Mode - Lookahead', 00H
	ORG $+3
$SG110579 DB	'bgr32', 00H
	ORG $+2
$SG114465 DB	'LA-HRD', 00H
	ORG $+1
$SG114496 DB	'2', 00H
	ORG $+2
$SG117979 DB	'ICQ (Intelligent Const. Quality)', 00H
	ORG $+3
$SG111522 DB	'MPEG2', 00H
	ORG $+2
$SG114466 DB	'LA-ICQ', 00H
	ORG $+1
$SG114497 DB	'3', 00H
	ORG $+2
$SG117981 DB	'VCM (Video Conference Mode)', 00H
$SG114500 DB	'0', 00H
	ORG $+2
$SG117983 DB	'LA-ICQ (Intelligent Const. Quality with Lookahead)', 00H
	ORG $+1
$SG114501 DB	'1', 00H
	ORG $+2
$SG117985 DB	'LA-EXT (Extended Lookahead)', 00H
$SG114502 DB	'2', 00H
	ORG $+2
$SG117987 DB	'LA-HRD (HRD compliant Lookahead)', 00H
	ORG $+3
$SG111524 DB	'MPEG1', 00H
	ORG $+2
$SG114478 DB	'main10', 00H
	ORG $+1
$SG114503 DB	'3', 00H
	ORG $+2
$SG117989 DB	'Quality VBR bitrate', 00H
$SG114505 DB	'8', 00H
	ORG $+2
$SG117991 DB	'unsupported', 00H
$SG118000 DB	'd3d9', 00H
	ORG $+3
$SG111528 DB	'MPEG4', 00H
	ORG $+2
$SG114484 DB	'Simple', 00H
	ORG $+1
$SG114506 DB	'10', 00H
	ORG $+1
$SG118004 DB	'd3d11+d3d9', 00H
	ORG $+1
$SG114514 DB	'it', 00H
	ORG $+1
$SG118006 DB	'unsupported', 00H
$SG114515 DB	'bob', 00H
$SG118013 DB	'upscale', 00H
$SG118017 DB	'unknown', 00H
$SG110548 DB	'Invalid', 00H
$SG110549 DB	'nv12', 00H
	ORG $+3
$SG110550 DB	'yv12', 00H
	ORG $+3
$SG110551 DB	'yuy2', 00H
	ORG $+3
$SG110553 DB	'nv16', 00H
	ORG $+3
$SG110555 DB	'yv12(9bit)', 00H
	ORG $+1
$SG114517 DB	'32', 00H
	ORG $+1
$SG110556 DB	'yv12(10bit)', 00H
$SG114520 DB	'41', 00H
	ORG $+1
$SG110557 DB	'yv12(12bit)', 00H
$SG114523 DB	'1', 00H
	ORG $+2
$SG110558 DB	'yv12(14bit)', 00H
$SG114524 DB	'1b', 00H
	ORG $+1
$SG110559 DB	'yv12(16bit)', 00H
$SG110560 DB	'p010', 00H
	ORG $+3
$SG112136 DB	'undef', 00H
	ORG $+2
$SG114489 DB	'Simple', 00H
	ORG $+1
$SG114525 DB	'1.1', 00H
$SG110561 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG110562 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG110563 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG110564 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG110565 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG110566 DB	'p210', 00H
	ORG $+3
$SG110567 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG110568 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG110569 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG110570 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG110571 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG110572 DB	'yuva444', 00H
$SG110573 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG110581 DB	'rgba', 00H
	ORG $+3
$SG110583 DB	'gbra', 00H
	ORG $+3
$SG110584 DB	'yc48', 00H
	ORG $+3
$SG110586 DB	'yc16', 00H
	ORG $+3
?RGY_CSP_BIT_DEPTH@@3QBEB DB 00H			; RGY_CSP_BIT_DEPTH
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	09H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	010H
	DB	09H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	010H
	DB	09H
	DB	0aH
	DB	0cH
	DB	0eH
	DB	010H
	DB	08H
	DB	010H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	0aH
	DB	08H
	DB	010H
	ORG $+1
?RGY_CSP_CHROMA_FORMAT@@3QBW4RGY_CHROMAFMT@@B DD 00H	; RGY_CSP_CHROMA_FORMAT
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	03H
	DD	00H
	DD	00H
$SG114526 DB	'1.2', 00H
$SG111518 DB	'H.264/AVC', 00H
	ORG $+2
$SG114513 DB	'normal', 00H
	ORG $+1
$SG114527 DB	'1.3', 00H
$SG111520 DB	'H.265/HEVC', 00H
	ORG $+1
$SG111526 DB	'VC-1', 00H
	ORG $+3
$SG112138 DB	'bt709', 00H
	ORG $+2
$SG114519 DB	'repeat', 00H
	ORG $+1
$SG114528 DB	'2', 00H
	ORG $+2
$SG111534 DB	'unknown', 00H
$SG111641 DB	'unknown', 00H
$SG128032 DB	'invalid argument', 00H
	ORG $+7
$SG128037 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG128034 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG112137 DB	'auto', 00H
	ORG $+3
$SG128035 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG128036 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG128078 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG112140 DB	'bt470bg', 00H
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112136	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112137
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112138
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112139
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112140
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112141
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112142
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112143
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112144
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112145
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112146
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112147
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112148
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112149
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112150
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112139 DB	'smpte170m', 00H
	ORG $+2
$SG114529 DB	'2.1', 00H
$SG112141 DB	'smpte240m', 00H
	ORG $+2
$SG112142 DB	'YCgCo', 00H
	ORG $+2
$SG114530 DB	'2.2', 00H
$SG112145 DB	'bt2020nc', 00H
	ORG $+3
$SG112149 DB	'ictco', 00H
	ORG $+2
$SG114531 DB	'3', 00H
	ORG $+2
$SG112146 DB	'bt2020c', 00H
$SG112147 DB	'derived-ncl', 00H
$SG114532 DB	'3.1', 00H
$SG112148 DB	'derived-cl', 00H
	ORG $+1
$SG114533 DB	'3.2', 00H
$SG112150 DB	'2100-lms', 00H
	ORG $+3
$SG112291 DB	'undef', 00H
	ORG $+6
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG112291	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112292
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112293
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112294
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112295
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112296
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112297
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112298
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112299
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112300
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112301
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112302
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112303
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112304
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112305
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG112306
	DD	010H
	ORG $+4
	DQ	FLAT:$SG112307
	DD	011H
	ORG $+4
	DQ	FLAT:$SG112308
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112292 DB	'auto', 00H
	ORG $+3
$SG112293 DB	'bt709', 00H
	ORG $+2
$SG112294 DB	'smpte170m', 00H
	ORG $+2
$SG114534 DB	'4', 00H
	ORG $+2
$SG112296 DB	'bt470bg', 00H
$SG112297 DB	'smpte240m', 00H
	ORG $+2
$SG114535 DB	'4.1', 00H
$SG112301 DB	'iec61966-2-4', 00H
	ORG $+3
$SG112302 DB	'bt1361e', 00H
$SG112303 DB	'iec61966-2-1', 00H
	ORG $+3
$SG112304 DB	'bt2020-10', 00H
	ORG $+2
$SG114536 DB	'4.2', 00H
$SG112305 DB	'bt2020-12', 00H
	ORG $+2
$SG114537 DB	'5', 00H
	ORG $+2
$SG112306 DB	'smpte2084', 00H
	ORG $+2
$SG114538 DB	'5.1', 00H
$SG112307 DB	'smpte428', 00H
	ORG $+3
$SG112440 DB	'undef', 00H
	ORG $+2
$SG114539 DB	'5.2', 00H
$SG112308 DB	'arib-srd-b67', 00H
	ORG $+3
$SG112441 DB	'auto', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG112440	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112441
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112442
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112443
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112444
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112445
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112446
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112447
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112448
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112449
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112450
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112451
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112452
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112442 DB	'bt709', 00H
	ORG $+2
$SG112443 DB	'smpte170m', 00H
	ORG $+2
$SG114542 DB	'1', 00H
	ORG $+2
$SG112445 DB	'bt470bg', 00H
$SG112446 DB	'smpte240m', 00H
	ORG $+2
$SG112447 DB	'film', 00H
	ORG $+3
$SG112449 DB	'st428', 00H
	ORG $+2
$SG114543 DB	'2', 00H
	ORG $+2
$SG112450 DB	'st431-2', 00H
$SG112451 DB	'st432-1', 00H
$SG112452 DB	'ebu3213-e', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG112454	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112455
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112456
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112457
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112458
	DD	03H
	ORG $+4
	DQ	FLAT:$SG112459
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112454 DB	'undef', 00H
	ORG $+2
$SG112455 DB	'ntsc', 00H
	ORG $+3
$SG112456 DB	'component', 00H
	ORG $+2
$SG112458 DB	'secam', 00H
	ORG $+2
$SG114544 DB	'2.1', 00H
$SG112468 DB	'limited', 00H
$SG112469 DB	'full', 00H
	ORG $+3
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG113553 DB	'trace', 00H
	ORG $+2
$SG113554 DB	'debug', 00H
	ORG $+2
$SG113555 DB	'more', 00H
	ORG $+3
$SG113556 DB	'info', 00H
	ORG $+3
$SG113557 DB	'warn', 00H
	ORG $+3
$SG113558 DB	'error', 00H
	ORG $+2
$SG113562 DB	'forcecfr', 00H
	ORG $+3
$SG113565 DB	'soxr', 00H
	ORG $+3
$SG114452 DB	'h264', 00H
	ORG $+3
$SG114453 DB	'hevc', 00H
	ORG $+3
$SG114454 DB	'mpeg2', 00H
	ORG $+2
$SG114455 DB	'vc-1', 00H
	ORG $+3
$SG114462 DB	'AVBR', 00H
	ORG $+3
$SG114468 DB	'QVBR', 00H
	ORG $+7
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG114471	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114472
	DD	042H
	ORG $+4
	DQ	FLAT:$SG114473
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG114474
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114471 DB	'auto', 00H
	ORG $+3
$SG114472 DB	'Baseline', 00H
	ORG $+3
$SG114473 DB	'Main', 00H
	ORG $+3
$SG114474 DB	'High', 00H
	ORG $+3
$SG114476 DB	'auto', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG114476	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114477
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114478
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114477 DB	'main', 00H
	ORG $+3
$SG114480 DB	'main', 00H
	ORG $+3
$SG114481 DB	'high', 00H
	ORG $+3
$SG114483 DB	'auto', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG114483	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114484
	DD	050H
	ORG $+4
	DQ	FLAT:$SG114485
	DD	040H
	ORG $+4
	DQ	FLAT:$SG114486
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114485 DB	'Main', 00H
	ORG $+3
$SG114486 DB	'High', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG114488	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114489
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114490
	DD	05H
	ORG $+4
	DQ	FLAT:$SG114491
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114488 DB	'auto', 00H
	ORG $+3
$SG114490 DB	'Main', 00H
	ORG $+3
$SG114491 DB	'Advanced', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG114493	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114494
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114495
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114496
	DD	03H
	ORG $+4
	DQ	FLAT:$SG114497
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114493 DB	'auto', 00H
	ORG $+3
$SG114499 DB	'auto', 00H
	ORG $+3
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG114499	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114500
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114501
	DD	02H
	ORG $+4
	DQ	FLAT:$SG114502
	DD	03H
	ORG $+4
	DQ	FLAT:$SG114503
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114508 DB	'progressive', 00H
$SG114545 DB	'3', 00H
	ORG $+2
$SG114509 DB	'interlaced(tff)', 00H
$SG114510 DB	'interlaced(bff)', 00H
$SG114512 DB	'none', 00H
	ORG $+3
$SG114518 DB	'2332', 00H
	ORG $+3
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG114522	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114523
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG114524
	DD	09H
	ORG $+4
	DQ	FLAT:$SG114525
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG114526
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG114527
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG114528
	DD	014H
	ORG $+4
	DQ	FLAT:$SG114529
	DD	015H
	ORG $+4
	DQ	FLAT:$SG114530
	DD	016H
	ORG $+4
	DQ	FLAT:$SG114531
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG114532
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG114533
	DD	020H
	ORG $+4
	DQ	FLAT:$SG114534
	DD	028H
	ORG $+4
	DQ	FLAT:$SG114535
	DD	029H
	ORG $+4
	DQ	FLAT:$SG114536
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG114537
	DD	032H
	ORG $+4
	DQ	FLAT:$SG114538
	DD	033H
	ORG $+4
	DQ	FLAT:$SG114539
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114522 DB	'auto', 00H
	ORG $+3
$SG114541 DB	'auto', 00H
	ORG $+3
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG114541	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114542
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG114543
	DD	014H
	ORG $+4
	DQ	FLAT:$SG114544
	DD	015H
	ORG $+4
	DQ	FLAT:$SG114545
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG114546
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG114547
	DD	028H
	ORG $+4
	DQ	FLAT:$SG114548
	DD	029H
	ORG $+4
	DQ	FLAT:$SG114549
	DD	032H
	ORG $+4
	DQ	FLAT:$SG114550
	DD	033H
	ORG $+4
	DQ	FLAT:$SG114551
	DD	034H
	ORG $+4
	DQ	FLAT:$SG114552
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG114553
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG114554
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114546 DB	'3.1', 00H
$SG114547 DB	'4', 00H
	ORG $+2
$SG114548 DB	'4.1', 00H
$SG114549 DB	'5', 00H
	ORG $+2
$SG114550 DB	'5.1', 00H
$SG114551 DB	'5.2', 00H
$SG114552 DB	'6', 00H
	ORG $+2
$SG114553 DB	'6.1', 00H
$SG114554 DB	'6.2', 00H
$SG114556 DB	'auto', 00H
	ORG $+7
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG114556	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114557
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG114558
	DD	08H
	ORG $+4
	DQ	FLAT:$SG114559
	DD	04H
	ORG $+4
	DQ	FLAT:$SG114560
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114557 DB	'low', 00H
$SG114558 DB	'main', 00H
	ORG $+3
$SG114559 DB	'high', 00H
	ORG $+3
$SG114563 DB	'low', 00H
$SG114560 DB	'high1440', 00H
	ORG $+3
$SG114562 DB	'auto', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG114562	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG114563
	DD	01H
	ORG $+4
	DQ	FLAT:$SG114564
	DD	03H
	ORG $+4
	DQ	FLAT:$SG114565
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114564 DB	'median', 00H
	ORG $+1
$SG114565 DB	'high', 00H
	ORG $+3
$SG114567 DB	'auto', 00H
	ORG $+3
$SG114568 DB	'0', 00H
	ORG $+2
$SG114569 DB	'1', 00H
	ORG $+2
$SG114570 DB	'2', 00H
	ORG $+2
$SG114571 DB	'3', 00H
	ORG $+2
$SG114572 DB	'4', 00H
	ORG $+2
$SG114579 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG114574	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114574 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG114576	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG114576 DB	'auto', 00H
	ORG $+3
$SG114578 DB	'Auto', 00H
	ORG $+3
$SG114580 DB	'for I frames', 00H
	ORG $+3
$SG114581 DB	'for I,P frames', 00H
	ORG $+1
$SG114582 DB	'for All frames', 00H
	ORG $+1
$SG114584 DB	'auto', 00H
	ORG $+3
$SG114585 DB	'off', 00H
$SG114586 DB	'i', 00H
	ORG $+2
$SG114587 DB	'ip', 00H
	ORG $+1
$SG114588 DB	'all', 00H
$SG114589 DB	'ipb', 00H
$SG114590 DB	'ib', 00H
	ORG $+1
$SG114591 DB	'p', 00H
	ORG $+2
$SG114592 DB	'pb', 00H
	ORG $+1
$SG114593 DB	'b', 00H
	ORG $+2
$SG114595 DB	'auto', 00H
	ORG $+3
$SG114596 DB	'slow', 00H
	ORG $+3
$SG114597 DB	'medium', 00H
	ORG $+1
$SG114598 DB	'fast', 00H
	ORG $+3
$SG114601 DB	'0', 00H
	ORG $+2
$SG114600 DB	'default', 00H
$SG114602 DB	'1', 00H
	ORG $+2
$SG114603 DB	'2', 00H
	ORG $+2
$SG114604 DB	'3', 00H
	ORG $+2
$SG114605 DB	'4', 00H
	ORG $+2
$SG114607 DB	'low', 00H
$SG114608 DB	'normal', 00H
	ORG $+1
$SG114609 DB	'high', 00H
	ORG $+3
$SG114621 DB	'none', 00H
	ORG $+3
$SG114622 DB	'copy', 00H
	ORG $+3
$SG114623 DB	'aac', 00H
$SG114624 DB	'libmp3lame', 00H
	ORG $+1
$SG114629 DB	'ac3', 00H
$SG114625 DB	'libtwolame', 00H
	ORG $+1
$SG114660 DB	'tff', 00H
$SG114626 DB	'libvorbis', 00H
	ORG $+2
$SG114661 DB	'bff', 00H
$SG114627 DB	'pcm_s16le', 00H
	ORG $+2
$SG114672 DB	'higher', 00H
	ORG $+1
$SG114686 DB	'8x8', 00H
$SG114628 DB	'libopus', 00H
$SG114659 DB	'none', 00H
	ORG $+3
$SG114663 DB	' 1 - best quality', 00H
	ORG $+2
$SG114676 DB	'faster', 00H
	ORG $+1
$SG114687 DB	'4x4', 00H
$SG114664 DB	' 2 - higher', 00H
	ORG $+4
$SG114665 DB	' 3 - high quality', 00H
	ORG $+6
$SG114666 DB	' 4 - balanced', 00H
	ORG $+2
$SG114667 DB	' 5 - fast', 00H
	ORG $+6
$SG114668 DB	' 6 - faster', 00H
	ORG $+4
$SG114669 DB	' 7 - fastest', 00H
	ORG $+3
$SG114671 DB	'best', 00H
	ORG $+3
$SG114673 DB	'high', 00H
	ORG $+3
$SG114674 DB	'balanced', 00H
	ORG $+3
$SG114675 DB	'fast', 00H
	ORG $+7
$SG114677 DB	'fastest', 00H
$SG114679 DB	'Auto', 00H
	ORG $+3
$SG114680 DB	'full-pel', 00H
	ORG $+7
$SG114681 DB	'half-pel', 00H
	ORG $+3
$SG114682 DB	'Q-pel', 00H
	ORG $+2
$SG114684 DB	'Auto', 00H
	ORG $+3
$SG114685 DB	'16x16', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	_tcscmp
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	??0_Iterator_base12_compatible@std@@QEAA@XZ	; std::_Iterator_base12_compatible::_Iterator_base12_compatible
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
PUBLIC	?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??0VideoVUIInfo@@QEAA@XZ			; VideoVUIInfo::VideoVUIInfo
PUBLIC	??0VideoInfo@@QEAA@XZ				; VideoInfo::VideoInfo
PUBLIC	?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z		; codec_rgy_to_enc
PUBLIC	?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z		; codec_enc_to_rgy
PUBLIC	?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z	; chromafmt_rgy_to_enc
PUBLIC	?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z	; chromafmt_enc_to_rgy
PUBLIC	?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z		; csp_rgy_to_enc
PUBLIC	?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z		; csp_enc_to_rgy
PUBLIC	?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z	; picstruct_rgy_to_enc
PUBLIC	?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z	; picstruct_enc_to_rgy
PUBLIC	?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z ; frameinfo_rgy_to_enc
PUBLIC	?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z ; videooutputinfo
PUBLIC	?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z ; videooutputinfo
PUBLIC	?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z ; qsv_memtype_str
PUBLIC	?get_low_power_str@@YAPEBDG@Z			; get_low_power_str
PUBLIC	?get_err_mes@@YAPEBDH@Z				; get_err_mes
PUBLIC	?ColorFormatToStr@@YAPEBDI@Z			; ColorFormatToStr
PUBLIC	?CodecIdToStr@@YAPEBDI@Z			; CodecIdToStr
PUBLIC	?TargetUsageToStr@@YAPEBDG@Z			; TargetUsageToStr
PUBLIC	?EncmodeToStr@@YAPEBDI@Z			; EncmodeToStr
PUBLIC	?MemTypeToStr@@YAPEBDI@Z			; MemTypeToStr
PUBLIC	?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ; mfxBitstreamInit
PUBLIC	?mfxBitstreamCopy@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBU2@@Z ; mfxBitstreamCopy
PUBLIC	?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ; mfxBitstreamExtend
PUBLIC	?mfxBitstreamAppend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBEI@Z ; mfxBitstreamAppend
PUBLIC	?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z	; mfxBitstreamClear
PUBLIC	?GetExtBuffer@@YAPEAUmfxExtBuffer@@PEAPEAU1@HI@Z ; GetExtBuffer
PUBLIC	?get_vpp_image_stab_mode_str@@YAPEBDH@Z		; get_vpp_image_stab_mode_str
PUBLIC	??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
PUBLIC	??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >
PUBLIC	??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z ; make_array<std::pair<enum RGY_CODEC,unsigned int>,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> > >
PUBLIC	?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::begin
PUBLIC	?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end
PUBLIC	??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>
PUBLIC	??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator->
PUBLIC	??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator==
PUBLIC	??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<
PUBLIC	??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<=
PUBLIC	?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Compat
PUBLIC	?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Unwrapped
PUBLIC	?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Verify_with
PUBLIC	?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Seek_to
PUBLIC	??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
PUBLIC	??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z ; make_array<std::pair<enum RGY_CHROMAFMT,unsigned int>,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> > >
PUBLIC	?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::begin
PUBLIC	?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end
PUBLIC	??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>
PUBLIC	??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator->
PUBLIC	??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator==
PUBLIC	??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<
PUBLIC	??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<=
PUBLIC	?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Compat
PUBLIC	?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Unwrapped
PUBLIC	?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Verify_with
PUBLIC	?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Seek_to
PUBLIC	??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
PUBLIC	??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
PUBLIC	??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z ; make_array<std::pair<enum RGY_CSP,unsigned int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int> >
PUBLIC	?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::begin
PUBLIC	?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end
PUBLIC	??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>
PUBLIC	??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator->
PUBLIC	??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator==
PUBLIC	??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<
PUBLIC	??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<=
PUBLIC	?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Compat
PUBLIC	?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Unwrapped
PUBLIC	?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Verify_with
PUBLIC	?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Seek_to
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
PUBLIC	??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_AVC> >
PUBLIC	??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
PUBLIC	??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_VP8> >
PUBLIC	??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>
PUBLIC	??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
PUBLIC	??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>
PUBLIC	??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6> >
PUBLIC	??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>
PUBLIC	??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::pair<enum RGY_CODEC,unsigned int> const *>
PUBLIC	??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z ; std::forward<enum RGY_CHROMAFMT>
PUBLIC	??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
PUBLIC	??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> ><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
PUBLIC	??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
PUBLIC	??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4> >
PUBLIC	??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>
PUBLIC	??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::pair<enum RGY_CHROMAFMT,unsigned int> const *>
PUBLIC	??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::pair<enum RGY_CSP,int>::pair<enum RGY_CSP,int><enum RGY_CSP,int,0>
PUBLIC	??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_FOURCC_NV12> >
PUBLIC	??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> ><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
PUBLIC	??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
PUBLIC	??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
PUBLIC	??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27> >
PUBLIC	??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>
PUBLIC	??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::pair<enum RGY_CSP,unsigned int> const *>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ; std::_Verify_range<std::pair<enum RGY_CODEC,unsigned int>,6>
PUBLIC	??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ; std::_Verify_range<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>
PUBLIC	??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ; std::_Verify_range<std::pair<enum RGY_CSP,unsigned int>,27>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_05PKCPKOLM@undef@				; `string'
PUBLIC	??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1LA@OBOBHJLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@ ; `string'
PUBLIC	??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_1LK@DNAKLHAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1LC@BEAHIAPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1KI@NNJDEHMK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_1LC@BFMJDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1KK@JHIPDNJJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@ ; `string'
PUBLIC	??_C@_1LC@EFCLCNBM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ ; `string'
PUBLIC	??_C@_1LM@KAEFEELN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_C@_1LE@LJOKFHEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	strlen:PROC
EXTRN	__imp__mbscmp:PROC
EXTRN	__imp__aligned_free:PROC
EXTRN	__imp__aligned_malloc:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B DB 030H DUP (?) ; RGY_CODEC_TO_MFX
?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B DB 020H DUP (?) ; RGY_CHROMAFMT_TO_MFX
?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B DB 0d8H DUP (?) ; RGY_CSP_TO_MFX
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcscmp DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$_tcscmp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12_compatible@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12_compatible@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+254
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+122
	DD	imagerel $unwind$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA DD imagerel ?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z DD imagerel ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z
	DD	imagerel ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z+23
	DD	imagerel $unwind$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z
$pdata$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z DD imagerel ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z
	DD	imagerel ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z+138
	DD	imagerel $unwind$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VideoVUIInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$??0VideoVUIInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VideoInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0VideoInfo@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z DD imagerel $LN5
	DD	imagerel $LN5+283
	DD	imagerel $unwind$?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z
$pdata$?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+282
	DD	imagerel $unwind$?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z
$pdata$?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z DD imagerel $LN5
	DD	imagerel $LN5+283
	DD	imagerel $unwind$?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z
$pdata$?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+282
	DD	imagerel $unwind$?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z
$pdata$?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z DD imagerel $LN5
	DD	imagerel $LN5+283
	DD	imagerel $unwind$?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z
$pdata$?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+282
	DD	imagerel $unwind$?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z
$pdata$?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z DD imagerel $LN5
	DD	imagerel $LN5+89
	DD	imagerel $unwind$?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z
$pdata$?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z DD imagerel $LN5
	DD	imagerel $LN5+51
	DD	imagerel $unwind$?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z
$pdata$?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z DD imagerel $LN5
	DD	imagerel $LN5+573
	DD	imagerel $unwind$?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z
$pdata$?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z DD imagerel $LN13
	DD	imagerel $LN13+798
	DD	imagerel $unwind$?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z
$pdata$?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z DD imagerel $LN5
	DD	imagerel $LN5+372
	DD	imagerel $unwind$?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z
$pdata$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z DD imagerel $LN17
	DD	imagerel $LN17+536
	DD	imagerel $unwind$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA DD imagerel ?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA
	DD	imagerel ?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA
$pdata$?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA DD imagerel ?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA
	DD	imagerel ?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?get_low_power_str@@YAPEBDG@Z DD imagerel $LN8
	DD	imagerel $LN8+83
	DD	imagerel $unwind$?get_low_power_str@@YAPEBDG@Z
$pdata$?get_err_mes@@YAPEBDH@Z DD imagerel $LN34
	DD	imagerel $LN34+492
	DD	imagerel $unwind$?get_err_mes@@YAPEBDH@Z
$pdata$?ColorFormatToStr@@YAPEBDI@Z DD imagerel $LN16
	DD	imagerel $LN16+231
	DD	imagerel $unwind$?ColorFormatToStr@@YAPEBDI@Z
$pdata$?CodecIdToStr@@YAPEBDI@Z DD imagerel $LN14
	DD	imagerel $LN14+187
	DD	imagerel $unwind$?CodecIdToStr@@YAPEBDI@Z
$pdata$?TargetUsageToStr@@YAPEBDG@Z DD imagerel $LN15
	DD	imagerel $LN15+184
	DD	imagerel $unwind$?TargetUsageToStr@@YAPEBDG@Z
$pdata$?EncmodeToStr@@YAPEBDI@Z DD imagerel $LN18
	DD	imagerel $LN18+240
	DD	imagerel $unwind$?EncmodeToStr@@YAPEBDI@Z
$pdata$?MemTypeToStr@@YAPEBDI@Z DD imagerel $LN10
	DD	imagerel $LN10+110
	DD	imagerel $unwind$?MemTypeToStr@@YAPEBDI@Z
$pdata$?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z DD imagerel $LN4
	DD	imagerel $LN4+115
	DD	imagerel $unwind$?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z
$pdata$?mfxBitstreamCopy@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBU2@@Z DD imagerel $LN4
	DD	imagerel $LN4+178
	DD	imagerel $unwind$?mfxBitstreamCopy@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBU2@@Z
$pdata$?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z DD imagerel $LN5
	DD	imagerel $LN5+195
	DD	imagerel $unwind$?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z
$pdata$?mfxBitstreamAppend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBEI@Z DD imagerel $LN7
	DD	imagerel $LN7+280
	DD	imagerel $unwind$?mfxBitstreamAppend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBEI@Z
$pdata$?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z
$pdata$?GetExtBuffer@@YAPEAUmfxExtBuffer@@PEAPEAU1@HI@Z DD imagerel $LN8
	DD	imagerel $LN8+135
	DD	imagerel $unwind$?GetExtBuffer@@YAPEAUmfxExtBuffer@@PEAPEAU1@HI@Z
$pdata$?get_vpp_image_stab_mode_str@@YAPEBDH@Z DD imagerel $LN8
	DD	imagerel $LN8+80
	DD	imagerel $unwind$?get_vpp_image_stab_mode_str@@YAPEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+223
	DD	imagerel $unwind$??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ERGY_CODEC_TO_MFX@@YAXXZ DD imagerel ??__ERGY_CODEC_TO_MFX@@YAXXZ
	DD	imagerel ??__ERGY_CODEC_TO_MFX@@YAXXZ+395
	DD	imagerel $unwind$??__ERGY_CODEC_TO_MFX@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ DD imagerel $LN21
	DD	imagerel $LN21+312
	DD	imagerel $unwind$??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+180
	DD	imagerel $unwind$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+185
	DD	imagerel $unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z DD imagerel ??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z
	DD	imagerel ??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z DD imagerel ??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z
	DD	imagerel ??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z+32
	DD	imagerel $unwind$??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z DD imagerel ??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z
	DD	imagerel ??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z DD imagerel ??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z
	DD	imagerel ??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z+32
	DD	imagerel $unwind$??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z DD imagerel $LN3
	DD	imagerel $LN3+175
	DD	imagerel $unwind$??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ DD imagerel ??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ
	DD	imagerel ??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ+239
	DD	imagerel $unwind$??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ DD imagerel $LN21
	DD	imagerel $LN21+312
	DD	imagerel $unwind$??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+180
	DD	imagerel $unwind$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+185
	DD	imagerel $unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z DD imagerel ??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z
	DD	imagerel ??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z DD imagerel ??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z
	DD	imagerel ??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z+32
	DD	imagerel $unwind$??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z DD imagerel ??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z
	DD	imagerel ??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z DD imagerel ??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z
	DD	imagerel ??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z+32
	DD	imagerel $unwind$??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z DD imagerel $LN3
	DD	imagerel $LN3+658
	DD	imagerel $unwind$??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ERGY_CSP_TO_MFX@@YAXXZ DD imagerel ??__ERGY_CSP_TO_MFX@@YAXXZ
	DD	imagerel ??__ERGY_CSP_TO_MFX@@YAXXZ+2003
	DD	imagerel $unwind$??__ERGY_CSP_TO_MFX@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ DD imagerel $LN21
	DD	imagerel $LN21+312
	DD	imagerel $unwind$??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+99
	DD	imagerel $unwind$??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+180
	DD	imagerel $unwind$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+30
	DD	imagerel $unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+185
	DD	imagerel $unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z DD imagerel ??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z
	DD	imagerel ??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z DD imagerel ??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z
	DD	imagerel ??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z+32
	DD	imagerel $unwind$??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z DD imagerel ??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z
	DD	imagerel ??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z+74
	DD	imagerel $unwind$??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z DD imagerel ??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z
	DD	imagerel ??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z+32
	DD	imagerel $unwind$??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z DD imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z
	DD	imagerel ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z+213
	DD	imagerel $unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1LE@LJOKFHEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LE@LJOKFHEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'O', 00H, 'D', 00H, 'E', 00H, 'C', 00H, ',', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H
	DB	',', 00H, '6', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'V'
	DB	00H, 'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H
	DB	'w', 00H, 'i', 00H, 't', 00H, 'h', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LM@KAEFEELN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LM@KAEFEELN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'H', 00H, 'R', 00H, 'O', 00H, 'M', 00H, 'A', 00H
	DB	'F', 00H, 'M', 00H, 'T', 00H, ',', 00H, 'u', 00H, 'n', 00H, 's'
	DB	00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, '4', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H, 'e', 00H, 'r', 00H
	DB	'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'w', 00H, 'i', 00H, 't'
	DB	00H, 'h', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ DB '"'
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H
	DB	'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's'
	DB	00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@EFCLCNBM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LC@EFCLCNBM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'S', 00H, 'P', 00H, ',', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, '2', 00H
	DB	'7', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H, 'e'
	DB	00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'w', 00H
	DB	'i', 00H, 't', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@
CONST	SEGMENT
??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@ DB 'array iterator'
	DB	' range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1KK@JHIPDNJJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1KK@JHIPDNJJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'O', 00H, 'D', 00H, 'E', 00H, 'C', 00H, ',', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H
	DB	',', 00H, '6', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@BFMJDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LC@BFMJDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'H', 00H, 'R', 00H, 'O', 00H, 'M', 00H, 'A', 00H
	DB	'F', 00H, 'M', 00H, 'T', 00H, ',', 00H, 'u', 00H, 'n', 00H, 's'
	DB	00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, '4', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, 'a', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
CONST	SEGMENT
??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@ DB '"'
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b'
	DB	00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KI@NNJDEHMK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1KI@NNJDEHMK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'S', 00H, 'P', 00H, ',', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, '2', 00H
	DB	'7', 00H, '>', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o'
	DB	00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@ DB 'array iterators in'
	DB	'compatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@BEAHIAPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LC@BEAHIAPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'O', 00H, 'D', 00H, 'E', 00H, 'C', 00H, ',', 00H
	DB	'u', 00H, 'n', 00H, 's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H
	DB	',', 00H, '6', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p'
	DB	00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, '-', 00H, '>', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1LK@DNAKLHAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LK@DNAKLHAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'H', 00H, 'R', 00H, 'O', 00H, 'M', 00H, 'A', 00H
	DB	'F', 00H, 'M', 00H, 'T', 00H, ',', 00H, 'u', 00H, 'n', 00H, 's'
	DB	00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, '4', 00H, '>'
	DB	00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H, '>'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' '
	DB	00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H
	DB	'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@
CONST	SEGMENT
??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@ DB 'cannot derefe'
	DB	'rence out of range array iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r'
	DB	00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1LA@OBOBHJLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
CONST	SEGMENT
??_C@_1LA@OBOBHJLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, '_', 00H, 'c', 00H, 'o'
	DB	00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'a', 00H, 'i', 00H, 'r', 00H, '<', 00H, 'e', 00H, 'n', 00H
	DB	'u', 00H, 'm', 00H, ' ', 00H, 'R', 00H, 'G', 00H, 'Y', 00H, '_'
	DB	00H, 'C', 00H, 'S', 00H, 'P', 00H, ',', 00H, 'u', 00H, 'n', 00H
	DB	's', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' '
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, '>', 00H, ',', 00H, '2', 00H
	DB	'7', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'-', 00H, '>', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized array iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05PKCPKOLM@undef@
CONST	SEGMENT
??_C@_05PKCPKOLM@undef@ DB 'undef', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_0ad8fa6519b6c03665d5b8f081ca73db> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_0ad8fa6519b6c03665d5b8f081ca73db> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_0ad8fa6519b6c03665d5b8f081ca73db> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_940f71a84cfb21c8f5f3a8182c07751e> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_940f71a84cfb21c8f5f3a8182c07751e> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_940f71a84cfb21c8f5f3a8182c07751e> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ERGY_CSP_TO_MFX@@YAXXZ DD 031801H
	DD	06c0109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DB 040H
	DD	imagerel $ip2state$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DB 040H
	DD	imagerel $ip2state$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z DD 044619H
	DD	023011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_453bfd33c28a0eef33955ce04e83c26c> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_453bfd33c28a0eef33955ce04e83c26c> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_453bfd33c28a0eef33955ce04e83c26c> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_19c3b9fb6a4298110262f5ae779451eb> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_19c3b9fb6a4298110262f5ae779451eb> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_19c3b9fb6a4298110262f5ae779451eb> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ DD 031801H
	DD	0120109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DB 040H
	DD	imagerel $ip2state$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DB 040H
	DD	imagerel $ip2state$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_f1478776e17ba2826247782c07ebe727> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_f1478776e17ba2826247782c07ebe727> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_f1478776e17ba2826247782c07ebe727> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z DD 032e01H
	DD	07016821aH
	DD	06015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z$rtcName$0 DB 05fH ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_7ee89da6d47de3e981d156648f378f28> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
	ORG $+8
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z$rtcVarDesc DD 028H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_7ee89da6d47de3e981d156648f378f28> >
	DD	08H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z$rtcName$0
	ORG $+48
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z$rtcFrameData DD 01H ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_7ee89da6d47de3e981d156648f378f28> >
	DD	00H
	DQ	FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ERGY_CODEC_TO_MFX@@YAXXZ DD 031801H
	DD	01a0109H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DB 040H
	DD	imagerel $ip2state$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DB 040H
	DD	imagerel $ip2state$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z DD 034019H
	DD	07016c21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	058H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z DD 022801H
	DD	070105214H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z$rtcName$0 DB 072H	; codec_rgy_to_enc
	DB	065H
	DB	074H
	DB	00H
?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z$rtcName$0 DB 072H ; codec_enc_to_rgy
	DB	065H
	DB	074H
	DB	00H
	ORG $+4
?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z$rtcVarDesc DD 028H ; codec_rgy_to_enc
	DD	020H
	DQ	FLAT:?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z$rtcName$0
	ORG $+48
?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z$rtcFrameData DD 01H ; codec_rgy_to_enc
	DD	00H
	DQ	FLAT:?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z$rtcVarDesc
?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z$rtcVarDesc DD 028H ; codec_enc_to_rgy
	DD	020H
	DQ	FLAT:?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z$rtcName$0
	ORG $+48
?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z$rtcFrameData DD 01H ; codec_enc_to_rgy
	DD	00H
	DQ	FLAT:?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z$rtcVarDesc
?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z$rtcName$0 DB 072H ; chromafmt_rgy_to_enc
	DB	065H
	DB	074H
	DB	00H
?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z$rtcName$0 DB 072H ; chromafmt_enc_to_rgy
	DB	065H
	DB	074H
	DB	00H
?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z$rtcName$0 DB 072H	; csp_rgy_to_enc
	DB	065H
	DB	074H
	DB	00H
	ORG $+4
?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z$rtcVarDesc DD 028H ; chromafmt_rgy_to_enc
	DD	020H
	DQ	FLAT:?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z$rtcName$0
	ORG $+48
?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z$rtcFrameData DD 01H ; chromafmt_rgy_to_enc
	DD	00H
	DQ	FLAT:?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z$rtcVarDesc
?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z$rtcVarDesc DD 028H ; chromafmt_enc_to_rgy
	DD	020H
	DQ	FLAT:?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z$rtcName$0
	ORG $+48
?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z$rtcFrameData DD 01H ; chromafmt_enc_to_rgy
	DD	00H
	DQ	FLAT:?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z$rtcVarDesc
?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z$rtcVarDesc DD 028H	; csp_rgy_to_enc
	DD	020H
	DQ	FLAT:?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z$rtcName$0
	ORG $+48
?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z$rtcFrameData DD 01H	; csp_rgy_to_enc
	DD	00H
	DQ	FLAT:?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z$rtcVarDesc
?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcName$0 DB 072H	; csp_enc_to_rgy
	DB	065H
	DB	074H
	DB	00H
?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z$rtcName$0 DB 06dH ; frameinfo_rgy_to_enc
	DB	066H
	DB	078H
	DB	00H
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z$rtcName$0 DB 069H ; videooutputinfo
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcVarDesc DD 028H	; csp_enc_to_rgy
	DD	020H
	DQ	FLAT:?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcName$0
	ORG $+48
?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcFrameData DD 01H	; csp_enc_to_rgy
	DD	00H
	DQ	FLAT:?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcVarDesc
?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z$rtcVarDesc DD 030H ; frameinfo_rgy_to_enc
	DD	044H
	DQ	FLAT:?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z$rtcName$0
	ORG $+48
?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z$rtcFrameData DD 01H ; frameinfo_rgy_to_enc
	DD	00H
	DQ	FLAT:?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z$rtcVarDesc
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z$rtcVarDesc DD 030H ; videooutputinfo
	DD	090H
	DQ	FLAT:?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z$rtcName$0
	ORG $+48
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z$rtcFrameData DD 01H ; videooutputinfo
	DD	00H
	DQ	FLAT:?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z$rtcVarDesc
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z$rtcName$0 DB 069H ; videooutputinfo
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z$rtcFrameData DD 01H ; videooutputinfo
	DD	00H
	DQ	FLAT:?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z$rtcVarDesc
?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z$rtcName$0 DB 073H ; qsv_memtype_str
	DB	074H
	DB	072H
	DB	00H
	ORG $+4
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z$rtcVarDesc DD 030H ; videooutputinfo
	DD	090H
	DQ	FLAT:?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z$rtcName$0
	ORG $+48
?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z$rtcVarDesc DD 028H ; qsv_memtype_str
	DD	028H
	DQ	FLAT:?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z$rtcName$0
	ORG $+48
?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z$rtcFrameData DD 01H ; qsv_memtype_str
	DD	00H
	DQ	FLAT:?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VideoInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VideoVUIInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
xdata	SEGMENT
$unwind$??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z DD 010901H
	DD	07009H
$unwind$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z DD 022301H
	DD	0700b520fH
$unwind$?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z DD 042301H
	DD	023010dH
	DD	060057006H
$unwind$?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z DD 021c01H
	DD	070053209H
$unwind$?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z DD 010601H
	DD	07006H
$unwind$?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z DD 043c19H
	DD	0150113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	098H
$unwind$?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z DD 044619H
	DD	01f011dH
	DD	060157016H
	DD	imagerel __GSHandlerCheck
	DD	0e8H
$unwind$?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z DD 043c19H
	DD	01d0113H
	DD	0600b700cH
	DD	imagerel __GSHandlerCheck
	DD	0d8H
$unwind$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z DD 023519H
	DD	0700bd20fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z
	DD	06aH
$cppxdata$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z DB 08H
	DD	imagerel $stateUnwindMap$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z
	DD	imagerel $ip2state$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z
$stateUnwindMap$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA
$ip2state$?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z DB 06H
	DB	00H
	DB	00H
	DB	090H
	DB	04H
	DB	'U', 06H
	DB	02H
$unwind$?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?get_low_power_str@@YAPEBDG@Z DD 021e01H
	DD	07006120aH
$unwind$?get_err_mes@@YAPEBDH@Z DD 021c01H
	DD	070051209H
$unwind$?ColorFormatToStr@@YAPEBDI@Z DD 021c01H
	DD	070051209H
$unwind$?CodecIdToStr@@YAPEBDI@Z DD 021c01H
	DD	070051209H
$unwind$?TargetUsageToStr@@YAPEBDG@Z DD 021e01H
	DD	07006120aH
$unwind$?EncmodeToStr@@YAPEBDI@Z DD 021c01H
	DD	070051209H
$unwind$?MemTypeToStr@@YAPEBDI@Z DD 021c01H
	DD	070051209H
$unwind$?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z DD 022201H
	DD	0700a520eH
$unwind$?mfxBitstreamCopy@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBU2@@Z DD 022301H
	DD	0700b520fH
$unwind$?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z DD 022201H
	DD	0700a520eH
$unwind$?mfxBitstreamAppend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBEI@Z DD 022801H
	DD	070105214H
$unwind$?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z DD 021e01H
	DD	07006320aH
$unwind$?GetExtBuffer@@YAPEAUmfxExtBuffer@@PEAPEAU1@HI@Z DD 022701H
	DD	0700f1213H
$unwind$?get_vpp_image_stab_mode_str@@YAPEBDH@Z DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DB 04H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DB 08H
	DD	imagerel $stateUnwindMap$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
	DD	imagerel $ip2state$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z DD 022d11H
	DD	070157219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	039H
	DB	00H
	ORG $+12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0a2H
	DB	02H
	DB	'~'
	DB	04H
	DB	'z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z DD 023311H
	DD	07015f21cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	034H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12_compatible@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcscmp DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RGY_CODEC_TO_MFX$initializer$@@3P6AXXZEA DQ FLAT:??__ERGY_CODEC_TO_MFX@@YAXXZ ; RGY_CODEC_TO_MFX$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RGY_CHROMAFMT_TO_MFX$initializer$@@3P6AXXZEA DQ FLAT:??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ ; RGY_CHROMAFMT_TO_MFX$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?RGY_CSP_TO_MFX$initializer$@@3P6AXXZEA DQ FLAT:??__ERGY_CSP_TO_MFX@@YAXXZ ; RGY_CSP_TO_MFX$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z PROC ; std::_Verify_range<std::pair<enum RGY_CSP,unsigned int>,27>, COMDAT

; 1462 :     const _Array_const_iterator<_Ty, _Size>& _First, const _Array_const_iterator<_Ty, _Size>& _Last) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1463 :     // TRANSITION, VSO#612785
; 1464 :     _First._Verify_with(_Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Verify_with

; 1465 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ENDP ; std::_Verify_range<std::pair<enum RGY_CSP,unsigned int>,27>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z PROC ; std::_Verify_range<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>, COMDAT

; 1462 :     const _Array_const_iterator<_Ty, _Size>& _First, const _Array_const_iterator<_Ty, _Size>& _Last) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1463 :     // TRANSITION, VSO#612785
; 1464 :     _First._Verify_with(_Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Verify_with

; 1465 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ENDP ; std::_Verify_range<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z PROC ; std::_Verify_range<std::pair<enum RGY_CODEC,unsigned int>,6>, COMDAT

; 1462 :     const _Array_const_iterator<_Ty, _Size>& _First, const _Array_const_iterator<_Ty, _Size>& _Last) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1463 :     // TRANSITION, VSO#612785
; 1464 :     _First._Verify_with(_Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Verify_with

; 1465 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ENDP ; std::_Verify_range<std::pair<enum RGY_CODEC,unsigned int>,6>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG128032
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG128033
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG128034
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG128035
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG128036
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG128037
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z PROC ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::pair<enum RGY_CSP,unsigned int> const *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z ENDP ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::pair<enum RGY_CSP,unsigned int> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z PROC ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z ENDP ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z PROC ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27> >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Verify_range@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ; std::_Verify_range<std::pair<enum RGY_CSP,unsigned int>,27>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z PROC ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>, COMDAT

; 165  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	89 01		 mov	 DWORD PTR [rcx], eax
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 83 c0 04	 add	 rax, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_FOURCC_NV12> >
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ENDP ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z PROC ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>, COMDAT

; 165  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	89 01		 mov	 DWORD PTR [rcx], eax
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 83 c0 04	 add	 rax, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ENDP ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z PROC ; std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> ><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_FOURCC_NV12> >
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ENDP ; std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> ><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z PROC ; std::forward<enum <unnamed-enum-MFX_FOURCC_NV12> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z ENDP ; std::forward<enum <unnamed-enum-MFX_FOURCC_NV12> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z PROC ; std::pair<enum RGY_CSP,int>::pair<enum RGY_CSP,int><enum RGY_CSP,int,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z ENDP ; std::pair<enum RGY_CSP,int>::pair<enum RGY_CSP,int><enum RGY_CSP,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z PROC ; std::forward<enum RGY_CSP>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ENDP ; std::forward<enum RGY_CSP>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z PROC ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::pair<enum RGY_CHROMAFMT,unsigned int> const *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z ENDP ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::pair<enum RGY_CHROMAFMT,unsigned int> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z PROC ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z ENDP ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z PROC ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4> >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Verify_range@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ; std::_Verify_range<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ENDP ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z PROC ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>, COMDAT

; 165  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z ; std::forward<enum RGY_CHROMAFMT>
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	89 01		 mov	 DWORD PTR [rcx], eax
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 83 c0 04	 add	 rax, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z ENDP ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z PROC ; std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> ><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z ; std::forward<enum RGY_CHROMAFMT>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ENDP ; std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> ><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z PROC ; std::forward<enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z ENDP ; std::forward<enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z PROC ; std::forward<enum RGY_CHROMAFMT>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z ENDP ; std::forward<enum RGY_CHROMAFMT>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z
_TEXT	SEGMENT
_It$ = 48
_UIt$ = 56
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z PROC ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::pair<enum RGY_CODEC,unsigned int> const *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _UIt$[rsp]
  00028	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z ENDP ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::pair<enum RGY_CODEC,unsigned int> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z
_TEXT	SEGMENT
_It$ = 48
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z PROC ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _It$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Unwrapped

; 260  : }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z ENDP ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z PROC ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6> >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Verify_range@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ; std::_Verify_range<std::pair<enum RGY_CODEC,unsigned int>,6>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ENDP ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z PROC ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>, COMDAT

; 165  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	89 01		 mov	 DWORD PTR [rcx], eax
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 83 c0 04	 add	 rax, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_VP8> >
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z ENDP ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z PROC ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>, COMDAT

; 165  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	8b 00		 mov	 eax, DWORD PTR [rax]
  00037	89 01		 mov	 DWORD PTR [rcx], eax
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 83 c0 04	 add	 rax, 4
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_AVC> >
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ENDP ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z PROC ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_VP8> >
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z ENDP ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z PROC ; std::forward<enum <unnamed-enum-MFX_CODEC_VP8> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z ENDP ; std::forward<enum <unnamed-enum-MFX_CODEC_VP8> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z PROC ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	8b 00		 mov	 eax, DWORD PTR [rax]
  00039	89 01		 mov	 DWORD PTR [rcx], eax
  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_AVC> >
  00045	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004a	8b 00		 mov	 eax, DWORD PTR [rax]
  0004c	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ENDP ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z PROC ; std::forward<enum <unnamed-enum-MFX_CODEC_AVC> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z ENDP ; std::forward<enum <unnamed-enum-MFX_CODEC_AVC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z PROC ; std::forward<enum RGY_CODEC>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ENDP ; std::forward<enum RGY_CODEC>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_0ad8fa6519b6c03665d5b8f081ca73db> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z ; <lambda_0ad8fa6519b6c03665d5b8f081ca73db>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::pair<enum RGY_CSP,unsigned int> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_0ad8fa6519b6c03665d5b8f081ca73db> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z
_TEXT	SEGMENT
this$ = 16
<var1>$ = 24
??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z PROC ; <lambda_0ad8fa6519b6c03665d5b8f081ca73db>::<lambda_0ad8fa6519b6c03665d5b8f081ca73db>, COMDAT

; 83   : MAP_PAIR_0_1(csp, rgy, RGY_CSP, enc, mfxU32, RGY_CSP_TO_MFX, RGY_CSP_NA, 0);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var1>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z ENDP ; <lambda_0ad8fa6519b6c03665d5b8f081ca73db>::<lambda_0ad8fa6519b6c03665d5b8f081ca73db>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z PROC ; <lambda_0ad8fa6519b6c03665d5b8f081ca73db>::operator(), COMDAT

; 83   : MAP_PAIR_0_1(csp, rgy, RGY_CSP, enc, mfxU32, RGY_CSP_TO_MFX, RGY_CSP_NA, 0);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 2c	 cmp	 DWORD PTR a$[rsp+4], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z ENDP ; <lambda_0ad8fa6519b6c03665d5b8f081ca73db>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_940f71a84cfb21c8f5f3a8182c07751e> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CSP@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z ; <lambda_940f71a84cfb21c8f5f3a8182c07751e>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@PEBU?$pair@W4RGY_CSP@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@AEBQEBU?$pair@W4RGY_CSP@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,std::pair<enum RGY_CSP,unsigned int> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_940f71a84cfb21c8f5f3a8182c07751e> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z
_TEXT	SEGMENT
this$ = 16
<var0>$ = 24
??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z PROC ; <lambda_940f71a84cfb21c8f5f3a8182c07751e>::<lambda_940f71a84cfb21c8f5f3a8182c07751e>, COMDAT

; 83   : MAP_PAIR_0_1(csp, rgy, RGY_CSP, enc, mfxU32, RGY_CSP_TO_MFX, RGY_CSP_NA, 0);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var0>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z ENDP ; <lambda_940f71a84cfb21c8f5f3a8182c07751e>::<lambda_940f71a84cfb21c8f5f3a8182c07751e>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z PROC ; <lambda_940f71a84cfb21c8f5f3a8182c07751e>::operator(), COMDAT

; 83   : MAP_PAIR_0_1(csp, rgy, RGY_CSP, enc, mfxU32, RGY_CSP_TO_MFX, RGY_CSP_NA, 0);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 28	 cmp	 DWORD PTR a$[rsp], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEBA_NU?$pair@W4RGY_CSP@@I@std@@@Z ENDP ; <lambda_940f71a84cfb21c8f5f3a8182c07751e>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z
_TEXT	SEGMENT
this$ = 16
_It$ = 24
?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Seek_to, COMDAT

; 1449 :     constexpr void _Seek_to(pointer _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 1450 :         _Idx = static_cast<size_t>(_It - _Ptr);

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00014	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _It$[rsp]
  00019	48 2b c8	 sub	 rcx, rax
  0001c	48 8b c1	 mov	 rax, rcx
  0001f	48 c1 f8 03	 sar	 rax, 3
  00023	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00028	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 1451 :     }

  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAAXPEBU?$pair@W4RGY_CSP@@I@2@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Last$ = 72
?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Verify_with, COMDAT

; 1444 :     constexpr void _Verify_with(const _Array_const_iterator& _Last) const noexcept {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_wit:

; 1445 :         // note _Compat check inside operator<=
; 1446 :         _STL_VERIFY(*this <= _Last, "array iterator range transposed");

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<=
  00032	90		 npad	 1
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 02		 je	 SHORT $LN7@Verify_wit
  0003a	eb 6d		 jmp	 SHORT $LN9@Verify_wit
$LN7@Verify_wit:
  0003c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@
  00043	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00054	45 33 c9	 xor	 r9d, r9d
  00057	41 b8 a6 05 00
	00		 mov	 r8d, 1446		; 000005a6H
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00064	b9 02 00 00 00	 mov	 ecx, 2
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006f	90		 npad	 1
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 03		 jne	 SHORT $LN11@Verify_wit
  00075	cc		 int	 3
  00076	33 c0		 xor	 eax, eax
$LN11@Verify_wit:
  00078	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00081	41 b9 a6 05 00
	00		 mov	 r9d, 1446		; 000005a6H
  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LC@EFCLCNBM@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00095	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  0009c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a2	90		 npad	 1
  000a3	33 c0		 xor	 eax, eax
  000a5	85 c0		 test	 eax, eax
  000a7	75 93		 jne	 SHORT $LN7@Verify_wit
$LN9@Verify_wit:
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	0f 85 70 ff ff
	ff		 jne	 $LN4@Verify_wit

; 1447 :     }

  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Verify_with
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Unwrapped, COMDAT

; 1440 :     _NODISCARD constexpr pointer _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1441 :         return _Ptr + _Idx;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00018	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1442 :     }

  0001c	5f		 pop	 rdi
  0001d	c3		 ret	 0
?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@2@XZ ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Right$ = 72
?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Compat, COMDAT

; 1434 :     _CONSTEXPR17 void _Compat(const _Array_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Compat:

; 1435 :         _STL_VERIFY(_Ptr == _Right._Ptr, "array iterators incompatible");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00031	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00035	75 02		 jne	 SHORT $LN8@Compat
  00037	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@
  00040	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00051	45 33 c9	 xor	 r9d, r9d
  00054	41 b8 9b 05 00
	00		 mov	 r8d, 1435		; 0000059bH
  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00061	b9 02 00 00 00	 mov	 ecx, 2
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006c	83 f8 01	 cmp	 eax, 1
  0006f	75 03		 jne	 SHORT $LN11@Compat
  00071	cc		 int	 3
  00072	33 c0		 xor	 eax, eax
$LN11@Compat:
  00074	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007d	41 b9 9b 05 00
	00		 mov	 r9d, 1435		; 0000059bH
  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KI@NNJDEHMK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00091	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  00098	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000a4	33 c0		 xor	 eax, eax
  000a6	85 c0		 test	 eax, eax
  000a8	0f 85 75 ff ff
	ff		 jne	 $LN4@Compat

; 1436 :     }

  000ae	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<=, COMDAT

; 1426 :     _NODISCARD _CONSTEXPR17 bool operator<=(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1427 :         return !(_Right < *this);

  00023	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1428 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??N?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<, COMDAT

; 1417 :     _NODISCARD _CONSTEXPR17 bool operator<(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1418 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Compat

; 1419 :         return _Idx < _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	73 0a		 jae	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1420 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??M?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator==, COMDAT

; 1408 :     _NODISCARD _CONSTEXPR17 bool operator==(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1409 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Compat

; 1410 :         return _Idx == _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	75 0a		 jne	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1411 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ
_TEXT	SEGMENT
this$ = 64
??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator->, COMDAT

; 1332 :     _NODISCARD _CONSTEXPR17 pointer operator->() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 1333 :         _STL_VERIFY(_Ptr, "cannot dereference value-initialized array iterator");

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00028	74 02		 je	 SHORT $LN14@operator
  0002a	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 35 05 00
	00		 mov	 r8d, 1333		; 00000535H
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN19@operator:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 35 05 00
	00		 mov	 r9d, 1333		; 00000535H
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LA@OBOBHJLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 1334 :         _STL_VERIFY(_Idx < _Size, "cannot dereference out of range array iterator");

  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 83 78 18 1b	 cmp	 QWORD PTR [rax+24], 27
  000a7	73 02		 jae	 SHORT $LN16@operator
  000a9	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000ab	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@
  000b2	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000b7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c3	45 33 c9	 xor	 r9d, r9d
  000c6	41 b8 36 05 00
	00		 mov	 r8d, 1334		; 00000536H
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d3	b9 02 00 00 00	 mov	 ecx, 2
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000de	83 f8 01	 cmp	 eax, 1
  000e1	75 03		 jne	 SHORT $LN20@operator
  000e3	cc		 int	 3
  000e4	33 c0		 xor	 eax, eax
$LN20@operator:
  000e6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ef	41 b9 36 05 00
	00		 mov	 r9d, 1334		; 00000536H
  000f5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LA@OBOBHJLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0010a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00110	33 c0		 xor	 eax, eax
  00112	85 c0		 test	 eax, eax
  00114	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00116	33 c0		 xor	 eax, eax
  00118	85 c0		 test	 eax, eax
  0011a	75 81		 jne	 SHORT $LN10@operator

; 1335 :         return _Ptr + _Idx;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00121	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00125	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0012e	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1336 :     }

  00132	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00136	5f		 pop	 rdi
  00137	c3		 ret	 0
??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Off$ = 64
??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>, COMDAT

; 1326 :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) : _Ptr(_Parg), _Idx(_Off) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12_compatible@std@@QEAA@XZ
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Off$[rsp]
  0004a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??__ERGY_CSP_TO_MFX@@YAXXZ
text$di	SEGMENT
$T1 = 224
$T2 = 228
$T3 = 232
$T4 = 240
$T5 = 244
$T6 = 248
$T7 = 256
$T8 = 260
$T9 = 264
$T10 = 272
$T11 = 276
$T12 = 280
$T13 = 288
$T14 = 292
$T15 = 296
$T16 = 304
$T17 = 308
$T18 = 312
$T19 = 320
$T20 = 324
$T21 = 328
$T22 = 336
$T23 = 340
$T24 = 344
$T25 = 352
$T26 = 356
$T27 = 360
$T28 = 368
$T29 = 372
$T30 = 376
$T31 = 384
$T32 = 388
$T33 = 392
$T34 = 400
$T35 = 404
$T36 = 408
$T37 = 416
$T38 = 420
$T39 = 424
$T40 = 432
$T41 = 436
$T42 = 440
$T43 = 448
$T44 = 452
$T45 = 456
$T46 = 464
$T47 = 468
$T48 = 472
$T49 = 480
$T50 = 484
$T51 = 488
$T52 = 496
$T53 = 500
$T54 = 504
$T55 = 512
$T56 = 516
$T57 = 520
$T58 = 528
$T59 = 532
$T60 = 536
$T61 = 544
$T62 = 548
$T63 = 552
$T64 = 560
$T65 = 564
$T66 = 568
$T67 = 576
$T68 = 580
$T69 = 584
$T70 = 592
$T71 = 596
$T72 = 600
$T73 = 608
$T74 = 612
$T75 = 616
$T76 = 624
$T77 = 628
$T78 = 632
$T79 = 640
$T80 = 644
$T81 = 648
tv65 = 656
tv70 = 664
tv75 = 672
tv80 = 680
tv85 = 688
tv90 = 696
tv95 = 704
tv132 = 712
tv137 = 720
tv142 = 728
tv147 = 736
tv152 = 744
tv157 = 752
tv194 = 760
tv199 = 768
tv204 = 776
tv209 = 784
tv214 = 792
tv219 = 800
tv224 = 808
tv229 = 816
tv234 = 824
tv239 = 832
tv244 = 840
tv249 = 848
tv254 = 856
??__ERGY_CSP_TO_MFX@@YAXXZ PROC				; `dynamic initializer for 'RGY_CSP_TO_MFX'', COMDAT

; 81   :     );

  00000	40 57		 push	 rdi
  00002	48 81 ec 60 03
	00 00		 sub	 rsp, 864		; 00000360H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 d8 00 00 00	 mov	 ecx, 216		; 000000d8H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd

; 53   : static const auto RGY_CSP_TO_MFX = make_array<std::pair<RGY_CSP, mfxU32>>(

  00018	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T1[rsp], 0
  00023	c7 84 24 e4 00
	00 00 24 00 00
	00		 mov	 DWORD PTR $T2[rsp], 36	; 00000024H
  0002e	c7 84 24 f0 00
	00 00 52 47 42
	34		 mov	 DWORD PTR $T4[rsp], 876758866 ; 34424752H
  00039	c7 84 24 f4 00
	00 00 1d 00 00
	00		 mov	 DWORD PTR $T5[rsp], 29
  00044	c7 84 24 00 01
	00 00 52 47 42
	33		 mov	 DWORD PTR $T7[rsp], 859981650 ; 33424752H
  0004f	c7 84 24 04 01
	00 00 1c 00 00
	00		 mov	 DWORD PTR $T8[rsp], 28
  0005a	c7 84 24 10 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T10[rsp], 0
  00065	c7 84 24 14 01
	00 00 17 00 00
	00		 mov	 DWORD PTR $T11[rsp], 23
  00070	c7 84 24 20 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T13[rsp], 0
  0007b	c7 84 24 24 01
	00 00 16 00 00
	00		 mov	 DWORD PTR $T14[rsp], 22
  00086	c7 84 24 30 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T16[rsp], 0
  00091	c7 84 24 34 01
	00 00 15 00 00
	00		 mov	 DWORD PTR $T17[rsp], 21
  0009c	c7 84 24 40 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T19[rsp], 0
  000a7	c7 84 24 44 01
	00 00 14 00 00
	00		 mov	 DWORD PTR $T20[rsp], 20
  000b2	c7 84 24 50 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T22[rsp], 0
  000bd	c7 84 24 54 01
	00 00 13 00 00
	00		 mov	 DWORD PTR $T23[rsp], 19
  000c8	c7 84 24 60 01
	00 00 50 32 31
	30		 mov	 DWORD PTR $T25[rsp], 808530512 ; 30313250H
  000d3	c7 84 24 64 01
	00 00 12 00 00
	00		 mov	 DWORD PTR $T26[rsp], 18
  000de	c7 84 24 70 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T28[rsp], 0
  000e9	c7 84 24 74 01
	00 00 11 00 00
	00		 mov	 DWORD PTR $T29[rsp], 17
  000f4	c7 84 24 80 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T31[rsp], 0
  000ff	c7 84 24 84 01
	00 00 10 00 00
	00		 mov	 DWORD PTR $T32[rsp], 16
  0010a	c7 84 24 90 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T34[rsp], 0
  00115	c7 84 24 94 01
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T35[rsp], 15
  00120	c7 84 24 a0 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T37[rsp], 0
  0012b	c7 84 24 a4 01
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T38[rsp], 14
  00136	c7 84 24 b0 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T40[rsp], 0
  00141	c7 84 24 b4 01
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T41[rsp], 13
  0014c	c7 84 24 c0 01
	00 00 50 30 31
	30		 mov	 DWORD PTR $T43[rsp], 808530000 ; 30313050H
  00157	c7 84 24 c4 01
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T44[rsp], 12
  00162	c7 84 24 d0 01
	00 00 50 30 31
	30		 mov	 DWORD PTR $T46[rsp], 808530000 ; 30313050H
  0016d	c7 84 24 d4 01
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T47[rsp], 11
  00178	c7 84 24 e0 01
	00 00 50 30 31
	30		 mov	 DWORD PTR $T49[rsp], 808530000 ; 30313050H
  00183	c7 84 24 e4 01
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T50[rsp], 10
  0018e	c7 84 24 f0 01
	00 00 50 30 31
	30		 mov	 DWORD PTR $T52[rsp], 808530000 ; 30313050H
  00199	c7 84 24 f4 01
	00 00 09 00 00
	00		 mov	 DWORD PTR $T53[rsp], 9
  001a4	c7 84 24 00 02
	00 00 50 30 31
	30		 mov	 DWORD PTR $T55[rsp], 808530000 ; 30313050H
  001af	c7 84 24 04 02
	00 00 08 00 00
	00		 mov	 DWORD PTR $T56[rsp], 8
  001ba	c7 84 24 10 02
	00 00 50 30 31
	30		 mov	 DWORD PTR $T58[rsp], 808530000 ; 30313050H
  001c5	c7 84 24 14 02
	00 00 07 00 00
	00		 mov	 DWORD PTR $T59[rsp], 7
  001d0	c7 84 24 20 02
	00 00 4e 56 31
	36		 mov	 DWORD PTR $T61[rsp], 909203022 ; 3631564eH
  001db	c7 84 24 24 02
	00 00 05 00 00
	00		 mov	 DWORD PTR $T62[rsp], 5
  001e6	c7 84 24 30 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T64[rsp], 0
  001f1	c7 84 24 34 02
	00 00 06 00 00
	00		 mov	 DWORD PTR $T65[rsp], 6
  001fc	c7 84 24 40 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T67[rsp], 0
  00207	c7 84 24 44 02
	00 00 04 00 00
	00		 mov	 DWORD PTR $T68[rsp], 4
  00212	c7 84 24 50 02
	00 00 59 55 59
	32		 mov	 DWORD PTR $T70[rsp], 844715353 ; 32595559H
  0021d	c7 84 24 54 02
	00 00 03 00 00
	00		 mov	 DWORD PTR $T71[rsp], 3
  00228	c7 84 24 60 02
	00 00 59 56 31
	32		 mov	 DWORD PTR $T73[rsp], 842094169 ; 32315659H
  00233	c7 84 24 64 02
	00 00 02 00 00
	00		 mov	 DWORD PTR $T74[rsp], 2
  0023e	c7 84 24 70 02
	00 00 4e 56 31
	32		 mov	 DWORD PTR $T76[rsp], 842094158 ; 3231564eH
  00249	c7 84 24 74 02
	00 00 01 00 00
	00		 mov	 DWORD PTR $T77[rsp], 1
  00254	c7 84 24 80 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T79[rsp], 0
  0025f	c7 84 24 84 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T80[rsp], 0
  0026a	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T1[rsp]
  00272	48 8d 94 24 e4
	00 00 00	 lea	 rdx, QWORD PTR $T2[rsp]
  0027a	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR $T3[rsp]
  00282	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00287	48 89 84 24 90
	02 00 00	 mov	 QWORD PTR tv65[rsp], rax
  0028f	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T4[rsp]
  00297	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T5[rsp]
  0029f	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T6[rsp]
  002a7	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  002ac	48 89 84 24 98
	02 00 00	 mov	 QWORD PTR tv70[rsp], rax
  002b4	4c 8d 84 24 00
	01 00 00	 lea	 r8, QWORD PTR $T7[rsp]
  002bc	48 8d 94 24 04
	01 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  002c4	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  002cc	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  002d1	48 89 84 24 a0
	02 00 00	 mov	 QWORD PTR tv75[rsp], rax
  002d9	4c 8d 84 24 10
	01 00 00	 lea	 r8, QWORD PTR $T10[rsp]
  002e1	48 8d 94 24 14
	01 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  002e9	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR $T12[rsp]
  002f1	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  002f6	48 89 84 24 a8
	02 00 00	 mov	 QWORD PTR tv80[rsp], rax
  002fe	4c 8d 84 24 20
	01 00 00	 lea	 r8, QWORD PTR $T13[rsp]
  00306	48 8d 94 24 24
	01 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  0030e	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  00316	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  0031b	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR tv85[rsp], rax
  00323	4c 8d 84 24 30
	01 00 00	 lea	 r8, QWORD PTR $T16[rsp]
  0032b	48 8d 94 24 34
	01 00 00	 lea	 rdx, QWORD PTR $T17[rsp]
  00333	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  0033b	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00340	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR tv90[rsp], rax
  00348	4c 8d 84 24 40
	01 00 00	 lea	 r8, QWORD PTR $T19[rsp]
  00350	48 8d 94 24 44
	01 00 00	 lea	 rdx, QWORD PTR $T20[rsp]
  00358	48 8d 8c 24 48
	01 00 00	 lea	 rcx, QWORD PTR $T21[rsp]
  00360	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00365	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR tv95[rsp], rax
  0036d	4c 8d 84 24 50
	01 00 00	 lea	 r8, QWORD PTR $T22[rsp]
  00375	48 8d 94 24 54
	01 00 00	 lea	 rdx, QWORD PTR $T23[rsp]
  0037d	48 8d 8c 24 58
	01 00 00	 lea	 rcx, QWORD PTR $T24[rsp]
  00385	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  0038a	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR tv132[rsp], rax
  00392	4c 8d 84 24 60
	01 00 00	 lea	 r8, QWORD PTR $T25[rsp]
  0039a	48 8d 94 24 64
	01 00 00	 lea	 rdx, QWORD PTR $T26[rsp]
  003a2	48 8d 8c 24 68
	01 00 00	 lea	 rcx, QWORD PTR $T27[rsp]
  003aa	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  003af	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR tv137[rsp], rax
  003b7	4c 8d 84 24 70
	01 00 00	 lea	 r8, QWORD PTR $T28[rsp]
  003bf	48 8d 94 24 74
	01 00 00	 lea	 rdx, QWORD PTR $T29[rsp]
  003c7	48 8d 8c 24 78
	01 00 00	 lea	 rcx, QWORD PTR $T30[rsp]
  003cf	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  003d4	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR tv142[rsp], rax
  003dc	4c 8d 84 24 80
	01 00 00	 lea	 r8, QWORD PTR $T31[rsp]
  003e4	48 8d 94 24 84
	01 00 00	 lea	 rdx, QWORD PTR $T32[rsp]
  003ec	48 8d 8c 24 88
	01 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  003f4	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  003f9	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR tv147[rsp], rax
  00401	4c 8d 84 24 90
	01 00 00	 lea	 r8, QWORD PTR $T34[rsp]
  00409	48 8d 94 24 94
	01 00 00	 lea	 rdx, QWORD PTR $T35[rsp]
  00411	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T36[rsp]
  00419	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  0041e	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR tv152[rsp], rax
  00426	4c 8d 84 24 a0
	01 00 00	 lea	 r8, QWORD PTR $T37[rsp]
  0042e	48 8d 94 24 a4
	01 00 00	 lea	 rdx, QWORD PTR $T38[rsp]
  00436	48 8d 8c 24 a8
	01 00 00	 lea	 rcx, QWORD PTR $T39[rsp]
  0043e	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00443	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR tv157[rsp], rax
  0044b	4c 8d 84 24 b0
	01 00 00	 lea	 r8, QWORD PTR $T40[rsp]
  00453	48 8d 94 24 b4
	01 00 00	 lea	 rdx, QWORD PTR $T41[rsp]
  0045b	48 8d 8c 24 b8
	01 00 00	 lea	 rcx, QWORD PTR $T42[rsp]
  00463	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00468	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR tv194[rsp], rax
  00470	4c 8d 84 24 c0
	01 00 00	 lea	 r8, QWORD PTR $T43[rsp]
  00478	48 8d 94 24 c4
	01 00 00	 lea	 rdx, QWORD PTR $T44[rsp]
  00480	48 8d 8c 24 c8
	01 00 00	 lea	 rcx, QWORD PTR $T45[rsp]
  00488	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  0048d	48 89 84 24 00
	03 00 00	 mov	 QWORD PTR tv199[rsp], rax
  00495	4c 8d 84 24 d0
	01 00 00	 lea	 r8, QWORD PTR $T46[rsp]
  0049d	48 8d 94 24 d4
	01 00 00	 lea	 rdx, QWORD PTR $T47[rsp]
  004a5	48 8d 8c 24 d8
	01 00 00	 lea	 rcx, QWORD PTR $T48[rsp]
  004ad	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  004b2	48 89 84 24 08
	03 00 00	 mov	 QWORD PTR tv204[rsp], rax
  004ba	4c 8d 84 24 e0
	01 00 00	 lea	 r8, QWORD PTR $T49[rsp]
  004c2	48 8d 94 24 e4
	01 00 00	 lea	 rdx, QWORD PTR $T50[rsp]
  004ca	48 8d 8c 24 e8
	01 00 00	 lea	 rcx, QWORD PTR $T51[rsp]
  004d2	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  004d7	48 89 84 24 10
	03 00 00	 mov	 QWORD PTR tv209[rsp], rax
  004df	4c 8d 84 24 f0
	01 00 00	 lea	 r8, QWORD PTR $T52[rsp]
  004e7	48 8d 94 24 f4
	01 00 00	 lea	 rdx, QWORD PTR $T53[rsp]
  004ef	48 8d 8c 24 f8
	01 00 00	 lea	 rcx, QWORD PTR $T54[rsp]
  004f7	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  004fc	48 89 84 24 18
	03 00 00	 mov	 QWORD PTR tv214[rsp], rax
  00504	4c 8d 84 24 00
	02 00 00	 lea	 r8, QWORD PTR $T55[rsp]
  0050c	48 8d 94 24 04
	02 00 00	 lea	 rdx, QWORD PTR $T56[rsp]
  00514	48 8d 8c 24 08
	02 00 00	 lea	 rcx, QWORD PTR $T57[rsp]
  0051c	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  00521	48 89 84 24 20
	03 00 00	 mov	 QWORD PTR tv219[rsp], rax
  00529	4c 8d 84 24 10
	02 00 00	 lea	 r8, QWORD PTR $T58[rsp]
  00531	48 8d 94 24 14
	02 00 00	 lea	 rdx, QWORD PTR $T59[rsp]
  00539	48 8d 8c 24 18
	02 00 00	 lea	 rcx, QWORD PTR $T60[rsp]
  00541	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  00546	48 89 84 24 28
	03 00 00	 mov	 QWORD PTR tv224[rsp], rax
  0054e	4c 8d 84 24 20
	02 00 00	 lea	 r8, QWORD PTR $T61[rsp]
  00556	48 8d 94 24 24
	02 00 00	 lea	 rdx, QWORD PTR $T62[rsp]
  0055e	48 8d 8c 24 28
	02 00 00	 lea	 rcx, QWORD PTR $T63[rsp]
  00566	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  0056b	48 89 84 24 30
	03 00 00	 mov	 QWORD PTR tv229[rsp], rax
  00573	4c 8d 84 24 30
	02 00 00	 lea	 r8, QWORD PTR $T64[rsp]
  0057b	48 8d 94 24 34
	02 00 00	 lea	 rdx, QWORD PTR $T65[rsp]
  00583	48 8d 8c 24 38
	02 00 00	 lea	 rcx, QWORD PTR $T66[rsp]
  0058b	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00590	48 89 84 24 38
	03 00 00	 mov	 QWORD PTR tv234[rsp], rax
  00598	4c 8d 84 24 40
	02 00 00	 lea	 r8, QWORD PTR $T67[rsp]
  005a0	48 8d 94 24 44
	02 00 00	 lea	 rdx, QWORD PTR $T68[rsp]
  005a8	48 8d 8c 24 48
	02 00 00	 lea	 rcx, QWORD PTR $T69[rsp]
  005b0	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  005b5	48 89 84 24 40
	03 00 00	 mov	 QWORD PTR tv239[rsp], rax
  005bd	4c 8d 84 24 50
	02 00 00	 lea	 r8, QWORD PTR $T70[rsp]
  005c5	48 8d 94 24 54
	02 00 00	 lea	 rdx, QWORD PTR $T71[rsp]
  005cd	48 8d 8c 24 58
	02 00 00	 lea	 rcx, QWORD PTR $T72[rsp]
  005d5	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  005da	48 89 84 24 48
	03 00 00	 mov	 QWORD PTR tv244[rsp], rax
  005e2	4c 8d 84 24 60
	02 00 00	 lea	 r8, QWORD PTR $T73[rsp]
  005ea	48 8d 94 24 64
	02 00 00	 lea	 rdx, QWORD PTR $T74[rsp]
  005f2	48 8d 8c 24 68
	02 00 00	 lea	 rcx, QWORD PTR $T75[rsp]
  005fa	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  005ff	48 89 84 24 50
	03 00 00	 mov	 QWORD PTR tv249[rsp], rax
  00607	4c 8d 84 24 70
	02 00 00	 lea	 r8, QWORD PTR $T76[rsp]
  0060f	48 8d 94 24 74
	02 00 00	 lea	 rdx, QWORD PTR $T77[rsp]
  00617	48 8d 8c 24 78
	02 00 00	 lea	 rcx, QWORD PTR $T78[rsp]
  0061f	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
  00624	48 89 84 24 58
	03 00 00	 mov	 QWORD PTR tv254[rsp], rax
  0062c	4c 8d 84 24 80
	02 00 00	 lea	 r8, QWORD PTR $T79[rsp]
  00634	48 8d 94 24 84
	02 00 00	 lea	 rdx, QWORD PTR $T80[rsp]
  0063c	48 8d 8c 24 88
	02 00 00	 lea	 rcx, QWORD PTR $T81[rsp]
  00644	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::make_pair<enum RGY_CSP,int>
  00649	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR tv65[rsp]
  00651	48 89 8c 24 d8
	00 00 00	 mov	 QWORD PTR [rsp+216], rcx
  00659	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR tv70[rsp]
  00661	48 89 8c 24 d0
	00 00 00	 mov	 QWORD PTR [rsp+208], rcx
  00669	48 8b 8c 24 a0
	02 00 00	 mov	 rcx, QWORD PTR tv75[rsp]
  00671	48 89 8c 24 c8
	00 00 00	 mov	 QWORD PTR [rsp+200], rcx
  00679	48 8b 8c 24 a8
	02 00 00	 mov	 rcx, QWORD PTR tv80[rsp]
  00681	48 89 8c 24 c0
	00 00 00	 mov	 QWORD PTR [rsp+192], rcx
  00689	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR tv85[rsp]
  00691	48 89 8c 24 b8
	00 00 00	 mov	 QWORD PTR [rsp+184], rcx
  00699	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR tv90[rsp]
  006a1	48 89 8c 24 b0
	00 00 00	 mov	 QWORD PTR [rsp+176], rcx
  006a9	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR tv95[rsp]
  006b1	48 89 8c 24 a8
	00 00 00	 mov	 QWORD PTR [rsp+168], rcx
  006b9	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR tv132[rsp]
  006c1	48 89 8c 24 a0
	00 00 00	 mov	 QWORD PTR [rsp+160], rcx
  006c9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR tv137[rsp]
  006d1	48 89 8c 24 98
	00 00 00	 mov	 QWORD PTR [rsp+152], rcx
  006d9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR tv142[rsp]
  006e1	48 89 8c 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rcx
  006e9	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR tv147[rsp]
  006f1	48 89 8c 24 88
	00 00 00	 mov	 QWORD PTR [rsp+136], rcx
  006f9	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR tv152[rsp]
  00701	48 89 8c 24 80
	00 00 00	 mov	 QWORD PTR [rsp+128], rcx
  00709	48 8b 8c 24 f0
	02 00 00	 mov	 rcx, QWORD PTR tv157[rsp]
  00711	48 89 4c 24 78	 mov	 QWORD PTR [rsp+120], rcx
  00716	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR tv194[rsp]
  0071e	48 89 4c 24 70	 mov	 QWORD PTR [rsp+112], rcx
  00723	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR tv199[rsp]
  0072b	48 89 4c 24 68	 mov	 QWORD PTR [rsp+104], rcx
  00730	48 8b 8c 24 08
	03 00 00	 mov	 rcx, QWORD PTR tv204[rsp]
  00738	48 89 4c 24 60	 mov	 QWORD PTR [rsp+96], rcx
  0073d	48 8b 8c 24 10
	03 00 00	 mov	 rcx, QWORD PTR tv209[rsp]
  00745	48 89 4c 24 58	 mov	 QWORD PTR [rsp+88], rcx
  0074a	48 8b 8c 24 18
	03 00 00	 mov	 rcx, QWORD PTR tv214[rsp]
  00752	48 89 4c 24 50	 mov	 QWORD PTR [rsp+80], rcx
  00757	48 8b 8c 24 20
	03 00 00	 mov	 rcx, QWORD PTR tv219[rsp]
  0075f	48 89 4c 24 48	 mov	 QWORD PTR [rsp+72], rcx
  00764	48 8b 8c 24 28
	03 00 00	 mov	 rcx, QWORD PTR tv224[rsp]
  0076c	48 89 4c 24 40	 mov	 QWORD PTR [rsp+64], rcx
  00771	48 8b 8c 24 30
	03 00 00	 mov	 rcx, QWORD PTR tv229[rsp]
  00779	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  0077e	48 8b 8c 24 38
	03 00 00	 mov	 rcx, QWORD PTR tv234[rsp]
  00786	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  0078b	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR tv239[rsp]
  00793	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00798	48 8b 8c 24 48
	03 00 00	 mov	 rcx, QWORD PTR tv244[rsp]
  007a0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  007a5	48 8b 8c 24 50
	03 00 00	 mov	 rcx, QWORD PTR tv249[rsp]
  007ad	4c 8b c9	 mov	 r9, rcx
  007b0	48 8b 8c 24 58
	03 00 00	 mov	 rcx, QWORD PTR tv254[rsp]
  007b8	4c 8b c1	 mov	 r8, rcx
  007bb	48 8b d0	 mov	 rdx, rax
  007be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  007c5	e8 00 00 00 00	 call	 ??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z ; make_array<std::pair<enum RGY_CSP,unsigned int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int> >
  007ca	48 81 c4 60 03
	00 00		 add	 rsp, 864		; 00000360H
  007d1	5f		 pop	 rdi
  007d2	c3		 ret	 0
??__ERGY_CSP_TO_MFX@@YAXXZ ENDP				; `dynamic initializer for 'RGY_CSP_TO_MFX''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ PROC ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end, COMDAT

; 63   :     _NODISCARD _CONSTEXPR17 const_iterator end() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 64   :         return const_iterator(_Elems, _Size);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	41 b8 1b 00 00
	00		 mov	 r8d, 27
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00036	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>
  0003b	90		 npad	 1
  0003c	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 65   :     }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ENDP ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ PROC ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::begin, COMDAT

; 55   :     _NODISCARD _CONSTEXPR17 const_iterator begin() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 56   :         return const_iterator(_Elems, 0);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	45 33 c0	 xor	 r8d, r8d
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00033	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEAA@PEBU?$pair@W4RGY_CSP@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>
  00038	90		 npad	 1
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 57   :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ENDP ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 264
__$ReturnUdt$ = 304
<args_0>$ = 312
<args_1>$ = 320
<args_2>$ = 328
<args_3>$ = 336
<args_4>$ = 344
<args_5>$ = 352
<args_6>$ = 360
<args_7>$ = 368
<args_8>$ = 376
<args_9>$ = 384
<args_10>$ = 392
<args_11>$ = 400
<args_12>$ = 408
<args_13>$ = 416
<args_14>$ = 424
<args_15>$ = 432
<args_16>$ = 440
<args_17>$ = 448
<args_18>$ = 456
<args_19>$ = 464
<args_20>$ = 472
<args_21>$ = 480
<args_22>$ = 488
<args_23>$ = 496
<args_24>$ = 504
<args_25>$ = 512
<args_26>$ = 520
??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z PROC ; make_array<std::pair<enum RGY_CSP,unsigned int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int> >, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR [rsp+304]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  00046	48 8b 94 24 38
	01 00 00	 mov	 rdx, QWORD PTR <args_0>$[rsp]
  0004e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  00058	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR <args_1>$[rsp]
  00060	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp+8]
  00065	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  0006a	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR <args_2>$[rsp]
  00072	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp+16]
  00077	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  0007c	48 8b 94 24 50
	01 00 00	 mov	 rdx, QWORD PTR <args_3>$[rsp]
  00084	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp+24]
  00089	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  0008e	48 8b 94 24 58
	01 00 00	 mov	 rdx, QWORD PTR <args_4>$[rsp]
  00096	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp+32]
  0009b	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  000a0	48 8b 94 24 60
	01 00 00	 mov	 rdx, QWORD PTR <args_5>$[rsp]
  000a8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp+40]
  000ad	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  000b2	48 8b 94 24 68
	01 00 00	 mov	 rdx, QWORD PTR <args_6>$[rsp]
  000ba	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T1[rsp+48]
  000bf	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  000c4	48 8b 94 24 70
	01 00 00	 mov	 rdx, QWORD PTR <args_7>$[rsp]
  000cc	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T1[rsp+56]
  000d1	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  000d6	48 8b 94 24 78
	01 00 00	 mov	 rdx, QWORD PTR <args_8>$[rsp]
  000de	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T1[rsp+64]
  000e3	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  000e8	48 8b 94 24 80
	01 00 00	 mov	 rdx, QWORD PTR <args_9>$[rsp]
  000f0	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T1[rsp+72]
  000f5	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  000fa	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR <args_10>$[rsp]
  00102	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp+80]
  00107	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  0010c	48 8b 94 24 90
	01 00 00	 mov	 rdx, QWORD PTR <args_11>$[rsp]
  00114	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T1[rsp+88]
  00119	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  0011e	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR <args_12>$[rsp]
  00126	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+96]
  0012e	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  00133	48 8b 94 24 a0
	01 00 00	 mov	 rdx, QWORD PTR <args_13>$[rsp]
  0013b	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+104]
  00143	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  00148	48 8b 94 24 a8
	01 00 00	 mov	 rdx, QWORD PTR <args_14>$[rsp]
  00150	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+112]
  00158	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  0015d	48 8b 94 24 b0
	01 00 00	 mov	 rdx, QWORD PTR <args_15>$[rsp]
  00165	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+120]
  0016d	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  00172	48 8b 94 24 b8
	01 00 00	 mov	 rdx, QWORD PTR <args_16>$[rsp]
  0017a	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+128]
  00182	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  00187	48 8b 94 24 c0
	01 00 00	 mov	 rdx, QWORD PTR <args_17>$[rsp]
  0018f	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+136]
  00197	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  0019c	48 8b 94 24 c8
	01 00 00	 mov	 rdx, QWORD PTR <args_18>$[rsp]
  001a4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+144]
  001ac	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  001b1	48 8b 94 24 d0
	01 00 00	 mov	 rdx, QWORD PTR <args_19>$[rsp]
  001b9	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+152]
  001c1	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  001c6	48 8b 94 24 d8
	01 00 00	 mov	 rdx, QWORD PTR <args_20>$[rsp]
  001ce	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+160]
  001d6	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  001db	48 8b 94 24 e0
	01 00 00	 mov	 rdx, QWORD PTR <args_21>$[rsp]
  001e3	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+168]
  001eb	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  001f0	48 8b 94 24 e8
	01 00 00	 mov	 rdx, QWORD PTR <args_22>$[rsp]
  001f8	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+176]
  00200	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  00205	48 8b 94 24 f0
	01 00 00	 mov	 rdx, QWORD PTR <args_23>$[rsp]
  0020d	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+184]
  00215	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  0021a	48 8b 94 24 f8
	01 00 00	 mov	 rdx, QWORD PTR <args_24>$[rsp]
  00222	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+192]
  0022a	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  0022f	48 8b 94 24 00
	02 00 00	 mov	 rdx, QWORD PTR <args_25>$[rsp]
  00237	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+200]
  0023f	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  00244	48 8b 94 24 08
	02 00 00	 mov	 rdx, QWORD PTR <args_26>$[rsp]
  0024c	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp+208]
  00254	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CSP@@H@1@@Z ; std::pair<enum RGY_CSP,unsigned int>::pair<enum RGY_CSP,unsigned int><enum RGY_CSP,int,0>
  00259	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0025e	48 8b bc 24 30
	01 00 00	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  00266	48 8b f0	 mov	 rsi, rax
  00269	b9 d8 00 00 00	 mov	 ecx, 216		; 000000d8H
  0026e	f3 a4		 rep movsb
  00270	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 131  : }

  00278	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00280	48 33 cc	 xor	 rcx, rsp
  00283	e8 00 00 00 00	 call	 __security_check_cookie
  00288	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0028f	5f		 pop	 rdi
  00290	5e		 pop	 rsi
  00291	c3		 ret	 0
??$make_array@U?$pair@W4RGY_CSP@@I@std@@U?$pair@W4RGY_CSP@@H@2@U?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@2@U42@U42@U32@U32@U42@U42@U42@U42@U42@U42@U42@U32@U32@U32@U32@U32@U42@U32@U32@U32@U32@U32@U42@U42@U32@@@YA?AV?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@$$QEAU?$pair@W4RGY_CSP@@H@1@$$QEAU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@1@1100111111100000100000110@Z ENDP ; make_array<std::pair<enum RGY_CSP,unsigned int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,int>,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >,std::pair<enum RGY_CSP,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z PROC ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_FOURCC_NV12> >
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@$0A@@?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ; std::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >::pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> ><enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12>,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@std@@YA?AU?$pair@W4RGY_CSP@@W4<unnamed-enum-MFX_FOURCC_NV12>@@@0@$$QEAW4RGY_CSP@@$$QEAW4<unnamed-enum-MFX_FOURCC_NV12>@@@Z ENDP ; std::make_pair<enum RGY_CSP,enum <unnamed-enum-MFX_FOURCC_NV12> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z PROC ; std::make_pair<enum RGY_CSP,int>, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@W4RGY_CSP@@@std@@YA$$QEAW4RGY_CSP@@AEAW41@@Z ; std::forward<enum RGY_CSP>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0W4RGY_CSP@@H$0A@@?$pair@W4RGY_CSP@@H@std@@QEAA@$$QEAW4RGY_CSP@@$$QEAH@Z ; std::pair<enum RGY_CSP,int>::pair<enum RGY_CSP,int><enum RGY_CSP,int,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@W4RGY_CSP@@H@std@@YA?AU?$pair@W4RGY_CSP@@H@0@$$QEAW4RGY_CSP@@$$QEAH@Z ENDP ; std::make_pair<enum RGY_CSP,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_453bfd33c28a0eef33955ce04e83c26c> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z ; <lambda_453bfd33c28a0eef33955ce04e83c26c>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::pair<enum RGY_CHROMAFMT,unsigned int> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_453bfd33c28a0eef33955ce04e83c26c> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z
_TEXT	SEGMENT
this$ = 16
<var1>$ = 24
??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z PROC ; <lambda_453bfd33c28a0eef33955ce04e83c26c>::<lambda_453bfd33c28a0eef33955ce04e83c26c>, COMDAT

; 51   : MAP_PAIR_0_1(chromafmt, rgy, RGY_CHROMAFMT, enc, mfxU32, RGY_CHROMAFMT_TO_MFX, RGY_CHROMAFMT_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var1>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z ENDP ; <lambda_453bfd33c28a0eef33955ce04e83c26c>::<lambda_453bfd33c28a0eef33955ce04e83c26c>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z PROC ; <lambda_453bfd33c28a0eef33955ce04e83c26c>::operator(), COMDAT

; 51   : MAP_PAIR_0_1(chromafmt, rgy, RGY_CHROMAFMT, enc, mfxU32, RGY_CHROMAFMT_TO_MFX, RGY_CHROMAFMT_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 2c	 cmp	 DWORD PTR a$[rsp+4], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z ENDP ; <lambda_453bfd33c28a0eef33955ce04e83c26c>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_19c3b9fb6a4298110262f5ae779451eb> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CHROMAFMT@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z ; <lambda_19c3b9fb6a4298110262f5ae779451eb>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@PEBU?$pair@W4RGY_CHROMAFMT@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@AEBQEBU?$pair@W4RGY_CHROMAFMT@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,std::pair<enum RGY_CHROMAFMT,unsigned int> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_19c3b9fb6a4298110262f5ae779451eb> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z
_TEXT	SEGMENT
this$ = 16
<var0>$ = 24
??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z PROC ; <lambda_19c3b9fb6a4298110262f5ae779451eb>::<lambda_19c3b9fb6a4298110262f5ae779451eb>, COMDAT

; 51   : MAP_PAIR_0_1(chromafmt, rgy, RGY_CHROMAFMT, enc, mfxU32, RGY_CHROMAFMT_TO_MFX, RGY_CHROMAFMT_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var0>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z ENDP ; <lambda_19c3b9fb6a4298110262f5ae779451eb>::<lambda_19c3b9fb6a4298110262f5ae779451eb>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z PROC ; <lambda_19c3b9fb6a4298110262f5ae779451eb>::operator(), COMDAT

; 51   : MAP_PAIR_0_1(chromafmt, rgy, RGY_CHROMAFMT, enc, mfxU32, RGY_CHROMAFMT_TO_MFX, RGY_CHROMAFMT_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 28	 cmp	 DWORD PTR a$[rsp], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEBA_NU?$pair@W4RGY_CHROMAFMT@@I@std@@@Z ENDP ; <lambda_19c3b9fb6a4298110262f5ae779451eb>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z
_TEXT	SEGMENT
this$ = 16
_It$ = 24
?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Seek_to, COMDAT

; 1449 :     constexpr void _Seek_to(pointer _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 1450 :         _Idx = static_cast<size_t>(_It - _Ptr);

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00014	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _It$[rsp]
  00019	48 2b c8	 sub	 rcx, rax
  0001c	48 8b c1	 mov	 rax, rcx
  0001f	48 c1 f8 03	 sar	 rax, 3
  00023	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00028	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 1451 :     }

  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAAXPEBU?$pair@W4RGY_CHROMAFMT@@I@2@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Last$ = 72
?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Verify_with, COMDAT

; 1444 :     constexpr void _Verify_with(const _Array_const_iterator& _Last) const noexcept {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_wit:

; 1445 :         // note _Compat check inside operator<=
; 1446 :         _STL_VERIFY(*this <= _Last, "array iterator range transposed");

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<=
  00032	90		 npad	 1
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 02		 je	 SHORT $LN7@Verify_wit
  0003a	eb 6d		 jmp	 SHORT $LN9@Verify_wit
$LN7@Verify_wit:
  0003c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@
  00043	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00054	45 33 c9	 xor	 r9d, r9d
  00057	41 b8 a6 05 00
	00		 mov	 r8d, 1446		; 000005a6H
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00064	b9 02 00 00 00	 mov	 ecx, 2
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006f	90		 npad	 1
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 03		 jne	 SHORT $LN11@Verify_wit
  00075	cc		 int	 3
  00076	33 c0		 xor	 eax, eax
$LN11@Verify_wit:
  00078	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00081	41 b9 a6 05 00
	00		 mov	 r9d, 1446		; 000005a6H
  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LM@KAEFEELN@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00095	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  0009c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a2	90		 npad	 1
  000a3	33 c0		 xor	 eax, eax
  000a5	85 c0		 test	 eax, eax
  000a7	75 93		 jne	 SHORT $LN7@Verify_wit
$LN9@Verify_wit:
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	0f 85 70 ff ff
	ff		 jne	 $LN4@Verify_wit

; 1447 :     }

  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Verify_with
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Unwrapped, COMDAT

; 1440 :     _NODISCARD constexpr pointer _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1441 :         return _Ptr + _Idx;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00018	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1442 :     }

  0001c	5f		 pop	 rdi
  0001d	c3		 ret	 0
?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@2@XZ ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Right$ = 72
?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Compat, COMDAT

; 1434 :     _CONSTEXPR17 void _Compat(const _Array_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Compat:

; 1435 :         _STL_VERIFY(_Ptr == _Right._Ptr, "array iterators incompatible");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00031	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00035	75 02		 jne	 SHORT $LN8@Compat
  00037	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@
  00040	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00051	45 33 c9	 xor	 r9d, r9d
  00054	41 b8 9b 05 00
	00		 mov	 r8d, 1435		; 0000059bH
  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00061	b9 02 00 00 00	 mov	 ecx, 2
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006c	83 f8 01	 cmp	 eax, 1
  0006f	75 03		 jne	 SHORT $LN11@Compat
  00071	cc		 int	 3
  00072	33 c0		 xor	 eax, eax
$LN11@Compat:
  00074	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007d	41 b9 9b 05 00
	00		 mov	 r9d, 1435		; 0000059bH
  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LC@BFMJDI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00091	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  00098	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000a4	33 c0		 xor	 eax, eax
  000a6	85 c0		 test	 eax, eax
  000a8	0f 85 75 ff ff
	ff		 jne	 $LN4@Compat

; 1436 :     }

  000ae	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<=, COMDAT

; 1426 :     _NODISCARD _CONSTEXPR17 bool operator<=(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1427 :         return !(_Right < *this);

  00023	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1428 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??N?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<, COMDAT

; 1417 :     _NODISCARD _CONSTEXPR17 bool operator<(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1418 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Compat

; 1419 :         return _Idx < _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	73 0a		 jae	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1420 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??M?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator==, COMDAT

; 1408 :     _NODISCARD _CONSTEXPR17 bool operator==(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1409 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Compat

; 1410 :         return _Idx == _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	75 0a		 jne	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1411 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ
_TEXT	SEGMENT
this$ = 64
??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator->, COMDAT

; 1332 :     _NODISCARD _CONSTEXPR17 pointer operator->() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 1333 :         _STL_VERIFY(_Ptr, "cannot dereference value-initialized array iterator");

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00028	74 02		 je	 SHORT $LN14@operator
  0002a	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 35 05 00
	00		 mov	 r8d, 1333		; 00000535H
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN19@operator:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 35 05 00
	00		 mov	 r9d, 1333		; 00000535H
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@DNAKLHAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 1334 :         _STL_VERIFY(_Idx < _Size, "cannot dereference out of range array iterator");

  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 83 78 18 04	 cmp	 QWORD PTR [rax+24], 4
  000a7	73 02		 jae	 SHORT $LN16@operator
  000a9	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000ab	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@
  000b2	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000b7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c3	45 33 c9	 xor	 r9d, r9d
  000c6	41 b8 36 05 00
	00		 mov	 r8d, 1334		; 00000536H
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d3	b9 02 00 00 00	 mov	 ecx, 2
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000de	83 f8 01	 cmp	 eax, 1
  000e1	75 03		 jne	 SHORT $LN20@operator
  000e3	cc		 int	 3
  000e4	33 c0		 xor	 eax, eax
$LN20@operator:
  000e6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ef	41 b9 36 05 00
	00		 mov	 r9d, 1334		; 00000536H
  000f5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LK@DNAKLHAG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0010a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00110	33 c0		 xor	 eax, eax
  00112	85 c0		 test	 eax, eax
  00114	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00116	33 c0		 xor	 eax, eax
  00118	85 c0		 test	 eax, eax
  0011a	75 81		 jne	 SHORT $LN10@operator

; 1335 :         return _Ptr + _Idx;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00121	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00125	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0012e	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1336 :     }

  00132	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00136	5f		 pop	 rdi
  00137	c3		 ret	 0
??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Off$ = 64
??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>, COMDAT

; 1326 :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) : _Ptr(_Parg), _Idx(_Off) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12_compatible@std@@QEAA@XZ
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Off$[rsp]
  0004a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ
text$di	SEGMENT
$T1 = 48
$T2 = 52
$T3 = 56
$T4 = 64
$T5 = 68
$T6 = 72
$T7 = 80
$T8 = 84
$T9 = 88
$T10 = 96
$T11 = 100
$T12 = 104
tv65 = 112
tv70 = 120
tv75 = 128
??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ PROC			; `dynamic initializer for 'RGY_CHROMAFMT_TO_MFX'', COMDAT

; 49   :     );

  00000	40 57		 push	 rdi
  00002	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd

; 44   : static const auto RGY_CHROMAFMT_TO_MFX = make_array<std::pair<RGY_CHROMAFMT, mfxU32>>(

  00018	c7 44 24 30 03
	00 00 00	 mov	 DWORD PTR $T1[rsp], 3
  00020	c7 44 24 34 03
	00 00 00	 mov	 DWORD PTR $T2[rsp], 3
  00028	c7 44 24 40 02
	00 00 00	 mov	 DWORD PTR $T4[rsp], 2
  00030	c7 44 24 44 02
	00 00 00	 mov	 DWORD PTR $T5[rsp], 2
  00038	c7 44 24 50 01
	00 00 00	 mov	 DWORD PTR $T7[rsp], 1
  00040	c7 44 24 54 01
	00 00 00	 mov	 DWORD PTR $T8[rsp], 1
  00048	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T10[rsp], 0
  00050	c7 44 24 64 00
	00 00 00	 mov	 DWORD PTR $T11[rsp], 0
  00058	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T1[rsp]
  0005d	48 8d 54 24 34	 lea	 rdx, QWORD PTR $T2[rsp]
  00062	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T3[rsp]
  00067	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  0006c	48 89 44 24 70	 mov	 QWORD PTR tv65[rsp], rax
  00071	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T4[rsp]
  00076	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T5[rsp]
  0007b	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T6[rsp]
  00080	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  00085	48 89 44 24 78	 mov	 QWORD PTR tv70[rsp], rax
  0008a	4c 8d 44 24 50	 lea	 r8, QWORD PTR $T7[rsp]
  0008f	48 8d 54 24 54	 lea	 rdx, QWORD PTR $T8[rsp]
  00094	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T9[rsp]
  00099	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  0009e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv75[rsp], rax
  000a6	4c 8d 44 24 60	 lea	 r8, QWORD PTR $T10[rsp]
  000ab	48 8d 54 24 64	 lea	 rdx, QWORD PTR $T11[rsp]
  000b0	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T12[rsp]
  000b5	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  000ba	48 8b 4c 24 70	 mov	 rcx, QWORD PTR tv65[rsp]
  000bf	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000c4	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv70[rsp]
  000c9	4c 8b c9	 mov	 r9, rcx
  000cc	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR tv75[rsp]
  000d4	4c 8b c1	 mov	 r8, rcx
  000d7	48 8b d0	 mov	 rdx, rax
  000da	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  000e1	e8 00 00 00 00	 call	 ??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z ; make_array<std::pair<enum RGY_CHROMAFMT,unsigned int>,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> > >
  000e6	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  000ed	5f		 pop	 rdi
  000ee	c3		 ret	 0
??__ERGY_CHROMAFMT_TO_MFX@@YAXXZ ENDP			; `dynamic initializer for 'RGY_CHROMAFMT_TO_MFX''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ PROC ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end, COMDAT

; 63   :     _NODISCARD _CONSTEXPR17 const_iterator end() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 64   :         return const_iterator(_Elems, _Size);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	41 b8 04 00 00
	00		 mov	 r8d, 4
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00036	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>
  0003b	90		 npad	 1
  0003c	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 65   :     }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ENDP ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ PROC ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::begin, COMDAT

; 55   :     _NODISCARD _CONSTEXPR17 const_iterator begin() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 56   :         return const_iterator(_Elems, 0);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	45 33 c0	 xor	 r8d, r8d
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00033	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEAA@PEBU?$pair@W4RGY_CHROMAFMT@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>
  00038	90		 npad	 1
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 57   :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ENDP ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 72
__$ReturnUdt$ = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z PROC ; make_array<std::pair<enum RGY_CHROMAFMT,unsigned int>,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> > >, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 54 24 78	 mov	 rdx, QWORD PTR <args_0>$[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00047	e8 00 00 00 00	 call	 ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
  0004c	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR <args_1>$[rsp]
  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp+8]
  00059	e8 00 00 00 00	 call	 ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
  0005e	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR <args_2>$[rsp]
  00066	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp+16]
  0006b	e8 00 00 00 00	 call	 ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
  00070	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR <args_3>$[rsp]
  00078	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp+24]
  0007d	e8 00 00 00 00	 call	 ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@@Z ; std::pair<enum RGY_CHROMAFMT,unsigned int>::pair<enum RGY_CHROMAFMT,unsigned int><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
  00082	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00087	48 8b 7c 24 70	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  0008c	48 8b f0	 mov	 rsi, rax
  0008f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00094	f3 a4		 rep movsb
  00096	48 8b 44 24 70	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 131  : }

  0009b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000a0	48 33 cc	 xor	 rcx, rsp
  000a3	e8 00 00 00 00	 call	 __security_check_cookie
  000a8	48 83 c4 58	 add	 rsp, 88			; 00000058H
  000ac	5f		 pop	 rdi
  000ad	5e		 pop	 rsi
  000ae	c3		 ret	 0
??$make_array@U?$pair@W4RGY_CHROMAFMT@@I@std@@U?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@2@U32@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@$$QEAU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@1@000@Z ENDP ; make_array<std::pair<enum RGY_CHROMAFMT,unsigned int>,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >,std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z PROC ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@W4RGY_CHROMAFMT@@@std@@YA$$QEAW4RGY_CHROMAFMT@@AEAW41@@Z ; std::forward<enum RGY_CHROMAFMT>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@$0A@@?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@QEAA@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ; std::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >::pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> ><enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@std@@YA?AU?$pair@W4RGY_CHROMAFMT@@W4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@0@$$QEAW4RGY_CHROMAFMT@@$$QEAW4<unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME>@@@Z ENDP ; std::make_pair<enum RGY_CHROMAFMT,enum <unnamed-enum-MFX_CHROMAFORMAT_MONOCHROME> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_f1478776e17ba2826247782c07ebe727> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z ; <lambda_f1478776e17ba2826247782c07ebe727>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::pair<enum RGY_CODEC,unsigned int> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_f1478776e17ba2826247782c07ebe727> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z
_TEXT	SEGMENT
this$ = 16
<var1>$ = 24
??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z PROC ; <lambda_f1478776e17ba2826247782c07ebe727>::<lambda_f1478776e17ba2826247782c07ebe727>, COMDAT

; 42   : MAP_PAIR_0_1(codec, rgy, RGY_CODEC, enc, mfxU32, RGY_CODEC_TO_MFX, RGY_CODEC_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var1>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z ENDP ; <lambda_f1478776e17ba2826247782c07ebe727>::<lambda_f1478776e17ba2826247782c07ebe727>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z PROC ; <lambda_f1478776e17ba2826247782c07ebe727>::operator(), COMDAT

; 42   : MAP_PAIR_0_1(codec, rgy, RGY_CODEC, enc, mfxU32, RGY_CODEC_TO_MFX, RGY_CODEC_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 2c	 cmp	 DWORD PTR a$[rsp+4], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_f1478776e17ba2826247782c07ebe727>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z ENDP ; <lambda_f1478776e17ba2826247782c07ebe727>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 56
__$ReturnUdt$ = 96
_First$ = 104
_Last$ = 112
_Pred$ = 120
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z PROC ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_7ee89da6d47de3e981d156648f378f28> >, COMDAT

; 138  : _NODISCARD _InIt find_if(_InIt _First, const _InIt _Last, _Pr _Pred) { // find first satisfying _Pred

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 139  :     _Adl_verify_range(_First, _Last);

  0002e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00033	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00038	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V12@@std@@YAXAEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@0@Z ; std::_Adl_verify_range<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6> >

; 140  :     auto _UFirst      = _Get_unwrapped(_First);

  0003d	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00042	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>
  00047	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 141  :     const auto _ULast = _Get_unwrapped(_Last);

  0004c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Last$[rsp]
  00051	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$0A@@std@@YAPEBU?$pair@W4RGY_CODEC@@I@0@AEBV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@@Z ; std::_Get_unwrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,0>
  00056	48 89 44 24 38	 mov	 QWORD PTR _ULast$[rsp], rax

; 142  :     for (; _UFirst != _ULast; ++_UFirst) {

  0005b	eb 0e		 jmp	 SHORT $LN4@find_if
$LN2@find_if:
  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@find_if:
  0006b	48 8b 44 24 38	 mov	 rax, QWORD PTR _ULast$[rsp]
  00070	48 39 44 24 28	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00075	74 1d		 je	 SHORT $LN3@find_if

; 143  :         if (_Pred(*_UFirst)) {

  00077	48 8b 44 24 28	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0007c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007f	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Pred$[rsp]
  00084	e8 00 00 00 00	 call	 ??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z ; <lambda_7ee89da6d47de3e981d156648f378f28>::operator()
  00089	0f b6 c0	 movzx	 eax, al
  0008c	85 c0		 test	 eax, eax
  0008e	74 02		 je	 SHORT $LN5@find_if

; 144  :             break;

  00090	eb 02		 jmp	 SHORT $LN3@find_if
$LN5@find_if:

; 145  :         }
; 146  :     }

  00092	eb c9		 jmp	 SHORT $LN2@find_if
$LN3@find_if:

; 147  : 
; 148  :     _Seek_wrapped(_First, _UFirst);

  00094	48 8d 54 24 28	 lea	 rdx, QWORD PTR _UFirst$[rsp]
  00099	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  0009e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@PEBU?$pair@W4RGY_CODEC@@I@2@@std@@YAXAEAV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@AEBQEBU?$pair@W4RGY_CODEC@@I@0@@Z ; std::_Seek_wrapped<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,std::pair<enum RGY_CODEC,unsigned int> const *>

; 149  :     return _First;

  000a3	48 8b 7c 24 60	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000a8	48 8b 74 24 68	 mov	 rsi, QWORD PTR _First$[rsp]
  000ad	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  000b2	f3 a4		 rep movsb
  000b4	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 150  : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000d2	5f		 pop	 rdi
  000d3	5e		 pop	 rsi
  000d4	c3		 ret	 0
??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z ENDP ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_7ee89da6d47de3e981d156648f378f28> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z
_TEXT	SEGMENT
this$ = 16
<var0>$ = 24
??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z PROC ; <lambda_7ee89da6d47de3e981d156648f378f28>::<lambda_7ee89da6d47de3e981d156648f378f28>, COMDAT

; 42   : MAP_PAIR_0_1(codec, rgy, RGY_CODEC, enc, mfxU32, RGY_CODEC_TO_MFX, RGY_CODEC_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <var0>$[rsp]
  00015	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00017	89 08		 mov	 DWORD PTR [rax], ecx
  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z ENDP ; <lambda_7ee89da6d47de3e981d156648f378f28>::<lambda_7ee89da6d47de3e981d156648f378f28>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z
_TEXT	SEGMENT
tv66 = 0
this$ = 32
a$ = 40
??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z PROC ; <lambda_7ee89da6d47de3e981d156648f378f28>::operator(), COMDAT

; 42   : MAP_PAIR_0_1(codec, rgy, RGY_CODEC, enc, mfxU32, RGY_CODEC_TO_MFX, RGY_CODEC_UNKNOWN, 0u);

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]
  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	8b 00		 mov	 eax, DWORD PTR [rax]
  0002a	39 44 24 28	 cmp	 DWORD PTR a$[rsp], eax
  0002e	75 09		 jne	 SHORT $LN3@operator
  00030	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00037	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00039	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@operator:
  00040	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]
  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??R<lambda_7ee89da6d47de3e981d156648f378f28>@@QEBA_NU?$pair@W4RGY_CODEC@@I@std@@@Z ENDP ; <lambda_7ee89da6d47de3e981d156648f378f28>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z
_TEXT	SEGMENT
this$ = 16
_It$ = 24
?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Seek_to, COMDAT

; 1449 :     constexpr void _Seek_to(pointer _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 1450 :         _Idx = static_cast<size_t>(_It - _Ptr);

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00014	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _It$[rsp]
  00019	48 2b c8	 sub	 rcx, rax
  0001c	48 8b c1	 mov	 rax, rcx
  0001f	48 c1 f8 03	 sar	 rax, 3
  00023	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00028	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 1451 :     }

  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Seek_to@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAAXPEBU?$pair@W4RGY_CODEC@@I@2@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Last$ = 72
?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Verify_with, COMDAT

; 1444 :     constexpr void _Verify_with(const _Array_const_iterator& _Last) const noexcept {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Verify_wit:

; 1445 :         // note _Compat check inside operator<=
; 1446 :         _STL_VERIFY(*this <= _Last, "array iterator range transposed");

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<=
  00032	90		 npad	 1
  00033	0f b6 c0	 movzx	 eax, al
  00036	85 c0		 test	 eax, eax
  00038	74 02		 je	 SHORT $LN7@Verify_wit
  0003a	eb 6d		 jmp	 SHORT $LN9@Verify_wit
$LN7@Verify_wit:
  0003c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CA@CFCBHDPG@array?5iterator?5range?5transposed@
  00043	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00054	45 33 c9	 xor	 r9d, r9d
  00057	41 b8 a6 05 00
	00		 mov	 r8d, 1446		; 000005a6H
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00064	b9 02 00 00 00	 mov	 ecx, 2
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006f	90		 npad	 1
  00070	83 f8 01	 cmp	 eax, 1
  00073	75 03		 jne	 SHORT $LN11@Verify_wit
  00075	cc		 int	 3
  00076	33 c0		 xor	 eax, eax
$LN11@Verify_wit:
  00078	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00081	41 b9 a6 05 00
	00		 mov	 r9d, 1446		; 000005a6H
  00087	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LE@LJOKFHEP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00095	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@PHOFHNMF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  0009c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000a2	90		 npad	 1
  000a3	33 c0		 xor	 eax, eax
  000a5	85 c0		 test	 eax, eax
  000a7	75 93		 jne	 SHORT $LN7@Verify_wit
$LN9@Verify_wit:
  000a9	33 c0		 xor	 eax, eax
  000ab	85 c0		 test	 eax, eax
  000ad	0f 85 70 ff ff
	ff		 jne	 $LN4@Verify_wit

; 1447 :     }

  000b3	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b7	5f		 pop	 rdi
  000b8	c3		 ret	 0
?_Verify_with@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Verify_with
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Unwrapped, COMDAT

; 1440 :     _NODISCARD constexpr pointer _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1441 :         return _Ptr + _Idx;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00014	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00018	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1442 :     }

  0001c	5f		 pop	 rdi
  0001d	c3		 ret	 0
?_Unwrapped@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@2@XZ ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
this$ = 64
_Right$ = 72
?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Compat, COMDAT

; 1434 :     _CONSTEXPR17 void _Compat(const _Array_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@Compat:

; 1435 :         _STL_VERIFY(_Ptr == _Right._Ptr, "array iterators incompatible");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00031	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00035	75 02		 jne	 SHORT $LN8@Compat
  00037	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BN@KJMKNNDM@array?5iterators?5incompatible@
  00040	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00045	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0004c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00051	45 33 c9	 xor	 r9d, r9d
  00054	41 b8 9b 05 00
	00		 mov	 r8d, 1435		; 0000059bH
  0005a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00061	b9 02 00 00 00	 mov	 ecx, 2
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0006c	83 f8 01	 cmp	 eax, 1
  0006f	75 03		 jne	 SHORT $LN11@Compat
  00071	cc		 int	 3
  00072	33 c0		 xor	 eax, eax
$LN11@Compat:
  00074	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007d	41 b9 9b 05 00
	00		 mov	 r9d, 1435		; 0000059bH
  00083	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@JHIPDNJJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00091	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DO@FPIDHOGM@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr@
  00098	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009e	33 c0		 xor	 eax, eax
  000a0	85 c0		 test	 eax, eax
  000a2	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000a4	33 c0		 xor	 eax, eax
  000a6	85 c0		 test	 eax, eax
  000a8	0f 85 75 ff ff
	ff		 jne	 $LN4@Compat

; 1436 :     }

  000ae	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<=, COMDAT

; 1426 :     _NODISCARD _CONSTEXPR17 bool operator<=(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1427 :         return !(_Right < *this);

  00023	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	e8 00 00 00 00	 call	 ??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1428 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??N?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<, COMDAT

; 1417 :     _NODISCARD _CONSTEXPR17 bool operator<(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1418 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Compat

; 1419 :         return _Idx < _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	73 0a		 jae	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1420 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??M?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator<
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator==, COMDAT

; 1408 :     _NODISCARD _CONSTEXPR17 bool operator==(const _Array_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1409 :         _Compat(_Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Compat@?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAXAEBV12@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Compat

; 1410 :         return _Idx == _Right._Idx;

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00040	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00044	75 0a		 jne	 SHORT $LN3@operator
  00046	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  0004e	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  00058	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 1411 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ
_TEXT	SEGMENT
this$ = 64
??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator->, COMDAT

; 1332 :     _NODISCARD _CONSTEXPR17 pointer operator->() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 1333 :         _STL_VERIFY(_Ptr, "cannot dereference value-initialized array iterator");

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00028	74 02		 je	 SHORT $LN14@operator
  0002a	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@OGBMIMME@cannot?5dereference?5value?9initia@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 35 05 00
	00		 mov	 r8d, 1333		; 00000535H
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN19@operator
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN19@operator:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 35 05 00
	00		 mov	 r9d, 1333		; 00000535H
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LC@BEAHIAPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@HIODFCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 81		 jne	 SHORT $LN4@operator
$LN10@operator:

; 1334 :         _STL_VERIFY(_Idx < _Size, "cannot dereference out of range array iterator");

  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 83 78 18 06	 cmp	 QWORD PTR [rax+24], 6
  000a7	73 02		 jae	 SHORT $LN16@operator
  000a9	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000ab	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MJDCINHP@cannot?5dereference?5out?5of?5range@
  000b2	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000b7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000be	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c3	45 33 c9	 xor	 r9d, r9d
  000c6	41 b8 36 05 00
	00		 mov	 r8d, 1334		; 00000536H
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000d3	b9 02 00 00 00	 mov	 ecx, 2
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000de	83 f8 01	 cmp	 eax, 1
  000e1	75 03		 jne	 SHORT $LN20@operator
  000e3	cc		 int	 3
  000e4	33 c0		 xor	 eax, eax
$LN20@operator:
  000e6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ef	41 b9 36 05 00
	00		 mov	 r9d, 1334		; 00000536H
  000f5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000fc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LC@BEAHIAPL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAr?$AAr?$AAa?$AAy?$AA_?$AAc?$AAo?$AAn@
  00103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@FBLGLEEL@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
  0010a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00110	33 c0		 xor	 eax, eax
  00112	85 c0		 test	 eax, eax
  00114	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00116	33 c0		 xor	 eax, eax
  00118	85 c0		 test	 eax, eax
  0011a	75 81		 jne	 SHORT $LN10@operator

; 1335 :         return _Ptr + _Idx;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00121	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00125	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0012e	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1336 :     }

  00132	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00136	5f		 pop	 rdi
  00137	c3		 ret	 0
??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z
_TEXT	SEGMENT
this$ = 48
_Parg$ = 56
_Off$ = 64
??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z PROC ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>, COMDAT

; 1326 :     _CONSTEXPR17 explicit _Array_const_iterator(pointer _Parg, size_t _Off = 0) : _Ptr(_Parg), _Idx(_Off) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12_compatible@std@@QEAA@XZ
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Parg$[rsp]
  0003c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Off$[rsp]
  0004a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z ENDP ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ??__ERGY_CODEC_TO_MFX@@YAXXZ
text$di	SEGMENT
$T1 = 64
$T2 = 68
$T3 = 72
$T4 = 80
$T5 = 84
$T6 = 88
$T7 = 96
$T8 = 100
$T9 = 104
$T10 = 112
$T11 = 116
$T12 = 120
$T13 = 128
$T14 = 132
$T15 = 136
$T16 = 144
$T17 = 148
$T18 = 152
tv65 = 160
tv70 = 168
tv75 = 176
tv80 = 184
tv85 = 192
??__ERGY_CODEC_TO_MFX@@YAXXZ PROC			; `dynamic initializer for 'RGY_CODEC_TO_MFX'', COMDAT

; 40   : );

  00000	40 57		 push	 rdi
  00002	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd

; 33   : static const auto RGY_CODEC_TO_MFX = make_array<std::pair<RGY_CODEC, mfxU32>>(

  00018	c7 44 24 40 56
	43 31 20	 mov	 DWORD PTR $T1[rsp], 540099414 ; 20314356H
  00020	c7 44 24 44 08
	00 00 00	 mov	 DWORD PTR $T2[rsp], 8
  00028	c7 44 24 50 56
	50 39 20	 mov	 DWORD PTR $T4[rsp], 540627030 ; 20395056H
  00030	c7 44 24 54 07
	00 00 00	 mov	 DWORD PTR $T5[rsp], 7
  00038	c7 44 24 60 56
	50 38 20	 mov	 DWORD PTR $T7[rsp], 540561494 ; 20385056H
  00040	c7 44 24 64 06
	00 00 00	 mov	 DWORD PTR $T8[rsp], 6
  00048	c7 44 24 70 4d
	50 47 32	 mov	 DWORD PTR $T10[rsp], 843534413 ; 3247504dH
  00050	c7 44 24 74 04
	00 00 00	 mov	 DWORD PTR $T11[rsp], 4
  00058	c7 84 24 80 00
	00 00 48 45 56
	43		 mov	 DWORD PTR $T13[rsp], 1129727304 ; 43564548H
  00063	c7 84 24 84 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T14[rsp], 2
  0006e	c7 84 24 90 00
	00 00 41 56 43
	20		 mov	 DWORD PTR $T16[rsp], 541283905 ; 20435641H
  00079	c7 84 24 94 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T17[rsp], 1
  00084	4c 8d 44 24 40	 lea	 r8, QWORD PTR $T1[rsp]
  00089	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T2[rsp]
  0008e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T3[rsp]
  00093	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
  00098	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv65[rsp], rax
  000a0	4c 8d 44 24 50	 lea	 r8, QWORD PTR $T4[rsp]
  000a5	48 8d 54 24 54	 lea	 rdx, QWORD PTR $T5[rsp]
  000aa	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T6[rsp]
  000af	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
  000b4	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR tv70[rsp], rax
  000bc	4c 8d 44 24 60	 lea	 r8, QWORD PTR $T7[rsp]
  000c1	48 8d 54 24 64	 lea	 rdx, QWORD PTR $T8[rsp]
  000c6	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T9[rsp]
  000cb	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >
  000d0	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv75[rsp], rax
  000d8	4c 8d 44 24 70	 lea	 r8, QWORD PTR $T10[rsp]
  000dd	48 8d 54 24 74	 lea	 rdx, QWORD PTR $T11[rsp]
  000e2	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T12[rsp]
  000e7	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
  000ec	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR tv80[rsp], rax
  000f4	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR $T13[rsp]
  000fc	48 8d 94 24 84
	00 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  00104	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  0010c	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
  00111	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv85[rsp], rax
  00119	4c 8d 84 24 90
	00 00 00	 lea	 r8, QWORD PTR $T16[rsp]
  00121	48 8d 94 24 94
	00 00 00	 lea	 rdx, QWORD PTR $T17[rsp]
  00129	48 8d 8c 24 98
	00 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00131	e8 00 00 00 00	 call	 ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
  00136	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv65[rsp]
  0013e	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00143	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR tv70[rsp]
  0014b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00150	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv75[rsp]
  00158	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0015d	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR tv80[rsp]
  00165	4c 8b c9	 mov	 r9, rcx
  00168	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR tv85[rsp]
  00170	4c 8b c1	 mov	 r8, rcx
  00173	48 8b d0	 mov	 rdx, rax
  00176	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  0017d	e8 00 00 00 00	 call	 ??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z ; make_array<std::pair<enum RGY_CODEC,unsigned int>,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> > >
  00182	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00189	5f		 pop	 rdi
  0018a	c3		 ret	 0
??__ERGY_CODEC_TO_MFX@@YAXXZ ENDP			; `dynamic initializer for 'RGY_CODEC_TO_MFX''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ PROC ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end, COMDAT

; 63   :     _NODISCARD _CONSTEXPR17 const_iterator end() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 64   :         return const_iterator(_Elems, _Size);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	41 b8 06 00 00
	00		 mov	 r8d, 6
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00036	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>
  0003b	90		 npad	 1
  0003c	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 65   :     }

  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ENDP ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\array
;	COMDAT ?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ PROC ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::begin, COMDAT

; 55   :     _NODISCARD _CONSTEXPR17 const_iterator begin() const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 56   :         return const_iterator(_Elems, 0);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	45 33 c0	 xor	 r8d, r8d
  0002b	48 8b d0	 mov	 rdx, rax
  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00033	e8 00 00 00 00	 call	 ??0?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEAA@PEBU?$pair@W4RGY_CODEC@@I@1@_K@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>
  00038	90		 npad	 1
  00039	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 57   :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ENDP ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z
_TEXT	SEGMENT
$T1 = 32
__$ArrayPad$ = 88
__$ReturnUdt$ = 128
<args_0>$ = 136
<args_1>$ = 144
<args_2>$ = 152
<args_3>$ = 160
<args_4>$ = 168
<args_5>$ = 176
??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z PROC ; make_array<std::pair<enum RGY_CODEC,unsigned int>,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> > >, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 1a 00 00 00	 mov	 ecx, 26
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  00031	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00038	48 33 c4	 xor	 rax, rsp
  0003b	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  00040	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR <args_0>$[rsp]
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
  00052	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR <args_1>$[rsp]
  0005a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp+8]
  0005f	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
  00064	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR <args_2>$[rsp]
  0006c	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T1[rsp+16]
  00071	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
  00076	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR <args_3>$[rsp]
  0007e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T1[rsp+24]
  00083	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>
  00088	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR <args_4>$[rsp]
  00090	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp+32]
  00095	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
  0009a	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR <args_5>$[rsp]
  000a2	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T1[rsp+40]
  000a7	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@I@std@@QEAA@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@@Z ; std::pair<enum RGY_CODEC,unsigned int>::pair<enum RGY_CODEC,unsigned int><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
  000ac	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  000b1	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  000b9	48 8b f0	 mov	 rsi, rax
  000bc	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000c1	f3 a4		 rep movsb
  000c3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 131  : }

  000cb	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000d0	48 33 cc	 xor	 rcx, rsp
  000d3	e8 00 00 00 00	 call	 __security_check_cookie
  000d8	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000dc	5f		 pop	 rdi
  000dd	5e		 pop	 rsi
  000de	c3		 ret	 0
??$make_array@U?$pair@W4RGY_CODEC@@I@std@@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@2@U32@U32@U?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@2@U32@U32@@@YA?AV?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@1@00$$QEAU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@1@00@Z ENDP ; make_array<std::pair<enum RGY_CODEC,unsigned int>,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >,std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z PROC ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_VP8> >
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8>,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_VP8>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_VP8>@@@Z ENDP ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_VP8> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z
_TEXT	SEGMENT
tv66 = 32
__$ReturnUdt$ = 64
_Val1$ = 72
_Val2$ = 80
??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z PROC ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >, COMDAT

; 309  :             is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 310  :     // return pair composed from arguments
; 311  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 312  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Val2$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@AEAW41@@Z ; std::forward<enum <unnamed-enum-MFX_CODEC_AVC> >
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@W4RGY_CODEC@@@std@@YA$$QEAW4RGY_CODEC@@AEAW41@@Z ; std::forward<enum RGY_CODEC>
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00046	4c 8b c1	 mov	 r8, rcx
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??$?0W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@$0A@@?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@QEAA@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ; std::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >::pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> ><enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC>,0>
  00056	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 313  : }

  0005b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005f	5f		 pop	 rdi
  00060	c3		 ret	 0
??$make_pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@std@@YA?AU?$pair@W4RGY_CODEC@@W4<unnamed-enum-MFX_CODEC_AVC>@@@0@$$QEAW4RGY_CODEC@@$$QEAW4<unnamed-enum-MFX_CODEC_AVC>@@@Z ENDP ; std::make_pair<enum RGY_CODEC,enum <unnamed-enum-MFX_CODEC_AVC> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv64 = 0
mode$ = 32
?get_vpp_image_stab_mode_str@@YAPEBDH@Z PROC		; get_vpp_image_stab_mode_str

; 427  : const TCHAR *get_vpp_image_stab_mode_str(int mode) {

$LN8:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 428  :     switch (mode) {

  0001c	8b 44 24 20	 mov	 eax, DWORD PTR mode$[rsp]
  00020	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  00023	83 3c 24 01	 cmp	 DWORD PTR tv64[rsp], 1
  00027	74 08		 je	 SHORT $LN4@get_vpp_im
  00029	83 3c 24 02	 cmp	 DWORD PTR tv64[rsp], 2
  0002d	74 0b		 je	 SHORT $LN5@get_vpp_im
  0002f	eb 12		 jmp	 SHORT $LN6@get_vpp_im
$LN4@get_vpp_im:

; 429  :     case MFX_IMAGESTAB_MODE_UPSCALE: return _T("upscale");

  00031	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118013
  00038	eb 10		 jmp	 SHORT $LN1@get_vpp_im
$LN5@get_vpp_im:

; 430  :     case MFX_IMAGESTAB_MODE_BOXING:  return _T("boxing");

  0003a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118015
  00041	eb 07		 jmp	 SHORT $LN1@get_vpp_im
$LN6@get_vpp_im:

; 431  :     default: return _T("unknown");

  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118017
$LN1@get_vpp_im:

; 432  :     }
; 433  : }

  0004a	48 83 c4 10	 add	 rsp, 16
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
?get_vpp_image_stab_mode_str@@YAPEBDH@Z ENDP		; get_vpp_image_stab_mode_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
i$1 = 0
ppExtBuf$ = 32
nCount$ = 40
targetBufferId$ = 48
?GetExtBuffer@@YAPEAUmfxExtBuffer@@PEAPEAU1@HI@Z PROC	; GetExtBuffer

; 297  : mfxExtBuffer *GetExtBuffer(mfxExtBuffer **ppExtBuf, int nCount, uint32_t targetBufferId) {

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 10	 sub	 rsp, 16
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 04 00 00 00	 mov	 ecx, 4
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 298  :     if (ppExtBuf) {

  00027	48 83 7c 24 20
	00		 cmp	 QWORD PTR ppExtBuf$[rsp], 0
  0002d	74 50		 je	 SHORT $LN5@GetExtBuff

; 299  :         for (int i = 0; i < nCount; i++) {

  0002f	c7 04 24 00 00
	00 00		 mov	 DWORD PTR i$1[rsp], 0
  00036	eb 08		 jmp	 SHORT $LN4@GetExtBuff
$LN2@GetExtBuff:
  00038	8b 04 24	 mov	 eax, DWORD PTR i$1[rsp]
  0003b	ff c0		 inc	 eax
  0003d	89 04 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@GetExtBuff:
  00040	8b 44 24 28	 mov	 eax, DWORD PTR nCount$[rsp]
  00044	39 04 24	 cmp	 DWORD PTR i$1[rsp], eax
  00047	7d 36		 jge	 SHORT $LN3@GetExtBuff

; 300  :             if (ppExtBuf[i] && ppExtBuf[i]->BufferId == targetBufferId) {

  00049	48 63 04 24	 movsxd	 rax, DWORD PTR i$1[rsp]
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ppExtBuf$[rsp]
  00052	48 83 3c c1 00	 cmp	 QWORD PTR [rcx+rax*8], 0
  00057	74 24		 je	 SHORT $LN6@GetExtBuff
  00059	48 63 04 24	 movsxd	 rax, DWORD PTR i$1[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ppExtBuf$[rsp]
  00062	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  00066	8b 4c 24 30	 mov	 ecx, DWORD PTR targetBufferId$[rsp]
  0006a	39 08		 cmp	 DWORD PTR [rax], ecx
  0006c	75 0f		 jne	 SHORT $LN6@GetExtBuff

; 301  :                 return ppExtBuf[i];

  0006e	48 63 04 24	 movsxd	 rax, DWORD PTR i$1[rsp]
  00072	48 8b 4c 24 20	 mov	 rcx, QWORD PTR ppExtBuf$[rsp]
  00077	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  0007b	eb 04		 jmp	 SHORT $LN1@GetExtBuff
$LN6@GetExtBuff:

; 302  :             }
; 303  :         }

  0007d	eb b9		 jmp	 SHORT $LN2@GetExtBuff
$LN3@GetExtBuff:
$LN5@GetExtBuff:

; 304  :     }
; 305  :     return nullptr;

  0007f	33 c0		 xor	 eax, eax
$LN1@GetExtBuff:

; 306  : }

  00081	48 83 c4 10	 add	 rsp, 16
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?GetExtBuffer@@YAPEAUmfxExtBuffer@@PEAPEAU1@HI@Z ENDP	; GetExtBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
pBitstream$ = 48
?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z PROC	; mfxBitstreamClear

; 270  : void mfxBitstreamClear(mfxBitstream *pBitstream) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 271  :     if (pBitstream->Data) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00023	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  00028	74 0f		 je	 SHORT $LN2@mfxBitstre

; 272  :         _aligned_free(pBitstream->Data);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR pBitstream$[rsp]
  0002f	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_free
$LN2@mfxBitstre:

; 273  :     }
; 274  :     memset(pBitstream, 0, sizeof(pBitstream[0]));

  00039	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  0003f	33 d2		 xor	 edx, edx
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00046	e8 00 00 00 00	 call	 memset

; 275  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z ENDP	; mfxBitstreamClear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
sts$ = 32
new_data_length$1 = 36
pBitstream$ = 64
data$ = 72
size$ = 80
?mfxBitstreamAppend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBEI@Z PROC ; mfxBitstreamAppend

; 277  : mfxStatus mfxBitstreamAppend(mfxBitstream *pBitstream, const uint8_t *data, uint32_t size) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 278  :     mfxStatus sts = MFX_ERR_NONE;

  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR sts$[rsp], 0

; 279  :     if (data) {

  00030	48 83 7c 24 48
	00		 cmp	 QWORD PTR data$[rsp], 0
  00036	0f 84 d2 00 00
	00		 je	 $LN2@mfxBitstre

; 280  :         const uint32_t new_data_length = pBitstream->DataLength + size;

  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00041	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  00044	03 44 24 50	 add	 eax, DWORD PTR size$[rsp]
  00048	89 44 24 24	 mov	 DWORD PTR new_data_length$1[rsp], eax

; 281  :         if (pBitstream->MaxLength < new_data_length) {

  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00051	8b 4c 24 24	 mov	 ecx, DWORD PTR new_data_length$1[rsp]
  00055	39 48 38	 cmp	 DWORD PTR [rax+56], ecx
  00058	73 22		 jae	 SHORT $LN3@mfxBitstre

; 282  :             if (MFX_ERR_NONE != (sts = mfxBitstreamExtend(pBitstream, new_data_length))) {

  0005a	8b 54 24 24	 mov	 edx, DWORD PTR new_data_length$1[rsp]
  0005e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00063	e8 00 00 00 00	 call	 ?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ; mfxBitstreamExtend
  00068	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax
  0006c	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00071	74 09		 je	 SHORT $LN4@mfxBitstre

; 283  :                 return sts;

  00073	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  00077	e9 96 00 00 00	 jmp	 $LN1@mfxBitstre
$LN4@mfxBitstre:
$LN3@mfxBitstre:

; 284  :             }
; 285  :         }
; 286  : 
; 287  :         if (pBitstream->MaxLength < new_data_length + pBitstream->DataOffset) {

  0007c	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00081	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00084	8b 4c 24 24	 mov	 ecx, DWORD PTR new_data_length$1[rsp]
  00088	03 c8		 add	 ecx, eax
  0008a	8b c1		 mov	 eax, ecx
  0008c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00091	39 41 38	 cmp	 DWORD PTR [rcx+56], eax
  00094	73 39		 jae	 SHORT $LN5@mfxBitstre

; 288  :             memmove(pBitstream->Data, pBitstream->Data + pBitstream->DataOffset, pBitstream->DataLength);

  00096	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  0009b	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  0009e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  000a3	8b 49 30	 mov	 ecx, DWORD PTR [rcx+48]
  000a6	48 8b 54 24 40	 mov	 rdx, QWORD PTR pBitstream$[rsp]
  000ab	48 03 4a 28	 add	 rcx, QWORD PTR [rdx+40]
  000af	44 8b c0	 mov	 r8d, eax
  000b2	48 8b d1	 mov	 rdx, rcx
  000b5	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  000ba	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  000be	e8 00 00 00 00	 call	 memmove

; 289  :             pBitstream->DataOffset = 0;

  000c3	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  000c8	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0
$LN5@mfxBitstre:

; 290  :         }
; 291  :         memcpy(pBitstream->Data + pBitstream->DataLength + pBitstream->DataOffset, data, size);

  000cf	8b 44 24 50	 mov	 eax, DWORD PTR size$[rsp]
  000d3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  000d8	8b 49 34	 mov	 ecx, DWORD PTR [rcx+52]
  000db	48 8b 54 24 40	 mov	 rdx, QWORD PTR pBitstream$[rsp]
  000e0	48 8b 52 28	 mov	 rdx, QWORD PTR [rdx+40]
  000e4	48 03 d1	 add	 rdx, rcx
  000e7	48 8b ca	 mov	 rcx, rdx
  000ea	48 8b 54 24 40	 mov	 rdx, QWORD PTR pBitstream$[rsp]
  000ef	8b 52 30	 mov	 edx, DWORD PTR [rdx+48]
  000f2	48 03 ca	 add	 rcx, rdx
  000f5	44 8b c0	 mov	 r8d, eax
  000f8	48 8b 54 24 48	 mov	 rdx, QWORD PTR data$[rsp]
  000fd	e8 00 00 00 00	 call	 memcpy

; 292  :         pBitstream->DataLength = new_data_length;

  00102	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00107	8b 4c 24 24	 mov	 ecx, DWORD PTR new_data_length$1[rsp]
  0010b	89 48 34	 mov	 DWORD PTR [rax+52], ecx
$LN2@mfxBitstre:

; 293  :     }
; 294  :     return sts;

  0010e	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
$LN1@mfxBitstre:

; 295  : }

  00112	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00116	5f		 pop	 rdi
  00117	c3		 ret	 0
?mfxBitstreamAppend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBEI@Z ENDP ; mfxBitstreamAppend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
pData$ = 32
nDataLen$ = 40
pBitstream$ = 64
nSize$ = 72
?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z PROC ; mfxBitstreamExtend

; 249  : mfxStatus mfxBitstreamExtend(mfxBitstream *pBitstream, uint32_t nSize) {

$LN5:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 250  :     uint8_t *pData = (uint8_t *)_aligned_malloc(nSize, 32);

  00022	8b 44 24 48	 mov	 eax, DWORD PTR nSize$[rsp]
  00026	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0002b	8b c8		 mov	 ecx, eax
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  00033	48 89 44 24 20	 mov	 QWORD PTR pData$[rsp], rax

; 251  :     if (nullptr == pData) {

  00038	48 83 7c 24 20
	00		 cmp	 QWORD PTR pData$[rsp], 0
  0003e	75 07		 jne	 SHORT $LN2@mfxBitstre

; 252  :         return MFX_ERR_NULL_PTR;

  00040	b8 fe ff ff ff	 mov	 eax, -2
  00045	eb 76		 jmp	 SHORT $LN1@mfxBitstre
$LN2@mfxBitstre:

; 253  :     }
; 254  : 
; 255  :     auto nDataLen = pBitstream->DataLength;

  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  0004c	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  0004f	89 44 24 28	 mov	 DWORD PTR nDataLen$[rsp], eax

; 256  :     if (nDataLen) {

  00053	83 7c 24 28 00	 cmp	 DWORD PTR nDataLen$[rsp], 0
  00058	74 25		 je	 SHORT $LN3@mfxBitstre

; 257  :         memmove(pData, pBitstream->Data + pBitstream->DataOffset, nDataLen);

  0005a	8b 44 24 28	 mov	 eax, DWORD PTR nDataLen$[rsp]
  0005e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00063	8b 49 30	 mov	 ecx, DWORD PTR [rcx+48]
  00066	48 8b 54 24 40	 mov	 rdx, QWORD PTR pBitstream$[rsp]
  0006b	48 03 4a 28	 add	 rcx, QWORD PTR [rdx+40]
  0006f	44 8b c0	 mov	 r8d, eax
  00072	48 8b d1	 mov	 rdx, rcx
  00075	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pData$[rsp]
  0007a	e8 00 00 00 00	 call	 memmove
$LN3@mfxBitstre:

; 258  :     }
; 259  : 
; 260  :     mfxBitstreamClear(pBitstream);

  0007f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00084	e8 00 00 00 00	 call	 ?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z ; mfxBitstreamClear

; 261  : 
; 262  :     pBitstream->Data       = pData;

  00089	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  0008e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR pData$[rsp]
  00093	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx

; 263  :     pBitstream->DataOffset = 0;

  00097	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  0009c	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 264  :     pBitstream->DataLength = nDataLen;

  000a3	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  000a8	8b 4c 24 28	 mov	 ecx, DWORD PTR nDataLen$[rsp]
  000ac	89 48 34	 mov	 DWORD PTR [rax+52], ecx

; 265  :     pBitstream->MaxLength  = nSize;

  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  000b4	8b 4c 24 48	 mov	 ecx, DWORD PTR nSize$[rsp]
  000b8	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 266  : 
; 267  :     return MFX_ERR_NONE;

  000bb	33 c0		 xor	 eax, eax
$LN1@mfxBitstre:

; 268  : }

  000bd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c1	5f		 pop	 rdi
  000c2	c3		 ret	 0
?mfxBitstreamExtend@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ENDP ; mfxBitstreamExtend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
sts$ = 32
pBitstreamCopy$ = 64
pBitstream$ = 72
?mfxBitstreamCopy@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBU2@@Z PROC ; mfxBitstreamCopy

; 236  : mfxStatus mfxBitstreamCopy(mfxBitstream *pBitstreamCopy, const mfxBitstream *pBitstream) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 237  :     memcpy(pBitstreamCopy, pBitstream, sizeof(pBitstreamCopy[0]));

  00023	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  00029	48 8b 54 24 48	 mov	 rdx, QWORD PTR pBitstream$[rsp]
  0002e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstreamCopy$[rsp]
  00033	e8 00 00 00 00	 call	 memcpy

; 238  :     pBitstreamCopy->Data = nullptr;

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstreamCopy$[rsp]
  0003d	48 c7 40 28 00
	00 00 00	 mov	 QWORD PTR [rax+40], 0

; 239  :     pBitstreamCopy->DataLength = 0;

  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstreamCopy$[rsp]
  0004a	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [rax+52], 0

; 240  :     pBitstreamCopy->DataOffset = 0;

  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstreamCopy$[rsp]
  00056	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 241  :     pBitstreamCopy->MaxLength = 0;

  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstreamCopy$[rsp]
  00062	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [rax+56], 0

; 242  :     auto sts = mfxBitstreamInit(pBitstreamCopy, pBitstream->MaxLength);

  00069	48 8b 44 24 48	 mov	 rax, QWORD PTR pBitstream$[rsp]
  0006e	8b 50 38	 mov	 edx, DWORD PTR [rax+56]
  00071	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstreamCopy$[rsp]
  00076	e8 00 00 00 00	 call	 ?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ; mfxBitstreamInit
  0007b	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 243  :     if (sts == MFX_ERR_NONE) {

  0007f	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00084	75 22		 jne	 SHORT $LN2@mfxBitstre

; 244  :         memcpy(pBitstreamCopy->Data, pBitstream->Data, pBitstreamCopy->DataLength);

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstreamCopy$[rsp]
  0008b	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  0008e	44 8b c0	 mov	 r8d, eax
  00091	48 8b 44 24 48	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00096	48 8b 50 28	 mov	 rdx, QWORD PTR [rax+40]
  0009a	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstreamCopy$[rsp]
  0009f	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  000a3	e8 00 00 00 00	 call	 memcpy
$LN2@mfxBitstre:

; 245  :     }
; 246  :     return sts;

  000a8	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]

; 247  : }

  000ac	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b0	5f		 pop	 rdi
  000b1	c3		 ret	 0
?mfxBitstreamCopy@@YA?AW4mfxStatus@@PEAUmfxBitstream@@PEBU2@@Z ENDP ; mfxBitstreamCopy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv66 = 32
pBitstream$ = 64
nSize$ = 72
?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z PROC ; mfxBitstreamInit

; 225  : mfxStatus mfxBitstreamInit(mfxBitstream *pBitstream, uint32_t nSize) {

$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 226  :     mfxBitstreamClear(pBitstream);

  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pBitstream$[rsp]
  00027	e8 00 00 00 00	 call	 ?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z ; mfxBitstreamClear

; 227  : 
; 228  :     if (nullptr == (pBitstream->Data = (uint8_t *)_aligned_malloc(nSize, 32))) {

  0002c	8b 44 24 48	 mov	 eax, DWORD PTR nSize$[rsp]
  00030	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00035	8b c8		 mov	 ecx, eax
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  0003d	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00047	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  0004c	48 89 48 28	 mov	 QWORD PTR [rax+40], rcx
  00050	48 83 7c 24 20
	00		 cmp	 QWORD PTR tv66[rsp], 0
  00056	75 07		 jne	 SHORT $LN2@mfxBitstre

; 229  :         return MFX_ERR_NULL_PTR;

  00058	b8 fe ff ff ff	 mov	 eax, -2
  0005d	eb 0e		 jmp	 SHORT $LN1@mfxBitstre
$LN2@mfxBitstre:

; 230  :     }
; 231  : 
; 232  :     pBitstream->MaxLength = nSize;

  0005f	48 8b 44 24 40	 mov	 rax, QWORD PTR pBitstream$[rsp]
  00064	8b 4c 24 48	 mov	 ecx, DWORD PTR nSize$[rsp]
  00068	89 48 38	 mov	 DWORD PTR [rax+56], ecx

; 233  :     return MFX_ERR_NONE;

  0006b	33 c0		 xor	 eax, eax
$LN1@mfxBitstre:

; 234  : }

  0006d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ENDP ; mfxBitstreamInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv64 = 0
memType$ = 32
?MemTypeToStr@@YAPEBDI@Z PROC				; MemTypeToStr

; 402  : const TCHAR *MemTypeToStr(uint32_t memType) {

$LN10:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 403  :     switch (memType) {

  0001c	8b 44 24 20	 mov	 eax, DWORD PTR memType$[rsp]
  00020	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  00023	83 3c 24 00	 cmp	 DWORD PTR tv64[rsp], 0
  00027	74 14		 je	 SHORT $LN4@MemTypeToS
  00029	83 3c 24 01	 cmp	 DWORD PTR tv64[rsp], 1
  0002d	74 17		 je	 SHORT $LN5@MemTypeToS
  0002f	83 3c 24 02	 cmp	 DWORD PTR tv64[rsp], 2
  00033	74 1a		 je	 SHORT $LN6@MemTypeToS
  00035	83 3c 24 03	 cmp	 DWORD PTR tv64[rsp], 3
  00039	74 1d		 je	 SHORT $LN7@MemTypeToS
  0003b	eb 24		 jmp	 SHORT $LN8@MemTypeToS
$LN4@MemTypeToS:

; 404  :     case SYSTEM_MEMORY:
; 405  :         return _T("system");

  0003d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117998
  00044	eb 22		 jmp	 SHORT $LN1@MemTypeToS
$LN5@MemTypeToS:

; 406  : #if D3D_SURFACES_SUPPORT
; 407  :     case D3D9_MEMORY:
; 408  :         return _T("d3d9");

  00046	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118000
  0004d	eb 19		 jmp	 SHORT $LN1@MemTypeToS
$LN6@MemTypeToS:

; 409  : #if MFX_D3D11_SUPPORT
; 410  :     case D3D11_MEMORY:
; 411  :         return _T("d3d11");

  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118002
  00056	eb 10		 jmp	 SHORT $LN1@MemTypeToS
$LN7@MemTypeToS:

; 412  :     case HW_MEMORY:
; 413  :         return _T("d3d11+d3d9");

  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118004
  0005f	eb 07		 jmp	 SHORT $LN1@MemTypeToS
$LN8@MemTypeToS:

; 414  : #endif //#if MFX_D3D11_SUPPORT
; 415  : #endif //#if D3D_SURFACES_SUPPORT
; 416  : #ifdef LIBVA_SUPPORT
; 417  :     case VA_MEMORY:
; 418  :     case HW_MEMORY:
; 419  :         return _T("va");
; 420  : #endif
; 421  :     default:
; 422  :         return _T("unsupported");

  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG118006
$LN1@MemTypeToS:

; 423  :     }
; 424  : }

  00068	48 83 c4 10	 add	 rsp, 16
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
?MemTypeToStr@@YAPEBDI@Z ENDP				; MemTypeToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv64 = 0
enc_mode$ = 32
?EncmodeToStr@@YAPEBDI@Z PROC				; EncmodeToStr

; 372  : const TCHAR *EncmodeToStr(uint32_t enc_mode) {

$LN18:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 373  :     switch (enc_mode) {

  0001c	8b 44 24 20	 mov	 eax, DWORD PTR enc_mode$[rsp]
  00020	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  00023	8b 04 24	 mov	 eax, DWORD PTR tv64[rsp]
  00026	ff c8		 dec	 eax
  00028	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  0002b	83 3c 24 0d	 cmp	 DWORD PTR tv64[rsp], 13
  0002f	77 79		 ja	 SHORT $LN15@EncmodeToS
  00031	8b 04 24	 mov	 eax, DWORD PTR tv64[rsp]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  0003b	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN17@EncmodeToS[rcx+rax*4]
  00042	48 03 c1	 add	 rax, rcx
  00045	ff e0		 jmp	 rax
$LN4@EncmodeToS:

; 374  :     case MFX_RATECONTROL_CBR:
; 375  :         return _T("Bitrate Mode - CBR");

  00047	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117969
  0004e	eb 61		 jmp	 SHORT $LN1@EncmodeToS
$LN5@EncmodeToS:

; 376  :     case MFX_RATECONTROL_VBR:
; 377  :         return _T("Bitrate Mode - VBR");

  00050	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117971
  00057	eb 58		 jmp	 SHORT $LN1@EncmodeToS
$LN6@EncmodeToS:

; 378  :     case MFX_RATECONTROL_AVBR:
; 379  :         return _T("Bitrate Mode - AVBR");

  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117973
  00060	eb 4f		 jmp	 SHORT $LN1@EncmodeToS
$LN7@EncmodeToS:

; 380  :     case MFX_RATECONTROL_CQP:
; 381  :         return _T("Constant QP (CQP)");

  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117975
  00069	eb 46		 jmp	 SHORT $LN1@EncmodeToS
$LN8@EncmodeToS:

; 382  :     case MFX_RATECONTROL_LA:
; 383  :         return _T("Bitrate Mode - Lookahead");

  0006b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117977
  00072	eb 3d		 jmp	 SHORT $LN1@EncmodeToS
$LN9@EncmodeToS:

; 384  :     case MFX_RATECONTROL_ICQ:
; 385  :         return _T("ICQ (Intelligent Const. Quality)");

  00074	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117979
  0007b	eb 34		 jmp	 SHORT $LN1@EncmodeToS
$LN10@EncmodeToS:

; 386  :     case MFX_RATECONTROL_VCM:
; 387  :         return _T("VCM (Video Conference Mode)");

  0007d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117981
  00084	eb 2b		 jmp	 SHORT $LN1@EncmodeToS
$LN11@EncmodeToS:

; 388  :     case MFX_RATECONTROL_LA_ICQ:
; 389  :         return _T("LA-ICQ (Intelligent Const. Quality with Lookahead)");

  00086	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117983
  0008d	eb 22		 jmp	 SHORT $LN1@EncmodeToS
$LN12@EncmodeToS:

; 390  :     case MFX_RATECONTROL_LA_EXT:
; 391  :         return _T("LA-EXT (Extended Lookahead)");

  0008f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117985
  00096	eb 19		 jmp	 SHORT $LN1@EncmodeToS
$LN13@EncmodeToS:

; 392  :     case MFX_RATECONTROL_LA_HRD:
; 393  :         return _T("LA-HRD (HRD compliant Lookahead)");

  00098	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117987
  0009f	eb 10		 jmp	 SHORT $LN1@EncmodeToS
$LN14@EncmodeToS:

; 394  :     case MFX_RATECONTROL_QVBR:
; 395  :         return _T("Quality VBR bitrate");

  000a1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117989
  000a8	eb 07		 jmp	 SHORT $LN1@EncmodeToS
$LN15@EncmodeToS:

; 396  :     default:
; 397  :         return _T("unsupported");

  000aa	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117991
$LN1@EncmodeToS:

; 398  :     }
; 399  : }

  000b1	48 83 c4 10	 add	 rsp, 16
  000b5	5f		 pop	 rdi
  000b6	c3		 ret	 0
  000b7	90		 npad	 1
$LN17@EncmodeToS:
  000b8	00 00 00 00	 DD	 $LN4@EncmodeToS
  000bc	00 00 00 00	 DD	 $LN5@EncmodeToS
  000c0	00 00 00 00	 DD	 $LN7@EncmodeToS
  000c4	00 00 00 00	 DD	 $LN6@EncmodeToS
  000c8	00 00 00 00	 DD	 $LN15@EncmodeToS
  000cc	00 00 00 00	 DD	 $LN15@EncmodeToS
  000d0	00 00 00 00	 DD	 $LN15@EncmodeToS
  000d4	00 00 00 00	 DD	 $LN8@EncmodeToS
  000d8	00 00 00 00	 DD	 $LN9@EncmodeToS
  000dc	00 00 00 00	 DD	 $LN10@EncmodeToS
  000e0	00 00 00 00	 DD	 $LN11@EncmodeToS
  000e4	00 00 00 00	 DD	 $LN12@EncmodeToS
  000e8	00 00 00 00	 DD	 $LN13@EncmodeToS
  000ec	00 00 00 00	 DD	 $LN14@EncmodeToS
?EncmodeToStr@@YAPEBDI@Z ENDP				; EncmodeToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv65 = 0
tu$ = 32
?TargetUsageToStr@@YAPEBDG@Z PROC			; TargetUsageToStr

; 357  : const TCHAR *TargetUsageToStr(uint16_t tu) {

$LN15:
  00000	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	0f b7 4c 24 20	 movzx	 ecx, WORD PTR [rsp+32]

; 358  :     switch (tu) {

  0001e	0f b7 44 24 20	 movzx	 eax, WORD PTR tu$[rsp]
  00023	89 04 24	 mov	 DWORD PTR tv65[rsp], eax
  00026	83 3c 24 07	 cmp	 DWORD PTR tv65[rsp], 7
  0002a	77 5f		 ja	 SHORT $LN12@TargetUsag
  0002c	48 63 04 24	 movsxd	 rax, DWORD PTR tv65[rsp]
  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00037	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN14@TargetUsag[rcx+rax*4]
  0003e	48 03 c1	 add	 rax, rcx
  00041	ff e0		 jmp	 rax
$LN4@TargetUsag:

; 359  :     case MFX_TARGETUSAGE_BEST_QUALITY: return _T("1 - best");

  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117946
  0004a	eb 46		 jmp	 SHORT $LN1@TargetUsag
$LN5@TargetUsag:

; 360  :     case 2:                            return _T("2 - higher");

  0004c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117948
  00053	eb 3d		 jmp	 SHORT $LN1@TargetUsag
$LN6@TargetUsag:

; 361  :     case 3:                            return _T("3 - high");

  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117950
  0005c	eb 34		 jmp	 SHORT $LN1@TargetUsag
$LN7@TargetUsag:

; 362  :     case MFX_TARGETUSAGE_BALANCED:     return _T("4 - balanced");

  0005e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117952
  00065	eb 2b		 jmp	 SHORT $LN1@TargetUsag
$LN8@TargetUsag:

; 363  :     case 5:                            return _T("5 - fast");

  00067	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117954
  0006e	eb 22		 jmp	 SHORT $LN1@TargetUsag
$LN9@TargetUsag:

; 364  :     case 6:                            return _T("6 - faster");

  00070	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117956
  00077	eb 19		 jmp	 SHORT $LN1@TargetUsag
$LN10@TargetUsag:

; 365  :     case MFX_TARGETUSAGE_BEST_SPEED:   return _T("7 - fastest");

  00079	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117958
  00080	eb 10		 jmp	 SHORT $LN1@TargetUsag
$LN11@TargetUsag:

; 366  :     case MFX_TARGETUSAGE_UNKNOWN:      return _T("unknown");

  00082	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117960
  00089	eb 07		 jmp	 SHORT $LN1@TargetUsag
$LN12@TargetUsag:

; 367  :     default:                           return _T("unsupported");

  0008b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117962
$LN1@TargetUsag:

; 368  :     }
; 369  : }

  00092	48 83 c4 10	 add	 rsp, 16
  00096	5f		 pop	 rdi
  00097	c3		 ret	 0
$LN14@TargetUsag:
  00098	00 00 00 00	 DD	 $LN11@TargetUsag
  0009c	00 00 00 00	 DD	 $LN4@TargetUsag
  000a0	00 00 00 00	 DD	 $LN5@TargetUsag
  000a4	00 00 00 00	 DD	 $LN6@TargetUsag
  000a8	00 00 00 00	 DD	 $LN7@TargetUsag
  000ac	00 00 00 00	 DD	 $LN8@TargetUsag
  000b0	00 00 00 00	 DD	 $LN9@TargetUsag
  000b4	00 00 00 00	 DD	 $LN10@TargetUsag
?TargetUsageToStr@@YAPEBDG@Z ENDP			; TargetUsageToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv64 = 0
nFourCC$ = 32
?CodecIdToStr@@YAPEBDI@Z PROC				; CodecIdToStr

; 335  : const TCHAR *CodecIdToStr(uint32_t nFourCC) {

$LN14:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 336  :     switch (nFourCC) {

  0001c	8b 44 24 20	 mov	 eax, DWORD PTR nFourCC$[rsp]
  00020	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  00023	81 3c 24 41 56
	43 20		 cmp	 DWORD PTR tv64[rsp], 541283905 ; 20435641H
  0002a	77 26		 ja	 SHORT $LN13@CodecIdToS
  0002c	81 3c 24 41 56
	43 20		 cmp	 DWORD PTR tv64[rsp], 541283905 ; 20435641H
  00033	74 3a		 je	 SHORT $LN4@CodecIdToS
  00035	81 3c 24 56 43
	31 20		 cmp	 DWORD PTR tv64[rsp], 540099414 ; 20314356H
  0003c	74 3a		 je	 SHORT $LN5@CodecIdToS
  0003e	81 3c 24 56 50
	38 20		 cmp	 DWORD PTR tv64[rsp], 540561494 ; 20385056H
  00045	74 4c		 je	 SHORT $LN8@CodecIdToS
  00047	81 3c 24 56 50
	39 20		 cmp	 DWORD PTR tv64[rsp], 540627030 ; 20395056H
  0004e	74 4c		 je	 SHORT $LN9@CodecIdToS
  00050	eb 5c		 jmp	 SHORT $LN11@CodecIdToS
$LN13@CodecIdToS:
  00052	81 3c 24 4d 50
	47 32		 cmp	 DWORD PTR tv64[rsp], 843534413 ; 3247504dH
  00059	74 2f		 je	 SHORT $LN7@CodecIdToS
  0005b	81 3c 24 48 45
	56 43		 cmp	 DWORD PTR tv64[rsp], 1129727304 ; 43564548H
  00062	74 1d		 je	 SHORT $LN6@CodecIdToS
  00064	81 3c 24 4a 50
	45 47		 cmp	 DWORD PTR tv64[rsp], 1195724874 ; 4745504aH
  0006b	74 38		 je	 SHORT $LN10@CodecIdToS
  0006d	eb 3f		 jmp	 SHORT $LN11@CodecIdToS
$LN4@CodecIdToS:

; 337  :     case MFX_CODEC_AVC:
; 338  :         return _T("H.264/AVC");

  0006f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117925
  00076	eb 3d		 jmp	 SHORT $LN1@CodecIdToS
$LN5@CodecIdToS:

; 339  :     case MFX_CODEC_VC1:
; 340  :         return _T("VC-1");

  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117927
  0007f	eb 34		 jmp	 SHORT $LN1@CodecIdToS
$LN6@CodecIdToS:

; 341  :     case MFX_CODEC_HEVC:
; 342  :         return _T("HEVC");

  00081	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117929
  00088	eb 2b		 jmp	 SHORT $LN1@CodecIdToS
$LN7@CodecIdToS:

; 343  :     case MFX_CODEC_MPEG2:
; 344  :         return _T("MPEG2");

  0008a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117931
  00091	eb 22		 jmp	 SHORT $LN1@CodecIdToS
$LN8@CodecIdToS:

; 345  :     case MFX_CODEC_VP8:
; 346  :         return _T("VP8");

  00093	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117933
  0009a	eb 19		 jmp	 SHORT $LN1@CodecIdToS
$LN9@CodecIdToS:

; 347  :     case MFX_CODEC_VP9:
; 348  :         return _T("VP9");

  0009c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117935
  000a3	eb 10		 jmp	 SHORT $LN1@CodecIdToS
$LN10@CodecIdToS:

; 349  :     case MFX_CODEC_JPEG:
; 350  :         return _T("JPEG");

  000a5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117937
  000ac	eb 07		 jmp	 SHORT $LN1@CodecIdToS
$LN11@CodecIdToS:

; 351  :     default:
; 352  :         return _T("NOT_SUPPORTED");

  000ae	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117939
$LN1@CodecIdToS:

; 353  :     }
; 354  : }

  000b5	48 83 c4 10	 add	 rsp, 16
  000b9	5f		 pop	 rdi
  000ba	c3		 ret	 0
?CodecIdToStr@@YAPEBDI@Z ENDP				; CodecIdToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv64 = 0
format$ = 32
?ColorFormatToStr@@YAPEBDI@Z PROC			; ColorFormatToStr

; 309  : const TCHAR *ColorFormatToStr(uint32_t format) {

$LN16:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 310  :     switch (format) {

  0001c	8b 44 24 20	 mov	 eax, DWORD PTR format$[rsp]
  00020	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  00023	81 3c 24 59 55
	59 32		 cmp	 DWORD PTR tv64[rsp], 844715353 ; 32595559H
  0002a	77 37		 ja	 SHORT $LN15@ColorForma
  0002c	81 3c 24 59 55
	59 32		 cmp	 DWORD PTR tv64[rsp], 844715353 ; 32595559H
  00033	74 6f		 je	 SHORT $LN7@ColorForma
  00035	81 3c 24 50 30
	31 30		 cmp	 DWORD PTR tv64[rsp], 808530000 ; 30313050H
  0003c	0f 84 86 00 00
	00		 je	 $LN11@ColorForma
  00042	81 3c 24 50 32
	31 30		 cmp	 DWORD PTR tv64[rsp], 808530512 ; 30313250H
  00049	0f 84 82 00 00
	00		 je	 $LN12@ColorForma
  0004f	81 3c 24 4e 56
	31 32		 cmp	 DWORD PTR tv64[rsp], 842094158 ; 3231564eH
  00056	74 31		 je	 SHORT $LN4@ColorForma
  00058	81 3c 24 59 56
	31 32		 cmp	 DWORD PTR tv64[rsp], 842094169 ; 32315659H
  0005f	74 3a		 je	 SHORT $LN6@ColorForma
  00061	eb 77		 jmp	 SHORT $LN13@ColorForma
$LN15@ColorForma:
  00063	81 3c 24 52 47
	42 33		 cmp	 DWORD PTR tv64[rsp], 859981650 ; 33424752H
  0006a	74 41		 je	 SHORT $LN8@ColorForma
  0006c	81 3c 24 52 47
	42 34		 cmp	 DWORD PTR tv64[rsp], 876758866 ; 34424752H
  00073	74 41		 je	 SHORT $LN9@ColorForma
  00075	81 3c 24 42 47
	52 34		 cmp	 DWORD PTR tv64[rsp], 877807426 ; 34524742H
  0007c	74 41		 je	 SHORT $LN10@ColorForma
  0007e	81 3c 24 4e 56
	31 36		 cmp	 DWORD PTR tv64[rsp], 909203022 ; 3631564eH
  00085	74 0b		 je	 SHORT $LN5@ColorForma
  00087	eb 51		 jmp	 SHORT $LN13@ColorForma
$LN4@ColorForma:

; 311  :     case MFX_FOURCC_NV12:
; 312  :         return _T("nv12");

  00089	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117900
  00090	eb 4f		 jmp	 SHORT $LN1@ColorForma
$LN5@ColorForma:

; 313  :     case MFX_FOURCC_NV16:
; 314  :         return _T("nv16");

  00092	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117902
  00099	eb 46		 jmp	 SHORT $LN1@ColorForma
$LN6@ColorForma:

; 315  :     case MFX_FOURCC_YV12:
; 316  :         return _T("yv12");

  0009b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117904
  000a2	eb 3d		 jmp	 SHORT $LN1@ColorForma
$LN7@ColorForma:

; 317  :     case MFX_FOURCC_YUY2:
; 318  :         return _T("yuy2");

  000a4	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117906
  000ab	eb 34		 jmp	 SHORT $LN1@ColorForma
$LN8@ColorForma:

; 319  :     case MFX_FOURCC_RGB3:
; 320  :         return _T("rgb24");

  000ad	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117908
  000b4	eb 2b		 jmp	 SHORT $LN1@ColorForma
$LN9@ColorForma:

; 321  :     case MFX_FOURCC_RGB4:
; 322  :         return _T("rgb32");

  000b6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117910
  000bd	eb 22		 jmp	 SHORT $LN1@ColorForma
$LN10@ColorForma:

; 323  :     case MFX_FOURCC_BGR4:
; 324  :         return _T("bgr32");

  000bf	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117912
  000c6	eb 19		 jmp	 SHORT $LN1@ColorForma
$LN11@ColorForma:

; 325  :     case MFX_FOURCC_P010:
; 326  :         return _T("p010");

  000c8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117914
  000cf	eb 10		 jmp	 SHORT $LN1@ColorForma
$LN12@ColorForma:

; 327  :     case MFX_FOURCC_P210:
; 328  :         return _T("p210");

  000d1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117916
  000d8	eb 07		 jmp	 SHORT $LN1@ColorForma
$LN13@ColorForma:

; 329  :     default:
; 330  :         return _T("unsupported");

  000da	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117918
$LN1@ColorForma:

; 331  :     }
; 332  : }

  000e1	48 83 c4 10	 add	 rsp, 16
  000e5	5f		 pop	 rdi
  000e6	c3		 ret	 0
?ColorFormatToStr@@YAPEBDI@Z ENDP			; ColorFormatToStr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv64 = 0
sts$ = 32
?get_err_mes@@YAPEBDH@Z PROC				; get_err_mes

; 164  : const TCHAR *get_err_mes(int sts) {

$LN34:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 165  :     switch (sts) {

  0001c	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  00020	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  00023	8b 04 24	 mov	 eax, DWORD PTR tv64[rsp]
  00026	83 c0 16	 add	 eax, 22
  00029	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  0002c	83 3c 24 1d	 cmp	 DWORD PTR tv64[rsp], 29
  00030	0f 87 31 01 00
	00		 ja	 $LN31@get_err_me
  00036	48 63 04 24	 movsxd	 rax, DWORD PTR tv64[rsp]
  0003a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00041	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN33@get_err_me[rcx+rax*4]
  00048	48 03 c1	 add	 rax, rcx
  0004b	ff e0		 jmp	 rax
$LN4@get_err_me:

; 166  :     case MFX_ERR_NONE:                     return _T("no error.");

  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117753
  00054	e9 15 01 00 00	 jmp	 $LN1@get_err_me
$LN5@get_err_me:

; 167  :     case MFX_ERR_UNKNOWN:                  return _T("unknown error.");

  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117755
  00060	e9 09 01 00 00	 jmp	 $LN1@get_err_me
$LN6@get_err_me:

; 168  :     case MFX_ERR_NULL_PTR:                 return _T("null pointer.");

  00065	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117757
  0006c	e9 fd 00 00 00	 jmp	 $LN1@get_err_me
$LN7@get_err_me:

; 169  :     case MFX_ERR_UNSUPPORTED:              return _T("undeveloped feature.");

  00071	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117759
  00078	e9 f1 00 00 00	 jmp	 $LN1@get_err_me
$LN8@get_err_me:

; 170  :     case MFX_ERR_MEMORY_ALLOC:             return _T("failed to allocate memory.");

  0007d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117761
  00084	e9 e5 00 00 00	 jmp	 $LN1@get_err_me
$LN9@get_err_me:

; 171  :     case MFX_ERR_NOT_ENOUGH_BUFFER:        return _T("insufficient buffer at input/output.");

  00089	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117763
  00090	e9 d9 00 00 00	 jmp	 $LN1@get_err_me
$LN10@get_err_me:

; 172  :     case MFX_ERR_INVALID_HANDLE:           return _T("invalid handle.");

  00095	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117765
  0009c	e9 cd 00 00 00	 jmp	 $LN1@get_err_me
$LN11@get_err_me:

; 173  :     case MFX_ERR_LOCK_MEMORY:              return _T("failed to lock the memory block.");

  000a1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117767
  000a8	e9 c1 00 00 00	 jmp	 $LN1@get_err_me
$LN12@get_err_me:

; 174  :     case MFX_ERR_NOT_INITIALIZED:          return _T("member function called before initialization.");

  000ad	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117769
  000b4	e9 b5 00 00 00	 jmp	 $LN1@get_err_me
$LN13@get_err_me:

; 175  :     case MFX_ERR_NOT_FOUND:                return _T("the specified object is not found.");

  000b9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117771
  000c0	e9 a9 00 00 00	 jmp	 $LN1@get_err_me
$LN14@get_err_me:

; 176  :     case MFX_ERR_MORE_DATA:                return _T("expect more data at input.");

  000c5	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117773
  000cc	e9 9d 00 00 00	 jmp	 $LN1@get_err_me
$LN15@get_err_me:

; 177  :     case MFX_ERR_MORE_SURFACE:             return _T("expect more surface at output.");

  000d1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117775
  000d8	e9 91 00 00 00	 jmp	 $LN1@get_err_me
$LN16@get_err_me:

; 178  :     case MFX_ERR_ABORTED:                  return _T("operation aborted.");

  000dd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117777
  000e4	e9 85 00 00 00	 jmp	 $LN1@get_err_me
$LN17@get_err_me:

; 179  :     case MFX_ERR_DEVICE_LOST:              return _T("lose the HW acceleration device.");

  000e9	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117779
  000f0	eb 7c		 jmp	 SHORT $LN1@get_err_me
$LN18@get_err_me:

; 180  :     case MFX_ERR_INCOMPATIBLE_VIDEO_PARAM: return _T("incompatible video parameters.");

  000f2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117781
  000f9	eb 73		 jmp	 SHORT $LN1@get_err_me
$LN19@get_err_me:

; 181  :     case MFX_ERR_INVALID_VIDEO_PARAM:      return _T("invalid video parameters.");

  000fb	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117783
  00102	eb 6a		 jmp	 SHORT $LN1@get_err_me
$LN20@get_err_me:

; 182  :     case MFX_ERR_UNDEFINED_BEHAVIOR:       return _T("undefined behavior.");

  00104	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117785
  0010b	eb 61		 jmp	 SHORT $LN1@get_err_me
$LN21@get_err_me:

; 183  :     case MFX_ERR_DEVICE_FAILED:            return _T("device operation failure.");

  0010d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117787
  00114	eb 58		 jmp	 SHORT $LN1@get_err_me
$LN22@get_err_me:

; 184  :     case MFX_ERR_GPU_HANG:                 return _T("gpu hang.");

  00116	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117789
  0011d	eb 4f		 jmp	 SHORT $LN1@get_err_me
$LN23@get_err_me:

; 185  :     case MFX_ERR_REALLOC_SURFACE:          return _T("failed to realloc surface.");

  0011f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117791
  00126	eb 46		 jmp	 SHORT $LN1@get_err_me
$LN24@get_err_me:

; 186  : 
; 187  :     case MFX_WRN_IN_EXECUTION:             return _T("the previous asynchrous operation is in execution.");

  00128	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117793
  0012f	eb 3d		 jmp	 SHORT $LN1@get_err_me
$LN25@get_err_me:

; 188  :     case MFX_WRN_DEVICE_BUSY:              return _T("the HW acceleration device is busy.");

  00131	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117795
  00138	eb 34		 jmp	 SHORT $LN1@get_err_me
$LN26@get_err_me:

; 189  :     case MFX_WRN_VIDEO_PARAM_CHANGED:      return _T("the video parameters are changed during decoding.");

  0013a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117797
  00141	eb 2b		 jmp	 SHORT $LN1@get_err_me
$LN27@get_err_me:

; 190  :     case MFX_WRN_PARTIAL_ACCELERATION:     return _T("SW is used.");

  00143	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117799
  0014a	eb 22		 jmp	 SHORT $LN1@get_err_me
$LN28@get_err_me:

; 191  :     case MFX_WRN_INCOMPATIBLE_VIDEO_PARAM: return _T("incompatible video parameters.");

  0014c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117801
  00153	eb 19		 jmp	 SHORT $LN1@get_err_me
$LN29@get_err_me:

; 192  :     case MFX_WRN_VALUE_NOT_CHANGED:        return _T("the value is saturated based on its valid range.");

  00155	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117803
  0015c	eb 10		 jmp	 SHORT $LN1@get_err_me
$LN30@get_err_me:

; 193  :     case MFX_WRN_OUT_OF_RANGE:             return _T("the value is out of valid range.");

  0015e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117805
  00165	eb 07		 jmp	 SHORT $LN1@get_err_me
$LN31@get_err_me:

; 194  :     default:                               return _T("unknown error.");

  00167	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117807
$LN1@get_err_me:

; 195  :     }
; 196  : }

  0016e	48 83 c4 10	 add	 rsp, 16
  00172	5f		 pop	 rdi
  00173	c3		 ret	 0
$LN33@get_err_me:
  00174	00 00 00 00	 DD	 $LN23@get_err_me
  00178	00 00 00 00	 DD	 $LN22@get_err_me
  0017c	00 00 00 00	 DD	 $LN31@get_err_me
  00180	00 00 00 00	 DD	 $LN31@get_err_me
  00184	00 00 00 00	 DD	 $LN31@get_err_me
  00188	00 00 00 00	 DD	 $LN21@get_err_me
  0018c	00 00 00 00	 DD	 $LN20@get_err_me
  00190	00 00 00 00	 DD	 $LN19@get_err_me
  00194	00 00 00 00	 DD	 $LN18@get_err_me
  00198	00 00 00 00	 DD	 $LN17@get_err_me
  0019c	00 00 00 00	 DD	 $LN16@get_err_me
  001a0	00 00 00 00	 DD	 $LN15@get_err_me
  001a4	00 00 00 00	 DD	 $LN14@get_err_me
  001a8	00 00 00 00	 DD	 $LN13@get_err_me
  001ac	00 00 00 00	 DD	 $LN12@get_err_me
  001b0	00 00 00 00	 DD	 $LN11@get_err_me
  001b4	00 00 00 00	 DD	 $LN10@get_err_me
  001b8	00 00 00 00	 DD	 $LN9@get_err_me
  001bc	00 00 00 00	 DD	 $LN8@get_err_me
  001c0	00 00 00 00	 DD	 $LN7@get_err_me
  001c4	00 00 00 00	 DD	 $LN6@get_err_me
  001c8	00 00 00 00	 DD	 $LN5@get_err_me
  001cc	00 00 00 00	 DD	 $LN4@get_err_me
  001d0	00 00 00 00	 DD	 $LN24@get_err_me
  001d4	00 00 00 00	 DD	 $LN25@get_err_me
  001d8	00 00 00 00	 DD	 $LN26@get_err_me
  001dc	00 00 00 00	 DD	 $LN27@get_err_me
  001e0	00 00 00 00	 DD	 $LN28@get_err_me
  001e4	00 00 00 00	 DD	 $LN29@get_err_me
  001e8	00 00 00 00	 DD	 $LN30@get_err_me
?get_err_mes@@YAPEBDH@Z ENDP				; get_err_mes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
tv65 = 0
LowPower$ = 32
?get_low_power_str@@YAPEBDG@Z PROC			; get_low_power_str

; 199  : const TCHAR *get_low_power_str(mfxU16 LowPower) {

$LN8:
  00000	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	0f b7 4c 24 20	 movzx	 ecx, WORD PTR [rsp+32]

; 200  :     switch (LowPower) {

  0001e	0f b7 44 24 20	 movzx	 eax, WORD PTR LowPower$[rsp]
  00023	89 04 24	 mov	 DWORD PTR tv65[rsp], eax
  00026	83 3c 24 10	 cmp	 DWORD PTR tv65[rsp], 16
  0002a	74 11		 je	 SHORT $LN5@get_low_po
  0002c	83 3c 24 20	 cmp	 DWORD PTR tv65[rsp], 32	; 00000020H
  00030	74 02		 je	 SHORT $LN4@get_low_po
  00032	eb 12		 jmp	 SHORT $LN6@get_low_po
$LN4@get_low_po:

; 201  :     case MFX_CODINGOPTION_OFF: return _T(" PG");

  00034	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117814
  0003b	eb 10		 jmp	 SHORT $LN1@get_low_po
$LN5@get_low_po:

; 202  :     case MFX_CODINGOPTION_ON:  return _T(" FF");

  0003d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117816
  00044	eb 07		 jmp	 SHORT $LN1@get_low_po
$LN6@get_low_po:

; 203  :     default: return _T("");

  00046	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117818
$LN1@get_low_po:

; 204  :     }
; 205  : }

  0004d	48 83 c4 10	 add	 rsp, 16
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
?get_low_power_str@@YAPEBDG@Z ENDP			; get_low_power_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
memtype$ = 136
?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z PROC ; qsv_memtype_str

; 208  : tstring qsv_memtype_str(uint16_t memtype) {

$LN17:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]
  00026	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002d	48 33 c4	 xor	 rax, rsp
  00030	48 89 44 24 68	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00035	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 209  :     tstring str;

  0003d	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00042	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00047	90		 npad	 1

; 210  :     if (memtype & MFX_MEMTYPE_INTERNAL_FRAME)         str += _T("internal,");

  00048	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00050	83 e0 01	 and	 eax, 1
  00053	85 c0		 test	 eax, eax
  00055	74 11		 je	 SHORT $LN2@qsv_memtyp
  00057	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117826
  0005e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00063	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN2@qsv_memtyp:

; 211  :     if (memtype & MFX_MEMTYPE_EXTERNAL_FRAME)         str += _T("external,");

  00068	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00070	83 e0 02	 and	 eax, 2
  00073	85 c0		 test	 eax, eax
  00075	74 11		 je	 SHORT $LN3@qsv_memtyp
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117828
  0007e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00083	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN3@qsv_memtyp:

; 212  :     if (memtype & MFX_MEMTYPE_OPAQUE_FRAME)           str += _T("opaque,");

  00088	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00090	83 e0 04	 and	 eax, 4
  00093	85 c0		 test	 eax, eax
  00095	74 11		 je	 SHORT $LN4@qsv_memtyp
  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117830
  0009e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000a3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN4@qsv_memtyp:

; 213  :     if (memtype & MFX_MEMTYPE_DXVA2_DECODER_TARGET)   str += _T("dxvadec,");

  000a8	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  000b0	83 e0 10	 and	 eax, 16
  000b3	85 c0		 test	 eax, eax
  000b5	74 11		 je	 SHORT $LN5@qsv_memtyp
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117832
  000be	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000c3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN5@qsv_memtyp:

; 214  :     if (memtype & MFX_MEMTYPE_DXVA2_PROCESSOR_TARGET) str += _T("dxvaproc,");

  000c8	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  000d0	83 e0 20	 and	 eax, 32			; 00000020H
  000d3	85 c0		 test	 eax, eax
  000d5	74 11		 je	 SHORT $LN6@qsv_memtyp
  000d7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117834
  000de	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  000e3	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN6@qsv_memtyp:

; 215  :     if (memtype & MFX_MEMTYPE_SYSTEM_MEMORY)          str += _T("system,");

  000e8	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  000f0	83 e0 40	 and	 eax, 64			; 00000040H
  000f3	85 c0		 test	 eax, eax
  000f5	74 11		 je	 SHORT $LN7@qsv_memtyp
  000f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117836
  000fe	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00103	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN7@qsv_memtyp:

; 216  :     if (memtype & MFX_MEMTYPE_FROM_ENCODE)            str += _T("enc,");

  00108	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00110	25 00 01 00 00	 and	 eax, 256		; 00000100H
  00115	85 c0		 test	 eax, eax
  00117	74 11		 je	 SHORT $LN8@qsv_memtyp
  00119	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117838
  00120	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00125	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN8@qsv_memtyp:

; 217  :     if (memtype & MFX_MEMTYPE_FROM_DECODE)            str += _T("dec,");

  0012a	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00132	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00137	85 c0		 test	 eax, eax
  00139	74 11		 je	 SHORT $LN9@qsv_memtyp
  0013b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117840
  00142	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00147	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN9@qsv_memtyp:

; 218  :     if (memtype & MFX_MEMTYPE_FROM_VPPIN)             str += _T("vppin,");

  0014c	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00154	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00159	85 c0		 test	 eax, eax
  0015b	74 11		 je	 SHORT $LN10@qsv_memtyp
  0015d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117842
  00164	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  00169	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN10@qsv_memtyp:

; 219  :     if (memtype & MFX_MEMTYPE_FROM_VPPOUT)            str += _T("vppout,");

  0016e	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00176	25 00 08 00 00	 and	 eax, 2048		; 00000800H
  0017b	85 c0		 test	 eax, eax
  0017d	74 11		 je	 SHORT $LN11@qsv_memtyp
  0017f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117844
  00186	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  0018b	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN11@qsv_memtyp:

; 220  :     if (memtype == 0)                                 str += _T("none,");

  00190	0f b7 84 24 88
	00 00 00	 movzx	 eax, WORD PTR memtype$[rsp]
  00198	85 c0		 test	 eax, eax
  0019a	75 11		 jne	 SHORT $LN12@qsv_memtyp
  0019c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117846
  001a3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001a8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
$LN12@qsv_memtyp:

; 221  :     return str.substr(0, str.length()-1);

  001ad	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001b2	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  001b7	48 ff c8	 dec	 rax
  001ba	4c 8b c8	 mov	 r9, rax
  001bd	45 33 c0	 xor	 r8d, r8d
  001c0	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  001c8	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001cd	e8 00 00 00 00	 call	 ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
  001d2	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  001d6	83 c8 01	 or	 eax, 1
  001d9	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  001dd	48 8d 4c 24 28	 lea	 rcx, QWORD PTR str$[rsp]
  001e2	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  001e7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 222  : }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00209	48 33 cc	 xor	 rcx, rsp
  0020c	e8 00 00 00 00	 call	 __security_check_cookie
  00211	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00215	5f		 pop	 rdi
  00216	c3		 ret	 0
  00217	cc		 int	 3
?qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z ENDP ; qsv_memtype_str
_TEXT	ENDS
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
memtype$ = 136
?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA PROC ; `qsv_memtype_str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA ENDP ; `qsv_memtype_str'::`1'::dtor$0
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
memtype$ = 136
?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA PROC ; `qsv_memtype_str'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN16@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN16@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA ENDP ; `qsv_memtype_str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
memtype$ = 136
?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA PROC ; `qsv_memtype_str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA ENDP ; `qsv_memtype_str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
str$ = 40
$T4 = 96
__$ArrayPad$ = 104
__$ReturnUdt$ = 128
memtype$ = 136
?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA PROC ; `qsv_memtype_str'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 10		 je	 SHORT $LN16@dtor$1
  00040	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00044	48 8b 8d 80 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN16@dtor$1:
  00050	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
?dtor$1@?0??qsv_memtype_str@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z@4HA ENDP ; `qsv_memtype_str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
info$ = 48
tv88 = 208
__$ArrayPad$ = 216
$T4 = 256
frameinfo$ = 264
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z PROC ; videooutputinfo

; 148  : VideoInfo videooutputinfo(const mfxFrameInfo& frameinfo) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR [rsp+256]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c4	 xor	 rax, rsp
  00034	48 89 84 24 d8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 149  :     VideoInfo info;

  0003c	48 8d 4c 24 30	 lea	 rcx, QWORD PTR info$[rsp]
  00041	e8 00 00 00 00	 call	 ??0VideoInfo@@QEAA@XZ

; 150  :     info.dstWidth = frameinfo.CropW;

  00046	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  0004e	0f b7 40 2c	 movzx	 eax, WORD PTR [rax+44]
  00052	89 44 24 48	 mov	 DWORD PTR info$[rsp+24], eax

; 151  :     info.dstHeight = frameinfo.CropH;

  00056	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  0005e	0f b7 40 2e	 movzx	 eax, WORD PTR [rax+46]
  00062	89 44 24 4c	 mov	 DWORD PTR info$[rsp+28], eax

; 152  :     info.fpsN = frameinfo.FrameRateExtN;

  00066	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  0006e	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  00071	89 44 24 5c	 mov	 DWORD PTR info$[rsp+44], eax

; 153  :     info.fpsD = frameinfo.FrameRateExtD;

  00075	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  0007d	8b 40 34	 mov	 eax, DWORD PTR [rax+52]
  00080	89 44 24 60	 mov	 DWORD PTR info$[rsp+48], eax

; 154  :     info.sar[0] = frameinfo.AspectRatioW;

  00084	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  0008c	0f b7 40 3a	 movzx	 eax, WORD PTR [rax+58]
  00090	b9 04 00 00 00	 mov	 ecx, 4
  00095	48 6b c9 00	 imul	 rcx, rcx, 0
  00099	89 44 0c 74	 mov	 DWORD PTR info$[rsp+rcx+68], eax

; 155  :     info.sar[1] = frameinfo.AspectRatioH;

  0009d	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  000a5	0f b7 40 3c	 movzx	 eax, WORD PTR [rax+60]
  000a9	b9 04 00 00 00	 mov	 ecx, 4
  000ae	48 6b c9 01	 imul	 rcx, rcx, 1
  000b2	89 44 0c 74	 mov	 DWORD PTR info$[rsp+rcx+68], eax

; 156  :     info.picstruct = picstruct_enc_to_rgy(frameinfo.PicStruct);

  000b6	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  000be	0f b7 48 3e	 movzx	 ecx, WORD PTR [rax+62]
  000c2	e8 00 00 00 00	 call	 ?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z ; picstruct_enc_to_rgy
  000c7	89 84 24 80 00
	00 00		 mov	 DWORD PTR info$[rsp+80], eax

; 157  :     info.shift = (frameinfo.Shift) ? 16 - frameinfo.BitDepthLuma : 0;

  000ce	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  000d6	0f b7 40 16	 movzx	 eax, WORD PTR [rax+22]
  000da	85 c0		 test	 eax, eax
  000dc	74 1e		 je	 SHORT $LN3@videooutpu
  000de	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  000e6	0f b7 40 12	 movzx	 eax, WORD PTR [rax+18]
  000ea	b9 10 00 00 00	 mov	 ecx, 16
  000ef	2b c8		 sub	 ecx, eax
  000f1	8b c1		 mov	 eax, ecx
  000f3	89 84 24 d0 00
	00 00		 mov	 DWORD PTR tv88[rsp], eax
  000fa	eb 0b		 jmp	 SHORT $LN4@videooutpu
$LN3@videooutpu:
  000fc	c7 84 24 d0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
$LN4@videooutpu:
  00107	8b 84 24 d0 00
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  0010e	89 44 24 58	 mov	 DWORD PTR info$[rsp+40], eax

; 158  :     info.csp = csp_enc_to_rgy(frameinfo.FourCC);

  00112	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR frameinfo$[rsp]
  0011a	8b 48 20	 mov	 ecx, DWORD PTR [rax+32]
  0011d	e8 00 00 00 00	 call	 ?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z ; csp_enc_to_rgy
  00122	89 44 24 7c	 mov	 DWORD PTR info$[rsp+76], eax

; 159  :     return info;

  00126	48 8d 44 24 30	 lea	 rax, QWORD PTR info$[rsp]
  0012b	48 8b bc 24 00
	01 00 00	 mov	 rdi, QWORD PTR $T4[rsp]
  00133	48 8b f0	 mov	 rsi, rax
  00136	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  0013b	f3 a4		 rep movsb
  0013d	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR $T4[rsp]

; 160  : }

  00145	48 8b f8	 mov	 rdi, rax
  00148	48 8b cc	 mov	 rcx, rsp
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z$rtcFrameData
  00152	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00157	48 8b c7	 mov	 rax, rdi
  0015a	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00162	48 33 cc	 xor	 rcx, rsp
  00165	e8 00 00 00 00	 call	 __security_check_cookie
  0016a	48 81 c4 e8 00
	00 00		 add	 rsp, 232		; 000000e8H
  00171	5f		 pop	 rdi
  00172	5e		 pop	 rsi
  00173	c3		 ret	 0
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxFrameInfo@@@Z ENDP ; videooutputinfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
info$ = 48
tv76 = 208
tv81 = 212
tv86 = 216
tv193 = 220
tv206 = 224
__$ArrayPad$ = 232
$T4 = 272
mfx$ = 280
vui$ = 288
chromaloc$ = 296
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z PROC ; videooutputinfo

; 122  : VideoInfo videooutputinfo(const mfxInfoMFX& mfx, const mfxExtVideoSignalInfo& vui, const mfxExtChromaLocInfo& chromaloc) {

$LN13:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR [rsp+272]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c4	 xor	 rax, rsp
  0003e	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 123  :     VideoInfo info;

  00046	48 8d 4c 24 30	 lea	 rcx, QWORD PTR info$[rsp]
  0004b	e8 00 00 00 00	 call	 ??0VideoInfo@@QEAA@XZ

; 124  :     info.codec = codec_enc_to_rgy(mfx.CodecId);

  00050	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00058	8b 48 64	 mov	 ecx, DWORD PTR [rax+100]
  0005b	e8 00 00 00 00	 call	 ?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z ; codec_enc_to_rgy
  00060	89 84 24 84 00
	00 00		 mov	 DWORD PTR info$[rsp+84], eax

; 125  :     info.codecLevel = mfx.CodecLevel;

  00067	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  0006f	0f b7 40 6a	 movzx	 eax, WORD PTR [rax+106]
  00073	89 84 24 94 00
	00 00		 mov	 DWORD PTR info$[rsp+100], eax

; 126  :     info.codecProfile = mfx.CodecProfile;

  0007a	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00082	0f b7 40 68	 movzx	 eax, WORD PTR [rax+104]
  00086	89 84 24 98 00
	00 00		 mov	 DWORD PTR info$[rsp+104], eax

; 127  :     info.videoDelay = ((mfx.GopRefDist - 1) > 0) + (((mfx.GopRefDist - 1) > 0) & ((mfx.GopRefDist - 1) > 2));

  0008d	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00095	0f b7 40 72	 movzx	 eax, WORD PTR [rax+114]
  00099	ff c8		 dec	 eax
  0009b	85 c0		 test	 eax, eax
  0009d	7e 0d		 jle	 SHORT $LN3@videooutpu
  0009f	c7 84 24 d0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv76[rsp], 1
  000aa	eb 0b		 jmp	 SHORT $LN4@videooutpu
$LN3@videooutpu:
  000ac	c7 84 24 d0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv76[rsp], 0
$LN4@videooutpu:
  000b7	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  000bf	0f b7 40 72	 movzx	 eax, WORD PTR [rax+114]
  000c3	ff c8		 dec	 eax
  000c5	85 c0		 test	 eax, eax
  000c7	7e 0d		 jle	 SHORT $LN5@videooutpu
  000c9	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv81[rsp], 1
  000d4	eb 0b		 jmp	 SHORT $LN6@videooutpu
$LN5@videooutpu:
  000d6	c7 84 24 d4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv81[rsp], 0
$LN6@videooutpu:
  000e1	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  000e9	0f b7 40 72	 movzx	 eax, WORD PTR [rax+114]
  000ed	ff c8		 dec	 eax
  000ef	83 f8 02	 cmp	 eax, 2
  000f2	7e 0d		 jle	 SHORT $LN7@videooutpu
  000f4	c7 84 24 d8 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv86[rsp], 1
  000ff	eb 0b		 jmp	 SHORT $LN8@videooutpu
$LN7@videooutpu:
  00101	c7 84 24 d8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv86[rsp], 0
$LN8@videooutpu:
  0010c	8b 84 24 d8 00
	00 00		 mov	 eax, DWORD PTR tv86[rsp]
  00113	8b 8c 24 d4 00
	00 00		 mov	 ecx, DWORD PTR tv81[rsp]
  0011a	23 c8		 and	 ecx, eax
  0011c	8b c1		 mov	 eax, ecx
  0011e	8b 8c 24 d0 00
	00 00		 mov	 ecx, DWORD PTR tv76[rsp]
  00125	03 c8		 add	 ecx, eax
  00127	8b c1		 mov	 eax, ecx
  00129	89 84 24 9c 00
	00 00		 mov	 DWORD PTR info$[rsp+108], eax

; 128  :     info.dstWidth = mfx.FrameInfo.CropW;

  00130	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00138	0f b7 40 4c	 movzx	 eax, WORD PTR [rax+76]
  0013c	89 44 24 48	 mov	 DWORD PTR info$[rsp+24], eax

; 129  :     info.dstHeight = mfx.FrameInfo.CropH;

  00140	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00148	0f b7 40 4e	 movzx	 eax, WORD PTR [rax+78]
  0014c	89 44 24 4c	 mov	 DWORD PTR info$[rsp+28], eax

; 130  :     info.fpsN = mfx.FrameInfo.FrameRateExtN;

  00150	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00158	8b 40 50	 mov	 eax, DWORD PTR [rax+80]
  0015b	89 44 24 5c	 mov	 DWORD PTR info$[rsp+44], eax

; 131  :     info.fpsD = mfx.FrameInfo.FrameRateExtD;

  0015f	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00167	8b 40 54	 mov	 eax, DWORD PTR [rax+84]
  0016a	89 44 24 60	 mov	 DWORD PTR info$[rsp+48], eax

; 132  :     info.sar[0] = mfx.FrameInfo.AspectRatioW;

  0016e	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00176	0f b7 40 5a	 movzx	 eax, WORD PTR [rax+90]
  0017a	b9 04 00 00 00	 mov	 ecx, 4
  0017f	48 6b c9 00	 imul	 rcx, rcx, 0
  00183	89 44 0c 74	 mov	 DWORD PTR info$[rsp+rcx+68], eax

; 133  :     info.sar[1] = mfx.FrameInfo.AspectRatioH;

  00187	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  0018f	0f b7 40 5c	 movzx	 eax, WORD PTR [rax+92]
  00193	b9 04 00 00 00	 mov	 ecx, 4
  00198	48 6b c9 01	 imul	 rcx, rcx, 1
  0019c	89 44 0c 74	 mov	 DWORD PTR info$[rsp+rcx+68], eax

; 134  :     info.vui.descriptpresent = vui.ColourDescriptionPresent;

  001a0	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR vui$[rsp]
  001a8	0f b7 40 0c	 movzx	 eax, WORD PTR [rax+12]
  001ac	89 84 24 a0 00
	00 00		 mov	 DWORD PTR info$[rsp+112], eax

; 135  :     info.vui.colorprim = (CspColorprim)vui.ColourPrimaries;

  001b3	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR vui$[rsp]
  001bb	0f b7 40 0e	 movzx	 eax, WORD PTR [rax+14]
  001bf	89 84 24 a4 00
	00 00		 mov	 DWORD PTR info$[rsp+116], eax

; 136  :     info.vui.matrix = (CspMatrix)vui.MatrixCoefficients;

  001c6	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR vui$[rsp]
  001ce	0f b7 40 12	 movzx	 eax, WORD PTR [rax+18]
  001d2	89 84 24 a8 00
	00 00		 mov	 DWORD PTR info$[rsp+120], eax

; 137  :     info.vui.transfer = (CspTransfer)vui.TransferCharacteristics;

  001d9	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR vui$[rsp]
  001e1	0f b7 40 10	 movzx	 eax, WORD PTR [rax+16]
  001e5	89 84 24 ac 00
	00 00		 mov	 DWORD PTR info$[rsp+124], eax

; 138  :     info.vui.fullrange = vui.VideoFullRange;

  001ec	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR vui$[rsp]
  001f4	0f b7 40 0a	 movzx	 eax, WORD PTR [rax+10]
  001f8	89 84 24 b4 00
	00 00		 mov	 DWORD PTR info$[rsp+132], eax

; 139  :     info.vui.format = vui.VideoFormat;

  001ff	48 8b 84 24 20
	01 00 00	 mov	 rax, QWORD PTR vui$[rsp]
  00207	0f b7 40 08	 movzx	 eax, WORD PTR [rax+8]
  0020b	89 84 24 b0 00
	00 00		 mov	 DWORD PTR info$[rsp+128], eax

; 140  :     info.vui.chromaloc = (chromaloc.ChromaLocInfoPresentFlag && chromaloc.ChromaSampleLocTypeTopField) ? chromaloc.ChromaSampleLocTypeTopField : 0;

  00212	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR chromaloc$[rsp]
  0021a	0f b7 40 08	 movzx	 eax, WORD PTR [rax+8]
  0021e	85 c0		 test	 eax, eax
  00220	74 25		 je	 SHORT $LN9@videooutpu
  00222	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR chromaloc$[rsp]
  0022a	0f b7 40 0a	 movzx	 eax, WORD PTR [rax+10]
  0022e	85 c0		 test	 eax, eax
  00230	74 15		 je	 SHORT $LN9@videooutpu
  00232	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR chromaloc$[rsp]
  0023a	0f b7 40 0a	 movzx	 eax, WORD PTR [rax+10]
  0023e	89 84 24 dc 00
	00 00		 mov	 DWORD PTR tv193[rsp], eax
  00245	eb 0b		 jmp	 SHORT $LN10@videooutpu
$LN9@videooutpu:
  00247	c7 84 24 dc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv193[rsp], 0
$LN10@videooutpu:
  00252	8b 84 24 dc 00
	00 00		 mov	 eax, DWORD PTR tv193[rsp]
  00259	89 84 24 b8 00
	00 00		 mov	 DWORD PTR info$[rsp+136], eax

; 141  :     info.picstruct = picstruct_enc_to_rgy(mfx.FrameInfo.PicStruct);

  00260	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00268	0f b7 48 5e	 movzx	 ecx, WORD PTR [rax+94]
  0026c	e8 00 00 00 00	 call	 ?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z ; picstruct_enc_to_rgy
  00271	89 84 24 80 00
	00 00		 mov	 DWORD PTR info$[rsp+80], eax

; 142  :     info.shift = (mfx.FrameInfo.Shift) ? 16 - mfx.FrameInfo.BitDepthLuma : 0;

  00278	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00280	0f b7 40 36	 movzx	 eax, WORD PTR [rax+54]
  00284	85 c0		 test	 eax, eax
  00286	74 1e		 je	 SHORT $LN11@videooutpu
  00288	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  00290	0f b7 40 32	 movzx	 eax, WORD PTR [rax+50]
  00294	b9 10 00 00 00	 mov	 ecx, 16
  00299	2b c8		 sub	 ecx, eax
  0029b	8b c1		 mov	 eax, ecx
  0029d	89 84 24 e0 00
	00 00		 mov	 DWORD PTR tv206[rsp], eax
  002a4	eb 0b		 jmp	 SHORT $LN12@videooutpu
$LN11@videooutpu:
  002a6	c7 84 24 e0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv206[rsp], 0
$LN12@videooutpu:
  002b1	8b 84 24 e0 00
	00 00		 mov	 eax, DWORD PTR tv206[rsp]
  002b8	89 44 24 58	 mov	 DWORD PTR info$[rsp+40], eax

; 143  :     info.csp = csp_enc_to_rgy(mfx.FrameInfo.FourCC);

  002bc	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR mfx$[rsp]
  002c4	8b 48 40	 mov	 ecx, DWORD PTR [rax+64]
  002c7	e8 00 00 00 00	 call	 ?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z ; csp_enc_to_rgy
  002cc	89 44 24 7c	 mov	 DWORD PTR info$[rsp+76], eax

; 144  :     return info;

  002d0	48 8d 44 24 30	 lea	 rax, QWORD PTR info$[rsp]
  002d5	48 8b bc 24 10
	01 00 00	 mov	 rdi, QWORD PTR $T4[rsp]
  002dd	48 8b f0	 mov	 rsi, rax
  002e0	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  002e5	f3 a4		 rep movsb
  002e7	48 8b 84 24 10
	01 00 00	 mov	 rax, QWORD PTR $T4[rsp]

; 145  : }

  002ef	48 8b f8	 mov	 rdi, rax
  002f2	48 8b cc	 mov	 rcx, rsp
  002f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z$rtcFrameData
  002fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00301	48 8b c7	 mov	 rax, rdi
  00304	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0030c	48 33 cc	 xor	 rcx, rsp
  0030f	e8 00 00 00 00	 call	 __security_check_cookie
  00314	48 81 c4 f8 00
	00 00		 add	 rsp, 248		; 000000f8H
  0031b	5f		 pop	 rdi
  0031c	5e		 pop	 rsi
  0031d	c3		 ret	 0
?videooutputinfo@@YA?AUVideoInfo@@AEBUmfxInfoMFX@@AEBUmfxExtVideoSignalInfo@@AEBUmfxExtChromaLocInfo@@@Z ENDP ; videooutputinfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
mfx$ = 48
tv128 = 144
__$ArrayPad$ = 152
$T4 = 192
info$ = 200
?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z PROC ; frameinfo_rgy_to_enc

; 100  : mfxFrameInfo frameinfo_rgy_to_enc(VideoInfo info) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 2a 00 00 00	 mov	 ecx, 42			; 0000002aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c4	 xor	 rax, rsp
  00034	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 101  :     mfxFrameInfo mfx = { 0 };

  0003c	48 8d 44 24 30	 lea	 rax, QWORD PTR mfx$[rsp]
  00041	48 8b f8	 mov	 rdi, rax
  00044	33 c0		 xor	 eax, eax
  00046	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  0004b	f3 aa		 rep stosb

; 102  :     mfx.FourCC = csp_rgy_to_enc(info.csp);

  0004d	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  00055	8b 48 4c	 mov	 ecx, DWORD PTR [rax+76]
  00058	e8 00 00 00 00	 call	 ?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z ; csp_rgy_to_enc
  0005d	89 44 24 50	 mov	 DWORD PTR mfx$[rsp+32], eax

; 103  :     mfx.ChromaFormat = (mfxU16)chromafmt_rgy_to_enc(RGY_CSP_CHROMA_FORMAT[info.csp]);

  00061	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  00069	48 63 40 4c	 movsxd	 rax, DWORD PTR [rax+76]
  0006d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_CHROMA_FORMAT@@3QBW4RGY_CHROMAFMT@@B
  00074	8b 0c 81	 mov	 ecx, DWORD PTR [rcx+rax*4]
  00077	e8 00 00 00 00	 call	 ?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z ; chromafmt_rgy_to_enc
  0007c	66 89 44 24 70	 mov	 WORD PTR mfx$[rsp+64], ax

; 104  :     mfx.BitDepthLuma = (mfxU16)(RGY_CSP_BIT_DEPTH[info.csp] - info.shift);

  00081	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  00089	48 63 40 4c	 movsxd	 rax, DWORD PTR [rax+76]
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_BIT_DEPTH@@3QBEB
  00094	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  00098	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  000a0	2b 41 28	 sub	 eax, DWORD PTR [rcx+40]
  000a3	66 89 44 24 42	 mov	 WORD PTR mfx$[rsp+18], ax

; 105  :     mfx.BitDepthChroma = (mfxU16)(RGY_CSP_BIT_DEPTH[info.csp] - info.shift);

  000a8	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  000b0	48 63 40 4c	 movsxd	 rax, DWORD PTR [rax+76]
  000b4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_BIT_DEPTH@@3QBEB
  000bb	0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+rax]
  000bf	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  000c7	2b 41 28	 sub	 eax, DWORD PTR [rcx+40]
  000ca	66 89 44 24 44	 mov	 WORD PTR mfx$[rsp+20], ax

; 106  :     mfx.Shift = info.shift ? 1 : 0;

  000cf	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  000d7	83 78 28 00	 cmp	 DWORD PTR [rax+40], 0
  000db	74 0d		 je	 SHORT $LN3@frameinfo_
  000dd	c7 84 24 90 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv128[rsp], 1
  000e8	eb 0b		 jmp	 SHORT $LN4@frameinfo_
$LN3@frameinfo_:
  000ea	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv128[rsp], 0
$LN4@frameinfo_:
  000f5	0f b7 84 24 90
	00 00 00	 movzx	 eax, WORD PTR tv128[rsp]
  000fd	66 89 44 24 46	 mov	 WORD PTR mfx$[rsp+22], ax

; 107  :     mfx.Width = (mfxU16)info.srcWidth;

  00102	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0010a	0f b7 40 04	 movzx	 eax, WORD PTR [rax+4]
  0010e	66 89 44 24 54	 mov	 WORD PTR mfx$[rsp+36], ax

; 108  :     mfx.Height = (mfxU16)info.srcHeight;

  00113	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0011b	0f b7 40 08	 movzx	 eax, WORD PTR [rax+8]
  0011f	66 89 44 24 56	 mov	 WORD PTR mfx$[rsp+38], ax

; 109  :     mfx.CropX = (mfxU16)info.crop.e.left;

  00124	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0012c	0f b7 40 34	 movzx	 eax, WORD PTR [rax+52]
  00130	66 89 44 24 58	 mov	 WORD PTR mfx$[rsp+40], ax

; 110  :     mfx.CropY = (mfxU16)info.crop.e.up;

  00135	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0013d	0f b7 40 38	 movzx	 eax, WORD PTR [rax+56]
  00141	66 89 44 24 5a	 mov	 WORD PTR mfx$[rsp+42], ax

; 111  :     mfx.CropW = (mfxU16)(mfx.Width - info.crop.e.left - info.crop.e.right);

  00146	0f b7 44 24 54	 movzx	 eax, WORD PTR mfx$[rsp+36]
  0014b	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  00153	2b 41 34	 sub	 eax, DWORD PTR [rcx+52]
  00156	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  0015e	2b 41 3c	 sub	 eax, DWORD PTR [rcx+60]
  00161	66 89 44 24 5c	 mov	 WORD PTR mfx$[rsp+44], ax

; 112  :     mfx.CropH = (mfxU16)(mfx.Height - info.crop.e.up - info.crop.e.bottom);

  00166	0f b7 44 24 56	 movzx	 eax, WORD PTR mfx$[rsp+38]
  0016b	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  00173	2b 41 38	 sub	 eax, DWORD PTR [rcx+56]
  00176	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  0017e	2b 41 40	 sub	 eax, DWORD PTR [rcx+64]
  00181	66 89 44 24 5e	 mov	 WORD PTR mfx$[rsp+46], ax

; 113  :     mfx.FrameRateExtN = info.fpsN;

  00186	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0018e	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  00191	89 44 24 60	 mov	 DWORD PTR mfx$[rsp+48], eax

; 114  :     mfx.FrameRateExtD = info.fpsD;

  00195	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  0019d	8b 40 30	 mov	 eax, DWORD PTR [rax+48]
  001a0	89 44 24 64	 mov	 DWORD PTR mfx$[rsp+52], eax

; 115  :     mfx.AspectRatioW = (mfxU16)info.sar[0];

  001a4	b8 04 00 00 00	 mov	 eax, 4
  001a9	48 6b c0 00	 imul	 rax, rax, 0
  001ad	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  001b5	0f b7 44 01 44	 movzx	 eax, WORD PTR [rcx+rax+68]
  001ba	66 89 44 24 6a	 mov	 WORD PTR mfx$[rsp+58], ax

; 116  :     mfx.AspectRatioH = (mfxU16)info.sar[1];

  001bf	b8 04 00 00 00	 mov	 eax, 4
  001c4	48 6b c0 01	 imul	 rax, rax, 1
  001c8	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR info$[rsp]
  001d0	0f b7 44 01 44	 movzx	 eax, WORD PTR [rcx+rax+68]
  001d5	66 89 44 24 6c	 mov	 WORD PTR mfx$[rsp+60], ax

; 117  :     mfx.PicStruct = picstruct_rgy_to_enc(info.picstruct);

  001da	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR info$[rsp]
  001e2	8b 48 50	 mov	 ecx, DWORD PTR [rax+80]
  001e5	e8 00 00 00 00	 call	 ?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z ; picstruct_rgy_to_enc
  001ea	66 89 44 24 6e	 mov	 WORD PTR mfx$[rsp+62], ax

; 118  :     return mfx;

  001ef	48 8d 44 24 30	 lea	 rax, QWORD PTR mfx$[rsp]
  001f4	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR $T4[rsp]
  001fc	48 8b f0	 mov	 rsi, rax
  001ff	b9 44 00 00 00	 mov	 ecx, 68			; 00000044H
  00204	f3 a4		 rep movsb
  00206	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR $T4[rsp]

; 119  : }

  0020e	48 8b f8	 mov	 rdi, rax
  00211	48 8b cc	 mov	 rcx, rsp
  00214	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z$rtcFrameData
  0021b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00220	48 8b c7	 mov	 rax, rdi
  00223	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0022b	48 33 cc	 xor	 rcx, rsp
  0022e	e8 00 00 00 00	 call	 __security_check_cookie
  00233	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  0023a	5f		 pop	 rdi
  0023b	5e		 pop	 rsi
  0023c	c3		 ret	 0
?frameinfo_rgy_to_enc@@YA?AUmfxFrameInfo@@UVideoInfo@@@Z ENDP ; frameinfo_rgy_to_enc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
picstruct$ = 16
?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z PROC	; picstruct_enc_to_rgy

; 93   : RGY_PICSTRUCT picstruct_enc_to_rgy(mfxU16 picstruct) {

$LN5:
  00000	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx
  00005	57		 push	 rdi

; 94   :     if (picstruct & MFX_PICSTRUCT_FIELD_TFF) return RGY_PICSTRUCT_FRAME_TFF;

  00006	0f b7 44 24 10	 movzx	 eax, WORD PTR picstruct$[rsp]
  0000b	83 e0 02	 and	 eax, 2
  0000e	85 c0		 test	 eax, eax
  00010	74 07		 je	 SHORT $LN2@picstruct_
  00012	b8 03 00 00 00	 mov	 eax, 3
  00017	eb 18		 jmp	 SHORT $LN1@picstruct_
$LN2@picstruct_:

; 95   :     if (picstruct & MFX_PICSTRUCT_FIELD_BFF) return RGY_PICSTRUCT_FRAME_BFF;

  00019	0f b7 44 24 10	 movzx	 eax, WORD PTR picstruct$[rsp]
  0001e	83 e0 04	 and	 eax, 4
  00021	85 c0		 test	 eax, eax
  00023	74 07		 je	 SHORT $LN3@picstruct_
  00025	b8 05 00 00 00	 mov	 eax, 5
  0002a	eb 05		 jmp	 SHORT $LN1@picstruct_
$LN3@picstruct_:

; 96   :     return RGY_PICSTRUCT_FRAME;

  0002c	b8 01 00 00 00	 mov	 eax, 1
$LN1@picstruct_:

; 97   : }

  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
?picstruct_enc_to_rgy@@YA?AW4RGY_PICSTRUCT@@G@Z ENDP	; picstruct_enc_to_rgy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
picstruct$ = 48
?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z PROC	; picstruct_rgy_to_enc

; 86   : mfxU16 picstruct_rgy_to_enc(RGY_PICSTRUCT picstruct) {

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 08 00 00 00	 mov	 ecx, 8
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 30	 mov	 ecx, DWORD PTR [rsp+48]

; 87   :     if (picstruct & RGY_PICSTRUCT_TFF) return (mfxU16)MFX_PICSTRUCT_FIELD_TFF;

  0001c	ba 02 00 00 00	 mov	 edx, 2
  00021	8b 4c 24 30	 mov	 ecx, DWORD PTR picstruct$[rsp]
  00025	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ; operator&
  0002a	85 c0		 test	 eax, eax
  0002c	74 07		 je	 SHORT $LN2@picstruct_
  0002e	b8 02 00 00 00	 mov	 eax, 2
  00033	eb 1e		 jmp	 SHORT $LN1@picstruct_
$LN2@picstruct_:

; 88   :     if (picstruct & RGY_PICSTRUCT_BFF) return (mfxU16)MFX_PICSTRUCT_FIELD_BFF;

  00035	ba 04 00 00 00	 mov	 edx, 4
  0003a	8b 4c 24 30	 mov	 ecx, DWORD PTR picstruct$[rsp]
  0003e	e8 00 00 00 00	 call	 ??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ; operator&
  00043	85 c0		 test	 eax, eax
  00045	74 07		 je	 SHORT $LN3@picstruct_
  00047	b8 04 00 00 00	 mov	 eax, 4
  0004c	eb 05		 jmp	 SHORT $LN1@picstruct_
$LN3@picstruct_:

; 89   :     return (mfxU16)MFX_PICSTRUCT_PROGRESSIVE;

  0004e	b8 01 00 00 00	 mov	 eax, 1
$LN1@picstruct_:

; 90   : }

  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?picstruct_rgy_to_enc@@YAGW4RGY_PICSTRUCT@@@Z ENDP	; picstruct_rgy_to_enc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var1$ = 304
?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z PROC		; csp_enc_to_rgy

; 83   : MAP_PAIR_0_1(csp, rgy, RGY_CSP, enc, mfxU32, RGY_CSP_TO_MFX, RGY_CSP_NA, 0);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var1$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@QEAA@AEBI@Z ; <lambda_0ad8fa6519b6c03665d5b8f081ca73db>::<lambda_0ad8fa6519b6c03665d5b8f081ca73db>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_0ad8fa6519b6c03665d5b8f081ca73db>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_0ad8fa6519b6c03665d5b8f081ca73db> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@csp_enc_to
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 13		 jmp	 SHORT $LN4@csp_enc_to
$LN3@csp_enc_to:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator->
  000ed	8b 00		 mov	 eax, DWORD PTR [rax]
  000ef	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@csp_enc_to:
  000f6	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fd	8b f8		 mov	 edi, eax
  000ff	48 8b cc	 mov	 rcx, rsp
  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z$rtcFrameData
  00109	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010e	8b c7		 mov	 eax, edi
  00110	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00117	5f		 pop	 rdi
  00118	5e		 pop	 rsi
  00119	c3		 ret	 0
?csp_enc_to_rgy@@YA?AW4RGY_CSP@@I@Z ENDP		; csp_enc_to_rgy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var0$ = 304
?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z PROC			; csp_rgy_to_enc

; 83   : MAP_PAIR_0_1(csp, rgy, RGY_CSP, enc, mfxU32, RGY_CSP_TO_MFX, RGY_CSP_NA, 0);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var0$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@QEAA@AEBW4RGY_CSP@@@Z ; <lambda_940f71a84cfb21c8f5f3a8182c07751e>::<lambda_940f71a84cfb21c8f5f3a8182c07751e>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@0@V10@V10@V<lambda_940f71a84cfb21c8f5f3a8182c07751e>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>,<lambda_940f71a84cfb21c8f5f3a8182c07751e> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CSP_TO_MFX@@3V?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@2@XZ ; std::array<std::pair<enum RGY_CSP,unsigned int>,27>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@csp_rgy_to
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 14		 jmp	 SHORT $LN4@csp_rgy_to
$LN3@csp_rgy_to:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@W4RGY_CSP@@I@std@@$0BL@@std@@QEBAPEBU?$pair@W4RGY_CSP@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CSP,unsigned int>,27>::operator->
  000ed	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  000f0	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@csp_rgy_to:
  000f7	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fe	8b f8		 mov	 edi, eax
  00100	48 8b cc	 mov	 rcx, rsp
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z$rtcFrameData
  0010a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010f	8b c7		 mov	 eax, edi
  00111	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00118	5f		 pop	 rdi
  00119	5e		 pop	 rsi
  0011a	c3		 ret	 0
?csp_rgy_to_enc@@YAIW4RGY_CSP@@@Z ENDP			; csp_rgy_to_enc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var1$ = 304
?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z PROC	; chromafmt_enc_to_rgy

; 51   : MAP_PAIR_0_1(chromafmt, rgy, RGY_CHROMAFMT, enc, mfxU32, RGY_CHROMAFMT_TO_MFX, RGY_CHROMAFMT_UNKNOWN, 0u);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var1$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_453bfd33c28a0eef33955ce04e83c26c>@@QEAA@AEBI@Z ; <lambda_453bfd33c28a0eef33955ce04e83c26c>::<lambda_453bfd33c28a0eef33955ce04e83c26c>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_453bfd33c28a0eef33955ce04e83c26c>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_453bfd33c28a0eef33955ce04e83c26c> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@chromafmt_
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 13		 jmp	 SHORT $LN4@chromafmt_
$LN3@chromafmt_:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator->
  000ed	8b 00		 mov	 eax, DWORD PTR [rax]
  000ef	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@chromafmt_:
  000f6	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fd	8b f8		 mov	 edi, eax
  000ff	48 8b cc	 mov	 rcx, rsp
  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z$rtcFrameData
  00109	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010e	8b c7		 mov	 eax, edi
  00110	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00117	5f		 pop	 rdi
  00118	5e		 pop	 rsi
  00119	c3		 ret	 0
?chromafmt_enc_to_rgy@@YA?AW4RGY_CHROMAFMT@@I@Z ENDP	; chromafmt_enc_to_rgy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var0$ = 304
?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z PROC	; chromafmt_rgy_to_enc

; 51   : MAP_PAIR_0_1(chromafmt, rgy, RGY_CHROMAFMT, enc, mfxU32, RGY_CHROMAFMT_TO_MFX, RGY_CHROMAFMT_UNKNOWN, 0u);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var0$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_19c3b9fb6a4298110262f5ae779451eb>@@QEAA@AEBW4RGY_CHROMAFMT@@@Z ; <lambda_19c3b9fb6a4298110262f5ae779451eb>::<lambda_19c3b9fb6a4298110262f5ae779451eb>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@0@V10@V10@V<lambda_19c3b9fb6a4298110262f5ae779451eb>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>,<lambda_19c3b9fb6a4298110262f5ae779451eb> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CHROMAFMT_TO_MFX@@3V?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@2@XZ ; std::array<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@chromafmt_
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 14		 jmp	 SHORT $LN4@chromafmt_
$LN3@chromafmt_:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@W4RGY_CHROMAFMT@@I@std@@$03@std@@QEBAPEBU?$pair@W4RGY_CHROMAFMT@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CHROMAFMT,unsigned int>,4>::operator->
  000ed	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  000f0	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@chromafmt_:
  000f7	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fe	8b f8		 mov	 edi, eax
  00100	48 8b cc	 mov	 rcx, rsp
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z$rtcFrameData
  0010a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010f	8b c7		 mov	 eax, edi
  00111	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00118	5f		 pop	 rdi
  00119	5e		 pop	 rsi
  0011a	c3		 ret	 0
?chromafmt_rgy_to_enc@@YAIW4RGY_CHROMAFMT@@@Z ENDP	; chromafmt_rgy_to_enc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var1$ = 304
?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z PROC		; codec_enc_to_rgy

; 42   : MAP_PAIR_0_1(codec, rgy, RGY_CODEC, enc, mfxU32, RGY_CODEC_TO_MFX, RGY_CODEC_UNKNOWN, 0u);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var1$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_f1478776e17ba2826247782c07ebe727>@@QEAA@AEBI@Z ; <lambda_f1478776e17ba2826247782c07ebe727>::<lambda_f1478776e17ba2826247782c07ebe727>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_f1478776e17ba2826247782c07ebe727>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_f1478776e17ba2826247782c07ebe727>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_f1478776e17ba2826247782c07ebe727> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@codec_enc_
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 13		 jmp	 SHORT $LN4@codec_enc_
$LN3@codec_enc_:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator->
  000ed	8b 00		 mov	 eax, DWORD PTR [rax]
  000ef	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@codec_enc_:
  000f6	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fd	8b f8		 mov	 edi, eax
  000ff	48 8b cc	 mov	 rcx, rsp
  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z$rtcFrameData
  00109	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010e	8b c7		 mov	 eax, edi
  00110	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00117	5f		 pop	 rdi
  00118	5e		 pop	 rsi
  00119	c3		 ret	 0
?codec_enc_to_rgy@@YA?AW4RGY_CODEC@@I@Z ENDP		; codec_enc_to_rgy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
_TEXT	SEGMENT
ret$ = 40
$T4 = 84
$T5 = 88
$T6 = 120
$T7 = 152
$T8 = 192
$T9 = 224
tv66 = 256
tv88 = 264
var0$ = 304
?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z PROC		; codec_rgy_to_enc

; 42   : MAP_PAIR_0_1(codec, rgy, RGY_CODEC, enc, mfxU32, RGY_CODEC_TO_MFX, RGY_CODEC_UNKNOWN, 0u);

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	56		 push	 rsi
  00005	57		 push	 rdi
  00006	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR [rsp+304]
  00023	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR var0$[rsp]
  0002b	48 8d 4c 24 54	 lea	 rcx, QWORD PTR $T4[rsp]
  00030	e8 00 00 00 00	 call	 ??0<lambda_7ee89da6d47de3e981d156648f378f28>@@QEAA@AEBW4RGY_CODEC@@@Z ; <lambda_7ee89da6d47de3e981d156648f378f28>::<lambda_7ee89da6d47de3e981d156648f378f28>
  00035	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv66[rsp], rax
  0003d	48 8d 54 24 58	 lea	 rdx, QWORD PTR $T5[rsp]
  00042	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  00049	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end
  0004e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00056	48 8b f9	 mov	 rdi, rcx
  00059	48 8b f0	 mov	 rsi, rax
  0005c	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00061	f3 a4		 rep movsb
  00063	48 8d 54 24 78	 lea	 rdx, QWORD PTR $T6[rsp]
  00068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  0006f	e8 00 00 00 00	 call	 ?begin@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::begin
  00074	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  0007c	48 8b f9	 mov	 rdi, rcx
  0007f	48 8b f0	 mov	 rsi, rax
  00082	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00087	f3 a4		 rep movsb
  00089	48 8b 84 24 00
	01 00 00	 mov	 rax, QWORD PTR tv66[rsp]
  00091	44 8b 08	 mov	 r9d, DWORD PTR [rax]
  00094	4c 8d 84 24 e0
	00 00 00	 lea	 r8, QWORD PTR $T9[rsp]
  0009c	48 8d 94 24 c0
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000a4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000a9	e8 00 00 00 00	 call	 ??$find_if@V?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@std@@YA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@0@V10@V10@V<lambda_7ee89da6d47de3e981d156648f378f28>@@@Z ; std::find_if<std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>,<lambda_7ee89da6d47de3e981d156648f378f28> >
  000ae	48 8d 94 24 98
	00 00 00	 lea	 rdx, QWORD PTR $T7[rsp]
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RGY_CODEC_TO_MFX@@3V?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@B
  000bd	e8 00 00 00 00	 call	 ?end@?$array@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA?AV?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@2@XZ ; std::array<std::pair<enum RGY_CODEC,unsigned int>,6>::end
  000c2	48 8b d0	 mov	 rdx, rax
  000c5	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000ca	e8 00 00 00 00	 call	 ??8?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBA_NAEBV01@@Z ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator==
  000cf	0f b6 c0	 movzx	 eax, al
  000d2	85 c0		 test	 eax, eax
  000d4	74 0d		 je	 SHORT $LN3@codec_rgy_
  000d6	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv88[rsp], 0
  000e1	eb 14		 jmp	 SHORT $LN4@codec_rgy_
$LN3@codec_rgy_:
  000e3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR ret$[rsp]
  000e8	e8 00 00 00 00	 call	 ??C?$_Array_const_iterator@U?$pair@W4RGY_CODEC@@I@std@@$05@std@@QEBAPEBU?$pair@W4RGY_CODEC@@I@1@XZ ; std::_Array_const_iterator<std::pair<enum RGY_CODEC,unsigned int>,6>::operator->
  000ed	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  000f0	89 84 24 08 01
	00 00		 mov	 DWORD PTR tv88[rsp], eax
$LN4@codec_rgy_:
  000f7	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR tv88[rsp]
  000fe	8b f8		 mov	 edi, eax
  00100	48 8b cc	 mov	 rcx, rsp
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z$rtcFrameData
  0010a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0010f	8b c7		 mov	 eax, edi
  00111	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  00118	5f		 pop	 rdi
  00119	5e		 pop	 rsi
  0011a	c3		 ret	 0
?codec_rgy_to_enc@@YAIW4RGY_CODEC@@@Z ENDP		; codec_rgy_to_enc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0VideoInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0VideoInfo@@QEAA@XZ PROC				; VideoInfo::VideoInfo, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 70	 add	 rax, 112		; 00000070H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0VideoVUIInfo@@QEAA@XZ ; VideoVUIInfo::VideoVUIInfo
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0VideoInfo@@QEAA@XZ ENDP				; VideoInfo::VideoInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??0VideoVUIInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0VideoVUIInfo@@QEAA@XZ PROC				; VideoVUIInfo::VideoVUIInfo, COMDAT

; 1248 :         chromaloc(0) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1242 :         descriptpresent(0),

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1243 :         colorprim((CspColorprim)get_cx_value(list_colorprim, _T("undef"))),

  00029	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_colorprim@@3QBUCX_DESC@@B
  00037	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	89 41 04	 mov	 DWORD PTR [rcx+4], eax

; 1244 :         matrix((CspMatrix)get_cx_value(list_colormatrix, _T("undef"))),

  00044	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_colormatrix@@3QBUCX_DESC@@B
  00052	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 1245 :         transfer((CspTransfer)get_cx_value(list_transfer, _T("undef"))),

  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_transfer@@3QBUCX_DESC@@B
  0006d	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  00072	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00077	89 41 0c	 mov	 DWORD PTR [rcx+12], eax

; 1246 :         format(get_cx_value(list_videoformat, _T("undef"))),

  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_videoformat@@3QBUCX_DESC@@B
  00088	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00092	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 1247 :         fullrange(0),

  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009a	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0

; 1248 :         chromaloc(0) {

  000a1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a6	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [rax+24], 0

; 1249 : 
; 1250 :     }

  000ad	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
??0VideoVUIInfo@@QEAA@XZ ENDP				; VideoVUIInfo::VideoVUIInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
i$1 = 32
list$ = 64
chr$ = 72
?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z PROC		; get_cx_value

; 790  : static int get_cx_value(const CX_DESC * list, const TCHAR *chr) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 791  :     for (int i = 0; list[i].desc; i++)

  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0002b	eb 0a		 jmp	 SHORT $LN4@get_cx_val
$LN2@get_cx_val:
  0002d	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00031	ff c0		 inc	 eax
  00033	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@get_cx_val:
  00037	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0003c	48 6b c0 10	 imul	 rax, rax, 16
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00045	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  0004a	74 36		 je	 SHORT $LN3@get_cx_val

; 792  :         if (0 == _tcscmp(list[i].desc, chr))

  0004c	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00051	48 6b c0 10	 imul	 rax, rax, 16
  00055	48 8b 54 24 48	 mov	 rdx, QWORD PTR chr$[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0005f	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  00063	e8 00 00 00 00	 call	 _tcscmp
  00068	85 c0		 test	 eax, eax
  0006a	75 14		 jne	 SHORT $LN5@get_cx_val

; 793  :             return list[i].value;

  0006c	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00071	48 6b c0 10	 imul	 rax, rax, 16
  00075	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0007a	8b 44 01 08	 mov	 eax, DWORD PTR [rcx+rax+8]
  0007e	eb 04		 jmp	 SHORT $LN1@get_cx_val
$LN5@get_cx_val:
  00080	eb ab		 jmp	 SHORT $LN2@get_cx_val
$LN3@get_cx_val:

; 794  :     return 0;

  00082	33 c0		 xor	 eax, eax
$LN1@get_cx_val:

; 795  : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ENDP		; get_cx_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\convert_csp.h
_TEXT	SEGMENT
a$ = 16
b$ = 24
??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z PROC			; operator&

; 289  : static RGY_PICSTRUCT operator&(RGY_PICSTRUCT a, RGY_PICSTRUCT b) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	57		 push	 rdi

; 290  :     return (RGY_PICSTRUCT)((uint8_t)a & (uint8_t)b);

  00009	0f b6 44 24 10	 movzx	 eax, BYTE PTR a$[rsp]
  0000e	0f b6 4c 24 18	 movzx	 ecx, BYTE PTR b$[rsp]
  00013	23 c1		 and	 eax, ecx

; 291  : }

  00015	5f		 pop	 rdi
  00016	c3		 ret	 0
??I@YA?AW4RGY_PICSTRUCT@@W40@0@Z ENDP			; operator&
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 64
__$ReturnUdt$ = 72
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator, COMDAT

; 4058 :     _NODISCARD allocator_type get_allocator() const noexcept { // return allocator object for values

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4059 :         return static_cast<allocator_type>(_Getal());

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4060 :     }

  00032	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z
_TEXT	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr, COMDAT

; 3943 :     _NODISCARD basic_string substr(const size_type _Off = 0, const size_type _Count = npos) const {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  0002d	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 3944 :         // return [_Off, _Off + _Count) as new string
; 3945 :         return basic_string(*this, _Off, _Count, get_allocator());

  00035	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T1[rsp]
  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ?get_allocator@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::get_allocator
  00044	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00049	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Count$[rsp]
  0004e	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Off$[rsp]
  00053	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00058	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00062	90		 npad	 1
  00063	8b 44 24 34	 mov	 eax, DWORD PTR $T2[rsp]
  00067	83 c8 01	 or	 eax, 1
  0006a	89 44 24 34	 mov	 DWORD PTR $T2[rsp], eax
  0006e	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 3946 :     }

  00073	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
  00079	cc		 int	 3
?substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 34	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 34 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 48
$T2 = 52
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Count$ = 104
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 34	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 34 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??substr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV12@_K0@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::substr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT

; 3562 :     _NODISCARD size_type length() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3563 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3564 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
_Roff$ = 64
_Count$ = 72
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2819 :     basic_string& assign(const basic_string& _Right, const size_type _Roff, size_type _Count = npos) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2820 :         // assign _Right [_Roff, _Roff + _Count)
; 2821 :         _Right._Mypair._Myval2._Check_offset(_Roff);

  0002d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Roff$[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 2822 :         _Count = _Right._Mypair._Myval2._Clamp_suffix_size(_Roff, _Count);

  0003f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00044	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00049	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Roff$[rsp]
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
  00056	48 89 44 24 48	 mov	 QWORD PTR _Count$[rsp], rax

; 2823 :         return assign(_Right._Mypair._Myval2._Myptr() + _Roff, _Count);

  0005b	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00068	48 03 44 24 40	 add	 rax, QWORD PTR _Roff$[rsp]
  0006d	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Count$[rsp]
  00072	48 8b d0	 mov	 rdx, rax
  00075	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0007a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2824 :     }

  0007f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S9$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S9$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S9$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S9$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S9$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2268 :     basic_string(

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2269 :         const basic_string& _Right, const size_type _Roff, const size_type _Count, const _Alloc& _Al = _Alloc())
; 2270 :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Right [_Roff, _Roff + _Count)

  00033	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	4c 8b 84 24 b0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00043	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
  00050	90		 npad	 1

; 2271 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00051	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0005e	48 8b d0	 mov	 rdx, rax
  00061	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S14$[rsp]
  00066	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006b	48 8d 44 24 34	 lea	 rax, QWORD PTR $S14$[rsp]
  00070	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2272 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00075	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00085	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0008a	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008f	90		 npad	 1

; 2273 :         _Tidy_init();

  00090	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2274 :         assign(_Right, _Roff, _Count);

  0009d	4c 8b 8c 24 a8
	00 00 00	 mov	 r9, QWORD PTR _Count$[rsp]
  000a5	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Roff$[rsp]
  000ad	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000b5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2275 :         _Proxy._Release();

  000c2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000c7	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000cc	90		 npad	 1

; 2276 :     }

  000cd	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d2	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000d7	90		 npad	 1
  000d8	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8b cc	 mov	 rcx, rsp
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z$rtcFrameData
  000ed	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f2	48 8b c7	 mov	 rax, rdi
  000f5	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000fc	5f		 pop	 rdi
  000fd	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S14$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Right$ = 152
_Roff$ = 160
_Count$ = 168
_Al$ = 176
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@_K1AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT

; 2140 :     size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2141 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2142 :         return _Min_value(_Size, _Mysize - _Off);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00032	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00036	48 2b c1	 sub	 rax, rcx
  00039	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Size$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2143 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2136 :     [[noreturn]] static void _Xran() { // report an out_of_range error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 2137 :         _Xout_of_range("invalid string position");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2138 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2124 :     void _Check_offset(const size_type _Off) const { // checks whether _Off is in the bounds of [0, size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2125 :         if (_Mysize < _Off) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	73 05		 jae	 SHORT $LN2@Check_offs

; 2126 :             _Xran();

  00033	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2127 :         }
; 2128 :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0_Iterator_base12_compatible@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12_compatible@std@@QEAA@XZ PROC	; std::_Iterator_base12_compatible::_Iterator_base12_compatible, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12_compatible@std@@QEAA@XZ ENDP	; std::_Iterator_base12_compatible::_Iterator_base12_compatible
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcscmp
_TEXT	SEGMENT
_s1$ = 48
_s2$ = 56
_tcscmp	PROC						; COMDAT

; 1681 : _Check_return_ __inline int _tcscmp(_In_z_ _CPC _s1,_In_z_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _s2$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _s1$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbscmp
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
_tcscmp	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_util.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
