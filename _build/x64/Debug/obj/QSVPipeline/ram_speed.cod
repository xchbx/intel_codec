; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG87296 DB	'invalid argument', 00H
	ORG $+3
$SG87297 DB	'%s', 00H
	ORG $+9
$SG87298 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
	ORG $+8
$SG87299 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG87300 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG87301 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
PUBLIC	??0thread@std@@QEAA@XZ				; std::thread::thread
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	??4thread@std@@QEAAAEAV01@$$QEAV01@@Z		; std::thread::operator=
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	?native_handle@thread@std@@QEAAPEAXXZ		; std::thread::native_handle
PUBLIC	??_Gthread@std@@QEAAPEAXI@Z			; std::thread::`scalar deleting destructor'
PUBLIC	??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
PUBLIC	?_Check_memory_order@std@@YAXW4memory_order@1@@Z ; std::_Check_memory_order
PUBLIC	?ram_speed_mt@@YANHHH@Z				; ram_speed_mt
PUBLIC	?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z ; ram_speed_mt_list
PUBLIC	?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z	; std::_Atomic_storage<unsigned int,4>::store
PUBLIC	?load@?$_Atomic_storage@I$03@std@@QEBAIXZ	; std::_Atomic_storage<unsigned int,4>::load
PUBLIC	?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z ; std::_Atomic_integral<unsigned int,4>::fetch_or
PUBLIC	??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z	; std::_Atomic_integral_facade<unsigned int>::operator|=
PUBLIC	??4?$atomic@I@std@@QEAAII@Z			; std::atomic<unsigned int>::operator=
PUBLIC	?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z ; ram_speed_func
PUBLIC	??$max@N@std@@YAAEBNAEBN0@Z			; std::max<double>
PUBLIC	??$max@H@std@@YAAEBHAEBH0@Z			; std::max<int>
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$min@_J@std@@YAAEB_JAEB_J0@Z			; std::min<__int64>
PUBLIC	?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z	; ram_speed_thread_id
PUBLIC	??0?$allocator@Vthread@std@@@std@@QEAA@XZ	; std::allocator<std::thread>::allocator<std::thread>
PUBLIC	?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate
PUBLIC	?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size
PUBLIC	??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
PUBLIC	??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
PUBLIC	?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
PUBLIC	?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::max_size
PUBLIC	??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
PUBLIC	?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Ufill
PUBLIC	?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
PUBLIC	?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength
PUBLIC	?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
PUBLIC	?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
PUBLIC	??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ	; std::allocator<RAM_SPEED_THREAD>::allocator<RAM_SPEED_THREAD>
PUBLIC	?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z ; std::allocator<RAM_SPEED_THREAD>::deallocate
PUBLIC	?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z ; std::allocator<RAM_SPEED_THREAD>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::max_size
PUBLIC	??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
PUBLIC	??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
PUBLIC	?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_end
PUBLIC	?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::max_size
PUBLIC	??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
PUBLIC	?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Ufill
PUBLIC	?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Tidy
PUBLIC	?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Xlength
PUBLIC	?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
PUBLIC	?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first
PUBLIC	??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>
PUBLIC	??0?$allocator@N@std@@QEAA@XZ			; std::allocator<double>::allocator<double>
PUBLIC	?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z	; std::allocator<double>::deallocate
PUBLIC	?allocate@?$allocator@N@std@@QEAAPEAN_K@Z	; std::allocator<double>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z ; std::_Default_allocator_traits<std::allocator<double> >::max_size
PUBLIC	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ	; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
PUBLIC	?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<double,std::allocator<double> >::_Move_construct
PUBLIC	??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
PUBLIC	??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
PUBLIC	?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::push_back
PUBLIC	?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::max_size
PUBLIC	?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::capacity
PUBLIC	?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z ; std::vector<double,std::allocator<double> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z ; std::vector<double,std::allocator<double> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z ; std::vector<double,std::allocator<double> >::_Change_array
PUBLIC	?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
PUBLIC	?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ ; std::vector<double,std::allocator<double> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Orphan_range
PUBLIC	?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
PUBLIC	?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<double> >::_Take_contents
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
PUBLIC	??$move@AEAN@std@@YA$$QEANAEAN@Z		; std::move<double &>
PUBLIC	??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::emplace_back<double>
PUBLIC	??$forward@N@std@@YA$$QEANAEAN@Z		; std::forward<double>
PUBLIC	??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::_Emplace_back_with_unused_capacity<double>
PUBLIC	??$_Unfancy@N@std@@YAPEANPEAN@Z			; std::_Unfancy<double>
PUBLIC	??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z ; std::_Default_allocator_traits<std::allocator<double> >::construct<double,double>
PUBLIC	??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z ; std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ; std::move<std::allocator<double> &>
PUBLIC	??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><>
PUBLIC	??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RAM_SPEED_THREAD>
PUBLIC	??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1><std::allocator<RAM_SPEED_THREAD> const &>
PUBLIC	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
PUBLIC	??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
PUBLIC	??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><std::allocator<std::thread> const &>
PUBLIC	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
PUBLIC	??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long const ,std::_Atomic_padded<unsigned int> const >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
PUBLIC	??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z	; std::_Atomic_reinterpret_as<long,unsigned int>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z ; std::_Destroy_range<std::allocator<double> >
PUBLIC	??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ; std::_Destroy_range<std::allocator<RAM_SPEED_THREAD> >
PUBLIC	??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::thread> >
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
PUBLIC	??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
PUBLIC	??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
PUBLIC	??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
PUBLIC	??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
PUBLIC	??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >::operator()
PUBLIC	??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
PUBLIC	??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Get_first
PUBLIC	??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ; std::forward<std::allocator<double> >
PUBLIC	??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z ; std::forward<std::allocator<RAM_SPEED_THREAD> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >::~_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >
PUBLIC	??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::thread> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >::~_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$addressof@$$CBI@std@@YAPEBIAEBI@Z		; std::addressof<unsigned int const >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
PUBLIC	??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
PUBLIC	??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *>
PUBLIC	??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z ; std::_Uninitialized_move<double *,std::allocator<double> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >
PUBLIC	??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z		; std::_Get_size_of_n<24>
PUBLIC	??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > ><std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,0>
PUBLIC	??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ; std::get<0,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
PUBLIC	??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ; std::move<void (__cdecl*&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
PUBLIC	??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ; std::get<1,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
PUBLIC	??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::move<RAM_SPEED_THREAD * &>
PUBLIC	??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ; std::get<2,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
PUBLIC	??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::move<RAM_SPEED_THREAD_WAKE * &>
PUBLIC	??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ; std::forward<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
PUBLIC	??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
PUBLIC	??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z ; std::invoke<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Get_unwrapped@N@std@@YAPEANQEAN@Z		; std::_Get_unwrapped<double>
PUBLIC	??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z	; std::_Copy_memmove<double *,double *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::~_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Emplace_back<>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<>
PUBLIC	??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
PUBLIC	??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1><std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>
PUBLIC	??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z ; std::_Unfancy<RAM_SPEED_THREAD>
PUBLIC	??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::construct<RAM_SPEED_THREAD>
PUBLIC	??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread>
PUBLIC	??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ; std::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
PUBLIC	??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z ; std::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
PUBLIC	??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>
PUBLIC	??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ; std::tuple<RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD_WAKE *,0>
PUBLIC	??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z ; std::_Tuple_val<RAM_SPEED_THREAD *>::_Tuple_val<RAM_SPEED_THREAD *><RAM_SPEED_THREAD *>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ; std::_Tuple_val<RAM_SPEED_THREAD_WAKE *>::_Tuple_val<RAM_SPEED_THREAD_WAKE *><RAM_SPEED_THREAD_WAKE *>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BF@FBDAHHJI@Invalid?5memory?5order@	; `string'
PUBLIC	??_C@_0GH@NLKJPDKJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOBIMJOO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DC@CFMGACCG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA_?$AAm?$AAe?$AAm@ ; `string'
PUBLIC	??_C@_1CO@JOMFDNFG@?$AA?$CC?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@ ; `string'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1MC@BNKPIOCD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3eb0c6f7a0b5ed8d
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4090000000000000
PUBLIC	__real@4130000000000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_log2:PROC
EXTRN	__imp__aligned_free:PROC
EXTRN	__imp__aligned_malloc:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	__imp_terminate:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_Query_perf_counter:PROC
EXTRN	_Query_perf_frequency:PROC
EXTRN	__imp__beginthreadex:PROC
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	__imp_SetThreadPriority:PROC
EXTRN	__imp_SetThreadAffinityMask:PROC
EXTRN	?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z:PROC	; get_cpu_info
EXTRN	?get_availableSIMD@@YAIXZ:PROC			; get_availableSIMD
EXTRN	read_sse:PROC
EXTRN	read_avx:PROC
EXTRN	write_sse:PROC
EXTRN	write_avx:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0thread@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$??0thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+152
	DD	imagerel $unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?joinable@thread@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$?joinable@thread@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?native_handle@thread@std@@QEAAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?native_handle@thread@std@@QEAAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gthread@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gthread@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_memory_order@std@@YAXW4memory_order@1@@Z DD imagerel $LN8
	DD	imagerel $LN8+150
	DD	imagerel $unwind$?_Check_memory_order@std@@YAXW4memory_order@1@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?ram_speed_mt@@YANHHH@Z DD imagerel $LN20
	DD	imagerel $LN20+1253
	DD	imagerel $unwind$?ram_speed_mt@@YANHHH@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA DD imagerel ?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA
	DD	imagerel ?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA
$pdata$?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA DD imagerel ?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA
	DD	imagerel ?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA
$pdata$?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA DD imagerel ?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA
	DD	imagerel ?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z DD imagerel $LN13
	DD	imagerel $LN13+468
	DD	imagerel $unwind$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA DD imagerel ?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA
	DD	imagerel ?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA
$pdata$?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA DD imagerel ?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA
	DD	imagerel ?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA+58
	DD	imagerel $unwind$?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?load@?$_Atomic_storage@I$03@std@@QEBAIXZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?load@?$_Atomic_storage@I$03@std@@QEBAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$atomic@I@std@@QEAAII@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??4?$atomic@I@std@@QEAAII@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z DD imagerel $LN18
	DD	imagerel $LN18+1210
	DD	imagerel $unwind$?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@N@std@@YAAEBNAEBN0@Z DD imagerel $LN13
	DD	imagerel $LN13+218
	DD	imagerel $unwind$??$max@N@std@@YAAEBNAEBN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$max@H@std@@YAAEBHAEBH0@Z DD imagerel $LN13
	DD	imagerel $LN13+210
	DD	imagerel $unwind$??$max@H@std@@YAAEBHAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+246
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_J@std@@YAAEB_JAEB_J0@Z DD imagerel $LN13
	DD	imagerel $LN13+214
	DD	imagerel $unwind$??$min@_J@std@@YAAEB_JAEB_J0@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@Vthread@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@Vthread@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+219
	DD	imagerel $unwind$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+225
	DD	imagerel $unwind$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD imagerel $LN7
	DD	imagerel $LN7+310
	DD	imagerel $unwind$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA DD imagerel ?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@N@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@N@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@N@std@@QEAAPEAN_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@N@std@@QEAAPEAN_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+269
	DD	imagerel $unwind$?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAN@std@@YA$$QEANAEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAN@std@@YA$$QEANAEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@N@std@@YA$$QEANAEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@N@std@@YA$$QEANAEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@N@std@@YAPEANPEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@N@std@@YAPEANPEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+285
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+285
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD imagerel $LN7
	DD	imagerel $LN7+200
	DD	imagerel $unwind$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+212
	DD	imagerel $unwind$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA DD imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBI@std@@YAPEBIAEBI@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBI@std@@YAPEBIAEBI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+153
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+153
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+104
	DD	imagerel $unwind$??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@N@std@@YAPEANQEAN@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@N@std@@YAPEANQEAN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z
pdata	ENDS
;	COMDAT __real@4130000000000000
CONST	SEGMENT
__real@4130000000000000 DQ 04130000000000000r	; 1.04858e+06
CONST	ENDS
;	COMDAT __real@4090000000000000
CONST	SEGMENT
__real@4090000000000000 DQ 04090000000000000r	; 1024
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3eb0c6f7a0b5ed8d
CONST	SEGMENT
__real@3eb0c6f7a0b5ed8d DQ 03eb0c6f7a0b5ed8dr	; 1e-06
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MC@BNKPIOCD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1MC@BNKPIOCD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'R', 00H
	DB	'A', 00H, 'M', 00H, '_', 00H, 'S', 00H, 'P', 00H, 'E', 00H, 'E'
	DB	00H, 'D', 00H, '_', 00H, 'T', 00H, 'H', 00H, 'R', 00H, 'E', 00H
	DB	'A', 00H, 'D', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'R', 00H, 'A'
	DB	00H, 'M', 00H, '_', 00H, 'S', 00H, 'P', 00H, 'E', 00H, 'E', 00H
	DB	'D', 00H, '_', 00H, 'T', 00H, 'H', 00H, 'R', 00H, 'E', 00H, 'A'
	DB	00H, 'D', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H
	DB	'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ?RAM_TEST_LIST@?1??ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@4QAY01Q6AXPEAEII@ZA
CONST	SEGMENT
?RAM_TEST_LIST@?1??ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@4QAY01Q6AXPEAEII@ZA DQ FLAT:read_sse ; `ram_speed_func'::`2'::RAM_TEST_LIST
	DQ	FLAT:write_sse
	DQ	FLAT:read_avx
	DQ	FLAT:write_avx
CONST	ENDS
;	COMDAT ??_C@_1CO@JOMFDNFG@?$AA?$CC?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@
CONST	SEGMENT
??_C@_1CO@JOMFDNFG@?$AA?$CC?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@ DB '"'
	DB	00H, 'I', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r'
	DB	00H, 'y', 00H, ' ', 00H, 'o', 00H, 'r', 00H, 'd', 00H, 'e', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@CFMGACCG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA_?$AAm?$AAe?$AAm@
CONST	SEGMENT
??_C@_1DC@CFMGACCG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA_?$AAm?$AAe?$AAm@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'C', 00H
	DB	'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, '_', 00H, 'm', 00H, 'e'
	DB	00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '_', 00H, 'o', 00H
	DB	'r', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOBIMJOO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOBIMJOO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@NLKJPDKJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@NLKJPDKJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\atomic', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FBDAHHJI@Invalid?5memory?5order@
CONST	SEGMENT
??_C@_0BF@FBDAHHJI@Invalid?5memory?5order@ DB 'Invalid memory order', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z DD 022c01H
	DD	070145218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z DD 022c01H
	DD	070145218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@N@std@@YAPEANQEAN@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 040H
	DD	imagerel $ip2state$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD 022d19H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBI@std@@YAPEBIAEBI@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z
	DD	imagerel $ip2state$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z DD 021e19H
	DD	07006b20aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z$rtcName$0 DB 05fH ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>
	DB	046H
	DB	06eH
	DB	056H
	DB	061H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+8
??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z$rtcVarDesc DD 028H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>
	DD	08H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z$rtcName$0
	ORG $+48
??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z$rtcFrameData DD 01H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>
	DD	00H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 04H
	DB	00H
	DB	00H
	DB	0c5H, 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
	DD	imagerel $ip2state$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z DB 040H
	DD	imagerel $ip2state$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z$rtcName$0 DB 05fH ; std::_Atomic_reinterpret_as<long,unsigned int>
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z$rtcVarDesc DD 024H ; std::_Atomic_reinterpret_as<long,unsigned int>
	DD	04H
	DQ	FLAT:??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z$rtcName$0
	ORG $+48
??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z$rtcFrameData DD 01H ; std::_Atomic_reinterpret_as<long,unsigned int>
	DD	00H
	DQ	FLAT:??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'`'
	DB	04H
	DB	'~'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 032e11H
	DD	0140117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$0 DB 024H ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	053H
	DB	031H
	DB	036H
	DB	00H
	ORG $+3
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$1 DB 05fH ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$2 DB 05fH ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcFrameData DD 03H ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DD	00H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcVarDesc
	ORG $+8
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcVarDesc DD 088H ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DD	08H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'`'
	DB	04H
	DB	'~'
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 032e11H
	DD	0140117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$0 DB 024H ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	053H
	DB	031H
	DB	035H
	DB	00H
	ORG $+3
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$1 DB 05fH ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$2 DB 05fH ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcFrameData DD 03H ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DD	00H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcVarDesc
	ORG $+8
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcVarDesc DD 088H ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DD	08H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$2
	DD	058H
	DD	010H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@N@std@@YAPEANPEAN@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@N@std@@YA$$QEANAEAN@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAN@std@@YA$$QEANAEAN@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z$rtcName$0 DB 05fH ; std::vector<double,std::allocator<double> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z$rtcVarDesc DD 024H ; std::vector<double,std::allocator<double> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z$rtcFrameData DD 01H ; std::vector<double,std::allocator<double> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
	DD	01H
	DQ	FLAT:??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
	DD	00H
	DQ	FLAT:??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@N@std@@QEAAPEAN_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@N@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 06H
	DB	00H
	DB	00H
	DB	0feH
	DB	02H
	DB	')', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
	DD	imagerel $ip2state$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z DD 023011H
	DD	07015d219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z$rtcName$0 DB 05fH ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>
	DB	044H
	DB	065H
	DB	063H
	DB	061H
	DB	079H
	DB	05fH
	DB	063H
	DB	06fH
	DB	070H
	DB	069H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z$rtcVarDesc DD 038H ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>
	DD	08H
	DQ	FLAT:??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z$rtcName$0
	ORG $+48
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z$rtcFrameData DD 01H ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>
	DD	00H
	DQ	FLAT:??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
	DD	01H
	DQ	FLAT:??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
	DD	00H
	DQ	FLAT:??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
	DD	01H
	DQ	FLAT:??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
	DD	00H
	DQ	FLAT:??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@Vthread@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$min@_J@std@@YAAEB_JAEB_J0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$min@_J@std@@YAAEB_JAEB_J0@Z DB 040H
	DD	imagerel $ip2state$??$min@_J@std@@YAAEB_JAEB_J0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_J@std@@YAAEB_JAEB_J0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$min@_J@std@@YAAEB_JAEB_J0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max@H@std@@YAAEBHAEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max@H@std@@YAAEBHAEBH0@Z DB 040H
	DD	imagerel $ip2state$??$max@H@std@@YAAEBHAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@H@std@@YAAEBHAEBH0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max@H@std@@YAAEBHAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$max@N@std@@YAAEBNAEBN0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$max@N@std@@YAAEBNAEBN0@Z DB 040H
	DD	imagerel $ip2state$??$max@N@std@@YAAEBNAEBN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$max@N@std@@YAAEBNAEBN0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$max@N@std@@YAAEBNAEBN0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$atomic@I@std@@QEAAII@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?load@?$_Atomic_storage@I$03@std@@QEBAIXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
xdata	SEGMENT
$unwind$?ram_speed_mt@@YANHHH@Z DD 033d19H
	DD	0440115H
	DD	0700eH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ram_speed_mt@@YANHHH@Z
	DD	0212H
$cppxdata$?ram_speed_mt@@YANHHH@Z DB 08H
	DD	imagerel $stateUnwindMap$?ram_speed_mt@@YANHHH@Z
	DD	imagerel $ip2state$?ram_speed_mt@@YANHHH@Z
$stateUnwindMap$?ram_speed_mt@@YANHHH@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA
$ip2state$?ram_speed_mt@@YANHHH@Z DB 0eH
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
	DB	'L'
	DB	04H
	DB	0d5H, 08H
	DB	06H
	DB	'H'
	DB	04H
	DB	0c5H, 06H
	DB	02H
	DB	016H
	DB	00H
$cppxdata$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z DB 08H
	DD	imagerel $stateUnwindMap$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z
	DD	imagerel $ip2state$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z
	ORG $+1
$unwind$?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z DD 034419H
	DD	024011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z
	DD	0112H
$stateUnwindMap$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA
$ip2state$?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z DB 06H
	DB	00H
	DB	00H
	DB	0ceH
	DB	04H
	DB	0a5H, 04H
	DB	02H
	ORG $+1
$unwind$?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z DD 033b19H
	DD	02c0112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck
	DD	0150H
$unwind$?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z DD 022101H
	DD	0700a120eH
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?ram_speed_mt@@YANHHH@Z$rtcName$0 DB 074H		; ram_speed_mt
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	073H
	DB	00H
?ram_speed_mt@@YANHHH@Z$rtcName$1 DB 074H		; ram_speed_mt
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	05fH
	DB	070H
	DB	072H
	DB	06dH
	DB	00H
	ORG $+1
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$2 DB 066H ; ram_speed_func
	DB	069H
	DB	06eH
	DB	00H
?ram_speed_mt@@YANHHH@Z$rtcName$2 DB 074H		; ram_speed_mt
	DB	068H
	DB	072H
	DB	065H
	DB	061H
	DB	064H
	DB	05fH
	DB	077H
	DB	061H
	DB	06bH
	DB	065H
	DB	00H
	ORG $+4
?ram_speed_mt@@YANHHH@Z$rtcName$3 DB 063H		; ram_speed_mt
	DB	070H
	DB	075H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$0 DB 072H ; ram_speed_func
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+5
?ram_speed_mt@@YANHHH@Z$rtcFrameData DD 04H		; ram_speed_mt
	DD	00H
	DQ	FLAT:?ram_speed_mt@@YANHHH@Z$rtcVarDesc
?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcName$1 DB 072H ; ram_speed_mt_list
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	073H
	DB	00H
?ram_speed_mt@@YANHHH@Z$rtcVarDesc DD 0e0H		; ram_speed_mt
	DD	070H
	DQ	FLAT:?ram_speed_mt@@YANHHH@Z$rtcName$3
	DD	0b4H
	DD	08H
	DQ	FLAT:?ram_speed_mt@@YANHHH@Z$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?ram_speed_mt@@YANHHH@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?ram_speed_mt@@YANHHH@Z$rtcName$0
	ORG $+192
?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcName$0 DB 063H ; ram_speed_mt_list
	DB	070H
	DB	075H
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$1 DB 073H ; ram_speed_func
	DB	074H
	DB	061H
	DB	072H
	DB	074H
	DB	00H
	ORG $+6
?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcFrameData DD 02H ; ram_speed_mt_list
	DD	00H
	DQ	FLAT:?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcVarDesc
	ORG $+8
?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcVarDesc DD 0b8H ; ram_speed_mt_list
	DD	020H
	DQ	FLAT:?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcName$1
	DD	030H
	DD	070H
	DQ	FLAT:?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcName$0
	ORG $+96
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$3 DB 074H ; ram_speed_func
	DB	069H
	DB	06dH
	DB	065H
	DB	05fH
	DB	06dH
	DB	069H
	DB	06eH
	DB	00H
	ORG $+7
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcVarDesc DD 0e8H ; ram_speed_func
	DD	08H
	DQ	FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$3
	DD	0c8H
	DD	08H
	DQ	FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$2
	DD	0a8H
	DD	08H
	DQ	FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$1
	DD	058H
	DD	020H
	DQ	FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcName$0
	ORG $+192
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcFrameData DD 04H ; ram_speed_func
	DD	00H
	DQ	FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Check_memory_order@std@@YAXW4memory_order@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Check_memory_order@std@@YAXW4memory_order@1@@Z DB 040H
	DD	imagerel $ip2state$?_Check_memory_order@std@@YAXW4memory_order@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_memory_order@std@@YAXW4memory_order@1@@Z DD 021c19H
	DD	070055209H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Check_memory_order@std@@YAXW4memory_order@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD 032901H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0 DB 05fH ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DB	04fH
	DB	06cH
	DB	064H
	DB	05fH
	DB	076H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+7
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc DD 028H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	010H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0
	ORG $+48
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData DD 01H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	00H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gthread@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?native_handle@thread@std@@QEAAPEAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 031f01H
	DD	07007820bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?joinable@thread@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD 032419H
	DD	0700ca210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0thread@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DB 040H
	DD	imagerel $ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z PROC ; std::_Tuple_val<RAM_SPEED_THREAD_WAKE *>::_Tuple_val<RAM_SPEED_THREAD_WAKE *><RAM_SPEED_THREAD_WAKE *>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ENDP ; std::_Tuple_val<RAM_SPEED_THREAD_WAKE *>::_Tuple_val<RAM_SPEED_THREAD_WAKE *><RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 214  :     constexpr tuple(_Tag) noexcept { // strengthened, construct from one arg per element

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi

; 215  :     }

  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z PROC ; std::_Tuple_val<RAM_SPEED_THREAD *>::_Tuple_val<RAM_SPEED_THREAD *><RAM_SPEED_THREAD *>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z ENDP ; std::_Tuple_val<RAM_SPEED_THREAD *>::_Tuple_val<RAM_SPEED_THREAD *><RAM_SPEED_THREAD *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z PROC ; std::tuple<RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD_WAKE *,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00027	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0002c	48 8b f8	 mov	 rdi, rax
  0002f	33 c0		 xor	 eax, eax
  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	f3 aa		 rep stosb
  00038	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00047	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8b d0	 mov	 rdx, rax
  00059	e8 00 00 00 00	 call	 ??$?0PEAURAM_SPEED_THREAD_WAKE@@@?$_Tuple_val@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ; std::_Tuple_val<RAM_SPEED_THREAD_WAKE *>::_Tuple_val<RAM_SPEED_THREAD_WAKE *><RAM_SPEED_THREAD_WAKE *>

; 243  :     }

  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ENDP ; std::tuple<RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD_WAKE *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z PROC ; std::forward<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z ENDP ; std::forward<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z PROC ; std::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z ENDP ; std::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
<_Rest_arg_0>$ = 88
??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z PROC ; std::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 0c 00 00 00	 mov	 ecx, 12
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  0002c	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00031	48 8b f8	 mov	 rdi, rax
  00034	33 c0		 xor	 eax, eax
  00036	b9 01 00 00 00	 mov	 ecx, 1
  0003b	f3 aa		 rep stosb
  0003d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00047	4c 8b c0	 mov	 r8, rax
  0004a	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0004f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD_WAKE@@$$V$0A@@?$tuple@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ; std::tuple<RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD_WAKE *,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00059	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0005e	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 83 c1 08	 add	 rcx, 8
  0006c	48 8b d0	 mov	 rdx, rax
  0006f	e8 00 00 00 00	 call	 ??$?0PEAURAM_SPEED_THREAD@@@?$_Tuple_val@PEAURAM_SPEED_THREAD@@@std@@QEAA@$$QEAPEAURAM_SPEED_THREAD@@@Z ; std::_Tuple_val<RAM_SPEED_THREAD *>::_Tuple_val<RAM_SPEED_THREAD *><RAM_SPEED_THREAD *>

; 243  :     }

  00074	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ENDP ; std::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	b9 10 00 00 00	 mov	 ecx, 16
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00037	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003c	e8 00 00 00 00	 call	 ??0thread@std@@QEAA@XZ	; std::thread::thread

; 759  :     }

  00041	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z PROC ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::construct<RAM_SPEED_THREAD>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	b9 18 00 00 00	 mov	 ecx, 24
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00037	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 18 00 00 00	 mov	 ecx, 24
  00043	f3 aa		 rep stosb

; 759  :     }

  00045	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::construct<RAM_SPEED_THREAD>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z PROC ; std::_Unfancy<RAM_SPEED_THREAD>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z ENDP ; std::_Unfancy<RAM_SPEED_THREAD>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1><std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1><std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
this$ = 64
__formal$ = 72
_This_arg$ = 80
<_Rest_arg_0>$ = 88
<_Rest_arg_1>$ = 96
??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z PROC ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 0c 00 00 00	 mov	 ecx, 12
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  0002c	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00031	48 8b f8	 mov	 rdi, rax
  00034	33 c0		 xor	 eax, eax
  00036	b9 01 00 00 00	 mov	 ecx, 1
  0003b	f3 aa		 rep stosb
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Rest_arg_1>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00047	48 89 44 24 28	 mov	 QWORD PTR tv70[rsp], rax
  0004c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  00051	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  00056	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv70[rsp]
  0005b	4c 8b c9	 mov	 r9, rcx
  0005e	4c 8b c0	 mov	 r8, rax
  00061	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@$0A@@?$tuple@PEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAURAM_SPEED_THREAD@@$$QEAPEAURAM_SPEED_THREAD_WAKE@@@Z ; std::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00070	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  00075	e8 00 00 00 00	 call	 ??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  0007a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007f	48 83 c1 10	 add	 rcx, 16
  00083	48 8b d0	 mov	 rdx, rax
  00086	e8 00 00 00 00	 call	 ??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@?$_Tuple_val@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@Z ; std::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>::_Tuple_val<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>

; 243  :     }

  0008b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z ENDP ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
  0002c	48 8b d0	 mov	 rdx, rax
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00038	e8 00 00 00 00	 call	 ??$construct@Vthread@std@@$$V@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread>

; 1582 :         ++_Last;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	48 83 c0 10	 add	 rax, 16
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::thread> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Emplace_back<>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@URAM_SPEED_THREAD@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@@Z ; std::_Unfancy<RAM_SPEED_THREAD>
  0002c	48 8b d0	 mov	 rdx, rax
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00038	e8 00 00 00 00	 call	 ??$construct@URAM_SPEED_THREAD@@$$V@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SAXAEAV?$allocator@URAM_SPEED_THREAD@@@1@QEAURAM_SPEED_THREAD@@@Z ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::construct<RAM_SPEED_THREAD>

; 1582 :         ++_Last;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	48 83 c0 18	 add	 rax, 24
  0004a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::~_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ; std::_Destroy_range<std::allocator<RAM_SPEED_THREAD> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::~_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z PROC	; std::_Copy_memmove<double *,double *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z ENDP	; std::_Copy_memmove<double *,double *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@N@std@@YAPEANQEAN@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@N@std@@YAPEANQEAN@Z PROC		; std::_Get_unwrapped<double>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@N@std@@YAPEANQEAN@Z ENDP		; std::_Get_unwrapped<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z
_TEXT	SEGMENT
tv64 = 32
tv67 = 40
_Obj$ = 64
<_Args_0>$ = 72
<_Args_1>$ = 80
??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z PROC ; std::invoke<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00032	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  00041	48 89 44 24 28	 mov	 QWORD PTR tv67[rsp], rax
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  0004b	e8 00 00 00 00	 call	 ??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ; std::forward<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  00050	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00055	4c 8b c1	 mov	 r8, rcx
  00058	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv67[rsp]
  0005d	48 8b d1	 mov	 rdx, rcx
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z ENDP ; std::invoke<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
_TEXT	SEGMENT
tv66 = 32
tv69 = 40
_Obj$ = 64
<_Args_0>$ = 72
<_Args_1>$ = 80
??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00032	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  00041	48 89 44 24 28	 mov	 QWORD PTR tv69[rsp], rax
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  0004b	e8 00 00 00 00	 call	 ??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ; std::forward<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  00050	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00055	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  00058	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv69[rsp]
  0005d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00060	ff 10		 call	 QWORD PTR [rax]
  00062	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??$_Call@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@_Invoker_functor@std@@SAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z PROC ; std::forward<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ENDP ; std::forward<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z PROC ; std::move<RAM_SPEED_THREAD_WAKE * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ENDP ; std::move<RAM_SPEED_THREAD_WAKE * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z PROC ; std::get<2,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]

; 652  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ENDP ; std::get<2,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z PROC ; std::move<RAM_SPEED_THREAD * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ENDP ; std::move<RAM_SPEED_THREAD * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z PROC ; std::get<1,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]
  0000b	48 83 c0 08	 add	 rax, 8

; 652  : }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ENDP ; std::get<1,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z PROC ; std::move<void (__cdecl*&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ENDP ; std::move<void (__cdecl*&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z PROC ; std::get<0,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]
  0000b	48 83 c0 10	 add	 rax, 16

; 652  : }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ENDP ; std::get<0,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > ><std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1><std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > ><std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
_TEXT	SEGMENT
$T1 = 48
tv66 = 56
tv69 = 64
this$ = 96
_This_arg$ = 104
<_Rest_arg_0>$ = 112
<_Rest_arg_1>$ = 120
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z PROC ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	48 8b 4c 24 78	 mov	 rcx, QWORD PTR <_Rest_arg_1>$[rsp]
  00043	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00048	90		 npad	 1
  00049	48 89 44 24 38	 mov	 QWORD PTR tv66[rsp], rax
  0004e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  00058	90		 npad	 1
  00059	48 89 44 24 40	 mov	 QWORD PTR tv69[rsp], rax
  0005e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  00063	e8 00 00 00 00	 call	 ??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  00068	90		 npad	 1
  00069	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv66[rsp]
  0006e	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv69[rsp]
  00078	4c 8b c9	 mov	 r9, rcx
  0007b	4c 8b c0	 mov	 r8, rax
  0007e	0f b6 54 24 30	 movzx	 edx, BYTE PTR $T1[rsp]
  00083	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00088	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU2@PEAU3@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@U_Exact_args_t@1@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU3@$$QEAPEAU4@@Z ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><std::_Exact_args_t,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
  0008d	90		 npad	 1
  0008e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ENDP ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<24>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Count$[rsp], 24
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<24>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z
_TEXT	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >, COMDAT

; 1908 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1909 :     // value-initialize _Count objects to raw _First, using _Al
; 1910 :     using _Ptrty = typename _Alloc::value_type*;
; 1911 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1912 :         (void) _Al;
; 1913 :         auto _PFirst = _Unfancy(_First);
; 1914 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1915 :         return _First + _Count;
; 1916 :     } else {
; 1917 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

  00028	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Al$[rsp]
  0002d	48 8b 54 24 60	 mov	 rdx, QWORD PTR _First$[rsp]
  00032	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >
  0003c	90		 npad	 1

; 1918 :         for (; 0 < _Count; --_Count) {

  0003d	eb 0d		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0003f	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00044	48 ff c8	 dec	 rax
  00047	48 89 44 24 68	 mov	 QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
  0004c	48 83 7c 24 68
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00052	76 0c		 jbe	 SHORT $LN3@Uninitiali

; 1919 :             _Backout._Emplace_back();

  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00059	e8 00 00 00 00	 call	 ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<>

; 1920 :         }

  0005e	eb df		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1921 : 
; 1922 :         return _Backout._Release();

  00060	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00065	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release
  0006a	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  0006f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00074	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
  00079	48 8b 44 24 48	 mov	 rax, QWORD PTR $T5[rsp]

; 1923 :     }
; 1924 : }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<std::thread> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<std::thread> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<std::thread> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<std::thread> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
_TEXT	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >, COMDAT

; 1908 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1909 :     // value-initialize _Count objects to raw _First, using _Al
; 1910 :     using _Ptrty = typename _Alloc::value_type*;
; 1911 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1912 :         (void) _Al;
; 1913 :         auto _PFirst = _Unfancy(_First);
; 1914 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1915 :         return _First + _Count;
; 1916 :     } else {
; 1917 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

  00028	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Al$[rsp]
  0002d	48 8b 54 24 60	 mov	 rdx, QWORD PTR _First$[rsp]
  00032	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@PEAURAM_SPEED_THREAD@@AEAV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
  0003c	90		 npad	 1

; 1918 :         for (; 0 < _Count; --_Count) {

  0003d	eb 0d		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0003f	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00044	48 ff c8	 dec	 rax
  00047	48 89 44 24 68	 mov	 QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
  0004c	48 83 7c 24 68
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00052	76 0c		 jbe	 SHORT $LN3@Uninitiali

; 1919 :             _Backout._Emplace_back();

  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00059	e8 00 00 00 00	 call	 ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Emplace_back<>

; 1920 :         }

  0005e	eb df		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1921 : 
; 1922 :         return _Backout._Release();

  00060	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00065	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::_Release
  0006a	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  0006f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00074	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::~_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
  00079	48 8b 44 24 48	 mov	 rax, QWORD PTR $T5[rsp]

; 1923 :     }
; 1924 : }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::~_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >::~_Uninitialized_backout_al<std::allocator<RAM_SPEED_THREAD> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z PROC ; std::_Uninitialized_move<double *,std::allocator<double> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@N@std@@YAPEANQEAN@Z ; std::_Get_unwrapped<double>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@N@std@@YAPEANQEAN@Z ; std::_Get_unwrapped<double>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@N@std@@YAPEANPEAN@Z ; std::_Unfancy<double>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEANPEAN@std@@YAPEANPEAN00@Z ; std::_Copy_memmove<double *,double *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 03	 sar	 rax, 3
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00080	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z ENDP ; std::_Uninitialized_move<double *,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_Gthread@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z PROC ; std::_Unfancy<std::thread>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ENDP ; std::_Unfancy<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG87296
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG87297
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG87298
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG87299
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG87300
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG87301
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBI@std@@YAPEBIAEBI@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBI@std@@YAPEBIAEBI@Z PROC		; std::addressof<unsigned int const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBI@std@@YAPEBIAEBI@Z ENDP		; std::addressof<unsigned int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >::~_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >::~_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::thread> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::thread> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >::~_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >::~_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<RAM_SPEED_THREAD> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<RAM_SPEED_THREAD> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z PROC ; std::forward<std::allocator<double> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ENDP ; std::forward<std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z
_TEXT	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
tv75 = 80
_RawVals$ = 112
??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z PROC ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>, COMDAT

; 36   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept { // enforces termination

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 37   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 38   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

  0001e	48 8b 54 24 70	 mov	 rdx, QWORD PTR _RawVals$[rsp]
  00023	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00028	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > ><std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,0>
  0002d	90		 npad	 1

; 39   :         _Tuple& _Tup = *_FnVals;

  0002e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00033	e8 00 00 00 00	 call	 ??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::operator*
  00038	90		 npad	 1
  00039	48 89 44 24 38	 mov	 QWORD PTR _Tup$[rsp], rax

; 40   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

  0003e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  00043	e8 00 00 00 00	 call	 ??$get@$01P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD_WAKE@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ; std::get<2,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
  00048	90		 npad	 1
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$move@AEAPEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::move<RAM_SPEED_THREAD_WAKE * &>
  00051	90		 npad	 1
  00052	48 89 44 24 48	 mov	 QWORD PTR tv70[rsp], rax
  00057	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  0005c	e8 00 00 00 00	 call	 ??$get@$00P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAPEAURAM_SPEED_THREAD@@AEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ; std::get<1,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
  00061	90		 npad	 1
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 ??$move@AEAPEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::move<RAM_SPEED_THREAD * &>
  0006a	90		 npad	 1
  0006b	48 89 44 24 50	 mov	 QWORD PTR tv75[rsp], rax
  00070	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  00075	e8 00 00 00 00	 call	 ??$get@$0A@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAAEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@@Z ; std::get<0,void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
  0007a	90		 npad	 1
  0007b	48 8b c8	 mov	 rcx, rax
  0007e	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YA$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZAEAP6AX01@Z@Z ; std::move<void (__cdecl*&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  00083	90		 npad	 1
  00084	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv70[rsp]
  00089	4c 8b c1	 mov	 r8, rcx
  0008c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv75[rsp]
  00091	48 8b d1	 mov	 rdx, rcx
  00094	48 8b c8	 mov	 rcx, rax
  00097	e8 00 00 00 00	 call	 ??$invoke@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@YAX$$QEAP6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU1@$$QEAPEAU2@@Z ; std::invoke<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>
  0009c	90		 npad	 1

; 41   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

  0009d	e8 00 00 00 00	 call	 _Cnd_do_broadcast_at_thread_exit
  000a2	90		 npad	 1

; 42   :         return 0;

  000a3	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0
  000ab	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
  000b5	90		 npad	 1
  000b6	8b 44 24 40	 mov	 eax, DWORD PTR $T4[rsp]

; 43   :     }

  000ba	8b f8		 mov	 edi, eax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	90		 npad	 1
  000cc	8b c7		 mov	 eax, edi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z ENDP ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
tv75 = 80
_RawVals$ = 112
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
tv75 = 80
_RawVals$ = 112
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ
_TEXT	SEGMENT
this$ = 16
??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::operator*, COMDAT

; 1887 :     _NODISCARD add_lvalue_reference_t<_Ty> operator*() const noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1888 :         return *_Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1889 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??D?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	ba 18 00 00 00	 mov	 edx, 24
  00032	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00037	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete

; 1768 :     }

  0003c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??R?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv77 = 56
tv83 = 64
__$ReturnUdt$ = 96
<_Args_0>$ = 104
<_Args_1>$ = 112
<_Args_2>$ = 120
??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z PROC ; std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>, COMDAT

; 2056 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002d	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 2057 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00035	b9 18 00 00 00	 mov	 ecx, 24
  0003a	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00044	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  0004a	74 4c		 je	 SHORT $LN3@make_uniqu
  0004c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR <_Args_2>$[rsp]
  00051	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  00056	48 89 44 24 30	 mov	 QWORD PTR tv74[rsp], rax
  0005b	48 8b 4c 24 70	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  00060	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  00065	48 89 44 24 38	 mov	 QWORD PTR tv77[rsp], rax
  0006a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv74[rsp]
  00079	4c 8b c9	 mov	 r9, rcx
  0007c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv77[rsp]
  00081	4c 8b c1	 mov	 r8, rcx
  00084	48 8b d0	 mov	 rdx, rax
  00087	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0008c	e8 00 00 00 00	 call	 ??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@$0A@@?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *><void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
  00091	48 89 44 24 40	 mov	 QWORD PTR tv83[rsp], rax
  00096	eb 09		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00098	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR tv83[rsp], 0
$LN4@make_uniqu:
  000a1	48 8b 54 24 40	 mov	 rdx, QWORD PTR tv83[rsp]
  000a6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000ab	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > ><std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> >,0>
  000b0	90		 npad	 1
  000b1	8b 44 24 28	 mov	 eax, DWORD PTR $T2[rsp]
  000b5	83 c8 01	 or	 eax, 1
  000b8	89 44 24 28	 mov	 DWORD PTR $T2[rsp], eax
  000bc	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 2058 : }

  000c1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c5	5f		 pop	 rdi
  000c6	c3		 ret	 0
  000c7	cc		 int	 3
??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ENDP ; std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv77 = 56
tv83 = 64
__$ReturnUdt$ = 96
<_Args_0>$ = 104
<_Args_1>$ = 112
<_Args_2>$ = 120
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA PROC ; `std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA ENDP ; `std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv77 = 56
tv83 = 64
__$ReturnUdt$ = 96
<_Args_0>$ = 104
<_Args_1>$ = 112
<_Args_2>$ = 120
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA PROC ; `std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA ENDP ; `std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z PROC ; std::forward<RAM_SPEED_THREAD_WAKE *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ENDP ; std::forward<RAM_SPEED_THREAD_WAKE *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z PROC ; std::forward<RAM_SPEED_THREAD *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ENDP ; std::forward<RAM_SPEED_THREAD *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z PROC ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ENDP ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
$T3 = 48
tv68 = 56
__$ReturnUdt$ = 80
_Left$ = 88
_Right$ = 96
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 262  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 263  :         // subtract two durations
; 264  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 265  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

  00028	48 8b 44 24 58	 mov	 rax, QWORD PTR _Left$[rsp]
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  00035	48 8b 44 24 60	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	48 89 44 24 30	 mov	 QWORD PTR $T3[rsp], rax
  00042	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00047	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0004c	48 89 44 24 38	 mov	 QWORD PTR tv68[rsp], rax
  00051	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  00056	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv68[rsp]
  00060	48 2b c8	 sub	 rcx, rax
  00063	48 8b c1	 mov	 rax, rcx
  00066	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0006b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00070	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00075	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  0007a	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 266  :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::thread> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 10	 add	 rax, 16
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z PROC ; std::_Destroy_range<std::allocator<RAM_SPEED_THREAD> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<RAM_SPEED_THREAD> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z PROC ; std::_Destroy_range<std::allocator<double> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z ENDP ; std::_Destroy_range<std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z
_TEXT	SEGMENT
_Result$ = 36
_Source$ = 80
??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z PROC	; std::_Atomic_reinterpret_as<long,unsigned int>, COMDAT

; 215  : _NODISCARD _Integral _Atomic_reinterpret_as(const _Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 216  :     // interprets _Source as the supplied integral type
; 217  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 218  :     _Integral _Result{}; // zero padding bits

  0001e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR _Result$[rsp], 0

; 219  :     _CSTD memcpy(&_Result, _STD addressof(_Source), sizeof(_Source));

  00026	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Source$[rsp]
  0002b	e8 00 00 00 00	 call	 ??$addressof@$$CBI@std@@YAPEBIAEBI@Z ; std::addressof<unsigned int const >
  00030	90		 npad	 1
  00031	41 b8 04 00 00
	00		 mov	 r8d, 4
  00037	48 8b d0	 mov	 rdx, rax
  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Result$[rsp]
  0003f	e8 00 00 00 00	 call	 memcpy
  00044	90		 npad	 1

; 220  :     return _Result;

  00045	8b 44 24 24	 mov	 eax, DWORD PTR _Result$[rsp]

; 221  : }

  00049	8b f8		 mov	 edi, eax
  0004b	48 8b cc	 mov	 rcx, rsp
  0004e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z$rtcFrameData
  00055	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0005a	90		 npad	 1
  0005b	8b c7		 mov	 eax, edi
  0005d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z ENDP	; std::_Atomic_reinterpret_as<long,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z
_TEXT	SEGMENT
_Source$ = 16
??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z PROC ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Source$[rsp]

; 72   : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z ENDP ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z
_TEXT	SEGMENT
_Source$ = 16
??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z PROC ; std::_Atomic_address_as<long const ,std::_Atomic_padded<unsigned int> const >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Source$[rsp]

; 72   : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z ENDP ; std::_Atomic_address_as<long const ,std::_Atomic_padded<unsigned int> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>, COMDAT

; 397  :     void _Construct_n_copies_of_ty(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty2& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 398  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0002e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S16$[rsp]
  00043	e8 00 00 00 00	 call	 ??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
  00048	48 8d 44 24 34	 lea	 rax, QWORD PTR $S16$[rsp]
  0004d	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 399  :         auto& _My_data  = _Mypair._Myval2;

  00052	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 89 44 24 48	 mov	 QWORD PTR _My_data$[rsp], rax

; 400  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005f	4c 8b 44 24 48	 mov	 r8, QWORD PTR _My_data$[rsp]
  00064	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00069	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0006e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00073	90		 npad	 1

; 401  :         if (_Count != 0) {

  00074	48 83 bc 24 b8
	00 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  0007d	74 71		 je	 SHORT $LN2@Construct_

; 402  :             _Buy_nonzero(_Count);

  0007f	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  00087	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008f	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_nonzero

; 403  :             _Tidy_guard<vector> _Guard{this};

  00094	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009c	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], rax

; 404  :             _My_data._Mylast = _Ufill(_My_data._Myfirst, _Count, _Val);

  000a4	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Val$[rsp]
  000ac	44 0f b6 08	 movzx	 r9d, BYTE PTR [rax]
  000b0	4c 8b 84 24 b8
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  000b8	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$[rsp]
  000bd	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000c1	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c9	e8 00 00 00 00	 call	 ?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Ufill
  000ce	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d3	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 405  :             _Guard._Target   = nullptr;

  000d7	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Guard$6[rsp], 0

; 406  :         }

  000e3	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Guard$6[rsp]
  000eb	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >::~_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >
$LN2@Construct_:

; 407  : 
; 408  :         _Proxy._Release();

  000f0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000fa	90		 npad	 1

; 409  :     }

  000fb	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00100	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00105	48 8b cc	 mov	 rcx, rsp
  00108	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcFrameData
  0010f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00114	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0011b	5f		 pop	 rdi
  0011c	c3		 ret	 0
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >::~_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >::~_Tidy_guard<std::vector<std::thread,std::allocator<std::thread> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><std::allocator<std::thread> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@Vthread@std@@@std@@@std@@YAAEBV?$allocator@Vthread@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::thread> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><std::allocator<std::thread> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>, COMDAT

; 397  :     void _Construct_n_copies_of_ty(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty2& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]

; 398  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0002e	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  0003b	48 8b d0	 mov	 rdx, rax
  0003e	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S15$[rsp]
  00043	e8 00 00 00 00	 call	 ??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RAM_SPEED_THREAD>
  00048	48 8d 44 24 34	 lea	 rax, QWORD PTR $S15$[rsp]
  0004d	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 399  :         auto& _My_data  = _Mypair._Myval2;

  00052	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 89 44 24 48	 mov	 QWORD PTR _My_data$[rsp], rax

; 400  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0005f	4c 8b 44 24 48	 mov	 r8, QWORD PTR _My_data$[rsp]
  00064	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00069	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0006e	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00073	90		 npad	 1

; 401  :         if (_Count != 0) {

  00074	48 83 bc 24 b8
	00 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  0007d	74 71		 je	 SHORT $LN2@Construct_

; 402  :             _Buy_nonzero(_Count);

  0007f	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _Count$[rsp]
  00087	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008f	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_nonzero

; 403  :             _Tidy_guard<vector> _Guard{this};

  00094	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009c	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Guard$6[rsp], rax

; 404  :             _My_data._Mylast = _Ufill(_My_data._Myfirst, _Count, _Val);

  000a4	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Val$[rsp]
  000ac	44 0f b6 08	 movzx	 r9d, BYTE PTR [rax]
  000b0	4c 8b 84 24 b8
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  000b8	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$[rsp]
  000bd	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000c1	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c9	e8 00 00 00 00	 call	 ?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Ufill
  000ce	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d3	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 405  :             _Guard._Target   = nullptr;

  000d7	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Guard$6[rsp], 0

; 406  :         }

  000e3	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR _Guard$6[rsp]
  000eb	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >::~_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >
$LN2@Construct_:

; 407  : 
; 408  :         _Proxy._Release();

  000f0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000fa	90		 npad	 1

; 409  :     }

  000fb	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00100	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00105	48 8b cc	 mov	 rcx, rsp
  00108	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcFrameData
  0010f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00114	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  0011b	5f		 pop	 rdi
  0011c	c3		 ret	 0
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >::~_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S15$ = 52
_My_data$ = 72
_Proxy$ = 88
_Guard$6 = 136
this$ = 176
_Count$ = 184
_Val$ = 192
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >::~_Tidy_guard<std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1><std::allocator<RAM_SPEED_THREAD> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAAEBV?$allocator@URAM_SPEED_THREAD@@@0@AEBV10@@Z ; std::forward<std::allocator<RAM_SPEED_THREAD> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1><std::allocator<RAM_SPEED_THREAD> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RAM_SPEED_THREAD>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RAM_SPEED_THREAD>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@N@std@@QEAA@XZ ; std::allocator<double>::allocator<double>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ; std::forward<std::allocator<double> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z PROC ; std::move<std::allocator<double> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ENDP ; std::move<std::allocator<double> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z PROC ; std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ ; std::vector<double,std::allocator<double> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z ; std::vector<double,std::allocator<double> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@N@std@@QEAAPEAN_K@Z ; std::allocator<double>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@N@std@@YA$$QEANAEAN@Z ; std::forward<double>
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@N@std@@YAPEANPEAN@Z ; std::_Unfancy<double>
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z ; std::_Default_allocator_traits<std::allocator<double> >::construct<double,double>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z ; std::vector<double,std::allocator<double> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z ; std::vector<double,std::allocator<double> >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z ; std::vector<double,std::allocator<double> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z ENDP ; std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA PROC ; `std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ; std::allocator<double>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA ENDP ; `std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA PROC ; `std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ; std::allocator<double>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z@4HA ENDP ; `std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z PROC ; std::_Default_allocator_traits<std::allocator<double> >::construct<double,double>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@N@std@@YA$$QEANAEAN@Z ; std::forward<double>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  0004f	f2 0f 11 01	 movsd	 QWORD PTR [rcx], xmm0

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z ENDP ; std::_Default_allocator_traits<std::allocator<double> >::construct<double,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@N@std@@YAPEANPEAN@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@N@std@@YAPEANPEAN@Z PROC			; std::_Unfancy<double>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@N@std@@YAPEANPEAN@Z ENDP			; std::_Unfancy<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z PROC ; std::vector<double,std::allocator<double> >::_Emplace_back_with_unused_capacity<double>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@N@std@@YA$$QEANAEAN@Z ; std::forward<double>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@N@std@@YAPEANPEAN@Z ; std::_Unfancy<double>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@NN@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SAXAEAV?$allocator@N@1@QEAN$$QEAN@Z ; std::_Default_allocator_traits<std::allocator<double> >::construct<double,double>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z ENDP ; std::vector<double,std::allocator<double> >::_Emplace_back_with_unused_capacity<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@N@std@@YA$$QEANAEAN@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@N@std@@YA$$QEANAEAN@Z PROC			; std::forward<double>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@N@std@@YA$$QEANAEAN@Z ENDP			; std::forward<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z PROC ; std::vector<double,std::allocator<double> >::emplace_back<double>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@N@std@@YA$$QEANAEAN@Z ; std::forward<double>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@N@?$vector@NV?$allocator@N@std@@@std@@AEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::_Emplace_back_with_unused_capacity<double>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@N@std@@YA$$QEANAEAN@Z ; std::forward<double>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@N@?$vector@NV?$allocator@N@std@@@std@@QEAAPEANQEAN$$QEAN@Z ; std::vector<double,std::allocator<double> >::_Emplace_reallocate<double>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ENDP ; std::vector<double,std::allocator<double> >::emplace_back<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAN@std@@YA$$QEANAEAN@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAN@std@@YA$$QEANAEAN@Z PROC			; std::move<double &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAN@std@@YA$$QEANAEAN@Z ENDP			; std::move<double &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ PROC ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ENDP ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<double> >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<double> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<double> >::_Vector_val<std::_Simple_types<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ PROC ; std::vector<double,std::allocator<double> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEBAAEBV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ ENDP ; std::vector<double,std::allocator<double> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ PROC ; std::vector<double,std::allocator<double> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAAAEAV?$allocator@N@2@XZ ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ENDP ; std::vector<double,std::allocator<double> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z PROC ; std::vector<double,std::allocator<double> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z ENDP ; std::vector<double,std::allocator<double> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA PROC ; `std::vector<double,std::allocator<double> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA ENDP ; `std::vector<double,std::allocator<double> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA PROC ; `std::vector<double,std::allocator<double> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@NV?$allocator@N@std@@@std@@AEBAXPEAN0@Z@4HA ENDP ; `std::vector<double,std::allocator<double> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ PROC ; std::vector<double,std::allocator<double> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@NV?$allocator@N@std@@@std@@CAXXZ ENDP ; std::vector<double,std::allocator<double> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ PROC	; std::vector<double,std::allocator<double> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ; std::allocator<double>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ENDP	; std::vector<double,std::allocator<double> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z PROC ; std::vector<double,std::allocator<double> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ; std::vector<double,std::allocator<double> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 03	 sar	 rax, 3
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ; std::allocator<double>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e5	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000e9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000f6	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  000fb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00107	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
?_Change_array@?$vector@NV?$allocator@N@std@@@std@@AEAAXQEAN_K1@Z ENDP ; std::vector<double,std::allocator<double> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z PROC ; std::vector<double,std::allocator<double> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ; std::vector<double,std::allocator<double> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@NV?$allocator@N@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<double,std::allocator<double> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z PROC ; std::vector<double,std::allocator<double> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@N@std@@@std@@YAXPEANQEANAEAV?$allocator@N@0@@Z ; std::_Destroy_range<std::allocator<double> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN0@Z ENDP ; std::vector<double,std::allocator<double> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z PROC ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00@Z ENDP ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z ; std::_Uninitialized_move<double *,std::allocator<double> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@NV?$allocator@N@std@@@std@@AEAAXPEAN00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<double,std::allocator<double> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z PROC ; std::vector<double,std::allocator<double> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEANV?$allocator@N@std@@@std@@YAPEANQEAN0PEANAEAV?$allocator@N@0@@Z ; std::_Uninitialized_move<double *,std::allocator<double> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@NV?$allocator@N@std@@@std@@AEAAPEANPEAN00@Z ENDP ; std::vector<double,std::allocator<double> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ PROC ; std::vector<double,std::allocator<double> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ENDP ; std::vector<double,std::allocator<double> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ PROC ; std::vector<double,std::allocator<double> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEBAAEBV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z ; std::_Default_allocator_traits<std::allocator<double> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@NV?$allocator@N@std@@@std@@QEBA_KXZ ENDP ; std::vector<double,std::allocator<double> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z PROC ; std::vector<double,std::allocator<double> >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAN@std@@YA$$QEANAEAN@Z ; std::move<double &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@N@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::emplace_back<double>

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ENDP ; std::vector<double,std::allocator<double> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ PROC	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@NV?$allocator@N@std@@@std@@AEAAXXZ ; std::vector<double,std::allocator<double> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ENDP	; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@N@std@@@std@@YA$$QEAV?$allocator@N@0@AEAV10@@Z ; std::move<std::allocator<double> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@N@std@@$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@N@1@@Z ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><std::allocator<double> >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<double,std::allocator<double> >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<double,std::allocator<double> >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@N@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<double> >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@NV?$allocator@N@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<double,std::allocator<double> >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ PROC	; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@N@std@@V?$_Vector_val@U?$_Simple_types@N@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1>::_Compressed_pair<std::allocator<double>,std::_Vector_val<std::_Simple_types<double> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@NV?$allocator@N@std@@@std@@AEAAAEAV?$allocator@N@2@XZ ; std::vector<double,std::allocator<double> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0N@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@N@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><double>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ENDP	; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<double> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@N@std@@@std@@SA_KAEBV?$allocator@N@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<double> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@N@std@@QEAAPEAN_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@N@std@@QEAAPEAN_K@Z PROC		; std::allocator<double>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@N@std@@QEAAPEAN_K@Z ENDP		; std::allocator<double>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z PROC	; std::allocator<double>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@N@std@@QEAAXQEAN_K@Z ENDP	; std::allocator<double>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@N@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@N@std@@QEAA@XZ PROC			; std::allocator<double>::allocator<double>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@N@std@@QEAA@XZ ENDP			; std::allocator<double>::allocator<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z
_TEXT	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv68 = 88
tv80 = 96
this$ = 128
_Fx$ = 136
<_Ax_0>$ = 144
<_Ax_1>$ = 152
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z PROC ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>, COMDAT

; 53   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) { // construct with _Fx(_Ax...)

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 1c 00 00 00	 mov	 ecx, 28
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 54   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 55   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

  00030	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR <_Ax_1>$[rsp]
  00038	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD_WAKE@@@std@@YA$$QEAPEAURAM_SPEED_THREAD_WAKE@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD_WAKE *>
  0003d	48 89 44 24 50	 mov	 QWORD PTR tv65[rsp], rax
  00042	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR <_Ax_0>$[rsp]
  0004a	e8 00 00 00 00	 call	 ??$forward@PEAURAM_SPEED_THREAD@@@std@@YA$$QEAPEAURAM_SPEED_THREAD@@AEAPEAU1@@Z ; std::forward<RAM_SPEED_THREAD *>
  0004f	48 89 44 24 58	 mov	 QWORD PTR tv68[rsp], rax
  00054	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Fx$[rsp]
  0005c	e8 00 00 00 00	 call	 ??$forward@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@std@@YAA6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZA6AX01@Z@Z ; std::forward<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *)>
  00061	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv65[rsp]
  00066	4c 8b c9	 mov	 r9, rcx
  00069	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv68[rsp]
  0006e	4c 8b c1	 mov	 r8, rcx
  00071	48 8b d0	 mov	 rdx, rax
  00074	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  00079	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU3@PEAU4@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@0@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::make_unique<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,0>
  0007e	90		 npad	 1

; 56   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

  0007f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@$0A@$00$01@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,0,1,2>
  00086	48 89 44 24 48	 mov	 QWORD PTR _Invoker_proc$[rsp], rax

; 57   : 
; 58   : #pragma warning(push)
; 59   : #pragma warning(disable : 5039) // pointer or reference to potentially throwing function passed to
; 60   :                                 // extern C function under -EHc. Undefined behavior may occur
; 61   :                                 // if this function throws an exception. (/Wall)
; 62   :         _Thr._Hnd =

  0008b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 83 c0 08	 add	 rax, 8
  00097	48 89 44 24 60	 mov	 QWORD PTR tv80[rsp], rax
  0009c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000a1	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::get
  000a6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv80[rsp]
  000ab	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000b0	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000b8	4c 8b c8	 mov	 r9, rax
  000bb	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Invoker_proc$[rsp]
  000c0	33 d2		 xor	 edx, edx
  000c2	33 c9		 xor	 ecx, ecx
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__beginthreadex
  000ca	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d2	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 64   : #pragma warning(pop)
; 65   : 
; 66   :         if (_Thr._Hnd) { // ownership transferred to the thread

  000d5	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000dd	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000e1	74 0c		 je	 SHORT $LN2@thread

; 67   :             (void) _Decay_copied.release();

  000e3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000e8	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::release

; 68   :         } else { // failed to start thread

  000ed	eb 1a		 jmp	 SHORT $LN3@thread
$LN2@thread:

; 69   :             _Thr._Id = 0;

  000ef	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f7	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 70   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

  000fe	b9 06 00 00 00	 mov	 ecx, 6
  00103	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
  00108	90		 npad	 1
$LN3@thread:

; 71   :         }
; 72   :     }

  00109	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  0010e	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
  00113	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0011b	48 8b f8	 mov	 rdi, rax
  0011e	48 8b cc	 mov	 rcx, rsp
  00121	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z$rtcFrameData
  00128	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012d	48 8b c7	 mov	 rax, rdi
  00130	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00134	5f		 pop	 rdi
  00135	c3		 ret	 0
$LN6@thread:
??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ENDP ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv68 = 88
tv80 = 96
this$ = 128
_Fx$ = 136
<_Ax_0>$ = 144
<_Ax_1>$ = 152
?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA PROC ; `std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv68 = 88
tv80 = 96
this$ = 128
_Fx$ = 136
<_Ax_0>$ = 144
<_Ax_1>$ = 152
?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA PROC ; `std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@U?$default_delete@V?$tuple@P6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU1@PEAU2@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >::~unique_ptr<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *>,std::default_delete<std::tuple<void (__cdecl*)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 18 00 00 00	 mov	 ecx, 24
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z ; std::allocator<RAM_SPEED_THREAD>::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@CAXXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z ; std::allocator<RAM_SPEED_THREAD>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 6b 44 24 68
	18		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 24
  00093	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a3	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?_Buy_raw@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAXPEAURAM_SPEED_THREAD@@QEAU1@AEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ; std::_Destroy_range<std::allocator<RAM_SPEED_THREAD> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXPEAURAM_SPEED_THREAD@@0@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z
_TEXT	SEGMENT
this$ = 48
_Dest$ = 56
_Count$ = 64
__formal$ = 72
?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Ufill, COMDAT

; 1537 :     pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

$LN3:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1538 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1539 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  00037	4c 8b c0	 mov	 r8, rax
  0003a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0003f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00044	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@YAPEAURAM_SPEED_THREAD@@PEAU1@_KAEAV?$allocator@URAM_SPEED_THREAD@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<RAM_SPEED_THREAD> >

; 1540 :     }

  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
?_Ufill@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAPEAURAM_SPEED_THREAD@@PEAU3@_KU_Value_init_tag@2@@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 99		 cdq
  00044	b9 18 00 00 00	 mov	 ecx, 24
  00049	48 f7 f9	 idiv	 rcx
  0004c	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  00051	73 02		 jae	 SHORT $LN7@operator
  00053	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  0005c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00068	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007d	b9 02 00 00 00	 mov	 ecx, 2
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00088	90		 npad	 1
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN11@operator
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN11@operator:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MC@BNKPIOCD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000c2	33 c0		 xor	 eax, eax
  000c4	85 c0		 test	 eax, eax
  000c6	0f 85 61 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000cc	48 6b 44 24 58
	18		 imul	 rax, QWORD PTR _Pos$[rsp], 24
  000d2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d7	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1459 :     }

  000db	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000df	5f		 pop	 rdi
  000e0	c3		 ret	 0
??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEBAAEBV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAXXZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAAEAV?$allocator@URAM_SPEED_THREAD@@@2@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0URAM_SPEED_THREAD@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RAM_SPEED_THREAD>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Count$ = 72
_Al$ = 80
??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z PROC ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >, COMDAT

; 412  :     explicit vector(_CRT_GUARDOVERFLOW const size_type _Count, const _Alloc& _Al = _Alloc())

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 413  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Count * _Ty(), optional allocator

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Al$[rsp]
  00032	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@URAM_SPEED_THREAD@@@std@@$$V@?$_Compressed_pair@V?$allocator@URAM_SPEED_THREAD@@@std@@V?$_Vector_val@U?$_Simple_types@URAM_SPEED_THREAD@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1>::_Compressed_pair<std::allocator<RAM_SPEED_THREAD>,std::_Vector_val<std::_Simple_types<RAM_SPEED_THREAD> >,1><std::allocator<RAM_SPEED_THREAD> const &>

; 414  :         _Construct_n_copies_of_ty(_Count, _Value_init_tag{});

  0003f	48 8d 44 24 21	 lea	 rax, QWORD PTR $T2[rsp]
  00044	48 8b f8	 mov	 rdi, rax
  00047	33 c0		 xor	 eax, eax
  00049	b9 01 00 00 00	 mov	 ecx, 1
  0004e	f3 aa		 rep stosb
  00050	4c 8d 44 24 21	 lea	 r8, QWORD PTR $T2[rsp]
  00055	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Count$[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	e8 00 00 00 00	 call	 ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Construct_n_copies_of_ty<std::_Value_init_tag>

; 415  :     }

  00064	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ENDP ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 aa aa aa
	aa aa aa aa 0a	 mov	 rax, 768614336404564650	; 0aaaaaaaaaaaaaaaH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@SA_KAEBV?$allocator@URAM_SPEED_THREAD@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<RAM_SPEED_THREAD> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z PROC ; std::allocator<RAM_SPEED_THREAD>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BI@@std@@YA_K_K@Z ; std::_Get_size_of_n<24>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAPEAURAM_SPEED_THREAD@@_K@Z ENDP ; std::allocator<RAM_SPEED_THREAD>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z PROC ; std::allocator<RAM_SPEED_THREAD>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	18		 imul	 rax, QWORD PTR _Count$[rsp], 24
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@URAM_SPEED_THREAD@@@std@@QEAAXQEAURAM_SPEED_THREAD@@_K@Z ENDP ; std::allocator<RAM_SPEED_THREAD>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ PROC	; std::allocator<RAM_SPEED_THREAD>::allocator<RAM_SPEED_THREAD>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ ENDP	; std::allocator<RAM_SPEED_THREAD>::allocator<RAM_SPEED_THREAD>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 04	 sar	 rax, 4
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 6b 44 24 68
	10		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 16
  00093	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a3	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?_Buy_raw@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::thread> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z
_TEXT	SEGMENT
this$ = 48
_Dest$ = 56
_Count$ = 64
__formal$ = 72
?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Ufill, COMDAT

; 1537 :     pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

$LN3:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1538 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1539 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00037	4c 8b c0	 mov	 r8, rax
  0003a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0003f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00044	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@Vthread@std@@@std@@@std@@YAPEAVthread@0@PEAV10@_KAEAV?$allocator@Vthread@std@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<std::thread> >

; 1540 :     }

  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
?_Ufill@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@_KU_Value_init_tag@2@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 c1 f8 04	 sar	 rax, 4
  00046	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  0004b	73 02		 jae	 SHORT $LN7@operator
  0004d	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	90		 npad	 1
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	0f 85 67 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000c6	48 6b 44 24 58
	10		 imul	 rax, QWORD PTR _Pos$[rsp], 16
  000cc	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d1	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1459 :     }

  000d5	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 04	 sar	 rax, 4

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S3$ = 52
$T4 = 68
this$ = 96
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S3$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S3$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Count$ = 72
_Al$ = 80
??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >, COMDAT

; 412  :     explicit vector(_CRT_GUARDOVERFLOW const size_type _Count, const _Alloc& _Al = _Alloc())

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 413  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Count * _Ty(), optional allocator

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Al$[rsp]
  00032	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@Vthread@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@Vthread@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><std::allocator<std::thread> const &>

; 414  :         _Construct_n_copies_of_ty(_Count, _Value_init_tag{});

  0003f	48 8d 44 24 21	 lea	 rax, QWORD PTR $T2[rsp]
  00044	48 8b f8	 mov	 rdi, rax
  00047	33 c0		 xor	 eax, eax
  00049	b9 01 00 00 00	 mov	 ecx, 1
  0004e	f3 aa		 rep stosb
  00050	4c 8d 44 24 21	 lea	 r8, QWORD PTR $T2[rsp]
  00055	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Count$[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	e8 00 00 00 00	 call	 ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Construct_n_copies_of_ty<std::_Value_init_tag>

; 415  :     }

  00064	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z PROC ; std::allocator<std::thread>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ENDP ; std::allocator<std::thread>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z PROC ; std::allocator<std::thread>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ENDP ; std::allocator<std::thread>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@Vthread@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@Vthread@std@@@std@@QEAA@XZ PROC		; std::allocator<std::thread>::allocator<std::thread>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@Vthread@std@@@std@@QEAA@XZ ENDP		; std::allocator<std::thread>::allocator<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\ram_speed.cpp
_TEXT	SEGMENT
tv65 = 0
tv69 = 4
thread_index$ = 32
cpu_info$ = 40
?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z PROC	; ram_speed_thread_id

; 111  : int ram_speed_thread_id(int thread_index, const cpu_info_t& cpu_info) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	57		 push	 rdi
  0000a	48 83 ec 10	 sub	 rsp, 16
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 04 00 00 00	 mov	 ecx, 4
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 112  :     return (thread_index % cpu_info.physical_cores) * (cpu_info.logical_cores / cpu_info.physical_cores) + (int)(thread_index / cpu_info.physical_cores);

  00021	33 d2		 xor	 edx, edx
  00023	8b 44 24 20	 mov	 eax, DWORD PTR thread_index$[rsp]
  00027	48 8b 4c 24 28	 mov	 rcx, QWORD PTR cpu_info$[rsp]
  0002c	f7 71 04	 div	 DWORD PTR [rcx+4]
  0002f	8b c2		 mov	 eax, edx
  00031	89 04 24	 mov	 DWORD PTR tv65[rsp], eax
  00034	33 d2		 xor	 edx, edx
  00036	48 8b 4c 24 28	 mov	 rcx, QWORD PTR cpu_info$[rsp]
  0003b	8b 41 08	 mov	 eax, DWORD PTR [rcx+8]
  0003e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR cpu_info$[rsp]
  00043	f7 71 04	 div	 DWORD PTR [rcx+4]
  00046	8b 0c 24	 mov	 ecx, DWORD PTR tv65[rsp]
  00049	0f af c8	 imul	 ecx, eax
  0004c	8b c1		 mov	 eax, ecx
  0004e	89 44 24 04	 mov	 DWORD PTR tv69[rsp], eax
  00052	33 d2		 xor	 edx, edx
  00054	8b 44 24 20	 mov	 eax, DWORD PTR thread_index$[rsp]
  00058	48 8b 4c 24 28	 mov	 rcx, QWORD PTR cpu_info$[rsp]
  0005d	f7 71 04	 div	 DWORD PTR [rcx+4]
  00060	8b 4c 24 04	 mov	 ecx, DWORD PTR tv69[rsp]
  00064	03 c8		 add	 ecx, eax
  00066	8b c1		 mov	 eax, ecx

; 113  : }

  00068	48 83 c4 10	 add	 rsp, 16
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z ENDP	; ram_speed_thread_id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$min@_J@std@@YAAEB_JAEB_J0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$min@_J@std@@YAAEB_JAEB_J0@Z PROC			; std::min<__int64>, COMDAT

; 4490 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Right < _Left)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4491 :     // return smaller of _Left and _Right
; 4492 :     if (_Right < _Left) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	0f 8d 92 00 00
	00		 jge	 $LN8@min
$LN4@min:

; 4493 :         _STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00039	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  0003e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00043	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00046	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00049	7c 02		 jl	 SHORT $LN7@min
  0004b	eb 6d		 jmp	 SHORT $LN10@min
$LN7@min:
  0004d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00054	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00059	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00060	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00065	45 33 c9	 xor	 r9d, r9d
  00068	41 b8 8d 11 00
	00		 mov	 r8d, 4493		; 0000118dH
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00075	b9 02 00 00 00	 mov	 ecx, 2
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00080	90		 npad	 1
  00081	83 f8 01	 cmp	 eax, 1
  00084	75 03		 jne	 SHORT $LN12@min
  00086	cc		 int	 3
  00087	33 c0		 xor	 eax, eax
$LN12@min:
  00089	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00092	41 b9 8d 11 00
	00		 mov	 r9d, 4493		; 0000118dH
  00098	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b3	90		 npad	 1
  000b4	33 c0		 xor	 eax, eax
  000b6	85 c0		 test	 eax, eax
  000b8	75 93		 jne	 SHORT $LN7@min
$LN10@min:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	0f 85 75 ff ff
	ff		 jne	 $LN4@min

; 4494 :         return _Right;

  000c4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c9	eb 05		 jmp	 SHORT $LN1@min
$LN8@min:

; 4495 :     }
; 4496 : 
; 4497 :     return _Left;

  000cb	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@min:

; 4498 : }

  000d0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??$min@_J@std@@YAAEB_JAEB_J0@Z ENDP			; std::min<__int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 32
_Den_is_one$ = 33
$T1 = 40
$T2 = 48
$T3 = 56
$T4 = 64
__$ReturnUdt$ = 96
_Dur$ = 104
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  00023	c6 44 24 20 01	 mov	 BYTE PTR _Num_is_one$[rsp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00028	c6 44 24 21 00	 mov	 BYTE PTR _Den_is_one$[rsp], 0

; 406  : 
; 407  :         if (_Den_is_one) {

  0002d	33 c0		 xor	 eax, eax
  0002f	85 c0		 test	 eax, eax
  00031	74 58		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  00033	33 c0		 xor	 eax, eax
  00035	83 f8 01	 cmp	 eax, 1
  00038	74 2a		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  0003a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  0003f	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00053	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
  00058	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0005d	e9 8e 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00062	eb 25		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00064	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00069	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0006e	48 89 44 24 30	 mov	 QWORD PTR $T2[rsp], rax
  00073	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0007d	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
  00082	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00087	eb 67		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  00089	eb 65		 jmp	 SHORT $LN3@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  0008b	33 c0		 xor	 eax, eax
  0008d	83 f8 01	 cmp	 eax, 1
  00090	74 31		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  00097	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0009c	48 99		 cdq
  0009e	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  000a3	48 f7 f9	 idiv	 rcx
  000a6	48 89 44 24 38	 mov	 QWORD PTR $T3[rsp], rax
  000ab	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T3[rsp]
  000b0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000b5	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000bf	eb 2f		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000c1	eb 2d		 jmp	 SHORT $LN7@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000c3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Dur$[rsp]
  000c8	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000cd	48 99		 cdq
  000cf	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  000d4	48 f7 f9	 idiv	 rcx
  000d7	48 89 44 24 40	 mov	 QWORD PTR $T4[rsp], rax
  000dc	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  000e1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000e6	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000> >::duration<__int64,std::ratio<1,1000000> ><__int64,void>
  000eb	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN7@duration_c:
$LN3@duration_c:
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  000f0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f4	5f		 pop	 rdi
  000f5	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv66 = 48
__$ReturnUdt$ = 80
_Left$ = 88
_Right$ = 96
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 524  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 525  :         // add time_point to time_point
; 526  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

  00028	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0002d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Right$[rsp]
  00032	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00037	48 89 44 24 30	 mov	 QWORD PTR tv66[rsp], rax
  0003c	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00041	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Left$[rsp]
  00046	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	4c 8b c1	 mov	 r8, rcx
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
  00060	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 527  :     }

  00065	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max@H@std@@YAAEBHAEBH0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$max@H@std@@YAAEBHAEBH0@Z PROC			; std::max<int>, COMDAT

; 4454 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Left < _Right)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4455 :     // return larger of _Left and _Right
; 4456 :     if (_Left < _Right) {

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	0f 8d 90 00 00
	00		 jge	 $LN8@max
$LN4@max:

; 4457 :         _STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00037	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00041	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00043	39 08		 cmp	 DWORD PTR [rax], ecx
  00045	7c 02		 jl	 SHORT $LN7@max
  00047	eb 6d		 jmp	 SHORT $LN10@max
$LN7@max:
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00050	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00061	45 33 c9	 xor	 r9d, r9d
  00064	41 b8 69 11 00
	00		 mov	 r8d, 4457		; 00001169H
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00071	b9 02 00 00 00	 mov	 ecx, 2
  00076	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007c	90		 npad	 1
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN12@max
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN12@max:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 69 11 00
	00		 mov	 r9d, 4457		; 00001169H
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	90		 npad	 1
  000b0	33 c0		 xor	 eax, eax
  000b2	85 c0		 test	 eax, eax
  000b4	75 93		 jne	 SHORT $LN7@max
$LN10@max:
  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 77 ff ff
	ff		 jne	 $LN4@max

; 4458 :         return _Right;

  000c0	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c5	eb 05		 jmp	 SHORT $LN1@max
$LN8@max:

; 4459 :     }
; 4460 : 
; 4461 :     return _Left;

  000c7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@max:

; 4462 : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$max@H@std@@YAAEBHAEBH0@Z ENDP			; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$max@N@std@@YAAEBNAEBN0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$max@N@std@@YAAEBNAEBN0@Z PROC			; std::max<double>, COMDAT

; 4454 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Left < _Right)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4455 :     // return larger of _Left and _Right
; 4456 :     if (_Left < _Right) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  00031	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [rcx]
  00035	0f 86 94 00 00
	00		 jbe	 $LN8@max
$LN4@max:

; 4457 :         _STL_ASSERT(!(_Right < _Left), "invalid comparator");

  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  00040	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00045	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]
  00049	66 0f 2f 01	 comisd	 xmm0, QWORD PTR [rcx]
  0004d	77 02		 ja	 SHORT $LN7@max
  0004f	eb 6d		 jmp	 SHORT $LN10@max
$LN7@max:
  00051	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00058	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00064	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00069	45 33 c9	 xor	 r9d, r9d
  0006c	41 b8 69 11 00
	00		 mov	 r8d, 4457		; 00001169H
  00072	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00079	b9 02 00 00 00	 mov	 ecx, 2
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00084	90		 npad	 1
  00085	83 f8 01	 cmp	 eax, 1
  00088	75 03		 jne	 SHORT $LN12@max
  0008a	cc		 int	 3
  0008b	33 c0		 xor	 eax, eax
$LN12@max:
  0008d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00096	41 b9 69 11 00
	00		 mov	 r9d, 4457		; 00001169H
  0009c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b7	90		 npad	 1
  000b8	33 c0		 xor	 eax, eax
  000ba	85 c0		 test	 eax, eax
  000bc	75 93		 jne	 SHORT $LN7@max
$LN10@max:
  000be	33 c0		 xor	 eax, eax
  000c0	85 c0		 test	 eax, eax
  000c2	0f 85 73 ff ff
	ff		 jne	 $LN4@max

; 4458 :         return _Right;

  000c8	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000cd	eb 05		 jmp	 SHORT $LN1@max
$LN8@max:

; 4459 :     }
; 4460 : 
; 4461 :     return _Left;

  000cf	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@max:

; 4462 : }

  000d4	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d8	5f		 pop	 rdi
  000d9	c3		 ret	 0
??$max@N@std@@YAAEBNAEBN0@Z ENDP			; std::max<double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\ram_speed.cpp
_TEXT	SEGMENT
TEST_COUNT$ = 32
check_size_bytes$ = 36
test_kilo_bytes$ = 40
warmup_kilo_bytes$ = 44
ptr$ = 48
i$7 = 56
count_n$ = 60
avx$ = 64
result$ = 88
ram_test$ = 136
i$8 = 144
start$9 = 168
fin$10 = 200
time_min$ = 232
i$11 = 244
$T12 = 256
$T13 = 264
$T14 = 272
$T15 = 276
$T16 = 280
$T17 = 284
$T18 = 288
$T19 = 296
$T20 = 304
$T21 = 308
tv69 = 312
tv74 = 320
tv144 = 328
tv291 = 332
__$ArrayPad$ = 336
thread_prm$ = 368
thread_wk$ = 376
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z PROC ; ram_speed_func

; 72   : void ram_speed_func(RAM_SPEED_THREAD *thread_prm, RAM_SPEED_THREAD_WAKE *thread_wk) {

$LN18:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 60 01
	00 00		 sub	 rsp, 352		; 00000160H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR [rsp+368]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 73   :     const int TEST_COUNT = 4;

  0003b	c7 44 24 20 04
	00 00 00	 mov	 DWORD PTR TEST_COUNT$[rsp], 4

; 74   :     uint32_t check_size_bytes = (thread_prm->check_size_bytes + 255) & ~255;

  00043	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR thread_prm$[rsp]
  0004b	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  0004e	05 ff 00 00 00	 add	 eax, 255		; 000000ffH
  00053	25 00 ff ff ff	 and	 eax, -256		; ffffff00H
  00058	89 44 24 24	 mov	 DWORD PTR check_size_bytes$[rsp], eax

; 75   :     const uint32_t test_kilo_bytes   = (uint32_t)(((thread_prm->mode == RAM_SPEED_MODE_READ) ? 1 : 0.5) * thread_prm->physical_cores * 1024 * 1024 / (std::max)(1.0, std::log2(check_size_bytes / 1024.0)) + 0.5);

  0005c	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR thread_prm$[rsp]
  00064	83 38 00	 cmp	 DWORD PTR [rax], 0
  00067	75 13		 jne	 SHORT $LN14@ram_speed_
  00069	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00071	f2 0f 11 84 24
	38 01 00 00	 movsd	 QWORD PTR tv69[rsp], xmm0
  0007a	eb 11		 jmp	 SHORT $LN15@ram_speed_
$LN14@ram_speed_:
  0007c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00084	f2 0f 11 84 24
	38 01 00 00	 movsd	 QWORD PTR tv69[rsp], xmm0
$LN15@ram_speed_:
  0008d	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  00091	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00096	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4090000000000000
  0009e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_log2
  000a4	f2 0f 11 84 24
	00 01 00 00	 movsd	 QWORD PTR $T12[rsp], xmm0
  000ad	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000b5	f2 0f 11 84 24
	08 01 00 00	 movsd	 QWORD PTR $T13[rsp], xmm0
  000be	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR thread_prm$[rsp]
  000c6	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  000c9	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  000ce	f2 0f 10 8c 24
	38 01 00 00	 movsd	 xmm1, QWORD PTR tv69[rsp]
  000d7	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  000db	0f 28 c1	 movaps	 xmm0, xmm1
  000de	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4090000000000000
  000e6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4090000000000000
  000ee	f2 0f 11 84 24
	40 01 00 00	 movsd	 QWORD PTR tv74[rsp], xmm0
  000f7	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  000ff	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T13[rsp]
  00107	e8 00 00 00 00	 call	 ??$max@N@std@@YAAEBNAEBN0@Z ; std::max<double>
  0010c	f2 0f 10 84 24
	40 01 00 00	 movsd	 xmm0, QWORD PTR tv74[rsp]
  00115	f2 0f 5e 00	 divsd	 xmm0, QWORD PTR [rax]
  00119	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00121	f2 48 0f 2c c0	 cvttsd2si rax, xmm0
  00126	89 44 24 28	 mov	 DWORD PTR test_kilo_bytes$[rsp], eax

; 76   :     const uint32_t warmup_kilo_bytes = test_kilo_bytes * 2;

  0012a	8b 44 24 28	 mov	 eax, DWORD PTR test_kilo_bytes$[rsp]
  0012e	d1 e0		 shl	 eax, 1
  00130	89 44 24 2c	 mov	 DWORD PTR warmup_kilo_bytes$[rsp], eax

; 77   :     uint8_t *ptr = (uint8_t *)_aligned_malloc(check_size_bytes, 64);

  00134	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  00138	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0013d	8b c8		 mov	 ecx, eax
  0013f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  00145	48 89 44 24 30	 mov	 QWORD PTR ptr$[rsp], rax

; 78   :     for (uint32_t i = 0; i < check_size_bytes; i++)

  0014a	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR i$7[rsp], 0
  00152	eb 0a		 jmp	 SHORT $LN4@ram_speed_
$LN2@ram_speed_:
  00154	8b 44 24 38	 mov	 eax, DWORD PTR i$7[rsp]
  00158	ff c0		 inc	 eax
  0015a	89 44 24 38	 mov	 DWORD PTR i$7[rsp], eax
$LN4@ram_speed_:
  0015e	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  00162	39 44 24 38	 cmp	 DWORD PTR i$7[rsp], eax
  00166	73 0f		 jae	 SHORT $LN3@ram_speed_

; 79   :         ptr[i] = 0;

  00168	8b 44 24 38	 mov	 eax, DWORD PTR i$7[rsp]
  0016c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  00171	c6 04 01 00	 mov	 BYTE PTR [rcx+rax], 0
  00175	eb dd		 jmp	 SHORT $LN2@ram_speed_
$LN3@ram_speed_:

; 80   :     uint32_t count_n = std::max(1, (int)(test_kilo_bytes * 1024.0 / check_size_bytes + 0.5));

  00177	8b 44 24 28	 mov	 eax, DWORD PTR test_kilo_bytes$[rsp]
  0017b	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00180	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4090000000000000
  00188	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  0018c	f2 48 0f 2a c8	 cvtsi2sd xmm1, rax
  00191	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00195	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0019d	f2 0f 2c c0	 cvttsd2si eax, xmm0
  001a1	89 84 24 10 01
	00 00		 mov	 DWORD PTR $T14[rsp], eax
  001a8	c7 84 24 14 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T15[rsp], 1
  001b3	48 8d 94 24 10
	01 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  001bb	48 8d 8c 24 14
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  001c3	e8 00 00 00 00	 call	 ??$max@H@std@@YAAEBHAEBH0@Z ; std::max<int>
  001c8	8b 00		 mov	 eax, DWORD PTR [rax]
  001ca	89 44 24 3c	 mov	 DWORD PTR count_n$[rsp], eax

; 81   :     int avx = 0 != (get_availableSIMD() & AVX);

  001ce	e8 00 00 00 00	 call	 ?get_availableSIMD@@YAIXZ ; get_availableSIMD
  001d3	83 e0 40	 and	 eax, 64			; 00000040H
  001d6	85 c0		 test	 eax, eax
  001d8	74 0d		 je	 SHORT $LN16@ram_speed_
  001da	c7 84 24 48 01
	00 00 01 00 00
	00		 mov	 DWORD PTR tv144[rsp], 1
  001e5	eb 0b		 jmp	 SHORT $LN17@ram_speed_
$LN16@ram_speed_:
  001e7	c7 84 24 48 01
	00 00 00 00 00
	00		 mov	 DWORD PTR tv144[rsp], 0
$LN17@ram_speed_:
  001f2	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR tv144[rsp]
  001f9	89 44 24 40	 mov	 DWORD PTR avx$[rsp], eax

; 82   :     int64_t result[TEST_COUNT];
; 83   :     static const func_ram_test RAM_TEST_LIST[][2] = {
; 84   :         {read_sse, write_sse},
; 85   :         {read_avx, write_avx},
; 86   :     };
; 87   : 
; 88   :     const func_ram_test ram_test = RAM_TEST_LIST[avx][thread_prm->mode];

  001fd	48 63 44 24 40	 movsxd	 rax, DWORD PTR avx$[rsp]
  00202	48 6b c0 10	 imul	 rax, rax, 16
  00206	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?RAM_TEST_LIST@?1??ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z@4QAY01Q6AXPEAEII@ZA
  0020d	48 03 c8	 add	 rcx, rax
  00210	48 8b c1	 mov	 rax, rcx
  00213	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR thread_prm$[rsp]
  0021b	48 63 09	 movsxd	 rcx, DWORD PTR [rcx]
  0021e	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  00222	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR ram_test$[rsp], rax

; 89   : 
; 90   :     thread_wk->check_bit |= 1 << thread_prm->thread_id;

  0022a	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR thread_prm$[rsp]
  00232	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00235	b9 01 00 00 00	 mov	 ecx, 1
  0023a	89 8c 24 4c 01
	00 00		 mov	 DWORD PTR tv291[rsp], ecx
  00241	0f b6 c8	 movzx	 ecx, al
  00244	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR tv291[rsp]
  0024b	d3 e0		 shl	 eax, cl
  0024d	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR thread_wk$[rsp]
  00255	8b d0		 mov	 edx, eax
  00257	e8 00 00 00 00	 call	 ??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z ; std::_Atomic_integral_facade<unsigned int>::operator|=
$LN5@ram_speed_:

; 91   :     while (thread_wk->check_bit.load() != thread_wk->check_bit_all) {

  0025c	48 8b 84 24 78
	01 00 00	 mov	 rax, QWORD PTR thread_wk$[rsp]
  00264	48 8b c8	 mov	 rcx, rax
  00267	e8 00 00 00 00	 call	 ?load@?$_Atomic_storage@I$03@std@@QEBAIXZ ; std::_Atomic_storage<unsigned int,4>::load
  0026c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR thread_wk$[rsp]
  00274	3b 41 04	 cmp	 eax, DWORD PTR [rcx+4]
  00277	74 69		 je	 SHORT $LN6@ram_speed_

; 92   :         ram_test(ptr, check_size_bytes, std::max(1, (int)(warmup_kilo_bytes * 1024.0 / check_size_bytes + 0.5)));

  00279	8b 44 24 2c	 mov	 eax, DWORD PTR warmup_kilo_bytes$[rsp]
  0027d	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00282	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4090000000000000
  0028a	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  0028e	f2 48 0f 2a c8	 cvtsi2sd xmm1, rax
  00293	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00297	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0029f	f2 0f 2c c0	 cvttsd2si eax, xmm0
  002a3	89 84 24 18 01
	00 00		 mov	 DWORD PTR $T16[rsp], eax
  002aa	c7 84 24 1c 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T17[rsp], 1
  002b5	48 8d 94 24 18
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  002bd	48 8d 8c 24 1c
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  002c5	e8 00 00 00 00	 call	 ??$max@H@std@@YAAEBHAEBH0@Z ; std::max<int>
  002ca	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  002cd	8b 54 24 24	 mov	 edx, DWORD PTR check_size_bytes$[rsp]
  002d1	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  002d6	ff 94 24 88 00
	00 00		 call	 QWORD PTR ram_test$[rsp]

; 93   :     }

  002dd	e9 7a ff ff ff	 jmp	 $LN5@ram_speed_
$LN6@ram_speed_:

; 94   : 
; 95   :     for (int i = 0; i < TEST_COUNT; i++) {

  002e2	c7 84 24 90 00
	00 00 00 00 00
	00		 mov	 DWORD PTR i$8[rsp], 0
  002ed	eb 10		 jmp	 SHORT $LN9@ram_speed_
$LN7@ram_speed_:
  002ef	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  002f6	ff c0		 inc	 eax
  002f8	89 84 24 90 00
	00 00		 mov	 DWORD PTR i$8[rsp], eax
$LN9@ram_speed_:
  002ff	83 bc 24 90 00
	00 00 04	 cmp	 DWORD PTR i$8[rsp], 4
  00307	7d 76		 jge	 SHORT $LN8@ram_speed_

; 96   :         auto start = std::chrono::high_resolution_clock::now();

  00309	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR start$9[rsp]
  00311	e8 00 00 00 00	 call	 ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 97   :         ram_test(ptr, check_size_bytes, count_n);

  00316	44 8b 44 24 3c	 mov	 r8d, DWORD PTR count_n$[rsp]
  0031b	8b 54 24 24	 mov	 edx, DWORD PTR check_size_bytes$[rsp]
  0031f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  00324	ff 94 24 88 00
	00 00		 call	 QWORD PTR ram_test$[rsp]

; 98   :         auto fin = std::chrono::high_resolution_clock::now();

  0032b	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR fin$10[rsp]
  00333	e8 00 00 00 00	 call	 ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 99   :         result[i] = std::chrono::duration_cast<std::chrono::microseconds>(fin - start).count();

  00338	4c 8d 84 24 a8
	00 00 00	 lea	 r8, QWORD PTR start$9[rsp]
  00340	48 8d 94 24 c8
	00 00 00	 lea	 rdx, QWORD PTR fin$10[rsp]
  00348	48 8d 8c 24 20
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  00350	e8 00 00 00 00	 call	 ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  00355	48 8b d0	 mov	 rdx, rax
  00358	48 8d 8c 24 28
	01 00 00	 lea	 rcx, QWORD PTR $T19[rsp]
  00360	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0PECEA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000> >,__int64,std::ratio<1,1000000000>,void>
  00365	48 8b c8	 mov	 rcx, rax
  00368	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
  0036d	48 63 8c 24 90
	00 00 00	 movsxd	 rcx, DWORD PTR i$8[rsp]
  00375	48 89 44 cc 58	 mov	 QWORD PTR result$[rsp+rcx*8], rax

; 100  :     }

  0037a	e9 70 ff ff ff	 jmp	 $LN7@ram_speed_
$LN8@ram_speed_:

; 101  :     ram_test(ptr, check_size_bytes, std::max(1, (int)(warmup_kilo_bytes * 1024.0 / check_size_bytes + 0.5)));

  0037f	8b 44 24 2c	 mov	 eax, DWORD PTR warmup_kilo_bytes$[rsp]
  00383	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00388	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4090000000000000
  00390	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  00394	f2 48 0f 2a c8	 cvtsi2sd xmm1, rax
  00399	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0039d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  003a5	f2 0f 2c c0	 cvttsd2si eax, xmm0
  003a9	89 84 24 30 01
	00 00		 mov	 DWORD PTR $T20[rsp], eax
  003b0	c7 84 24 34 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T21[rsp], 1
  003bb	48 8d 94 24 30
	01 00 00	 lea	 rdx, QWORD PTR $T20[rsp]
  003c3	48 8d 8c 24 34
	01 00 00	 lea	 rcx, QWORD PTR $T21[rsp]
  003cb	e8 00 00 00 00	 call	 ??$max@H@std@@YAAEBHAEBH0@Z ; std::max<int>
  003d0	44 8b 00	 mov	 r8d, DWORD PTR [rax]
  003d3	8b 54 24 24	 mov	 edx, DWORD PTR check_size_bytes$[rsp]
  003d7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  003dc	ff 94 24 88 00
	00 00		 call	 QWORD PTR ram_test$[rsp]

; 102  :     _aligned_free(ptr);

  003e3	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  003e8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_free

; 103  : 
; 104  :     int64_t time_min = LLONG_MAX;

  003ee	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  003f8	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR time_min$[rsp], rax

; 105  :     for (int i = 0; i < TEST_COUNT; i++)

  00400	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR i$11[rsp], 0
  0040b	eb 10		 jmp	 SHORT $LN12@ram_speed_
$LN10@ram_speed_:
  0040d	8b 84 24 f4 00
	00 00		 mov	 eax, DWORD PTR i$11[rsp]
  00414	ff c0		 inc	 eax
  00416	89 84 24 f4 00
	00 00		 mov	 DWORD PTR i$11[rsp], eax
$LN12@ram_speed_:
  0041d	83 bc 24 f4 00
	00 00 04	 cmp	 DWORD PTR i$11[rsp], 4
  00425	7d 2a		 jge	 SHORT $LN11@ram_speed_

; 106  :         time_min = (std::min)(time_min, result[i]);

  00427	48 63 84 24 f4
	00 00 00	 movsxd	 rax, DWORD PTR i$11[rsp]
  0042f	48 8d 44 c4 58	 lea	 rax, QWORD PTR result$[rsp+rax*8]
  00434	48 8b d0	 mov	 rdx, rax
  00437	48 8d 8c 24 e8
	00 00 00	 lea	 rcx, QWORD PTR time_min$[rsp]
  0043f	e8 00 00 00 00	 call	 ??$min@_J@std@@YAAEB_JAEB_J0@Z ; std::min<__int64>
  00444	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00447	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR time_min$[rsp], rax
  0044f	eb bc		 jmp	 SHORT $LN10@ram_speed_
$LN11@ram_speed_:

; 107  : 
; 108  :     thread_prm->megabytes_per_sec = (check_size_bytes * (double)count_n / (1024.0 * 1024.0)) / (time_min * 0.000001);

  00451	8b 44 24 24	 mov	 eax, DWORD PTR check_size_bytes$[rsp]
  00455	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  0045a	8b 44 24 3c	 mov	 eax, DWORD PTR count_n$[rsp]
  0045e	f2 48 0f 2a c8	 cvtsi2sd xmm1, rax
  00463	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00467	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4130000000000000
  0046f	f2 48 0f 2a 8c
	24 e8 00 00 00	 cvtsi2sd xmm1, QWORD PTR time_min$[rsp]
  00479	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3eb0c6f7a0b5ed8d
  00481	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00485	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR thread_prm$[rsp]
  0048d	f2 0f 11 40 10	 movsd	 QWORD PTR [rax+16], xmm0

; 109  : }

  00492	48 8b cc	 mov	 rcx, rsp
  00495	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$rtcFrameData
  0049c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  004a1	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  004a9	48 33 cc	 xor	 rcx, rsp
  004ac	e8 00 00 00 00	 call	 __security_check_cookie
  004b1	48 81 c4 60 01
	00 00		 add	 rsp, 352		; 00000160H
  004b8	5f		 pop	 rdi
  004b9	c3		 ret	 0
?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z ENDP ; ram_speed_func
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??4?$atomic@I@std@@QEAAII@Z
_TEXT	SEGMENT
this$ = 48
_Value$ = 56
??4?$atomic@I@std@@QEAAII@Z PROC			; std::atomic<unsigned int>::operator=, COMDAT

; 1508 :     _Ty operator=(const _Ty _Value) noexcept {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1509 :         this->store(_Value);

  00022	8b 54 24 38	 mov	 edx, DWORD PTR _Value$[rsp]
  00026	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002b	e8 00 00 00 00	 call	 ?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z ; std::_Atomic_storage<unsigned int,4>::store

; 1510 :         return _Value;

  00030	8b 44 24 38	 mov	 eax, DWORD PTR _Value$[rsp]

; 1511 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??4?$atomic@I@std@@QEAAII@Z ENDP			; std::atomic<unsigned int>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z
_TEXT	SEGMENT
this$ = 48
_Operand$ = 56
??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z PROC	; std::_Atomic_integral_facade<unsigned int>::operator|=, COMDAT

; 1252 :     _Ty operator|=(const _Ty _Operand) noexcept {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1253 :         return static_cast<_Ty>(this->_Base::fetch_or(_Operand) | _Operand);

  00022	41 b8 05 00 00
	00		 mov	 r8d, 5
  00028	8b 54 24 38	 mov	 edx, DWORD PTR _Operand$[rsp]
  0002c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z ; std::_Atomic_integral<unsigned int,4>::fetch_or
  00036	0b 44 24 38	 or	 eax, DWORD PTR _Operand$[rsp]

; 1254 :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??_5?$_Atomic_integral_facade@I@std@@QEAAII@Z ENDP	; std::_Atomic_integral_facade<unsigned int>::operator|=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z
_TEXT	SEGMENT
_Result$ = 32
tv75 = 40
this$ = 64
_Operand$ = 72
_Order$ = 80
?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z PROC ; std::_Atomic_integral<unsigned int,4>::fetch_or, COMDAT

; 994  :     _Ty fetch_or(const _Ty _Operand, const memory_order _Order = memory_order_seq_cst) noexcept {

$LN4:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 995  :         long _Result;
; 996  :         _ATOMIC_CHOOSE_INTRINSIC(

  00027	8b 4c 24 50	 mov	 ecx, DWORD PTR _Order$[rsp]
  0002b	e8 00 00 00 00	 call	 ?_Check_memory_order@std@@YAXW4memory_order@1@@Z ; std::_Check_memory_order
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
  0003a	48 89 44 24 28	 mov	 QWORD PTR tv75[rsp], rax
  0003f	48 8b 44 24 28	 mov	 rax, QWORD PTR tv75[rsp]
  00044	0f 0d 08	 prefetchw BYTE PTR [rax]
  00047	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv75[rsp]
  0004c	8b 01		 mov	 eax, DWORD PTR [rcx]
$LL3@fetch_or:
  0004e	8b d0		 mov	 edx, eax
  00050	0b 54 24 48	 or	 edx, DWORD PTR _Operand$[rsp]
  00054	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv75[rsp]
  00059	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv75[rsp]
  0005e	f0 0f b1 11	 lock cmpxchg DWORD PTR [rcx], edx
  00062	75 ea		 jne	 SHORT $LL3@fetch_or
  00064	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 997  :             _Order, _Result, _InterlockedOr, _Atomic_address_as<long>(this->_Storage), static_cast<long>(_Operand));
; 998  :         return static_cast<_Ty>(_Result);

  00068	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 999  :     }

  0006c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
?fetch_or@?$_Atomic_integral@I$03@std@@QEAAIIW4memory_order@2@@Z ENDP ; std::_Atomic_integral<unsigned int,4>::fetch_or
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?load@?$_Atomic_storage@I$03@std@@QEBAIXZ
_TEXT	SEGMENT
_As_bytes$ = 32
this$ = 64
?load@?$_Atomic_storage@I$03@std@@QEBAIXZ PROC		; std::_Atomic_storage<unsigned int,4>::load, COMDAT

; 584  :     _NODISCARD _Ty load() const noexcept { // load with sequential consistency

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 585  :         auto _As_bytes = _ISO_VOLATILE_LOAD32(_Storage);

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@I@std@@@std@@YAPEDJAEBU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long const ,std::_Atomic_padded<unsigned int> const >
  0002b	8b 00		 mov	 eax, DWORD PTR [rax]
  0002d	89 44 24 20	 mov	 DWORD PTR _As_bytes$[rsp], eax

; 586  :         _Compiler_or_memory_barrier();
; 587  :         return reinterpret_cast<_Ty&>(_As_bytes);

  00031	8b 44 24 20	 mov	 eax, DWORD PTR _As_bytes$[rsp]

; 588  :     }

  00035	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?load@?$_Atomic_storage@I$03@std@@QEBAIXZ ENDP		; std::_Atomic_storage<unsigned int,4>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z
_TEXT	SEGMENT
tv65 = 32
this$ = 64
_Value$ = 72
?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z PROC	; std::_Atomic_storage<unsigned int,4>::store, COMDAT

; 552  :     void store(const _Ty _Value) noexcept { // store with sequential consistency

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 553  : #if defined(_M_ARM) || defined(_M_ARM64)
; 554  :         _Memory_barrier();
; 555  :         _ISO_VOLATILE_STORE32(_Storage, _Atomic_reinterpret_as<int>(_Value));
; 556  :         _Memory_barrier();
; 557  : #else // ^^^ ARM32/ARM64 hardware / x86/x64 hardware vvv
; 558  :         (void) _InterlockedExchange(_Atomic_address_as<long>(_Storage), _Atomic_reinterpret_as<long>(_Value));

  00022	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Value$[rsp]
  00027	e8 00 00 00 00	 call	 ??$_Atomic_reinterpret_as@JI@std@@YAJAEBI@Z ; std::_Atomic_reinterpret_as<long,unsigned int>
  0002c	89 44 24 20	 mov	 DWORD PTR tv65[rsp], eax
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$_Atomic_address_as@JU?$_Atomic_padded@I@std@@@std@@YAPECJAEAU?$_Atomic_padded@I@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<unsigned int> >
  0003a	8b 4c 24 20	 mov	 ecx, DWORD PTR tv65[rsp]
  0003e	87 08		 xchg	 DWORD PTR [rax], ecx

; 559  : #endif // hardware
; 560  :     }

  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
?store@?$_Atomic_storage@I$03@std@@QEAAXI@Z ENDP	; std::_Atomic_storage<unsigned int,4>::store
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\ram_speed.cpp
_TEXT	SEGMENT
cpu_info$ = 48
results$ = 184
ith$5 = 228
smt$6 = 232
i_smt$7 = 236
$T8 = 248
$T9 = 256
$T10 = 264
__$ArrayPad$ = 272
__$ReturnUdt$ = 304
check_size_kilobytes$ = 312
mode$ = 320
logical_core$ = 328
?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z PROC ; ram_speed_mt_list

; 150  : std::vector<double> ram_speed_mt_list(int check_size_kilobytes, int mode, bool logical_core) {

$LN13:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 20 01
	00 00		 sub	 rsp, 288		; 00000120H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR [rsp+304]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 10
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  00044	c7 84 24 08 01
	00 00 00 00 00
	00		 mov	 DWORD PTR $T10[rsp], 0

; 151  :     cpu_info_t cpu_info;
; 152  :     get_cpu_info(&cpu_info);

  0004f	48 8d 4c 24 30	 lea	 rcx, QWORD PTR cpu_info$[rsp]
  00054	e8 00 00 00 00	 call	 ?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z ; get_cpu_info

; 153  : 
; 154  :     std::vector<double> results;

  00059	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR results$[rsp]
  00061	e8 00 00 00 00	 call	 ??0?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
  00066	90		 npad	 1

; 155  :     for (uint32_t ith = 1; ith <= cpu_info.physical_cores; ith++) {

  00067	c7 84 24 e4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ith$5[rsp], 1
  00072	eb 10		 jmp	 SHORT $LN4@ram_speed_
$LN2@ram_speed_:
  00074	8b 84 24 e4 00
	00 00		 mov	 eax, DWORD PTR ith$5[rsp]
  0007b	ff c0		 inc	 eax
  0007d	89 84 24 e4 00
	00 00		 mov	 DWORD PTR ith$5[rsp], eax
$LN4@ram_speed_:
  00084	8b 44 24 34	 mov	 eax, DWORD PTR cpu_info$[rsp+4]
  00088	39 84 24 e4 00
	00 00		 cmp	 DWORD PTR ith$5[rsp], eax
  0008f	77 3b		 ja	 SHORT $LN3@ram_speed_

; 156  :         results.push_back(ram_speed_mt(check_size_kilobytes, mode, ith));

  00091	44 8b 84 24 e4
	00 00 00	 mov	 r8d, DWORD PTR ith$5[rsp]
  00099	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR mode$[rsp]
  000a0	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR check_size_kilobytes$[rsp]
  000a7	e8 00 00 00 00	 call	 ?ram_speed_mt@@YANHHH@Z	; ram_speed_mt
  000ac	f2 0f 11 84 24
	f8 00 00 00	 movsd	 QWORD PTR $T8[rsp], xmm0
  000b5	48 8d 94 24 f8
	00 00 00	 lea	 rdx, QWORD PTR $T8[rsp]
  000bd	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR results$[rsp]
  000c5	e8 00 00 00 00	 call	 ?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::push_back

; 157  :     }

  000ca	eb a8		 jmp	 SHORT $LN2@ram_speed_
$LN3@ram_speed_:

; 158  :     if (logical_core && cpu_info.logical_cores != cpu_info.physical_cores) {

  000cc	0f b6 84 24 48
	01 00 00	 movzx	 eax, BYTE PTR logical_core$[rsp]
  000d4	85 c0		 test	 eax, eax
  000d6	0f 84 8e 00 00
	00		 je	 $LN8@ram_speed_
  000dc	8b 44 24 34	 mov	 eax, DWORD PTR cpu_info$[rsp+4]
  000e0	39 44 24 38	 cmp	 DWORD PTR cpu_info$[rsp+8], eax
  000e4	0f 84 80 00 00
	00		 je	 $LN8@ram_speed_

; 159  :         int smt = cpu_info.logical_cores / cpu_info.physical_cores;

  000ea	33 d2		 xor	 edx, edx
  000ec	8b 44 24 38	 mov	 eax, DWORD PTR cpu_info$[rsp+8]
  000f0	f7 74 24 34	 div	 DWORD PTR cpu_info$[rsp+4]
  000f4	89 84 24 e8 00
	00 00		 mov	 DWORD PTR smt$6[rsp], eax

; 160  :         for (int i_smt = 2; i_smt <= smt; i_smt++) {

  000fb	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR i_smt$7[rsp], 2
  00106	eb 10		 jmp	 SHORT $LN7@ram_speed_
$LN5@ram_speed_:
  00108	8b 84 24 ec 00
	00 00		 mov	 eax, DWORD PTR i_smt$7[rsp]
  0010f	ff c0		 inc	 eax
  00111	89 84 24 ec 00
	00 00		 mov	 DWORD PTR i_smt$7[rsp], eax
$LN7@ram_speed_:
  00118	8b 84 24 e8 00
	00 00		 mov	 eax, DWORD PTR smt$6[rsp]
  0011f	39 84 24 ec 00
	00 00		 cmp	 DWORD PTR i_smt$7[rsp], eax
  00126	7f 42		 jg	 SHORT $LN8@ram_speed_

; 161  :             results.push_back(ram_speed_mt(check_size_kilobytes, mode, cpu_info.physical_cores * i_smt));

  00128	8b 44 24 34	 mov	 eax, DWORD PTR cpu_info$[rsp+4]
  0012c	0f af 84 24 ec
	00 00 00	 imul	 eax, DWORD PTR i_smt$7[rsp]
  00134	44 8b c0	 mov	 r8d, eax
  00137	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR mode$[rsp]
  0013e	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR check_size_kilobytes$[rsp]
  00145	e8 00 00 00 00	 call	 ?ram_speed_mt@@YANHHH@Z	; ram_speed_mt
  0014a	f2 0f 11 84 24
	00 01 00 00	 movsd	 QWORD PTR $T9[rsp], xmm0
  00153	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T9[rsp]
  0015b	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR results$[rsp]
  00163	e8 00 00 00 00	 call	 ?push_back@?$vector@NV?$allocator@N@std@@@std@@QEAAX$$QEAN@Z ; std::vector<double,std::allocator<double> >::push_back

; 162  :         }

  00168	eb 9e		 jmp	 SHORT $LN5@ram_speed_
$LN8@ram_speed_:

; 163  :     }
; 164  :     return results;

  0016a	48 8d 94 24 b8
	00 00 00	 lea	 rdx, QWORD PTR results$[rsp]
  00172	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0017a	e8 00 00 00 00	 call	 ??0?$vector@NV?$allocator@N@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<double,std::allocator<double> >::vector<double,std::allocator<double> >
  0017f	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR $T10[rsp]
  00186	83 c8 01	 or	 eax, 1
  00189	89 84 24 08 01
	00 00		 mov	 DWORD PTR $T10[rsp], eax
  00190	48 8d 8c 24 b8
	00 00 00	 lea	 rcx, QWORD PTR results$[rsp]
  00198	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0019d	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 165  : }

  001a5	48 8b f8	 mov	 rdi, rax
  001a8	48 8b cc	 mov	 rcx, rsp
  001ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z$rtcFrameData
  001b2	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001b7	48 8b c7	 mov	 rax, rdi
  001ba	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001c2	48 33 cc	 xor	 rcx, rsp
  001c5	e8 00 00 00 00	 call	 __security_check_cookie
  001ca	48 81 c4 20 01
	00 00		 add	 rsp, 288		; 00000120H
  001d1	5f		 pop	 rdi
  001d2	c3		 ret	 0
  001d3	cc		 int	 3
?ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z ENDP ; ram_speed_mt_list
_TEXT	ENDS
text$x	SEGMENT
cpu_info$ = 48
results$ = 184
ith$5 = 228
smt$6 = 232
i_smt$7 = 236
$T8 = 248
$T9 = 256
$T10 = 264
__$ArrayPad$ = 272
__$ReturnUdt$ = 304
check_size_kilobytes$ = 312
mode$ = 320
logical_core$ = 328
?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA PROC ; `ram_speed_mt_list'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR results$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA ENDP ; `ram_speed_mt_list'::`1'::dtor$0
cpu_info$ = 48
results$ = 184
ith$5 = 228
smt$6 = 232
i_smt$7 = 236
$T8 = 248
$T9 = 256
$T10 = 264
__$ArrayPad$ = 272
__$ReturnUdt$ = 304
check_size_kilobytes$ = 312
mode$ = 320
logical_core$ = 328
?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA PROC ; `ram_speed_mt_list'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	8b 85 08 01 00
	00		 mov	 eax, DWORD PTR $T10[rbp]
  0003f	83 e0 01	 and	 eax, 1
  00042	85 c0		 test	 eax, eax
  00044	74 13		 je	 SHORT $LN12@dtor$1
  00046	83 a5 08 01 00
	00 fe		 and	 DWORD PTR $T10[rbp], -2
  0004d	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00054	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
$LN12@dtor$1:
  00059	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA ENDP ; `ram_speed_mt_list'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
results$ = 184
ith$5 = 228
smt$6 = 232
i_smt$7 = 236
$T8 = 248
$T9 = 256
$T10 = 264
__$ArrayPad$ = 272
__$ReturnUdt$ = 304
check_size_kilobytes$ = 312
mode$ = 320
logical_core$ = 328
?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA PROC ; `ram_speed_mt_list'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d b8 00
	00 00		 lea	 rcx, QWORD PTR results$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA ENDP ; `ram_speed_mt_list'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cpu_info$ = 48
results$ = 184
ith$5 = 228
smt$6 = 232
i_smt$7 = 236
$T8 = 248
$T9 = 256
$T10 = 264
__$ArrayPad$ = 272
__$ReturnUdt$ = 304
check_size_kilobytes$ = 312
mode$ = 320
logical_core$ = 328
?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA PROC ; `ram_speed_mt_list'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	8b 85 08 01 00
	00		 mov	 eax, DWORD PTR $T10[rbp]
  0003f	83 e0 01	 and	 eax, 1
  00042	85 c0		 test	 eax, eax
  00044	74 13		 je	 SHORT $LN12@dtor$1
  00046	83 a5 08 01 00
	00 fe		 and	 DWORD PTR $T10[rbp], -2
  0004d	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00054	e8 00 00 00 00	 call	 ??1?$vector@NV?$allocator@N@std@@@std@@QEAA@XZ ; std::vector<double,std::allocator<double> >::~vector<double,std::allocator<double> >
$LN12@dtor$1:
  00059	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?dtor$1@?0??ram_speed_mt_list@@YA?AV?$vector@NV?$allocator@N@std@@@std@@HH_N@Z@4HA ENDP ; `ram_speed_mt_list'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\ram_speed.cpp
_TEXT	SEGMENT
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?ram_speed_mt@@YANHHH@Z PROC				; ram_speed_mt

; 115  : double ram_speed_mt(int check_size_kilobytes, int mode, int thread_n) {

$LN20:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  0000d	57		 push	 rdi
  0000e	48 81 ec 20 02
	00 00		 sub	 rsp, 544		; 00000220H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 88 00 00 00	 mov	 ecx, 136		; 00000088H
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	8b 8c 24 30 02
	00 00		 mov	 ecx, DWORD PTR [rsp+560]
  0002b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00032	48 33 c4	 xor	 rax, rsp
  00035	48 89 84 24 10
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 116  :     std::vector<std::thread> threads(thread_n);

  0003d	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00045	e8 00 00 00 00	 call	 ??0?$allocator@Vthread@std@@@std@@QEAA@XZ ; std::allocator<std::thread>::allocator<std::thread>
  0004a	48 63 8c 24 40
	02 00 00	 movsxd	 rcx, DWORD PTR thread_n$[rsp]
  00052	4c 8b c0	 mov	 r8, rax
  00055	48 8b d1	 mov	 rdx, rcx
  00058	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  0005d	e8 00 00 00 00	 call	 ??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@_KAEBV?$allocator@Vthread@std@@@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
  00062	90		 npad	 1

; 117  :     std::vector<RAM_SPEED_THREAD> thread_prm(thread_n);

  00063	48 8d 8c 24 91
	01 00 00	 lea	 rcx, QWORD PTR $T15[rsp]
  0006b	e8 00 00 00 00	 call	 ??0?$allocator@URAM_SPEED_THREAD@@@std@@QEAA@XZ ; std::allocator<RAM_SPEED_THREAD>::allocator<RAM_SPEED_THREAD>
  00070	48 63 8c 24 40
	02 00 00	 movsxd	 rcx, DWORD PTR thread_n$[rsp]
  00078	4c 8b c0	 mov	 r8, rax
  0007b	48 8b d1	 mov	 rdx, rcx
  0007e	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  00083	e8 00 00 00 00	 call	 ??0?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@_KAEBV?$allocator@URAM_SPEED_THREAD@@@1@@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
  00088	90		 npad	 1

; 118  :     RAM_SPEED_THREAD_WAKE thread_wake;
; 119  :     cpu_info_t cpu_info;
; 120  :     get_cpu_info(&cpu_info);

  00089	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR cpu_info$[rsp]
  00091	e8 00 00 00 00	 call	 ?get_cpu_info@@YA_NPEAUcpu_info_t@@@Z ; get_cpu_info

; 121  : 
; 122  :     thread_wake.check_bit = 0;

  00096	33 d2		 xor	 edx, edx
  00098	48 8d 8c 24 b4
	00 00 00	 lea	 rcx, QWORD PTR thread_wake$[rsp]
  000a0	e8 00 00 00 00	 call	 ??4?$atomic@I@std@@QEAAII@Z ; std::atomic<unsigned int>::operator=

; 123  :     thread_wake.check_bit_all = 0;

  000a5	c7 84 24 b8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR thread_wake$[rsp+4], 0

; 124  :     for (uint32_t i = 0; i < threads.size(); i++) {

  000b0	c7 84 24 54 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$7[rsp], 0
  000bb	eb 10		 jmp	 SHORT $LN4@ram_speed_
$LN2@ram_speed_:
  000bd	8b 84 24 54 01
	00 00		 mov	 eax, DWORD PTR i$7[rsp]
  000c4	ff c0		 inc	 eax
  000c6	89 84 24 54 01
	00 00		 mov	 DWORD PTR i$7[rsp], eax
$LN4@ram_speed_:
  000cd	8b 84 24 54 01
	00 00		 mov	 eax, DWORD PTR i$7[rsp]
  000d4	48 89 84 24 c0
	01 00 00	 mov	 QWORD PTR tv84[rsp], rax
  000dc	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  000e1	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  000e6	48 8b 8c 24 c0
	01 00 00	 mov	 rcx, QWORD PTR tv84[rsp]
  000ee	48 3b c8	 cmp	 rcx, rax
  000f1	73 40		 jae	 SHORT $LN3@ram_speed_

; 125  :         thread_wake.check_bit_all |= 1 << ram_speed_thread_id(i, cpu_info);

  000f3	48 8d 94 24 e0
	00 00 00	 lea	 rdx, QWORD PTR cpu_info$[rsp]
  000fb	8b 8c 24 54 01
	00 00		 mov	 ecx, DWORD PTR i$7[rsp]
  00102	e8 00 00 00 00	 call	 ?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z ; ram_speed_thread_id
  00107	b9 01 00 00 00	 mov	 ecx, 1
  0010c	89 8c 24 c8 01
	00 00		 mov	 DWORD PTR tv253[rsp], ecx
  00113	0f b6 c8	 movzx	 ecx, al
  00116	8b 84 24 c8 01
	00 00		 mov	 eax, DWORD PTR tv253[rsp]
  0011d	d3 e0		 shl	 eax, cl
  0011f	8b 8c 24 b8 00
	00 00		 mov	 ecx, DWORD PTR thread_wake$[rsp+4]
  00126	0b c8		 or	 ecx, eax
  00128	8b c1		 mov	 eax, ecx
  0012a	89 84 24 b8 00
	00 00		 mov	 DWORD PTR thread_wake$[rsp+4], eax

; 126  :     }

  00131	eb 8a		 jmp	 SHORT $LN2@ram_speed_
$LN3@ram_speed_:

; 127  :     for (uint32_t i = 0; i < threads.size(); i++) {

  00133	c7 84 24 58 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$8[rsp], 0
  0013e	eb 10		 jmp	 SHORT $LN7@ram_speed_
$LN5@ram_speed_:
  00140	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  00147	ff c0		 inc	 eax
  00149	89 84 24 58 01
	00 00		 mov	 DWORD PTR i$8[rsp], eax
$LN7@ram_speed_:
  00150	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  00157	48 89 84 24 d0
	01 00 00	 mov	 QWORD PTR tv94[rsp], rax
  0015f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  00164	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  00169	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR tv94[rsp]
  00171	48 3b c8	 cmp	 rcx, rax
  00174	0f 83 0b 02 00
	00		 jae	 $LN6@ram_speed_

; 128  :         thread_prm[i].physical_cores = cpu_info.physical_cores;

  0017a	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  00181	8b d0		 mov	 edx, eax
  00183	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  00188	e8 00 00 00 00	 call	 ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
  0018d	8b 8c 24 e4 00
	00 00		 mov	 ecx, DWORD PTR cpu_info$[rsp+4]
  00194	89 48 0c	 mov	 DWORD PTR [rax+12], ecx

; 129  :         thread_prm[i].mode = (mode == RAM_SPEED_MODE_RW) ? (i & 1) : mode;

  00197	83 bc 24 38 02
	00 00 02	 cmp	 DWORD PTR mode$[rsp], 2
  0019f	75 13		 jne	 SHORT $LN15@ram_speed_
  001a1	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  001a8	83 e0 01	 and	 eax, 1
  001ab	89 84 24 d8 01
	00 00		 mov	 DWORD PTR tv142[rsp], eax
  001b2	eb 0e		 jmp	 SHORT $LN16@ram_speed_
$LN15@ram_speed_:
  001b4	8b 84 24 38 02
	00 00		 mov	 eax, DWORD PTR mode$[rsp]
  001bb	89 84 24 d8 01
	00 00		 mov	 DWORD PTR tv142[rsp], eax
$LN16@ram_speed_:
  001c2	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  001c9	8b d0		 mov	 edx, eax
  001cb	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  001d0	e8 00 00 00 00	 call	 ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
  001d5	8b 8c 24 d8 01
	00 00		 mov	 ecx, DWORD PTR tv142[rsp]
  001dc	89 08		 mov	 DWORD PTR [rax], ecx

; 130  :         thread_prm[i].check_size_bytes = (check_size_kilobytes * 1024 / thread_n + 255) & ~255;

  001de	69 84 24 30 02
	00 00 00 04 00
	00		 imul	 eax, DWORD PTR check_size_kilobytes$[rsp], 1024 ; 00000400H
  001e9	99		 cdq
  001ea	f7 bc 24 40 02
	00 00		 idiv	 DWORD PTR thread_n$[rsp]
  001f1	05 ff 00 00 00	 add	 eax, 255		; 000000ffH
  001f6	25 00 ff ff ff	 and	 eax, -256		; ffffffffffffff00H
  001fb	89 84 24 dc 01
	00 00		 mov	 DWORD PTR tv151[rsp], eax
  00202	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR i$8[rsp]
  00209	8b d1		 mov	 edx, ecx
  0020b	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  00210	e8 00 00 00 00	 call	 ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
  00215	8b 8c 24 dc 01
	00 00		 mov	 ecx, DWORD PTR tv151[rsp]
  0021c	89 48 04	 mov	 DWORD PTR [rax+4], ecx

; 131  :         thread_prm[i].thread_id = ram_speed_thread_id(i, cpu_info);

  0021f	48 8d 94 24 e0
	00 00 00	 lea	 rdx, QWORD PTR cpu_info$[rsp]
  00227	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR i$8[rsp]
  0022e	e8 00 00 00 00	 call	 ?ram_speed_thread_id@@YAHHAEBUcpu_info_t@@@Z ; ram_speed_thread_id
  00233	89 84 24 e0 01
	00 00		 mov	 DWORD PTR tv157[rsp], eax
  0023a	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR i$8[rsp]
  00241	8b d1		 mov	 edx, ecx
  00243	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  00248	e8 00 00 00 00	 call	 ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
  0024d	8b 8c 24 e0 01
	00 00		 mov	 ecx, DWORD PTR tv157[rsp]
  00254	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 132  :         threads[i] = std::thread(ram_speed_func, &thread_prm[i], &thread_wake);

  00257	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR thread_wake$[rsp]
  0025f	48 89 84 24 a8
	01 00 00	 mov	 QWORD PTR $T17[rsp], rax
  00267	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  0026e	8b d0		 mov	 edx, eax
  00270	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  00275	e8 00 00 00 00	 call	 ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
  0027a	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR $T18[rsp], rax
  00282	4c 8d 8c 24 a8
	01 00 00	 lea	 r9, QWORD PTR $T17[rsp]
  0028a	4c 8d 84 24 b0
	01 00 00	 lea	 r8, QWORD PTR $T18[rsp]
  00292	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ram_speed_func@@YAXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z ; ram_speed_func
  00299	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  002a1	e8 00 00 00 00	 call	 ??$?0A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@ZPEAU0@PEAU1@X@thread@std@@QEAA@A6AXPEAURAM_SPEED_THREAD@@PEAURAM_SPEED_THREAD_WAKE@@@Z$$QEAPEAU2@$$QEAPEAU3@@Z ; std::thread::thread<void (__cdecl&)(RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *),RAM_SPEED_THREAD *,RAM_SPEED_THREAD_WAKE *,void>
  002a6	48 89 84 24 e8
	01 00 00	 mov	 QWORD PTR tv73[rsp], rax
  002ae	48 8b 84 24 e8
	01 00 00	 mov	 rax, QWORD PTR tv73[rsp]
  002b6	48 89 84 24 f0
	01 00 00	 mov	 QWORD PTR tv220[rsp], rax
  002be	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  002c5	8b d0		 mov	 edx, eax
  002c7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  002cc	e8 00 00 00 00	 call	 ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
  002d1	48 8b 94 24 f0
	01 00 00	 mov	 rdx, QWORD PTR tv220[rsp]
  002d9	48 8b c8	 mov	 rcx, rax
  002dc	e8 00 00 00 00	 call	 ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ; std::thread::operator=
  002e1	90		 npad	 1
  002e2	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  002ea	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread

; 133  :         //渡されたスレッドIDからスレッドAffinityを決定
; 134  :         //特定のコアにスレッドを縛り付ける
; 135  :         SetThreadAffinityMask(threads[i].native_handle(), (uint64_t)1 << (int)thread_prm[i].thread_id);

  002ef	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  002f6	8b d0		 mov	 edx, eax
  002f8	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  002fd	e8 00 00 00 00	 call	 ??A?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAAEAURAM_SPEED_THREAD@@_K@Z ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::operator[]
  00302	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00305	b9 01 00 00 00	 mov	 ecx, 1
  0030a	48 89 8c 24 f8
	01 00 00	 mov	 QWORD PTR tv268[rsp], rcx
  00312	0f b6 c8	 movzx	 ecx, al
  00315	48 8b 84 24 f8
	01 00 00	 mov	 rax, QWORD PTR tv268[rsp]
  0031d	48 d3 e0	 shl	 rax, cl
  00320	48 89 84 24 00
	02 00 00	 mov	 QWORD PTR tv183[rsp], rax
  00328	8b 8c 24 58 01
	00 00		 mov	 ecx, DWORD PTR i$8[rsp]
  0032f	8b d1		 mov	 edx, ecx
  00331	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  00336	e8 00 00 00 00	 call	 ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
  0033b	48 8b c8	 mov	 rcx, rax
  0033e	e8 00 00 00 00	 call	 ?native_handle@thread@std@@QEAAPEAXXZ ; std::thread::native_handle
  00343	48 8b 8c 24 00
	02 00 00	 mov	 rcx, QWORD PTR tv183[rsp]
  0034b	48 8b d1	 mov	 rdx, rcx
  0034e	48 8b c8	 mov	 rcx, rax
  00351	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetThreadAffinityMask

; 136  :         //高優先度で実行
; 137  :         SetThreadPriority(threads[i].native_handle(), THREAD_PRIORITY_HIGHEST);

  00357	8b 84 24 58 01
	00 00		 mov	 eax, DWORD PTR i$8[rsp]
  0035e	8b d0		 mov	 edx, eax
  00360	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  00365	e8 00 00 00 00	 call	 ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
  0036a	48 8b c8	 mov	 rcx, rax
  0036d	e8 00 00 00 00	 call	 ?native_handle@thread@std@@QEAAPEAXXZ ; std::thread::native_handle
  00372	ba 02 00 00 00	 mov	 edx, 2
  00377	48 8b c8	 mov	 rcx, rax
  0037a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetThreadPriority

; 138  :     }

  00380	e9 bb fd ff ff	 jmp	 $LN5@ram_speed_
$LN6@ram_speed_:

; 139  :     for (uint32_t i = 0; i < threads.size(); i++) {

  00385	c7 84 24 5c 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$9[rsp], 0
  00390	eb 10		 jmp	 SHORT $LN10@ram_speed_
$LN8@ram_speed_:
  00392	8b 84 24 5c 01
	00 00		 mov	 eax, DWORD PTR i$9[rsp]
  00399	ff c0		 inc	 eax
  0039b	89 84 24 5c 01
	00 00		 mov	 DWORD PTR i$9[rsp], eax
$LN10@ram_speed_:
  003a2	8b 84 24 5c 01
	00 00		 mov	 eax, DWORD PTR i$9[rsp]
  003a9	48 89 84 24 08
	02 00 00	 mov	 QWORD PTR tv200[rsp], rax
  003b1	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  003b6	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  003bb	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR tv200[rsp]
  003c3	48 3b c8	 cmp	 rcx, rax
  003c6	73 1d		 jae	 SHORT $LN9@ram_speed_

; 140  :         threads[i].join();

  003c8	8b 84 24 5c 01
	00 00		 mov	 eax, DWORD PTR i$9[rsp]
  003cf	8b d0		 mov	 edx, eax
  003d1	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  003d6	e8 00 00 00 00	 call	 ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
  003db	48 8b c8	 mov	 rcx, rax
  003de	e8 00 00 00 00	 call	 ?join@thread@std@@QEAAXXZ ; std::thread::join

; 141  :     }

  003e3	eb ad		 jmp	 SHORT $LN8@ram_speed_
$LN9@ram_speed_:

; 142  : 
; 143  :     double sum = 0.0;

  003e5	0f 57 c0	 xorps	 xmm0, xmm0
  003e8	f2 0f 11 84 24
	60 01 00 00	 movsd	 QWORD PTR sum$[rsp], xmm0

; 144  :     for (const auto& prm : thread_prm) {

  003f1	48 8d 44 24 78	 lea	 rax, QWORD PTR thread_prm$[rsp]
  003f6	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR <range>$L0$10[rsp], rax
  003fe	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR <range>$L0$10[rsp]
  00406	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_begin
  0040b	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR <begin>$L0$11[rsp], rax
  00413	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR <range>$L0$10[rsp]
  0041b	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAAPEAURAM_SPEED_THREAD@@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::_Unchecked_end
  00420	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR <end>$L0$12[rsp], rax
  00428	eb 14		 jmp	 SHORT $LN13@ram_speed_
$LN11@ram_speed_:
  0042a	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR <begin>$L0$11[rsp]
  00432	48 83 c0 18	 add	 rax, 24
  00436	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR <begin>$L0$11[rsp], rax
$LN13@ram_speed_:
  0043e	48 8b 84 24 78
	01 00 00	 mov	 rax, QWORD PTR <end>$L0$12[rsp]
  00446	48 39 84 24 70
	01 00 00	 cmp	 QWORD PTR <begin>$L0$11[rsp], rax
  0044e	74 31		 je	 SHORT $LN12@ram_speed_
  00450	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR <begin>$L0$11[rsp]
  00458	48 89 84 24 80
	01 00 00	 mov	 QWORD PTR prm$13[rsp], rax

; 145  :         sum += prm.megabytes_per_sec;

  00460	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR prm$13[rsp]
  00468	f2 0f 10 84 24
	60 01 00 00	 movsd	 xmm0, QWORD PTR sum$[rsp]
  00471	f2 0f 58 40 10	 addsd	 xmm0, QWORD PTR [rax+16]
  00476	f2 0f 11 84 24
	60 01 00 00	 movsd	 QWORD PTR sum$[rsp], xmm0

; 146  :     }

  0047f	eb a9		 jmp	 SHORT $LN11@ram_speed_
$LN12@ram_speed_:

; 147  :     return sum;

  00481	f2 0f 10 84 24
	60 01 00 00	 movsd	 xmm0, QWORD PTR sum$[rsp]
  0048a	f2 0f 11 84 24
	b8 01 00 00	 movsd	 QWORD PTR $T19[rsp], xmm0
  00493	48 8d 4c 24 78	 lea	 rcx, QWORD PTR thread_prm$[rsp]
  00498	e8 00 00 00 00	 call	 ??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
  0049d	90		 npad	 1
  0049e	48 8d 4c 24 38	 lea	 rcx, QWORD PTR threads$[rsp]
  004a3	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  004a8	f2 0f 10 84 24
	b8 01 00 00	 movsd	 xmm0, QWORD PTR $T19[rsp]

; 148  : }

  004b1	f3 0f 7f 44 24
	20		 movdqu	 XMMWORD PTR [rsp+32], xmm0
  004b7	48 8b cc	 mov	 rcx, rsp
  004ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?ram_speed_mt@@YANHHH@Z$rtcFrameData
  004c1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  004c6	f3 0f 6f 44 24
	20		 movdqu	 xmm0, XMMWORD PTR [rsp+32]
  004cc	48 8b 8c 24 10
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  004d4	48 33 cc	 xor	 rcx, rsp
  004d7	e8 00 00 00 00	 call	 __security_check_cookie
  004dc	48 81 c4 20 02
	00 00		 add	 rsp, 544		; 00000220H
  004e3	5f		 pop	 rdi
  004e4	c3		 ret	 0
?ram_speed_mt@@YANHHH@Z ENDP				; ram_speed_mt
_TEXT	ENDS
text$x	SEGMENT
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA PROC		; `ram_speed_mt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR threads$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  0001c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA ENDP		; `ram_speed_mt'::`1'::dtor$0
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA PROC		; `ram_speed_mt'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 78	 lea	 rcx, QWORD PTR thread_prm$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
  0003f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA ENDP		; `ram_speed_mt'::`1'::dtor$1
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA PROC		; `ram_speed_mt'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00060	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00065	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA ENDP		; `ram_speed_mt'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA PROC		; `ram_speed_mt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR threads$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  0001c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??ram_speed_mt@@YANHHH@Z@4HA ENDP		; `ram_speed_mt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA PROC		; `ram_speed_mt'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 4d 78	 lea	 rcx, QWORD PTR thread_prm$[rbp]
  0003a	e8 00 00 00 00	 call	 ??1?$vector@URAM_SPEED_THREAD@@V?$allocator@URAM_SPEED_THREAD@@@std@@@std@@QEAA@XZ ; std::vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >::~vector<RAM_SPEED_THREAD,std::allocator<RAM_SPEED_THREAD> >
  0003f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?dtor$1@?0??ram_speed_mt@@YANHHH@Z@4HA ENDP		; `ram_speed_mt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
threads$ = 56
thread_prm$ = 120
thread_wake$ = 180
cpu_info$ = 224
i$7 = 340
i$8 = 344
i$9 = 348
sum$ = 352
<range>$L0$10 = 360
<begin>$L0$11 = 368
<end>$L0$12 = 376
prm$13 = 384
$T14 = 400
$T15 = 401
$T16 = 408
$T17 = 424
$T18 = 432
$T19 = 440
tv84 = 448
tv253 = 456
tv94 = 464
tv142 = 472
tv151 = 476
tv157 = 480
tv73 = 488
tv220 = 496
tv268 = 504
tv183 = 512
tv200 = 520
__$ArrayPad$ = 528
check_size_kilobytes$ = 560
mode$ = 568
thread_n$ = 576
?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA PROC		; `ram_speed_mt'::`1'::dtor$2
  00046	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00050	55		 push	 rbp
  00051	57		 push	 rdi
  00052	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00056	48 8b ea	 mov	 rbp, rdx
  00059	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  00060	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00065	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??ram_speed_mt@@YANHHH@Z@4HA ENDP		; `ram_speed_mt'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?_Check_memory_order@std@@YAXW4memory_order@1@@Z
_TEXT	SEGMENT
_Order$ = 64
?_Check_memory_order@std@@YAXW4memory_order@1@@Z PROC	; std::_Check_memory_order, COMDAT

; 139  : inline void _Check_memory_order(const memory_order _Order) noexcept {

$LN8:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 0c 00 00 00	 mov	 ecx, 12
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 40	 mov	 ecx, DWORD PTR [rsp+64]

; 140  :     // check that _Order is a valid memory_order
; 141  :     if (static_cast<unsigned int>(_Order) > memory_order_seq_cst) {

  0001c	83 7c 24 40 05	 cmp	 DWORD PTR _Order$[rsp], 5
  00021	76 6d		 jbe	 SHORT $LN5@Check_memo
$LN4@Check_memo:

; 142  :         _INVALID_MEMORY_ORDER;

  00023	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BF@FBDAHHJI@Invalid?5memory?5order@
  0002a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0002f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00036	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0003b	45 33 c9	 xor	 r9d, r9d
  0003e	41 b8 8e 00 00
	00		 mov	 r8d, 142		; 0000008eH
  00044	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@NLKJPDKJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0004b	b9 02 00 00 00	 mov	 ecx, 2
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00056	90		 npad	 1
  00057	83 f8 01	 cmp	 eax, 1
  0005a	75 03		 jne	 SHORT $LN7@Check_memo
  0005c	cc		 int	 3
  0005d	33 c0		 xor	 eax, eax
$LN7@Check_memo:
  0005f	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00068	41 b9 8e 00 00
	00		 mov	 r9d, 142		; 0000008eH
  0006e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOBIMJOO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00075	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DC@CFMGACCG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA_?$AAm?$AAe?$AAm@
  0007c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CO@JOMFDNFG@?$AA?$CC?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00089	90		 npad	 1
  0008a	33 c0		 xor	 eax, eax
  0008c	85 c0		 test	 eax, eax
  0008e	75 93		 jne	 SHORT $LN4@Check_memo
$LN5@Check_memo:

; 143  :     }
; 144  : }

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
?_Check_memory_order@std@@YAXW4memory_order@1@@Z ENDP	; std::_Check_memory_order
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
_TEXT	SEGMENT
_Old_val$ = 40
$T4 = 112
_Val$ = 120
_New_val$ = 128
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z PROC ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 16 00 00 00	 mov	 ecx, 22
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00029	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  0002e	48 8b f8	 mov	 rdi, rax
  00031	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Val$[rsp]
  00036	b9 10 00 00 00	 mov	 ecx, 16
  0003b	f3 a4		 rep movsb

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0003d	48 8b 7c 24 78	 mov	 rdi, QWORD PTR _Val$[rsp]
  00042	48 8b b4 24 80
	00 00 00	 mov	 rsi, QWORD PTR _New_val$[rsp]
  0004a	b9 10 00 00 00	 mov	 ecx, 16
  0004f	f3 a4		 rep movsb

; 529  :     return _Old_val;

  00051	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  00056	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T4[rsp]
  0005b	48 8b f0	 mov	 rsi, rax
  0005e	b9 10 00 00 00	 mov	 ecx, 16
  00063	f3 a4		 rep movsb
  00065	48 8b 44 24 70	 mov	 rax, QWORD PTR $T4[rsp]

; 530  : }

  0006a	48 8b f8	 mov	 rdi, rax
  0006d	48 8b cc	 mov	 rcx, rsp
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData
  00077	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0007c	48 8b c7	 mov	 rax, rdi
  0007f	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00083	5f		 pop	 rdi
  00084	5e		 pop	 rsi
  00085	c3		 ret	 0
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ENDP ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gthread@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gthread@std@@QEAAPEAXI@Z PROC			; std::thread::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 10 00 00 00	 mov	 edx, 16
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gthread@std@@QEAAPEAXI@Z ENDP			; std::thread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?native_handle@thread@std@@QEAAPEAXXZ
_TEXT	SEGMENT
this$ = 16
?native_handle@thread@std@@QEAAPEAXXZ PROC		; std::thread::native_handle, COMDAT

; 135  :     _NODISCARD native_handle_type native_handle() { // return Win32 HANDLE as void *

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 136  :         return _Thr._Hnd;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 137  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?native_handle@thread@std@@QEAAPEAXXZ ENDP		; std::thread::native_handle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 104  :     void join() { // join thread

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000b	48 8b fc	 mov	 rdi, rsp
  0000e	b9 12 00 00 00	 mov	 ecx, 18
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 105  :         if (!joinable()) {

  0001f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00024	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00029	0f b6 c0	 movzx	 eax, al
  0002c	85 c0		 test	 eax, eax
  0002e	75 0a		 jne	 SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

  0003a	e8 00 00 00 00	 call	 _Thrd_id
  0003f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00044	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00047	75 0a		 jne	 SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  00049	b9 05 00 00 00	 mov	 ecx, 5
  0004e	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

  00053	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b 74 24 60	 mov	 rsi, QWORD PTR this$[rsp]
  00060	b9 10 00 00 00	 mov	 ecx, 16
  00065	f3 a4		 rep movsb
  00067	33 d2		 xor	 edx, edx
  00069	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  0006e	e8 00 00 00 00	 call	 _Thrd_join
  00073	85 c0		 test	 eax, eax
  00075	74 0a		 je	 SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

  00081	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00086	48 8b f8	 mov	 rdi, rax
  00089	33 c0		 xor	 eax, eax
  0008b	b9 10 00 00 00	 mov	 ecx, 16
  00090	f3 aa		 rep stosb
  00092	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00097	48 8b 7c 24 60	 mov	 rdi, QWORD PTR this$[rsp]
  0009c	48 8b f0	 mov	 rsi, rax
  0009f	b9 10 00 00 00	 mov	 ecx, 16
  000a4	f3 a4		 rep movsb
$LN5@join:

; 118  :     }

  000a6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000aa	5f		 pop	 rdi
  000ab	5e		 pop	 rsi
  000ac	c3		 ret	 0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 100  :     _NODISCARD bool joinable() const noexcept { // return true if this thread can be joined

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 101  :         return _Thr._Id != 0;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00027	74 09		 je	 SHORT $LN3@joinable
  00029	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00030	eb 07		 jmp	 SHORT $LN4@joinable
$LN3@joinable:
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@joinable:
  00039	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 102  :     }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
this$ = 112
_Other$ = 120
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z PROC		; std::thread::operator=, COMDAT

; 83   :     thread& operator=(thread&& _Other) noexcept { // move from _Other

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 16 00 00 00	 mov	 ecx, 22
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 84   : 
; 85   :         if (joinable()) {

  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00029	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  0002e	90		 npad	 1
  0002f	0f b6 c0	 movzx	 eax, al
  00032	85 c0		 test	 eax, eax
  00034	74 07		 je	 SHORT $LN2@operator

; 86   :             _STD terminate();

  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
  0003c	90		 npad	 1
$LN2@operator:

; 87   :         }
; 88   : 
; 89   :         _Thr = _STD exchange(_Other._Thr, {});

  0003d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00042	48 8b f8	 mov	 rdi, rax
  00045	33 c0		 xor	 eax, eax
  00047	b9 10 00 00 00	 mov	 ecx, 16
  0004c	f3 aa		 rep stosb
  0004e	48 8b 44 24 78	 mov	 rax, QWORD PTR _Other$[rsp]
  00053	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T2[rsp]
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  00060	e8 00 00 00 00	 call	 ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
  00065	90		 npad	 1
  00066	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006b	48 8b f9	 mov	 rdi, rcx
  0006e	48 8b f0	 mov	 rsi, rax
  00071	b9 10 00 00 00	 mov	 ecx, 16
  00076	f3 a4		 rep movsb
  00078	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0007d	48 8b 7c 24 70	 mov	 rdi, QWORD PTR this$[rsp]
  00082	48 8b f0	 mov	 rsi, rax
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 90   :         return *this;

  0008c	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]

; 91   :     }

  00091	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00095	5f		 pop	 rdi
  00096	5e		 pop	 rsi
  00097	c3		 ret	 0
$LN4@operator:
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ENDP		; std::thread::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 74   :     ~thread() noexcept { // clean up

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 75   :         if (joinable()) {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	74 06		 je	 SHORT $LN2@thread

; 76   :             _STD terminate();

  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
$LN2@thread:
$LN3@thread:

; 77   :         }
; 78   :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??0thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0thread@std@@QEAA@XZ PROC				; std::thread::thread, COMDAT

; 31   :     thread() noexcept : _Thr{} { // construct with no thread

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR this$[rsp]
  00010	33 c0		 xor	 eax, eax
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	f3 aa		 rep stosb

; 32   :     }

  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0thread@std@@QEAA@XZ ENDP				; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 89   :             return _MyRep;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0PECEA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 16
_Val$ = 24
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Val$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 16
__$ReturnUdt$ = 24
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch, COMDAT

; 194  :         _NODISCARD constexpr _Duration time_since_epoch() const _NOEXCEPT_COND(is_arithmetic_v<rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 195  :             // get duration from epoch
; 196  :             return _MyDur;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 18	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001b	48 8b 44 24 18	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 197  :         }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 16
_Other$ = 24
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 184  :         constexpr explicit time_point(const _Duration& _Other) _NOEXCEPT_COND(is_arithmetic_v<rep>) // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 185  :             : _MyDur(_Other) { // construct from a duration

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Other$[rsp]
  00010	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00013	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00018	48 89 01	 mov	 QWORD PTR [rcx], rax

; 186  :         }

  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 89   :             return _MyRep;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
_TEXT	SEGMENT
_Freq$ = 32
_Ctr$ = 40
_Whole$ = 48
_Part$ = 56
$T1 = 64
$T2 = 72
__$ReturnUdt$ = 96
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ PROC ; std::chrono::steady_clock::now, COMDAT

; 647  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 648  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

  0001e	e8 00 00 00 00	 call	 _Query_perf_frequency
  00023	90		 npad	 1
  00024	48 89 44 24 20	 mov	 QWORD PTR _Freq$[rsp], rax

; 649  :             const long long _Ctr  = _Query_perf_counter();

  00029	e8 00 00 00 00	 call	 _Query_perf_counter
  0002e	90		 npad	 1
  0002f	48 89 44 24 28	 mov	 QWORD PTR _Ctr$[rsp], rax

; 650  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 651  :             const long long _Whole = (_Ctr / _Freq) * period::den;

  00034	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ctr$[rsp]
  00039	48 99		 cdq
  0003b	48 f7 7c 24 20	 idiv	 QWORD PTR _Freq$[rsp]
  00040	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  00047	48 89 44 24 30	 mov	 QWORD PTR _Whole$[rsp], rax

; 652  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

  0004c	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ctr$[rsp]
  00051	48 99		 cdq
  00053	48 f7 7c 24 20	 idiv	 QWORD PTR _Freq$[rsp]
  00058	48 8b c2	 mov	 rax, rdx
  0005b	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  00062	48 99		 cdq
  00064	48 f7 7c 24 20	 idiv	 QWORD PTR _Freq$[rsp]
  00069	48 89 44 24 38	 mov	 QWORD PTR _Part$[rsp], rax

; 653  :             return time_point(duration(_Whole + _Part));

  0006e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Part$[rsp]
  00073	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Whole$[rsp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 89 44 24 48	 mov	 QWORD PTR $T2[rsp], rax
  00083	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T2[rsp]
  00088	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T1[rsp]
  0008d	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00092	90		 npad	 1
  00093	48 8b d0	 mov	 rdx, rax
  00096	48 8b 4c 24 60	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0009b	e8 00 00 00 00	 call	 ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  000a0	90		 npad	 1
  000a1	48 8b 44 24 60	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 654  :         }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ENDP ; std::chrono::steady_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
