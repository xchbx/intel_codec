; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG140755 DB	'invalid argument', 00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+2
$SG140756 DB	'%s', 00H
	ORG $+1
$SG140760 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG140757 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG116307 DB	'all', 00H
	ORG $+4
$SG140758 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG140759 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG116308 DB	'cpu', 00H
$SG116318 DB	'mem', 00H
$SG116309 DB	'cpu_total', 00H
	ORG $+2
$SG116313 DB	'cpu_in', 00H
	ORG $+1
$SG116321 DB	'io', 00H
	ORG $+1
$SG116310 DB	'cpu_kernel', 00H
	ORG $+1
$SG116324 DB	'fps', 00H
$SG116311 DB	'cpu_main', 00H
	ORG $+3
$SG116329 DB	'gpu', 00H
$SG116312 DB	'cpu_enc', 00H
$SG116314 DB	'cpu_aud', 00H
$SG116315 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG116316 DB	'cpu_aud_enc', 00H
$SG110618 DB	'rgb', 00H
$SG116317 DB	'cpu_out', 00H
$SG116319 DB	'mem_private', 00H
$SG110620 DB	'gbr', 00H
$SG116320 DB	'mem_virtual', 00H
$SG110623 DB	'y8', 00H
	ORG $+1
$SG116322 DB	'io_read', 00H
$SG116323 DB	'io_write', 00H
	ORG $+3
$SG116336 DB	'queue', 00H
	ORG $+2
$SG110590 DB	'yuv422', 00H
	ORG $+1
$SG119131 DB	'vp8', 00H
$SG116325 DB	'fps_avg', 00H
$SG116326 DB	'bitrate', 00H
$SG116327 DB	'bitrate_avg', 00H
$SG119132 DB	'raw', 00H
$SG116328 DB	'frame_out', 00H
	ORG $+2
$SG110592 DB	'yuv444', 00H
	ORG $+1
$SG119134 DB	'CBR', 00H
$SG116330 DB	'gpu_load', 00H
	ORG $+3
$SG110612 DB	'rgb24r', 00H
	ORG $+1
$SG119135 DB	'VBR', 00H
$SG116331 DB	'gpu_clock', 00H
	ORG $+2
$SG110613 DB	'rgb32r', 00H
	ORG $+1
$SG119136 DB	'CQP', 00H
$SG116332 DB	'vee_load', 00H
	ORG $+3
$SG110614 DB	'rgb24', 00H
	ORG $+2
$SG119138 DB	'LA', 00H
	ORG $+1
$SG116333 DB	'ved_load', 00H
	ORG $+3
$SG110615 DB	'rgb32', 00H
	ORG $+2
$SG119139 DB	'LA-EXT', 00H
	ORG $+1
$SG119142 DB	'ICQ', 00H
$SG116334 DB	'pcie_load', 00H
	ORG $+2
$SG119140 DB	'LA-HRD', 00H
	ORG $+1
$SG119144 DB	'VCM', 00H
$SG116335 DB	've_clock', 00H
	ORG $+7
$SG110586 DB	'Invalid', 00H
$SG141121 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG110587 DB	'nv12', 00H
	ORG $+3
$SG110588 DB	'yv12', 00H
	ORG $+3
$SG110589 DB	'yuy2', 00H
	ORG $+3
$SG110591 DB	'nv16', 00H
	ORG $+3
$SG110593 DB	'yv12(9bit)', 00H
	ORG $+1
$SG119169 DB	'0', 00H
	ORG $+2
$SG110594 DB	'yv12(10bit)', 00H
$SG119170 DB	'1', 00H
	ORG $+2
$SG110595 DB	'yv12(12bit)', 00H
$SG119171 DB	'2', 00H
	ORG $+2
$SG110596 DB	'yv12(14bit)', 00H
$SG119172 DB	'3', 00H
	ORG $+2
$SG110597 DB	'yv12(16bit)', 00H
$SG110598 DB	'p010', 00H
	ORG $+3
$SG110616 DB	'bgr24', 00H
	ORG $+2
$SG119141 DB	'LA-ICQ', 00H
	ORG $+1
$SG119175 DB	'0', 00H
	ORG $+2
$SG110599 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG110600 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG110601 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG110602 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG110603 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG110604 DB	'p210', 00H
	ORG $+3
$SG110605 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG110606 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG110607 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG110608 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG110609 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG110610 DB	'yuva444', 00H
$SG110611 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG110617 DB	'bgr32', 00H
	ORG $+2
$SG110619 DB	'rgba', 00H
	ORG $+3
$SG110621 DB	'gbra', 00H
	ORG $+3
$SG110622 DB	'yc48', 00H
	ORG $+3
$SG110624 DB	'yc16', 00H
	ORG $+3
$SG119127 DB	'h264', 00H
	ORG $+3
$SG119128 DB	'hevc', 00H
	ORG $+3
$SG119129 DB	'mpeg2', 00H
	ORG $+2
$SG119130 DB	'vc-1', 00H
	ORG $+3
$SG119137 DB	'AVBR', 00H
	ORG $+3
$SG119143 DB	'QVBR', 00H
	ORG $+3
$SG119146 DB	'auto', 00H
	ORG $+3
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119146	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119147
	DD	042H
	ORG $+4
	DQ	FLAT:$SG119148
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG119149
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119147 DB	'Baseline', 00H
	ORG $+3
$SG119148 DB	'Main', 00H
	ORG $+3
$SG119149 DB	'High', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119151	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119152
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119153
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119151 DB	'auto', 00H
	ORG $+3
$SG119152 DB	'main', 00H
	ORG $+3
$SG119153 DB	'main10', 00H
	ORG $+1
$SG119155 DB	'main', 00H
	ORG $+3
$SG119156 DB	'high', 00H
	ORG $+3
$SG119158 DB	'auto', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119158	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119159
	DD	050H
	ORG $+4
	DQ	FLAT:$SG119160
	DD	040H
	ORG $+4
	DQ	FLAT:$SG119161
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119159 DB	'Simple', 00H
	ORG $+1
$SG119160 DB	'Main', 00H
	ORG $+3
$SG119161 DB	'High', 00H
	ORG $+3
$SG119163 DB	'auto', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119163	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119164
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119165
	DD	05H
	ORG $+4
	DQ	FLAT:$SG119166
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119164 DB	'Simple', 00H
	ORG $+1
$SG119165 DB	'Main', 00H
	ORG $+3
$SG119166 DB	'Advanced', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119168	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119169
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119170
	DD	02H
	ORG $+4
	DQ	FLAT:$SG119171
	DD	03H
	ORG $+4
	DQ	FLAT:$SG119172
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119168 DB	'auto', 00H
	ORG $+3
$SG119174 DB	'auto', 00H
	ORG $+3
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119174	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119175
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119176
	DD	02H
	ORG $+4
	DQ	FLAT:$SG119177
	DD	03H
	ORG $+4
	DQ	FLAT:$SG119178
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119176 DB	'1', 00H
	ORG $+2
$SG119177 DB	'2', 00H
	ORG $+2
$SG119178 DB	'3', 00H
	ORG $+2
$SG119180 DB	'8', 00H
	ORG $+2
$SG119181 DB	'10', 00H
	ORG $+1
$SG119189 DB	'it', 00H
	ORG $+1
$SG119183 DB	'progressive', 00H
$SG119190 DB	'bob', 00H
$SG119184 DB	'interlaced(tff)', 00H
$SG119185 DB	'interlaced(bff)', 00H
$SG119187 DB	'none', 00H
	ORG $+3
$SG119188 DB	'normal', 00H
	ORG $+1
$SG119192 DB	'32', 00H
	ORG $+1
$SG119193 DB	'2332', 00H
	ORG $+3
$SG119194 DB	'repeat', 00H
	ORG $+1
$SG119195 DB	'41', 00H
	ORG $+1
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG119197	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119198
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG119199
	DD	09H
	ORG $+4
	DQ	FLAT:$SG119200
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG119201
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG119202
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG119203
	DD	014H
	ORG $+4
	DQ	FLAT:$SG119204
	DD	015H
	ORG $+4
	DQ	FLAT:$SG119205
	DD	016H
	ORG $+4
	DQ	FLAT:$SG119206
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG119207
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG119208
	DD	020H
	ORG $+4
	DQ	FLAT:$SG119209
	DD	028H
	ORG $+4
	DQ	FLAT:$SG119210
	DD	029H
	ORG $+4
	DQ	FLAT:$SG119211
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG119212
	DD	032H
	ORG $+4
	DQ	FLAT:$SG119213
	DD	033H
	ORG $+4
	DQ	FLAT:$SG119214
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119197 DB	'auto', 00H
	ORG $+3
$SG119198 DB	'1', 00H
	ORG $+2
$SG119199 DB	'1b', 00H
	ORG $+1
$SG119200 DB	'1.1', 00H
$SG119201 DB	'1.2', 00H
$SG119202 DB	'1.3', 00H
$SG119203 DB	'2', 00H
	ORG $+2
$SG119204 DB	'2.1', 00H
$SG119205 DB	'2.2', 00H
$SG119206 DB	'3', 00H
	ORG $+2
$SG119207 DB	'3.1', 00H
$SG119208 DB	'3.2', 00H
$SG119209 DB	'4', 00H
	ORG $+2
$SG119210 DB	'4.1', 00H
$SG119211 DB	'4.2', 00H
$SG119212 DB	'5', 00H
	ORG $+2
$SG119213 DB	'5.1', 00H
$SG119214 DB	'5.2', 00H
	ORG $+4
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG119216	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119217
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG119218
	DD	014H
	ORG $+4
	DQ	FLAT:$SG119219
	DD	015H
	ORG $+4
	DQ	FLAT:$SG119220
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG119221
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG119222
	DD	028H
	ORG $+4
	DQ	FLAT:$SG119223
	DD	029H
	ORG $+4
	DQ	FLAT:$SG119224
	DD	032H
	ORG $+4
	DQ	FLAT:$SG119225
	DD	033H
	ORG $+4
	DQ	FLAT:$SG119226
	DD	034H
	ORG $+4
	DQ	FLAT:$SG119227
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG119228
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG119229
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119216 DB	'auto', 00H
	ORG $+3
$SG119217 DB	'1', 00H
	ORG $+2
$SG119218 DB	'2', 00H
	ORG $+2
$SG119219 DB	'2.1', 00H
$SG119220 DB	'3', 00H
	ORG $+2
$SG119221 DB	'3.1', 00H
$SG119222 DB	'4', 00H
	ORG $+2
$SG119223 DB	'4.1', 00H
$SG119224 DB	'5', 00H
	ORG $+2
$SG119225 DB	'5.1', 00H
$SG119226 DB	'5.2', 00H
$SG119227 DB	'6', 00H
	ORG $+2
$SG119228 DB	'6.1', 00H
$SG119229 DB	'6.2', 00H
	ORG $+4
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG119231	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119232
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG119233
	DD	08H
	ORG $+4
	DQ	FLAT:$SG119234
	DD	04H
	ORG $+4
	DQ	FLAT:$SG119235
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119231 DB	'auto', 00H
	ORG $+3
$SG119232 DB	'low', 00H
$SG119233 DB	'main', 00H
	ORG $+3
$SG119234 DB	'high', 00H
	ORG $+3
$SG119238 DB	'low', 00H
$SG119235 DB	'high1440', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG119237	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119238
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119239
	DD	03H
	ORG $+4
	DQ	FLAT:$SG119240
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119237 DB	'auto', 00H
	ORG $+3
$SG119239 DB	'median', 00H
	ORG $+1
$SG119240 DB	'high', 00H
	ORG $+3
$SG119242 DB	'auto', 00H
	ORG $+3
$SG119243 DB	'0', 00H
	ORG $+2
$SG119244 DB	'1', 00H
	ORG $+2
$SG119245 DB	'2', 00H
	ORG $+2
$SG119246 DB	'3', 00H
	ORG $+2
$SG119247 DB	'4', 00H
	ORG $+2
$SG119254 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG119249	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119249 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG119251	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119251 DB	'auto', 00H
	ORG $+3
$SG119253 DB	'Auto', 00H
	ORG $+3
$SG119255 DB	'for I frames', 00H
	ORG $+3
$SG119256 DB	'for I,P frames', 00H
	ORG $+1
$SG119257 DB	'for All frames', 00H
	ORG $+1
$SG119259 DB	'auto', 00H
	ORG $+3
$SG119260 DB	'off', 00H
$SG119261 DB	'i', 00H
	ORG $+2
$SG119262 DB	'ip', 00H
	ORG $+1
$SG119263 DB	'all', 00H
$SG119264 DB	'ipb', 00H
$SG119265 DB	'ib', 00H
	ORG $+1
$SG119266 DB	'p', 00H
	ORG $+2
$SG119267 DB	'pb', 00H
	ORG $+1
$SG119268 DB	'b', 00H
	ORG $+2
$SG119270 DB	'auto', 00H
	ORG $+3
$SG119271 DB	'slow', 00H
	ORG $+3
$SG119272 DB	'medium', 00H
	ORG $+1
$SG119273 DB	'fast', 00H
	ORG $+3
$SG119276 DB	'0', 00H
	ORG $+2
$SG119275 DB	'default', 00H
$SG119277 DB	'1', 00H
	ORG $+2
$SG119278 DB	'2', 00H
	ORG $+2
$SG119279 DB	'3', 00H
	ORG $+2
$SG119280 DB	'4', 00H
	ORG $+2
$SG119282 DB	'low', 00H
$SG119283 DB	'normal', 00H
	ORG $+1
$SG119284 DB	'high', 00H
	ORG $+3
$SG119296 DB	'none', 00H
	ORG $+3
$SG119297 DB	'copy', 00H
	ORG $+3
$SG119298 DB	'aac', 00H
$SG119299 DB	'libmp3lame', 00H
	ORG $+1
$SG119304 DB	'ac3', 00H
$SG119300 DB	'libtwolame', 00H
	ORG $+1
$SG119335 DB	'tff', 00H
$SG119301 DB	'libvorbis', 00H
	ORG $+2
$SG119336 DB	'bff', 00H
$SG119302 DB	'pcm_s16le', 00H
	ORG $+2
$SG119347 DB	'higher', 00H
	ORG $+1
$SG119361 DB	'8x8', 00H
$SG119303 DB	'libopus', 00H
$SG119334 DB	'none', 00H
	ORG $+3
$SG119338 DB	' 1 - best quality', 00H
	ORG $+2
$SG119351 DB	'faster', 00H
	ORG $+1
$SG119362 DB	'4x4', 00H
$SG119339 DB	' 2 - higher', 00H
$SG119365 DB	'16', 00H
	ORG $+1
$SG119340 DB	' 3 - high quality', 00H
	ORG $+2
$SG119366 DB	'32', 00H
	ORG $+1
$SG119341 DB	' 4 - balanced', 00H
	ORG $+2
$SG119342 DB	' 5 - fast', 00H
	ORG $+2
$SG119367 DB	'64', 00H
	ORG $+1
$SG119343 DB	' 6 - faster', 00H
$SG119375 DB	'all', 00H
$SG119344 DB	' 7 - fastest', 00H
	ORG $+3
$SG119346 DB	'best', 00H
	ORG $+3
$SG119348 DB	'high', 00H
	ORG $+3
$SG119349 DB	'balanced', 00H
	ORG $+3
$SG119350 DB	'fast', 00H
	ORG $+3
$SG119357 DB	'Q-pel', 00H
	ORG $+2
$SG119374 DB	'chroma', 00H
	ORG $+1
$SG119379 DB	'box', 00H
$SG119352 DB	'fastest', 00H
$SG119354 DB	'Auto', 00H
	ORG $+3
$SG119355 DB	'full-pel', 00H
	ORG $+3
$SG119360 DB	'16x16', 00H
	ORG $+2
$SG119381 DB	'off', 00H
$SG119356 DB	'half-pel', 00H
	ORG $+3
$SG119359 DB	'Auto', 00H
	ORG $+3
$SG119364 DB	'auto', 00H
	ORG $+3
$SG119371 DB	'auto', 00H
	ORG $+3
$SG119372 DB	'none', 00H
	ORG $+3
$SG119373 DB	'luma', 00H
	ORG $+3
$SG119377 DB	'none', 00H
	ORG $+3
$SG119382 DB	'x2', 00H
	ORG $+1
$SG119378 DB	'upscale', 00H
$SG119383 DB	'x2.5', 00H
	ORG $+3
$SG119385 DB	'simple', 00H
	ORG $+1
$SG119386 DB	'complex', 00H
$SG119388 DB	'0', 00H
	ORG $+2
$SG119389 DB	'90', 00H
	ORG $+1
$SG119390 DB	'180', 00H
$SG119391 DB	'270', 00H
$SG119393 DB	'n', 00H
	ORG $+2
$SG119394 DB	'h', 00H
	ORG $+2
$SG119395 DB	'v', 00H
	ORG $+2
$SG119397 DB	'auto', 00H
	ORG $+3
$SG119398 DB	'simple', 00H
	ORG $+1
$SG119399 DB	'fine', 00H
	ORG $+3
$SG119401 DB	'auto', 00H
	ORG $+3
$SG119402 DB	'none', 00H
	ORG $+3
$SG119403 DB	'sse2', 00H
	ORG $+3
$SG119404 DB	'sse3', 00H
	ORG $+3
$SG119405 DB	'ssse3', 00H
	ORG $+2
$SG119406 DB	'sse41', 00H
	ORG $+2
$SG119407 DB	'avx', 00H
$SG119408 DB	'avx2', 00H
	ORG $+3
$SG111556 DB	'H.264/AVC', 00H
	ORG $+2
$SG111568 DB	'VP8', 00H
$SG111558 DB	'H.265/HEVC', 00H
	ORG $+1
$SG111560 DB	'MPEG2', 00H
	ORG $+2
$SG111562 DB	'MPEG1', 00H
	ORG $+2
$SG111564 DB	'VC-1', 00H
	ORG $+3
$SG111566 DB	'MPEG4', 00H
	ORG $+2
$SG111570 DB	'VP9', 00H
$SG111572 DB	'unknown', 00H
$SG119800 DB	'%s', 00H
	ORG $+1
$SG112181 DB	'fcc', 00H
$SG111679 DB	'unknown', 00H
$SG112174 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112174	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112175
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112176
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112177
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112178
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112179
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112180
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112181
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112182
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112183
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112184
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112185
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112186
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112187
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112188
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112175 DB	'auto', 00H
	ORG $+3
$SG112176 DB	'bt709', 00H
	ORG $+2
$SG112177 DB	'smpte170m', 00H
	ORG $+2
$SG112182 DB	'GBR', 00H
$SG112178 DB	'bt470bg', 00H
$SG112179 DB	'smpte240m', 00H
	ORG $+2
$SG112180 DB	'YCgCo', 00H
	ORG $+2
$SG112333 DB	'bt470m', 00H
	ORG $+1
$SG112495 DB	'pal', 00H
$SG112183 DB	'bt2020nc', 00H
	ORG $+3
$SG112187 DB	'ictco', 00H
	ORG $+2
$SG112336 DB	'linear', 00H
	ORG $+1
$SG112497 DB	'mac', 00H
$SG112184 DB	'bt2020c', 00H
$SG112185 DB	'derived-ncl', 00H
$SG112499 DB	'0', 00H
	ORG $+2
$SG112186 DB	'derived-cl', 00H
	ORG $+1
$SG112500 DB	'1', 00H
	ORG $+2
$SG112188 DB	'2100-lms', 00H
	ORG $+7
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG112329	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112330
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112331
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112332
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112333
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112334
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112335
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112336
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112337
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112338
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112339
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112340
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112341
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112342
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112343
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG112344
	DD	010H
	ORG $+4
	DQ	FLAT:$SG112345
	DD	011H
	ORG $+4
	DQ	FLAT:$SG112346
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112329 DB	'undef', 00H
	ORG $+2
$SG112330 DB	'auto', 00H
	ORG $+3
$SG112331 DB	'bt709', 00H
	ORG $+2
$SG112332 DB	'smpte170m', 00H
	ORG $+2
$SG112337 DB	'log100', 00H
	ORG $+1
$SG112501 DB	'2', 00H
	ORG $+2
$SG112334 DB	'bt470bg', 00H
$SG112335 DB	'smpte240m', 00H
	ORG $+2
$SG112338 DB	'log316', 00H
	ORG $+1
$SG112502 DB	'3', 00H
	ORG $+2
$SG112339 DB	'iec61966-2-4', 00H
	ORG $+3
$SG112340 DB	'bt1361e', 00H
$SG112341 DB	'iec61966-2-1', 00H
	ORG $+3
$SG112342 DB	'bt2020-10', 00H
	ORG $+2
$SG112482 DB	'bt470m', 00H
	ORG $+1
$SG112503 DB	'4', 00H
	ORG $+2
$SG112343 DB	'bt2020-12', 00H
	ORG $+2
$SG112486 DB	'bt2020', 00H
	ORG $+1
$SG112504 DB	'5', 00H
	ORG $+2
$SG112344 DB	'smpte2084', 00H
	ORG $+2
$SG112508 DB	'tv', 00H
	ORG $+1
$SG112345 DB	'smpte428', 00H
	ORG $+3
$SG112478 DB	'undef', 00H
	ORG $+2
$SG112509 DB	'pc', 00H
	ORG $+1
$SG112346 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG112478	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112479
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112480
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112481
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112482
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112483
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112484
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112485
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112486
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112487
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112488
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112489
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112490
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112479 DB	'auto', 00H
	ORG $+3
$SG112480 DB	'bt709', 00H
	ORG $+2
$SG112481 DB	'smpte170m', 00H
	ORG $+2
$SG113598 DB	'cfr', 00H
$SG112483 DB	'bt470bg', 00H
$SG112484 DB	'smpte240m', 00H
	ORG $+2
$SG112485 DB	'film', 00H
	ORG $+3
$SG112487 DB	'st428', 00H
	ORG $+2
$SG113599 DB	'vfr', 00H
$SG112488 DB	'st431-2', 00H
$SG112489 DB	'st432-1', 00H
$SG112490 DB	'ebu3213-e', 00H
	ORG $+2
$SG112492 DB	'undef', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG112492	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112493
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112494
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112495
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112496
	DD	03H
	ORG $+4
	DQ	FLAT:$SG112497
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112493 DB	'ntsc', 00H
	ORG $+3
$SG112494 DB	'component', 00H
	ORG $+2
$SG112496 DB	'secam', 00H
	ORG $+2
$SG113602 DB	'swr', 00H
$SG112506 DB	'limited', 00H
$SG112507 DB	'full', 00H
	ORG $+3
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG113591 DB	'trace', 00H
	ORG $+2
$SG113592 DB	'debug', 00H
	ORG $+2
$SG113593 DB	'more', 00H
	ORG $+3
$SG113594 DB	'info', 00H
	ORG $+3
$SG113595 DB	'warn', 00H
	ORG $+3
$SG113596 DB	'error', 00H
	ORG $+2
$SG113600 DB	'forcecfr', 00H
	ORG $+3
$SG113603 DB	'soxr', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Incref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Incref
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ	; std::allocator<_mfxSyncPoint *>::allocator<_mfxSyncPoint *>
PUBLIC	?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z ; std::allocator<_mfxSyncPoint *>::deallocate
PUBLIC	??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
PUBLIC	?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Move_construct
PUBLIC	??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
PUBLIC	??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
PUBLIC	?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::clear
PUBLIC	?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_end
PUBLIC	?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Destroy
PUBLIC	?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Tidy
PUBLIC	?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >
PUBLIC	?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Take_contents
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Get_first
PUBLIC	?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ ; std::_Ptr_base<RGYOutput>::get
PUBLIC	??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ	; std::_Ptr_base<RGYOutput>::_Ptr_base<RGYOutput>
PUBLIC	?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ	; std::_Ptr_base<RGYOutput>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYOutput>::_Swap
PUBLIC	??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ	; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
PUBLIC	??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
PUBLIC	??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
PUBLIC	??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ	; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
PUBLIC	??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<RGYOutput>::operator=
PUBLIC	?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYOutput>::swap
PUBLIC	?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ	; std::shared_ptr<RGYOutput>::reset
PUBLIC	??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ	; std::shared_ptr<RGYOutput>::operator bool
PUBLIC	??0QSVTask@@QEAA@XZ				; QSVTask::QSVTask
PUBLIC	?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ	; QSVTask::WriteBitstream
PUBLIC	?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ		; QSVTask::Clear
PUBLIC	?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z ; QSVTask::Init
PUBLIC	?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ		; QSVTask::Close
PUBLIC	??1QSVTask@@QEAA@XZ				; QSVTask::~QSVTask
PUBLIC	??0QSVTask@@QEAA@$$QEAU0@@Z			; QSVTask::QSVTask
PUBLIC	??_GQSVTask@@QEAAPEAXI@Z			; QSVTask::`scalar deleting destructor'
PUBLIC	??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
PUBLIC	??0CQSVTaskControl@@QEAA@XZ			; CQSVTaskControl::CQSVTaskControl
PUBLIC	??1CQSVTaskControl@@UEAA@XZ			; CQSVTaskControl::~CQSVTaskControl
PUBLIC	?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z ; CQSVTaskControl::Init
PUBLIC	?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ ; CQSVTaskControl::SynchronizeFirstTask
PUBLIC	?Close@CQSVTaskControl@@UEAAXXZ			; CQSVTaskControl::Close
PUBLIC	??0?$allocator@UQSVTask@@@std@@QEAA@XZ		; std::allocator<QSVTask>::allocator<QSVTask>
PUBLIC	?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::deallocate
PUBLIC	?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::max_size
PUBLIC	??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::vector<QSVTask,std::allocator<QSVTask> >
PUBLIC	??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
PUBLIC	?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::resize
PUBLIC	?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::clear
PUBLIC	?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::size
PUBLIC	?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::max_size
PUBLIC	?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::capacity
PUBLIC	??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
PUBLIC	?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Ufill
PUBLIC	?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Change_array
PUBLIC	?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Tidy
PUBLIC	?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
PUBLIC	?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<QSVTask> >::_Vector_val<std::_Simple_types<QSVTask> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first
PUBLIC	??_GCQSVTaskControl@@UEAAPEAXI@Z		; CQSVTaskControl::`scalar deleting destructor'
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize<std::_Value_init_tag>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><QSVTask>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z ; std::_Ptr_base<RGYOutput>::_Copy_construct_from<RGYOutput>
PUBLIC	??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><_mfxSyncPoint *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ; std::_Destroy_range<std::allocator<QSVTask> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z ; std::_Destroy_range<std::allocator<_mfxSyncPoint *> >
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z ; std::swap<RGYOutput *,void>
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z ; std::_Unfancy<QSVTask>
PUBLIC	??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::destroy<QSVTask>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z ; std::move<RGYOutput * &>
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Uninitialized_backout_al<std::allocator<QSVTask> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Release
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<>
PUBLIC	??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z		; std::_Get_size_of_n<144>
PUBLIC	??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >
PUBLIC	??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask>
PUBLIC	??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z ; std::_Get_unwrapped<QSVTask>
PUBLIC	??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ; std::move<QSVTask &>
PUBLIC	??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<QSVTask>
PUBLIC	??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ; std::forward<QSVTask>
PUBLIC	??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask,QSVTask>
PUBLIC	??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z ; std::move<std::shared_ptr<RGYOutput> &>
PUBLIC	??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<RGYOutput>::_Move_construct_from<RGYOutput>
PUBLIC	??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z ; std::move<std::allocator<_mfxSyncPoint *> &>
PUBLIC	??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><std::allocator<_mfxSyncPoint *> >
PUBLIC	??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z ; std::forward<std::allocator<_mfxSyncPoint *> >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_7CQSVTaskControl@@6B@			; CQSVTaskControl::`vftable'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1JO@JHNDBOJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CQSVTaskControl@@6B@			; CQSVTaskControl::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCQSVTaskControl@@@8			; CQSVTaskControl `RTTI Type Descriptor'
PUBLIC	??_R3CQSVTaskControl@@8				; CQSVTaskControl::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CQSVTaskControl@@8				; CQSVTaskControl::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CQSVTaskControl@@8		; CQSVTaskControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	memset:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?err_to_mfx@@YA?AW4mfxStatus@@W4RGY_ERR@@@Z:PROC ; err_to_mfx
EXTRN	?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z:PROC ; mfxBitstreamInit
EXTRN	?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z:PROC ; mfxBitstreamClear
EXTRN	??_ECQSVTaskControl@@UEAAPEAXI@Z:PROC		; CQSVTaskControl::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Incref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+104
	DD	imagerel $unwind$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0QSVTask@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+141
	DD	imagerel $unwind$??0QSVTask@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ DD imagerel $LN10
	DD	imagerel $LN10+616
	DD	imagerel $unwind$?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z DD imagerel $LN10
	DD	imagerel $LN10+346
	DD	imagerel $unwind$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA DD imagerel ?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1QSVTask@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+72
	DD	imagerel $unwind$??1QSVTask@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0QSVTask@@QEAA@$$QEAU0@@Z DD imagerel $LN5
	DD	imagerel $LN5+179
	DD	imagerel $unwind$??0QSVTask@@QEAA@$$QEAU0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA DD imagerel ?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA
	DD	imagerel ?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA DD imagerel ?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA
	DD	imagerel ?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GQSVTask@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GQSVTask@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0CQSVTaskControl@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+111
	DD	imagerel $unwind$??0CQSVTaskControl@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1CQSVTaskControl@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??1CQSVTaskControl@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z DD imagerel $LN16
	DD	imagerel $LN16+540
	DD	imagerel $unwind$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA DD imagerel ?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA
	DD	imagerel ?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA
$pdata$?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA DD imagerel ?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA
	DD	imagerel ?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ DD imagerel $LN17
	DD	imagerel $LN17+589
	DD	imagerel $unwind$?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ
$pdata$?Close@CQSVTaskControl@@UEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+176
	DD	imagerel $unwind$?Close@CQSVTaskControl@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UQSVTask@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@UQSVTask@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+228
	DD	imagerel $unwind$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+287
	DD	imagerel $unwind$?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCQSVTaskControl@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GCQSVTaskControl@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+391
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+103
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+333
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+86
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+153
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+214
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@CQSVTaskControl@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CQSVTaskControl@@8 DD imagerel ??_R0?AVCQSVTaskControl@@@8 ; CQSVTaskControl::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CQSVTaskControl@@8
rdata$r	ENDS
;	COMDAT ??_R2CQSVTaskControl@@8
rdata$r	SEGMENT
??_R2CQSVTaskControl@@8 DD imagerel ??_R1A@?0A@EA@CQSVTaskControl@@8 ; CQSVTaskControl::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3CQSVTaskControl@@8
rdata$r	SEGMENT
??_R3CQSVTaskControl@@8 DD 00H				; CQSVTaskControl::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2CQSVTaskControl@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCQSVTaskControl@@@8
data$r	SEGMENT
??_R0?AVCQSVTaskControl@@@8 DQ FLAT:??_7type_info@@6B@	; CQSVTaskControl `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCQSVTaskControl@@', 00H
data$r	ENDS
;	COMDAT ??_R4CQSVTaskControl@@6B@
rdata$r	SEGMENT
??_R4CQSVTaskControl@@6B@ DD 01H			; CQSVTaskControl::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCQSVTaskControl@@@8
	DD	imagerel ??_R3CQSVTaskControl@@8
	DD	imagerel ??_R4CQSVTaskControl@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JO@JHNDBOJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1JO@JHNDBOJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'Q', 00H
	DB	'S', 00H, 'V', 00H, 'T', 00H, 'a', 00H, 's', 00H, 'k', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c'
	DB	00H, 't', 00H, ' ', 00H, 'Q', 00H, 'S', 00H, 'V', 00H, 'T', 00H
	DB	'a', 00H, 's', 00H, 'k', 00H, '>', 00H, ' ', 00H, '>', 00H, ':'
	DB	00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CQSVTaskControl@@6B@
CONST	SEGMENT
??_7CQSVTaskControl@@6B@ DQ FLAT:??_R4CQSVTaskControl@@6B@ ; CQSVTaskControl::`vftable'
	DQ	FLAT:??_ECQSVTaskControl@@UEAAPEAXI@Z
	DQ	FLAT:?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z
	DQ	FLAT:?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ
	DQ	FLAT:?Close@CQSVTaskControl@@UEAAXXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	08cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z$rtcVarDesc DD 028H ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'e', 03H
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 022819H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z$rtcName$0 DB 05fH ; std::swap<RGYOutput *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z$rtcVarDesc DD 028H ; std::swap<RGYOutput *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z$rtcFrameData DD 01H ; std::swap<RGYOutput *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 022801H
	DD	07010b214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCQSVTaskControl@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z$rtcName$0 DB 05fH ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z$rtcVarDesc DD 024H ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z$rtcFrameData DD 01H ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
	DD	01H
	DQ	FLAT:??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
	DD	00H
	DQ	FLAT:??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UQSVTask@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GQSVTask@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0QSVTask@@QEAA@$$QEAU0@@Z DB 08H
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'6'
	DB	04H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0QSVTask@@QEAA@$$QEAU0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0QSVTask@@QEAA@$$QEAU0@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0QSVTask@@QEAA@$$QEAU0@@Z
	DD	imagerel $ip2state$??0QSVTask@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0QSVTask@@QEAA@$$QEAU0@@Z DD 032411H
	DD	0700c4210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0QSVTask@@QEAA@$$QEAU0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1QSVTask@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1QSVTask@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1QSVTask@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1QSVTask@@QEAA@XZ
	DD	imagerel $ip2state$??1QSVTask@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1QSVTask@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1QSVTask@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ DD 022101H
	DD	07006d20aH
xdata	ENDS
xdata	SEGMENT
$unwind$??0QSVTask@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0QSVTask@@QEAA@XZ
$cppxdata$??0QSVTask@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0QSVTask@@QEAA@XZ
	DD	imagerel $ip2state$??0QSVTask@@QEAA@XZ
$stateUnwindMap$??0QSVTask@@QEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA
$ip2state$??0QSVTask@@QEAA@XZ DB 08H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	'$'
	DB	04H
	DB	'L'
	DB	00H
$cppxdata$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z
	DD	imagerel $ip2state$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z
$stateUnwindMap$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA
$unwind$?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z DD 022d11H
	DD	070157219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z
$ip2state$?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z DB 016H
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	'z'
	DB	00H
	DB	'&'
	DB	02H
	DB	't'
	DB	00H
	DB	'&'
	DB	02H
	DB	'b'
	DB	00H
	DB	' '
	DB	02H
	DB	'$'
	DB	00H
	DB	' '
	DB	02H
	DB	'2'
	DB	00H
$cppxdata$??0CQSVTaskControl@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CQSVTaskControl@@QEAA@XZ
	DD	imagerel $ip2state$??0CQSVTaskControl@@QEAA@XZ
$unwind$?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ DD 021e01H
	DD	07006320aH
$unwind$??0CQSVTaskControl@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CQSVTaskControl@@QEAA@XZ
$stateUnwindMap$??0CQSVTaskControl@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA
$ip2state$??0CQSVTaskControl@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'J'
	DB	00H
$cppxdata$??1CQSVTaskControl@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CQSVTaskControl@@UEAA@XZ
	DD	imagerel $ip2state$??1CQSVTaskControl@@UEAA@XZ
$stateUnwindMap$??1CQSVTaskControl@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA
$unwind$?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1CQSVTaskControl@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CQSVTaskControl@@UEAA@XZ
$ip2state$??1CQSVTaskControl@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
$cppxdata$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z DB 08H
	DD	imagerel $stateUnwindMap$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z
	DD	imagerel $ip2state$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z
$unwind$?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z DD 023311H
	DD	07015f21cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z
$stateUnwindMap$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA
$ip2state$?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z DB 01eH
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
	DB	','
	DB	02H
	DB	080H
	DB	00H
	DB	','
	DB	02H
	DB	'6'
	DB	00H
	DB	','
	DB	02H
	DB	014H
	DB	00H
	DB	','
	DB	02H
	DB	'a', 02H
	DB	04H
	DB	'0'
	DB	02H
	DB	'`'
	DB	00H
	DB	'&'
	DB	02H
	DB	01aH
	DB	00H
	ORG $+1
$unwind$?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ DD 021e01H
	DD	07006b20aH
$unwind$?Close@CQSVTaskControl@@UEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z
	DD	imagerel $ip2state$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<_mfxSyncPoint *> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><std::allocator<_mfxSyncPoint *> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z ; std::forward<std::allocator<_mfxSyncPoint *> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><std::allocator<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z PROC ; std::move<std::allocator<_mfxSyncPoint *> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<_mfxSyncPoint *> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 16
_Right$ = 24
??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z PROC ; std::_Ptr_base<RGYOutput>::_Move_construct_from<RGYOutput>, COMDAT

; 825  :     void _Move_construct_from(_Ptr_base<_Ty2>&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 826  :         // implement shared_ptr's (converting) move ctor and weak_ptr's move ctor
; 827  :         _Ptr = _Right._Ptr;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00018	48 89 08	 mov	 QWORD PTR [rax], rcx

; 828  :         _Rep = _Right._Rep;

  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00025	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00029	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 829  : 
; 830  :         _Right._Ptr = nullptr;

  0002d	48 8b 44 24 18	 mov	 rax, QWORD PTR _Right$[rsp]
  00032	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 831  :         _Right._Rep = nullptr;

  00039	48 8b 44 24 18	 mov	 rax, QWORD PTR _Right$[rsp]
  0003e	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 832  :     }

  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z ENDP ; std::_Ptr_base<RGYOutput>::_Move_construct_from<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z PROC ; std::move<std::shared_ptr<RGYOutput> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z ENDP ; std::move<std::shared_ptr<RGYOutput> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask,QSVTask>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ; std::forward<QSVTask>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0QSVTask@@QEAA@$$QEAU0@@Z

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask,QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z PROC ; std::forward<QSVTask>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ENDP ; std::forward<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<QSVTask>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@UQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ; std::forward<QSVTask>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z ; std::_Unfancy<QSVTask>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@UQSVTask@@U1@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@$$QEAU3@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask,QSVTask>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00068	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006d	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  00071	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z PROC ; std::move<QSVTask &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ENDP ; std::move<QSVTask &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z PROC ; std::_Get_unwrapped<QSVTask>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z ENDP ; std::_Get_unwrapped<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z PROC ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  0002d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00032	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00037	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003c	e8 00 00 00 00	 call	 ??0QSVTask@@QEAA@XZ	; QSVTask::QSVTask

; 759  :     }

  00041	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z PROC ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z ; std::_Get_unwrapped<QSVTask>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@UQSVTask@@@std@@YAPEAUQSVTask@@QEAU1@@Z ; std::_Get_unwrapped<QSVTask>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Uninitialized_backout_al<std::allocator<QSVTask> >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 10		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00073	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00078	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007d	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00082	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00084	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00089	e8 00 00 00 00	 call	 ??$move@AEAUQSVTask@@@std@@YA$$QEAUQSVTask@@AEAU1@@Z ; std::move<QSVTask &>
  0008e	48 8b d0	 mov	 rdx, rax
  00091	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00096	e8 00 00 00 00	 call	 ??$_Emplace_back@UQSVTask@@@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAX$$QEAUQSVTask@@@Z ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<QSVTask>

; 1744 :         }

  0009b	eb cb		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009d	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Release
  000a7	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000ac	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000b1	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
  000b6	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000bb	48 8b f8	 mov	 rdi, rax
  000be	48 8b cc	 mov	 rcx, rsp
  000c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z$rtcFrameData
  000c8	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cd	48 8b c7	 mov	 rax, rdi
  000d0	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ENDP ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<144>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 c7 71 1c
	c7 71 1c c7 01	 mov	 rax, 128102389400760775	; 01c71c71c71c71c7H
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 c7 71 1c
	c7 71 1c c7 01	 mov	 rax, 128102389400760775	; 01c71c71c71c71c7H
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 69 44 24 40
	90 00 00 00	 imul	 rax, QWORD PTR _Count$[rsp], 144 ; 00000090H
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<144>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z ; std::_Unfancy<QSVTask>
  0002c	48 8b d0	 mov	 rdx, rax
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00038	e8 00 00 00 00	 call	 ??$construct@UQSVTask@@$$V@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::construct<QSVTask>

; 1582 :         ++_Last;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ; std::_Destroy_range<std::allocator<QSVTask> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Uninitialized_backout_al<std::allocator<QSVTask> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Uninitialized_backout_al<std::allocator<QSVTask> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z
_TEXT	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >, COMDAT

; 1908 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1909 :     // value-initialize _Count objects to raw _First, using _Al
; 1910 :     using _Ptrty = typename _Alloc::value_type*;
; 1911 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1912 :         (void) _Al;
; 1913 :         auto _PFirst = _Unfancy(_First);
; 1914 :         _Zero_range(_PFirst, _PFirst + _Count);
; 1915 :         return _First + _Count;
; 1916 :     } else {
; 1917 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};

  00028	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Al$[rsp]
  0002d	48 8b 54 24 60	 mov	 rdx, QWORD PTR _First$[rsp]
  00032	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@PEAUQSVTask@@AEAV?$allocator@UQSVTask@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Uninitialized_backout_al<std::allocator<QSVTask> >
  0003c	90		 npad	 1

; 1918 :         for (; 0 < _Count; --_Count) {

  0003d	eb 0d		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0003f	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00044	48 ff c8	 dec	 rax
  00047	48 89 44 24 68	 mov	 QWORD PTR _Count$[rsp], rax
$LN4@Uninitiali:
  0004c	48 83 7c 24 68
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00052	76 0c		 jbe	 SHORT $LN3@Uninitiali

; 1919 :             _Backout._Emplace_back();

  00054	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00059	e8 00 00 00 00	 call	 ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Emplace_back<>

; 1920 :         }

  0005e	eb df		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1921 : 
; 1922 :         return _Backout._Release();

  00060	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00065	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAAPEAUQSVTask@@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::_Release
  0006a	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  0006f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00074	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
  00079	48 8b 44 24 48	 mov	 rax, QWORD PTR $T5[rsp]

; 1923 :     }
; 1924 : }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Backout$4 = 40
$T5 = 72
_First$ = 96
_Count$ = 104
_Al$ = 112
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<QSVTask> >::~_Uninitialized_backout_al<std::allocator<QSVTask> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z PROC ; std::move<RGYOutput * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z ENDP ; std::move<RGYOutput * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG140755
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG140756
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG140757
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG140758
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG140759
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG140760
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z PROC ; std::_Default_allocator_traits<std::allocator<QSVTask> >::destroy<QSVTask>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_GQSVTask@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<QSVTask> >::destroy<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z PROC ; std::_Unfancy<QSVTask>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z ENDP ; std::_Unfancy<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Oldsize$ = 56
_Newcapacity$ = 64
_Newvec$ = 72
_Appended_first$ = 80
_Appended_last$ = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1133 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1134 :         if (_Newsize > max_size()) {

  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::max_size
  00032	48 39 44 24 78	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00037	76 05		 jbe	 SHORT $LN2@Resize_rea

; 1135 :             _Xlength();

  00039	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Xlength
$LN2@Resize_rea:

; 1136 :         }
; 1137 : 
; 1138 :         auto& _My_data    = _Mypair._Myval2;

  0003e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1139 :         pointer& _Myfirst = _My_data._Myfirst;

  00048	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004d	48 83 c0 08	 add	 rax, 8
  00051	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1140 :         pointer& _Mylast  = _My_data._Mylast;

  00056	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0005b	48 83 c0 10	 add	 rax, 16
  0005f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1141 : 
; 1142 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  00064	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00069	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 2b c1	 sub	 rax, rcx
  00077	48 99		 cdq
  00079	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  0007e	48 f7 f9	 idiv	 rcx
  00081	48 89 44 24 38	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 1143 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  00086	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  0008b	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00090	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Calculate_growth
  00095	48 89 44 24 40	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 1144 : 
; 1145 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);

  0009a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0009f	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  000a4	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::allocate
  000b1	48 89 44 24 48	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1146 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000b6	48 69 44 24 38
	90 00 00 00	 imul	 rax, QWORD PTR _Oldsize$[rsp], 144 ; 00000090H
  000bf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000c4	48 03 c8	 add	 rcx, rax
  000c7	48 8b c1	 mov	 rax, rcx
  000ca	48 89 44 24 50	 mov	 QWORD PTR _Appended_first$[rsp], rax

; 1147 :         pointer _Appended_last        = _Appended_first;

  000cf	48 8b 44 24 50	 mov	 rax, QWORD PTR _Appended_first$[rsp]
  000d4	48 89 44 24 58	 mov	 QWORD PTR _Appended_last$[rsp], rax

; 1148 : 
; 1149 :         _TRY_BEGIN
; 1150 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  000d9	48 8b 44 24 38	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000de	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e3	48 2b c8	 sub	 rcx, rax
  000e6	48 8b c1	 mov	 rax, rcx
  000e9	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Val$[rsp]
  000f1	44 0f b6 09	 movzx	 r9d, BYTE PTR [rcx]
  000f5	4c 8b c0	 mov	 r8, rax
  000f8	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Appended_first$[rsp]
  000fd	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00102	e8 00 00 00 00	 call	 ?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Ufill
  00107	48 89 44 24 58	 mov	 QWORD PTR _Appended_last$[rsp], rax

; 1151 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  0010c	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00111	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00116	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00119	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0011e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00121	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00126	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept
  0012b	90		 npad	 1
  0012c	eb 00		 jmp	 SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1155 :         _RERAISE;
; 1156 :         _CATCH_END
; 1157 : 
; 1158 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  0012e	4c 8b 4c 24 40	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  00133	4c 8b 44 24 78	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00138	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0013d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00142	e8 00 00 00 00	 call	 ?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Change_array

; 1159 :     }

  00147	48 83 c4 60	 add	 rsp, 96			; 00000060H
  0014b	5f		 pop	 rdi
  0014c	c3		 ret	 0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Oldsize$ = 56
_Newcapacity$ = 64
_Newvec$ = 72
_Appended_first$ = 80
_Appended_last$ = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1152 :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);

  00013	4c 8b 45 58	 mov	 r8, QWORD PTR _Appended_last$[rbp]
  00017	48 8b 55 50	 mov	 rdx, QWORD PTR _Appended_first$[rbp]
  0001b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00024	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  0002d	4c 8b 45 40	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00031	48 8b 55 48	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::deallocate

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1155 :         _RERAISE;

  0003d	33 d2		 xor	 edx, edx
  0003f	33 c9		 xor	 ecx, ecx
  00041	e8 00 00 00 00	 call	 _CxxThrowException
  00046	90		 npad	 1

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1155 :         _RERAISE;
; 1156 :         _CATCH_END

  00047	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$0
  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
  00055	cc		 int	 3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Oldsize$ = 56
_Newcapacity$ = 64
_Newvec$ = 72
_Appended_first$ = 80
_Appended_last$ = 88
this$ = 112
_Newsize$ = 120
_Val$ = 128
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1152 :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1153 :         _Destroy(_Appended_first, _Appended_last);

  00013	4c 8b 45 58	 mov	 r8, QWORD PTR _Appended_last$[rbp]
  00017	48 8b 55 50	 mov	 rdx, QWORD PTR _Appended_first$[rbp]
  0001b	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  0001f	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy

; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);

  00024	48 8b 4d 70	 mov	 rcx, QWORD PTR this$[rbp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  0002d	4c 8b 45 40	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00031	48 8b 55 48	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::deallocate

; 1155 :         _RERAISE;

  0003d	33 d2		 xor	 edx, edx
  0003f	33 c9		 xor	 ecx, ecx
  00041	e8 00 00 00 00	 call	 _CxxThrowException
  00046	90		 npad	 1

; 1156 :         _CATCH_END

  00047	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$0
  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
  00055	cc		 int	 3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z PROC ; std::swap<RGYOutput *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z ; std::move<RGYOutput * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z ; std::move<RGYOutput * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYOutput@@@std@@YA$$QEAPEAVRGYOutput@@AEAPEAV1@@Z ; std::move<RGYOutput * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z ENDP ; std::swap<RGYOutput *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z PROC ; std::_Destroy_range<std::allocator<_mfxSyncPoint *> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z PROC ; std::_Destroy_range<std::allocator<QSVTask> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 10		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  00035	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  0003a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003f	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00044	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0004b	e8 00 00 00 00	 call	 ??$_Unfancy@UQSVTask@@@std@@YAPEAUQSVTask@@PEAU1@@Z ; std::_Unfancy<QSVTask>
  00050	90		 npad	 1
  00051	48 8b d0	 mov	 rdx, rax
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00059	e8 00 00 00 00	 call	 ??$destroy@UQSVTask@@@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SAXAEAV?$allocator@UQSVTask@@@1@QEAUQSVTask@@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::destroy<QSVTask>
  0005e	90		 npad	 1

; 1039 :         }

  0005f	eb c9		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  00061	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00065	5f		 pop	 rdi
  00066	c3		 ret	 0
??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<QSVTask> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ ; std::allocator<_mfxSyncPoint *>::allocator<_mfxSyncPoint *>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><_mfxSyncPoint *>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><_mfxSyncPoint *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z PROC ; std::_Ptr_base<RGYOutput>::_Copy_construct_from<RGYOutput>, COMDAT

; 835  :     void _Copy_construct_from(const shared_ptr<_Ty2>& _Other) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 836  :         // implement shared_ptr's (converting) copy ctor
; 837  :         if (_Other._Rep) {

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00028	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  0002d	74 0e		 je	 SHORT $LN2@Copy_const

; 838  :             _Other._Rep->_Incref();

  0002f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Other$[rsp]
  00034	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00038	e8 00 00 00 00	 call	 ?_Incref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Incref
$LN2@Copy_const:

; 839  :         }
; 840  : 
; 841  :         _Ptr = _Other._Ptr;

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00047	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 842  :         _Rep = _Other._Rep;

  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00057	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0005b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 843  :     }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z ENDP ; std::_Ptr_base<RGYOutput>::_Copy_construct_from<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@UQSVTask@@@std@@QEAA@XZ ; std::allocator<QSVTask>::allocator<QSVTask>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<QSVTask> >::_Vector_val<std::_Simple_types<QSVTask> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><QSVTask>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Oldsize$ = 56
_Newlast$1 = 64
_Oldcapacity$2 = 72
_Oldlast$3 = 80
this$ = 112
_Newsize$ = 120
_Val$ = 128
??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize<std::_Value_init_tag>, COMDAT

; 1162 :     void _Resize(const size_type _Newsize, const _Ty2& _Val) { // trim or append elements, provide strong guarantee

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1163 :         auto& _My_data      = _Mypair._Myval2;

  00028	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1164 :         pointer& _Myfirst   = _My_data._Myfirst;

  00032	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1165 :         pointer& _Mylast    = _My_data._Mylast;

  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 83 c0 10	 add	 rax, 16
  00049	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1166 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00053	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00058	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0005b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005e	48 2b c1	 sub	 rax, rcx
  00061	48 99		 cdq
  00063	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00068	48 f7 f9	 idiv	 rcx
  0006b	48 89 44 24 38	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 1167 :         if (_Newsize < _Oldsize) { // trim

  00070	48 8b 44 24 38	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  00075	48 39 44 24 78	 cmp	 QWORD PTR _Newsize$[rsp], rax
  0007a	73 56		 jae	 SHORT $LN2@Resize

; 1168 :             const pointer _Newlast = _Myfirst + _Newsize;

  0007c	48 69 44 24 78
	90 00 00 00	 imul	 rax, QWORD PTR _Newsize$[rsp], 144 ; 00000090H
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008a	48 03 01	 add	 rax, QWORD PTR [rcx]
  0008d	48 89 44 24 40	 mov	 QWORD PTR _Newlast$1[rsp], rax

; 1169 :             _Orphan_range(_Newlast, _Mylast);

  00092	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00097	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0009a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newlast$1[rsp]
  0009f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range

; 1170 :             _Destroy(_Newlast, _Mylast);

  000a9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000ae	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000b1	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newlast$1[rsp]
  000b6	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy

; 1171 :             _Mylast = _Newlast;

  000c0	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000c5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newlast$1[rsp]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1172 :             return;

  000cd	e9 af 00 00 00	 jmp	 $LN1@Resize
$LN2@Resize:

; 1173 :         }
; 1174 : 
; 1175 :         if (_Newsize > _Oldsize) { // append

  000d2	48 8b 44 24 38	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000d7	48 39 44 24 78	 cmp	 QWORD PTR _Newsize$[rsp], rax
  000dc	0f 86 9f 00 00
	00		 jbe	 $LN3@Resize

; 1176 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000e2	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000ec	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ef	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  000f3	48 2b c1	 sub	 rax, rcx
  000f6	48 99		 cdq
  000f8	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  000fd	48 f7 f9	 idiv	 rcx
  00100	48 89 44 24 48	 mov	 QWORD PTR _Oldcapacity$2[rsp], rax

; 1177 :             if (_Newsize > _Oldcapacity) { // reallocate

  00105	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldcapacity$2[rsp]
  0010a	48 39 44 24 78	 cmp	 QWORD PTR _Newsize$[rsp], rax
  0010f	76 19		 jbe	 SHORT $LN4@Resize

; 1178 :                 _Resize_reallocate(_Newsize, _Val);

  00111	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR _Val$[rsp]
  00119	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  0011e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00123	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize_reallocate<std::_Value_init_tag>

; 1179 :                 return;

  00128	eb 57		 jmp	 SHORT $LN1@Resize
$LN4@Resize:

; 1180 :             }
; 1181 : 
; 1182 :             const pointer _Oldlast = _Mylast;

  0012a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0012f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00132	48 89 44 24 50	 mov	 QWORD PTR _Oldlast$3[rsp], rax

; 1183 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00137	48 8b 44 24 38	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  0013c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  00141	48 2b c8	 sub	 rcx, rax
  00144	48 8b c1	 mov	 rax, rcx
  00147	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Val$[rsp]
  0014f	44 0f b6 09	 movzx	 r9d, BYTE PTR [rcx]
  00153	4c 8b c0	 mov	 r8, rax
  00156	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Oldlast$3[rsp]
  0015b	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00160	e8 00 00 00 00	 call	 ?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Ufill
  00165	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0016a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1184 :             _Orphan_range(_Oldlast, _Oldlast);

  0016d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Oldlast$3[rsp]
  00172	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Oldlast$3[rsp]
  00177	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0017c	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1185 :         }
; 1186 : 
; 1187 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1188 :     }

  00181	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00185	5f		 pop	 rdi
  00186	c3		 ret	 0
??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCQSVTaskControl@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCQSVTaskControl@@UEAAPEAXI@Z PROC			; CQSVTaskControl::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1CQSVTaskControl@@UEAA@XZ ; CQSVTaskControl::~CQSVTaskControl
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 38 00 00 00	 mov	 edx, 56			; 00000038H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GCQSVTaskControl@@UEAAPEAXI@Z ENDP			; CQSVTaskControl::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<QSVTask> >::_Vector_val<std::_Simple_types<QSVTask> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<QSVTask> >::_Vector_val<std::_Simple_types<QSVTask> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UQSVTask@@@2@XZ ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA PROC ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA ENDP ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA PROC ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAXPEAUQSVTask@@0@Z@4HA ENDP ; `std::vector<QSVTask,std::allocator<QSVTask> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@CAXXZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 5e		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 99		 cdq
  000a5	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  000aa	48 f7 f9	 idiv	 rcx
  000ad	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000b2	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  000bc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000c1	4c 8b c1	 mov	 r8, rcx
  000c4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c9	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z ; std::allocator<QSVTask>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d9	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000de	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000e1	48 69 44 24 70
	90 00 00 00	 imul	 rax, QWORD PTR _Newsize$[rsp], 144 ; 00000090H
  000ea	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ef	48 03 c8	 add	 rcx, rax
  000f2	48 8b c1	 mov	 rax, rcx
  000f5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000fa	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000fd	48 69 44 24 78
	90 00 00 00	 imul	 rax, QWORD PTR _Newcapacity$[rsp], 144 ; 00000090H
  00106	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0010b	48 03 c8	 add	 rcx, rax
  0010e	48 8b c1	 mov	 rax, rcx
  00111	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00116	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00119	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0011d	5f		 pop	 rdi
  0011e	c3		 ret	 0
?_Change_array@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXQEAUQSVTask@@_K1@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UQSVTask@@@std@@@std@@YAXPEAUQSVTask@@QEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ; std::_Destroy_range<std::allocator<QSVTask> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAUQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@QEAU1@0PEAU1@AEAV?$allocator@UQSVTask@@@0@@Z ; std::_Uninitialized_move<QSVTask *,std::allocator<QSVTask> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z
_TEXT	SEGMENT
this$ = 48
_Dest$ = 56
_Count$ = 64
__formal$ = 72
?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::_Ufill, COMDAT

; 1537 :     pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

$LN3:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1538 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1539 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  00037	4c 8b c0	 mov	 r8, rax
  0003a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0003f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00044	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@UQSVTask@@@std@@@std@@YAPEAUQSVTask@@PEAU1@_KAEAV?$allocator@UQSVTask@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<QSVTask> >

; 1540 :     }

  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
?_Ufill@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAPEAUQSVTask@@PEAU3@_KU_Value_init_tag@2@@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 99		 cdq
  00044	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00049	48 f7 f9	 idiv	 rcx
  0004c	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  00051	73 02		 jae	 SHORT $LN7@operator
  00053	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  0005c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00061	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00068	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007d	b9 02 00 00 00	 mov	 ecx, 2
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00088	90		 npad	 1
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN11@operator
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN11@operator:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1JO@JHNDBOJB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000c2	33 c0		 xor	 eax, eax
  000c4	85 c0		 test	 eax, eax
  000c6	0f 85 61 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000cc	48 69 44 24 58
	90 00 00 00	 imul	 rax, QWORD PTR _Pos$[rsp], 144 ; 00000090H
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000da	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1459 :     }

  000de	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000e2	5f		 pop	 rdi
  000e3	c3		 ret	 0
??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00041	48 f7 f9	 idiv	 rcx

; 1449 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?capacity@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEBAAEBV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z ; std::_Default_allocator_traits<std::allocator<QSVTask> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 99		 cdq
  0003c	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00041	48 f7 f9	 idiv	 rcx

; 1439 :     }

  00044	48 83 c4 10	 add	 rsp, 16
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXPEAUQSVTask@@0@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::resize, COMDAT

; 1191 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1192 :         // trim or append value-initialized elements, provide strong guarantee
; 1193 :         _Resize(_Newsize, _Value_init_tag{});

  00023	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 01 00 00 00	 mov	 ecx, 1
  00032	f3 aa		 rep stosb
  00034	4c 8d 44 24 20	 lea	 r8, QWORD PTR $T1[rsp]
  00039	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ??$_Resize@U_Value_init_tag@std@@@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::_Resize<std::_Value_init_tag>

; 1194 :     }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAXXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><QSVTask>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ PROC ; std::vector<QSVTask,std::allocator<QSVTask> >::vector<QSVTask,std::allocator<QSVTask> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UQSVTask@@@std@@V?$_Vector_val@U?$_Simple_types@UQSVTask@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1>::_Compressed_pair<std::allocator<QSVTask>,std::_Vector_val<std::_Simple_types<QSVTask> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@AEAAAEAV?$allocator@UQSVTask@@@2@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0UQSVTask@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UQSVTask@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><QSVTask>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ENDP ; std::vector<QSVTask,std::allocator<QSVTask> >::vector<QSVTask,std::allocator<QSVTask> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<QSVTask> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 c7 71 1c
	c7 71 1c c7 01	 mov	 rax, 128102389400760775	; 01c71c71c71c71c7H

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UQSVTask@@@std@@@std@@SA_KAEBV?$allocator@UQSVTask@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<QSVTask> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z PROC ; std::allocator<QSVTask>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0JA@@std@@YA_K_K@Z ; std::_Get_size_of_n<144>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@UQSVTask@@@std@@QEAAPEAUQSVTask@@_K@Z ENDP ; std::allocator<QSVTask>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z PROC ; std::allocator<QSVTask>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 69 44 24 40
	90 00 00 00	 imul	 rax, QWORD PTR _Count$[rsp], 144 ; 00000090H
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@UQSVTask@@@std@@QEAAXQEAUQSVTask@@_K@Z ENDP ; std::allocator<QSVTask>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@UQSVTask@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@UQSVTask@@@std@@QEAA@XZ PROC		; std::allocator<QSVTask>::allocator<QSVTask>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@UQSVTask@@@std@@QEAA@XZ ENDP		; std::allocator<QSVTask>::allocator<QSVTask>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
i$1 = 32
this$ = 64
?Close@CQSVTaskControl@@UEAAXXZ PROC			; CQSVTaskControl::Close

; 166  : void CQSVTaskControl::Close() {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 167  :     if (m_pTasks.size()) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?size@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEBA_KXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::size
  0002f	48 85 c0	 test	 rax, rax
  00032	74 40		 je	 SHORT $LN5@Close

; 168  :         for (mfxU32 i = 0; i < m_nPoolSize; i++) {

  00034	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0003c	eb 0a		 jmp	 SHORT $LN4@Close
$LN2@Close:
  0003e	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00042	ff c0		 inc	 eax
  00044	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@Close:
  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004d	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00050	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00054	73 1e		 jae	 SHORT $LN3@Close

; 169  :             m_pTasks[i].Close();

  00056	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005f	48 83 c1 08	 add	 rcx, 8
  00063	8b d0		 mov	 edx, eax
  00065	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ ; QSVTask::Close

; 170  :         }

  00072	eb ca		 jmp	 SHORT $LN2@Close
$LN3@Close:
$LN5@Close:

; 171  :     }
; 172  :     m_pTasks.clear();

  00074	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 83 c0 08	 add	 rax, 8
  0007d	48 8b c8	 mov	 rcx, rax
  00080	e8 00 00 00 00	 call	 ?clear@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAXXZ ; std::vector<QSVTask,std::allocator<QSVTask> >::clear

; 173  : 
; 174  :     m_pmfxSession = NULL;

  00085	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008a	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0

; 175  :     m_nTaskBufferStart = 0;

  00092	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00097	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0

; 176  :     m_nPoolSize = 0;

  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a3	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [rax+40], 0

; 177  : }

  000aa	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
?Close@CQSVTaskControl@@UEAAXXZ ENDP			; CQSVTaskControl::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
sts$ = 32
i$1 = 36
<range>$L0$2 = 40
<begin>$L0$3 = 48
<end>$L0$4 = 56
syncp$5 = 64
vppsts$6 = 72
tv76 = 80
tv190 = 88
this$ = 112
?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ PROC ; CQSVTaskControl::SynchronizeFirstTask

; 132  : mfxStatus CQSVTaskControl::SynchronizeFirstTask() {

$LN17:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 133  :     if (m_pTasks[m_nTaskBufferStart].encSyncPoint == NULL) {

  0001e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  00026	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0002b	48 83 c1 08	 add	 rcx, 8
  0002f	8b d0		 mov	 edx, eax
  00031	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  00036	48 83 78 50 00	 cmp	 QWORD PTR [rax+80], 0
  0003b	75 0a		 jne	 SHORT $LN8@Synchroniz

; 134  :         return MFX_ERR_NOT_FOUND; //タスクバッファにもうタスクはない

  0003d	b8 f7 ff ff ff	 mov	 eax, -9
  00042	e9 00 02 00 00	 jmp	 $LN1@Synchroniz
$LN8@Synchroniz:

; 135  :     }
; 136  : 
; 137  :     mfxStatus sts = m_pmfxSession->SyncOperation(m_pTasks[m_nTaskBufferStart].encSyncPoint, MSDK_WAIT_INTERVAL);

  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0004c	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  0004f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00054	48 83 c1 08	 add	 rcx, 8
  00058	8b d0		 mov	 edx, eax
  0005a	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  0005f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00064	48 8b 49 30	 mov	 rcx, QWORD PTR [rcx+48]
  00068	48 8b 54 24 70	 mov	 rdx, QWORD PTR this$[rsp]
  0006d	48 8b 52 30	 mov	 rdx, QWORD PTR [rdx+48]
  00071	48 89 54 24 50	 mov	 QWORD PTR tv76[rsp], rdx
  00076	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00079	48 89 4c 24 58	 mov	 QWORD PTR tv190[rsp], rcx
  0007e	41 b8 90 d0 03
	00		 mov	 r8d, 250000		; 0003d090H
  00084	48 8b 50 50	 mov	 rdx, QWORD PTR [rax+80]
  00088	48 8b 44 24 50	 mov	 rax, QWORD PTR tv76[rsp]
  0008d	48 8b c8	 mov	 rcx, rax
  00090	48 8b 44 24 58	 mov	 rax, QWORD PTR tv190[rsp]
  00095	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]
  0009b	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 138  : 
; 139  :     if (sts == MFX_ERR_NONE) {

  0009f	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  000a4	0f 85 d0 00 00
	00		 jne	 $LN9@Synchroniz

; 140  :         if (MFX_ERR_NONE > (sts = m_pTasks[m_nTaskBufferStart].WriteBitstream())) {

  000aa	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000af	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  000b2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000b7	48 83 c1 08	 add	 rcx, 8
  000bb	8b d0		 mov	 edx, eax
  000bd	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  000c2	48 8b c8	 mov	 rcx, rax
  000c5	e8 00 00 00 00	 call	 ?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ ; QSVTask::WriteBitstream
  000ca	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax
  000ce	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  000d3	7d 09		 jge	 SHORT $LN11@Synchroniz

; 141  :             return sts;

  000d5	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  000d9	e9 69 01 00 00	 jmp	 $LN1@Synchroniz
$LN11@Synchroniz:

; 142  :         }
; 143  : 
; 144  :         if (MFX_ERR_NONE > (sts = m_pTasks[m_nTaskBufferStart].Clear())) {

  000de	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000e3	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  000e6	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000eb	48 83 c1 08	 add	 rcx, 8
  000ef	8b d0		 mov	 edx, eax
  000f1	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  000f6	48 8b c8	 mov	 rcx, rax
  000f9	e8 00 00 00 00	 call	 ?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ ; QSVTask::Clear
  000fe	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax
  00102	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00107	7d 09		 jge	 SHORT $LN12@Synchroniz

; 145  :             return sts;

  00109	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  0010d	e9 35 01 00 00	 jmp	 $LN1@Synchroniz
$LN12@Synchroniz:

; 146  :         }
; 147  : 
; 148  :         for (uint32_t i = 0; i < m_nPoolSize; i++) {

  00112	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0011a	eb 0a		 jmp	 SHORT $LN4@Synchroniz
$LN2@Synchroniz:
  0011c	8b 44 24 24	 mov	 eax, DWORD PTR i$1[rsp]
  00120	ff c0		 inc	 eax
  00122	89 44 24 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@Synchroniz:
  00126	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0012b	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  0012e	39 44 24 24	 cmp	 DWORD PTR i$1[rsp], eax
  00132	73 41		 jae	 SHORT $LN3@Synchroniz

; 149  :             m_nTaskBufferStart = (m_nTaskBufferStart + 1) % m_nPoolSize;

  00134	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00139	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  0013c	ff c0		 inc	 eax
  0013e	33 d2		 xor	 edx, edx
  00140	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00145	f7 71 28	 div	 DWORD PTR [rcx+40]
  00148	8b c2		 mov	 eax, edx
  0014a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0014f	89 41 2c	 mov	 DWORD PTR [rcx+44], eax

; 150  :             if (m_pTasks[m_nTaskBufferStart].encSyncPoint != NULL) {

  00152	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00157	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  0015a	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0015f	48 83 c1 08	 add	 rcx, 8
  00163	8b d0		 mov	 edx, eax
  00165	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  0016a	48 83 78 50 00	 cmp	 QWORD PTR [rax+80], 0
  0016f	74 02		 je	 SHORT $LN13@Synchroniz

; 151  :                 break;

  00171	eb 02		 jmp	 SHORT $LN3@Synchroniz
$LN13@Synchroniz:

; 152  :             }
; 153  :         }

  00173	eb a7		 jmp	 SHORT $LN2@Synchroniz
$LN3@Synchroniz:

; 154  :     } else if (sts == MFX_ERR_ABORTED) {

  00175	e9 c9 00 00 00	 jmp	 $LN10@Synchroniz
$LN9@Synchroniz:
  0017a	83 7c 24 20 f4	 cmp	 DWORD PTR sts$[rsp], -12
  0017f	0f 85 be 00 00
	00		 jne	 $LN14@Synchroniz

; 155  :         for (auto syncp : m_pTasks[m_nTaskBufferStart].vppSyncPoint) {

  00185	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0018a	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  0018d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00192	48 83 c1 08	 add	 rcx, 8
  00196	8b d0		 mov	 edx, eax
  00198	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  0019d	48 83 c0 58	 add	 rax, 88			; 00000058H
  001a1	48 89 44 24 28	 mov	 QWORD PTR <range>$L0$2[rsp], rax
  001a6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR <range>$L0$2[rsp]
  001ab	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_begin
  001b0	48 89 44 24 30	 mov	 QWORD PTR <begin>$L0$3[rsp], rax
  001b5	48 8b 4c 24 28	 mov	 rcx, QWORD PTR <range>$L0$2[rsp]
  001ba	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_end
  001bf	48 89 44 24 38	 mov	 QWORD PTR <end>$L0$4[rsp], rax
  001c4	eb 0e		 jmp	 SHORT $LN7@Synchroniz
$LN5@Synchroniz:
  001c6	48 8b 44 24 30	 mov	 rax, QWORD PTR <begin>$L0$3[rsp]
  001cb	48 83 c0 08	 add	 rax, 8
  001cf	48 89 44 24 30	 mov	 QWORD PTR <begin>$L0$3[rsp], rax
$LN7@Synchroniz:
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR <end>$L0$4[rsp]
  001d9	48 39 44 24 30	 cmp	 QWORD PTR <begin>$L0$3[rsp], rax
  001de	74 43		 je	 SHORT $LN6@Synchroniz
  001e0	48 8b 44 24 30	 mov	 rax, QWORD PTR <begin>$L0$3[rsp]
  001e5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001e8	48 89 44 24 40	 mov	 QWORD PTR syncp$5[rsp], rax

; 156  :             auto vppsts = m_pmfxSession->SyncOperation(syncp, 0);

  001ed	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001f2	48 8b 40 30	 mov	 rax, QWORD PTR [rax+48]
  001f6	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  001fb	48 8b 49 30	 mov	 rcx, QWORD PTR [rcx+48]
  001ff	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00202	45 33 c0	 xor	 r8d, r8d
  00205	48 8b 54 24 40	 mov	 rdx, QWORD PTR syncp$5[rsp]
  0020a	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]
  00210	89 44 24 48	 mov	 DWORD PTR vppsts$6[rsp], eax

; 157  :             if (MFX_ERR_NONE != vppsts) {

  00214	83 7c 24 48 00	 cmp	 DWORD PTR vppsts$6[rsp], 0
  00219	74 06		 je	 SHORT $LN15@Synchroniz

; 158  :                 return vppsts;

  0021b	8b 44 24 48	 mov	 eax, DWORD PTR vppsts$6[rsp]
  0021f	eb 26		 jmp	 SHORT $LN1@Synchroniz
$LN15@Synchroniz:

; 159  :             }
; 160  :         }

  00221	eb a3		 jmp	 SHORT $LN5@Synchroniz
$LN6@Synchroniz:

; 161  :         m_pTasks[m_nTaskBufferStart].Clear();

  00223	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00228	8b 40 2c	 mov	 eax, DWORD PTR [rax+44]
  0022b	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00230	48 83 c1 08	 add	 rcx, 8
  00234	8b d0		 mov	 edx, eax
  00236	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  0023b	48 8b c8	 mov	 rcx, rax
  0023e	e8 00 00 00 00	 call	 ?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ ; QSVTask::Clear
$LN14@Synchroniz:
$LN10@Synchroniz:

; 162  :     }
; 163  :     return sts;

  00243	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
$LN1@Synchroniz:

; 164  : }

  00247	48 83 c4 60	 add	 rsp, 96			; 00000060H
  0024b	5f		 pop	 rdi
  0024c	c3		 ret	 0
?SynchronizeFirstTask@CQSVTaskControl@@UEAA?AW4mfxStatus@@XZ ENDP ; CQSVTaskControl::SynchronizeFirstTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
outputType$ = 32
i$1 = 36
sts$2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
$T6 = 56
$T7 = 64
$T8 = 80
$T9 = 88
$T10 = 92
tv69 = 96
tv148 = 104
tv145 = 112
this$ = 144
pmfxSession$ = 152
pAllocator$ = 160
pTaskWriter$ = 168
nPoolSize$ = 176
nBufferSize$ = 184
?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z PROC ; CQSVTaskControl::Init

; 100  : mfxStatus CQSVTaskControl::Init(MFXVideoSession *pmfxSession, QSVAllocator *pAllocator, shared_ptr<RGYOutput> pTaskWriter, uint32_t nPoolSize, uint32_t nBufferSize) {

$LN16:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 101  :     if (nPoolSize == 0) {

  00033	83 bc 24 b0 00
	00 00 00	 cmp	 DWORD PTR nPoolSize$[rsp], 0
  0003b	75 1e		 jne	 SHORT $LN5@Init

; 102  :         return MFX_ERR_INCOMPATIBLE_VIDEO_PARAM;

  0003d	c7 44 24 2c f2
	ff ff ff	 mov	 DWORD PTR $T3[rsp], -14
  00045	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00052	8b 44 24 2c	 mov	 eax, DWORD PTR $T3[rsp]
  00056	e9 b8 01 00 00	 jmp	 $LN1@Init
$LN5@Init:

; 103  :     }
; 104  :     auto outputType = pTaskWriter->getOutType();

  0005b	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  00063	e8 00 00 00 00	 call	 ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
  00068	48 89 44 24 60	 mov	 QWORD PTR tv69[rsp], rax
  0006d	48 8b 44 24 60	 mov	 rax, QWORD PTR tv69[rsp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv69[rsp]
  0007a	ff 50 30	 call	 QWORD PTR [rax+48]
  0007d	89 44 24 20	 mov	 DWORD PTR outputType$[rsp], eax

; 105  :     if (outputType == OUT_TYPE_SURFACE) {

  00081	83 7c 24 20 02	 cmp	 DWORD PTR outputType$[rsp], 2
  00086	75 2b		 jne	 SHORT $LN6@Init

; 106  :         //フレーム出力時には、Allocatorも必要
; 107  :         if (pAllocator == nullptr) {

  00088	48 83 bc 24 a0
	00 00 00 00	 cmp	 QWORD PTR pAllocator$[rsp], 0
  00091	75 1e		 jne	 SHORT $LN8@Init

; 108  :             return MFX_ERR_NULL_PTR;

  00093	c7 44 24 30 fe
	ff ff ff	 mov	 DWORD PTR $T4[rsp], -2
  0009b	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  000a3	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  000a8	8b 44 24 30	 mov	 eax, DWORD PTR $T4[rsp]
  000ac	e9 62 01 00 00	 jmp	 $LN1@Init
$LN8@Init:

; 109  :         }

  000b1	eb 4f		 jmp	 SHORT $LN7@Init
$LN6@Init:

; 110  :     } else if (outputType == OUT_TYPE_BITSTREAM) {

  000b3	83 7c 24 20 01	 cmp	 DWORD PTR outputType$[rsp], 1
  000b8	75 2a		 jne	 SHORT $LN9@Init

; 111  :         if (nBufferSize == 0) {

  000ba	83 bc 24 b8 00
	00 00 00	 cmp	 DWORD PTR nBufferSize$[rsp], 0
  000c2	75 1e		 jne	 SHORT $LN11@Init

; 112  :             return MFX_ERR_UNDEFINED_BEHAVIOR;

  000c4	c7 44 24 34 f0
	ff ff ff	 mov	 DWORD PTR $T5[rsp], -16
  000cc	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  000d4	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  000d9	8b 44 24 34	 mov	 eax, DWORD PTR $T5[rsp]
  000dd	e9 31 01 00 00	 jmp	 $LN1@Init
$LN11@Init:

; 113  :         }
; 114  :     } else {

  000e2	eb 1e		 jmp	 SHORT $LN7@Init
$LN9@Init:

; 115  :         return MFX_ERR_UNSUPPORTED;

  000e4	c7 44 24 38 fd
	ff ff ff	 mov	 DWORD PTR $T6[rsp], -3
  000ec	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  000f4	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  000f9	8b 44 24 38	 mov	 eax, DWORD PTR $T6[rsp]
  000fd	e9 11 01 00 00	 jmp	 $LN1@Init
$LN7@Init:

; 116  :     }
; 117  : 
; 118  :     m_pmfxSession = pmfxSession;

  00102	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0010a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR pmfxSession$[rsp]
  00112	48 89 48 30	 mov	 QWORD PTR [rax+48], rcx

; 119  :     m_nPoolSize = nPoolSize;

  00116	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0011e	8b 8c 24 b0 00
	00 00		 mov	 ecx, DWORD PTR nPoolSize$[rsp]
  00125	89 48 28	 mov	 DWORD PTR [rax+40], ecx

; 120  :     m_pTasks.resize(m_nPoolSize);

  00128	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00130	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00133	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013b	48 83 c1 08	 add	 rcx, 8
  0013f	8b d0		 mov	 edx, eax
  00141	e8 00 00 00 00	 call	 ?resize@?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAX_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::resize

; 121  : 
; 122  :     for (uint32_t i = 0; i < m_nPoolSize; i++) {

  00146	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0014e	eb 0a		 jmp	 SHORT $LN4@Init
$LN2@Init:
  00150	8b 44 24 24	 mov	 eax, DWORD PTR i$1[rsp]
  00154	ff c0		 inc	 eax
  00156	89 44 24 24	 mov	 DWORD PTR i$1[rsp], eax
$LN4@Init:
  0015a	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00162	8b 40 28	 mov	 eax, DWORD PTR [rax+40]
  00165	39 44 24 24	 cmp	 DWORD PTR i$1[rsp], eax
  00169	0f 83 8b 00 00
	00		 jae	 $LN3@Init

; 123  :         mfxStatus sts = m_pTasks[i].Init(pTaskWriter, nBufferSize, pAllocator);

  0016f	48 8d 44 24 40	 lea	 rax, QWORD PTR $T7[rsp]
  00174	48 89 44 24 50	 mov	 QWORD PTR $T8[rsp], rax
  00179	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR pTaskWriter$[rsp]
  00181	48 8b 4c 24 50	 mov	 rcx, QWORD PTR $T8[rsp]
  00186	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
  0018b	48 89 44 24 68	 mov	 QWORD PTR tv148[rsp], rax
  00190	48 8b 44 24 68	 mov	 rax, QWORD PTR tv148[rsp]
  00195	48 89 44 24 70	 mov	 QWORD PTR tv145[rsp], rax
  0019a	8b 44 24 24	 mov	 eax, DWORD PTR i$1[rsp]
  0019e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a6	48 83 c1 08	 add	 rcx, 8
  001aa	8b d0		 mov	 edx, eax
  001ac	e8 00 00 00 00	 call	 ??A?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAAAEAUQSVTask@@_K@Z ; std::vector<QSVTask,std::allocator<QSVTask> >::operator[]
  001b1	90		 npad	 1
  001b2	4c 8b 8c 24 a0
	00 00 00	 mov	 r9, QWORD PTR pAllocator$[rsp]
  001ba	44 8b 84 24 b8
	00 00 00	 mov	 r8d, DWORD PTR nBufferSize$[rsp]
  001c2	48 8b 54 24 70	 mov	 rdx, QWORD PTR tv145[rsp]
  001c7	48 8b c8	 mov	 rcx, rax
  001ca	e8 00 00 00 00	 call	 ?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z ; QSVTask::Init
  001cf	89 44 24 28	 mov	 DWORD PTR sts$2[rsp], eax

; 124  :         if (sts < MFX_ERR_NONE) {

  001d3	83 7c 24 28 00	 cmp	 DWORD PTR sts$2[rsp], 0
  001d8	7d 1b		 jge	 SHORT $LN12@Init

; 125  :             return sts;

  001da	8b 44 24 28	 mov	 eax, DWORD PTR sts$2[rsp]
  001de	89 44 24 58	 mov	 DWORD PTR $T9[rsp], eax
  001e2	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  001ea	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  001ef	8b 44 24 58	 mov	 eax, DWORD PTR $T9[rsp]
  001f3	eb 1e		 jmp	 SHORT $LN1@Init
$LN12@Init:

; 126  :         }
; 127  :     }

  001f5	e9 56 ff ff ff	 jmp	 $LN2@Init
$LN3@Init:

; 128  : 
; 129  :     return MFX_ERR_NONE;

  001fa	c7 44 24 5c 00
	00 00 00	 mov	 DWORD PTR $T10[rsp], 0
  00202	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  0020a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0020f	8b 44 24 5c	 mov	 eax, DWORD PTR $T10[rsp]
$LN1@Init:

; 130  : }

  00213	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0021a	5f		 pop	 rdi
  0021b	c3		 ret	 0
?Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z ENDP ; CQSVTaskControl::Init
_TEXT	ENDS
text$x	SEGMENT
outputType$ = 32
i$1 = 36
sts$2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
$T6 = 56
$T7 = 64
$T8 = 80
$T9 = 88
$T10 = 92
tv69 = 96
tv148 = 104
tv145 = 112
this$ = 144
pmfxSession$ = 152
pAllocator$ = 160
pTaskWriter$ = 168
nPoolSize$ = 176
nBufferSize$ = 184
?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA PROC ; `CQSVTaskControl::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR pTaskWriter$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA ENDP ; `CQSVTaskControl::Init'::`1'::dtor$0
outputType$ = 32
i$1 = 36
sts$2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
$T6 = 56
$T7 = 64
$T8 = 80
$T9 = 88
$T10 = 92
tv69 = 96
tv148 = 104
tv145 = 112
this$ = 144
pmfxSession$ = 152
pAllocator$ = 160
pTaskWriter$ = 168
nPoolSize$ = 176
nBufferSize$ = 184
?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA PROC ; `CQSVTaskControl::Init'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR $T8[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA ENDP ; `CQSVTaskControl::Init'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
outputType$ = 32
i$1 = 36
sts$2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
$T6 = 56
$T7 = 64
$T8 = 80
$T9 = 88
$T10 = 92
tv69 = 96
tv148 = 104
tv145 = 112
this$ = 144
pmfxSession$ = 152
pAllocator$ = 160
pTaskWriter$ = 168
nPoolSize$ = 176
nBufferSize$ = 184
?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA PROC ; `CQSVTaskControl::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR pTaskWriter$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA ENDP ; `CQSVTaskControl::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
outputType$ = 32
i$1 = 36
sts$2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
$T6 = 56
$T7 = 64
$T8 = 80
$T9 = 88
$T10 = 92
tv69 = 96
tv148 = 104
tv145 = 112
this$ = 144
pmfxSession$ = 152
pAllocator$ = 160
pTaskWriter$ = 168
nPoolSize$ = 176
nBufferSize$ = 184
?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA PROC ; `CQSVTaskControl::Init'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8b 4d 50	 mov	 rcx, QWORD PTR $T8[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??Init@CQSVTaskControl@@UEAA?AW4mfxStatus@@PEAVMFXVideoSession@@PEAVQSVAllocator@@V?$shared_ptr@VRGYOutput@@@std@@II@Z@4HA ENDP ; `CQSVTaskControl::Init'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
this$ = 48
??1CQSVTaskControl@@UEAA@XZ PROC			; CQSVTaskControl::~CQSVTaskControl

; 96   : CQSVTaskControl::~CQSVTaskControl() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVTaskControl@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 97   :     Close();

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?Close@CQSVTaskControl@@UEAAXXZ ; CQSVTaskControl::Close
  00037	90		 npad	 1

; 98   : }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
  00049	90		 npad	 1
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??1CQSVTaskControl@@UEAA@XZ ENDP			; CQSVTaskControl::~CQSVTaskControl
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA PROC		; `CQSVTaskControl::~CQSVTaskControl'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA ENDP		; `CQSVTaskControl::~CQSVTaskControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA PROC		; `CQSVTaskControl::~CQSVTaskControl'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CQSVTaskControl@@UEAA@XZ@4HA ENDP		; `CQSVTaskControl::~CQSVTaskControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
this$ = 48
??0CQSVTaskControl@@QEAA@XZ PROC			; CQSVTaskControl::CQSVTaskControl

; 93   :     m_pmfxSession(nullptr) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7CQSVTaskControl@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 90   :     m_pTasks(),

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::vector<QSVTask,std::allocator<QSVTask> >
  0003e	90		 npad	 1

; 91   :     m_nPoolSize(0),

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [rax+40], 0

; 92   :     m_nTaskBufferStart(0),

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0

; 93   :     m_pmfxSession(nullptr) {

  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 c7 40 30 00
	00 00 00	 mov	 QWORD PTR [rax+48], 0

; 94   : }

  00064	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
??0CQSVTaskControl@@QEAA@XZ ENDP			; CQSVTaskControl::CQSVTaskControl
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA PROC		; `CQSVTaskControl::CQSVTaskControl'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA ENDP		; `CQSVTaskControl::CQSVTaskControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA PROC		; `CQSVTaskControl::CQSVTaskControl'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@UQSVTask@@V?$allocator@UQSVTask@@@std@@@std@@QEAA@XZ ; std::vector<QSVTask,std::allocator<QSVTask> >::~vector<QSVTask,std::allocator<QSVTask> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CQSVTaskControl@@QEAA@XZ@4HA ENDP		; `CQSVTaskControl::CQSVTaskControl'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ PROC ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ ; std::_Ptr_base<RGYOutput>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ENDP ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GQSVTask@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GQSVTask@@QEAAPEAXI@Z PROC				; QSVTask::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1QSVTask@@QEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 90 00 00 00	 mov	 edx, 144		; 00000090H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GQSVTask@@QEAAPEAXI@Z ENDP				; QSVTask::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0QSVTask@@QEAA@$$QEAU0@@Z
_TEXT	SEGMENT
this$ = 64
__that$ = 72
??0QSVTask@@QEAA@$$QEAU0@@Z PROC			; QSVTask::QSVTask, COMDAT
$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 0a 00 00 00	 mov	 ecx, 10
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00024	48 8b 7c 24 40	 mov	 rdi, QWORD PTR this$[rsp]
  00029	48 8b 74 24 48	 mov	 rsi, QWORD PTR __that$[rsp]
  0002e	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00033	f3 a4		 rep movsb
  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __that$[rsp]
  0003f	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00043	48 89 48 48	 mov	 QWORD PTR [rax+72], rcx
  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __that$[rsp]
  00051	48 8b 49 50	 mov	 rcx, QWORD PTR [rcx+80]
  00055	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  00059	48 8b 44 24 48	 mov	 rax, QWORD PTR __that$[rsp]
  0005e	48 83 c0 58	 add	 rax, 88			; 00000058H
  00062	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0006b	48 8b d0	 mov	 rdx, rax
  0006e	e8 00 00 00 00	 call	 ??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00073	90		 npad	 1
  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR __that$[rsp]
  00079	48 83 c0 78	 add	 rax, 120		; 00000078H
  0007d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00082	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00086	48 8b d0	 mov	 rdx, rax
  00089	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
  0008e	90		 npad	 1
  0008f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00094	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __that$[rsp]
  00099	48 8b 89 88 00
	00 00		 mov	 rcx, QWORD PTR [rcx+136]
  000a0	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx
  000a7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000ac	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000b0	5f		 pop	 rdi
  000b1	5e		 pop	 rsi
  000b2	c3		 ret	 0
??0QSVTask@@QEAA@$$QEAU0@@Z ENDP			; QSVTask::QSVTask
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
__that$ = 72
?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA PROC		; `QSVTask::QSVTask'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA ENDP		; `QSVTask::QSVTask'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
__that$ = 72
?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA PROC		; `QSVTask::QSVTask'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA ENDP		; `QSVTask::QSVTask'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
__that$ = 72
?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA PROC		; `QSVTask::QSVTask'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA ENDP		; `QSVTask::QSVTask'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
__that$ = 72
?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA PROC		; `QSVTask::QSVTask'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0QSVTask@@QEAA@$$QEAU0@@Z@4HA ENDP		; `QSVTask::QSVTask'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1QSVTask@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1QSVTask@@QEAA@XZ PROC				; QSVTask::~QSVTask, COMDAT
$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 78	 add	 rax, 120		; 00000078H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0002f	90		 npad	 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c0 58	 add	 rax, 88			; 00000058H
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00041	90		 npad	 1
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??1QSVTask@@QEAA@XZ ENDP				; QSVTask::~QSVTask
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::~QSVTask'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::~QSVTask'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::~QSVTask'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::~QSVTask'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::~QSVTask'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::~QSVTask'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::~QSVTask'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 78	 add	 rcx, 120		; 00000078H
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???1QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::~QSVTask'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
this$ = 48
?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ PROC		; QSVTask::Close

; 78   : mfxStatus QSVTask::Close() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 79   :     mfxBitstreamClear(&mfxBS);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z ; mfxBitstreamClear

; 80   :     encSyncPoint = 0;

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 50 00
	00 00 00	 mov	 QWORD PTR [rax+80], 0

; 81   :     pWriter.reset();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 78	 add	 rax, 120		; 00000078H
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ ; std::shared_ptr<RGYOutput>::reset

; 82   :     pmfxAllocator = nullptr;

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004e	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 83   :     mfxSurf = nullptr;

  00059	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 40 48 00
	00 00 00	 mov	 QWORD PTR [rax+72], 0

; 84   :     vppSyncPoint.clear();

  00066	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 83 c0 58	 add	 rax, 88			; 00000058H
  0006f	48 8b c8	 mov	 rcx, rax
  00072	e8 00 00 00 00	 call	 ?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::clear

; 85   : 
; 86   :     return MFX_ERR_NONE;

  00077	33 c0		 xor	 eax, eax

; 87   : }

  00079	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ ENDP		; QSVTask::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
sts$ = 32
$T1 = 36
$T2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
tv76 = 56
this$ = 80
pTaskWriter$ = 88
nBufferSize$ = 96
pAllocator$ = 104
?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z PROC ; QSVTask::Init

; 51   : mfxStatus QSVTask::Init(shared_ptr<RGYOutput> pTaskWriter, uint32_t nBufferSize, QSVAllocator *pAllocator) {

$LN10:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 52   :     Close();

  0002d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?Close@QSVTask@@QEAA?AW4mfxStatus@@XZ ; QSVTask::Close

; 53   : 
; 54   :     pWriter = pTaskWriter;

  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 83 c0 78	 add	 rax, 120		; 00000078H
  00040	48 8b 54 24 58	 mov	 rdx, QWORD PTR pTaskWriter$[rsp]
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z ; std::shared_ptr<RGYOutput>::operator=

; 55   : 
; 56   :     mfxStatus sts = Clear();

  0004d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00052	e8 00 00 00 00	 call	 ?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ ; QSVTask::Clear
  00057	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 57   :     if (sts < MFX_ERR_NONE) return sts;

  0005b	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00060	7d 1b		 jge	 SHORT $LN2@Init
  00062	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  00066	89 44 24 24	 mov	 DWORD PTR $T1[rsp], eax
  0006a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  0006f	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00074	8b 44 24 24	 mov	 eax, DWORD PTR $T1[rsp]
  00078	e9 d7 00 00 00	 jmp	 $LN1@Init
$LN2@Init:

; 58   : 
; 59   :     if (pWriter->getOutType() == OUT_TYPE_BITSTREAM) {

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 83 c0 78	 add	 rax, 120		; 00000078H
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
  0008e	48 89 44 24 38	 mov	 QWORD PTR tv76[rsp], rax
  00093	48 8b 44 24 38	 mov	 rax, QWORD PTR tv76[rsp]
  00098	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv76[rsp]
  000a0	ff 50 30	 call	 QWORD PTR [rax+48]
  000a3	83 f8 01	 cmp	 eax, 1
  000a6	75 65		 jne	 SHORT $LN3@Init

; 60   :         if (nBufferSize == 0) {

  000a8	83 7c 24 60 00	 cmp	 DWORD PTR nBufferSize$[rsp], 0
  000ad	75 1b		 jne	 SHORT $LN5@Init

; 61   :             return MFX_ERR_INCOMPATIBLE_VIDEO_PARAM;

  000af	c7 44 24 28 f2
	ff ff ff	 mov	 DWORD PTR $T2[rsp], -14
  000b7	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  000bc	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  000c1	8b 44 24 28	 mov	 eax, DWORD PTR $T2[rsp]
  000c5	e9 8a 00 00 00	 jmp	 $LN1@Init
$LN5@Init:

; 62   :         }
; 63   :         if (MFX_ERR_NONE != (sts = mfxBitstreamInit(&mfxBS, nBufferSize))) {

  000ca	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000cf	8b 54 24 60	 mov	 edx, DWORD PTR nBufferSize$[rsp]
  000d3	48 8b c8	 mov	 rcx, rax
  000d6	e8 00 00 00 00	 call	 ?mfxBitstreamInit@@YA?AW4mfxStatus@@PEAUmfxBitstream@@I@Z ; mfxBitstreamInit
  000db	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax
  000df	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  000e4	74 25		 je	 SHORT $LN6@Init

; 64   :             mfxBitstreamClear(&mfxBS);

  000e6	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000eb	48 8b c8	 mov	 rcx, rax
  000ee	e8 00 00 00 00	 call	 ?mfxBitstreamClear@@YAXPEAUmfxBitstream@@@Z ; mfxBitstreamClear

; 65   :             return sts;

  000f3	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  000f7	89 44 24 2c	 mov	 DWORD PTR $T3[rsp], eax
  000fb	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  00100	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00105	8b 44 24 2c	 mov	 eax, DWORD PTR $T3[rsp]
  00109	eb 49		 jmp	 SHORT $LN1@Init
$LN6@Init:

; 66   :         }
; 67   :     } else {

  0010b	eb 31		 jmp	 SHORT $LN4@Init
$LN3@Init:

; 68   :         //フレーム出力時には、Allocatorも必要
; 69   :         if (pAllocator == nullptr) {

  0010d	48 83 7c 24 68
	00		 cmp	 QWORD PTR pAllocator$[rsp], 0
  00113	75 18		 jne	 SHORT $LN7@Init

; 70   :             return MFX_ERR_NULL_PTR;

  00115	c7 44 24 30 fe
	ff ff ff	 mov	 DWORD PTR $T4[rsp], -2
  0011d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  00122	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00127	8b 44 24 30	 mov	 eax, DWORD PTR $T4[rsp]
  0012b	eb 27		 jmp	 SHORT $LN1@Init
$LN7@Init:

; 71   :         }
; 72   :         pmfxAllocator = pAllocator;

  0012d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00132	48 8b 4c 24 68	 mov	 rcx, QWORD PTR pAllocator$[rsp]
  00137	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx
$LN4@Init:

; 73   :     }
; 74   : 
; 75   :     return sts;

  0013e	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  00142	89 44 24 34	 mov	 DWORD PTR $T5[rsp], eax
  00146	48 8b 4c 24 58	 mov	 rcx, QWORD PTR pTaskWriter$[rsp]
  0014b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00150	8b 44 24 34	 mov	 eax, DWORD PTR $T5[rsp]
$LN1@Init:

; 76   : }

  00154	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00158	5f		 pop	 rdi
  00159	c3		 ret	 0
?Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z ENDP ; QSVTask::Init
_TEXT	ENDS
text$x	SEGMENT
sts$ = 32
$T1 = 36
$T2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
tv76 = 56
this$ = 80
pTaskWriter$ = 88
nBufferSize$ = 96
pAllocator$ = 104
?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA PROC ; `QSVTask::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 58	 mov	 rcx, QWORD PTR pTaskWriter$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA ENDP ; `QSVTask::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
sts$ = 32
$T1 = 36
$T2 = 40
$T3 = 44
$T4 = 48
$T5 = 52
tv76 = 56
this$ = 80
pTaskWriter$ = 88
nBufferSize$ = 96
pAllocator$ = 104
?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA PROC ; `QSVTask::Init'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 58	 mov	 rcx, QWORD PTR pTaskWriter$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??Init@QSVTask@@QEAA?AW4mfxStatus@@V?$shared_ptr@VRGYOutput@@@std@@IPEAVQSVAllocator@@@Z@4HA ENDP ; `QSVTask::Init'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.h
;	COMDAT ?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ
_TEXT	SEGMENT
this$ = 48
?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ PROC		; QSVTask::Clear, COMDAT

; 116  :     mfxStatus Clear() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 117  :         encSyncPoint = 0;

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 50 00
	00 00 00	 mov	 QWORD PTR [rax+80], 0

; 118  :         mfxSurf = nullptr;

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 48 00
	00 00 00	 mov	 QWORD PTR [rax+72], 0

; 119  : 
; 120  :         mfxBS.DataOffset = 0;

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 121  :         mfxBS.DataLength = 0;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [rax+52], 0

; 122  : 
; 123  :         vppSyncPoint.clear();

  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c0 58	 add	 rax, 88			; 00000058H
  00059	48 8b c8	 mov	 rcx, rax
  0005c	e8 00 00 00 00	 call	 ?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::clear

; 124  : 
; 125  :         return MFX_ERR_NONE;

  00061	33 c0		 xor	 eax, eax

; 126  :     }

  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
?Clear@QSVTask@@QEAA?AW4mfxStatus@@XZ ENDP		; QSVTask::Clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.h
;	COMDAT ?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ
_TEXT	SEGMENT
sts$ = 32
tv73 = 40
tv82 = 48
tv92 = 56
tv216 = 64
tv212 = 72
tv211 = 80
tv162 = 88
tv206 = 96
tv205 = 104
this$ = 128
?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ PROC	; QSVTask::WriteBitstream, COMDAT

; 88   :     mfxStatus WriteBitstream() {

$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 1c 00 00 00	 mov	 ecx, 28
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 89   :         if (!pWriter || pWriter->getOutType() == OUT_TYPE_NONE) {

  00021	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00029	48 83 c0 78	 add	 rax, 120		; 00000078H
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ ; std::shared_ptr<RGYOutput>::operator bool
  00035	0f b6 c0	 movzx	 eax, al
  00038	85 c0		 test	 eax, eax
  0003a	74 2d		 je	 SHORT $LN3@WriteBitst
  0003c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c0 78	 add	 rax, 120		; 00000078H
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
  00050	48 89 44 24 28	 mov	 QWORD PTR tv73[rsp], rax
  00055	48 8b 44 24 28	 mov	 rax, QWORD PTR tv73[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv73[rsp]
  00062	ff 50 30	 call	 QWORD PTR [rax+48]
  00065	85 c0		 test	 eax, eax
  00067	75 0a		 jne	 SHORT $LN2@WriteBitst
$LN3@WriteBitst:

; 90   :             return MFX_ERR_NOT_INITIALIZED;

  00069	b8 f8 ff ff ff	 mov	 eax, -8
  0006e	e9 ef 01 00 00	 jmp	 $LN1@WriteBitst
$LN2@WriteBitst:

; 91   :         }
; 92   : 
; 93   :         mfxStatus sts = MFX_ERR_NONE;

  00073	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR sts$[rsp], 0

; 94   :         if (pWriter->getOutType() == OUT_TYPE_BITSTREAM) {

  0007b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00083	48 83 c0 78	 add	 rax, 120		; 00000078H
  00087	48 8b c8	 mov	 rcx, rax
  0008a	e8 00 00 00 00	 call	 ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
  0008f	48 89 44 24 30	 mov	 QWORD PTR tv82[rsp], rax
  00094	48 8b 44 24 30	 mov	 rax, QWORD PTR tv82[rsp]
  00099	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv82[rsp]
  000a1	ff 50 30	 call	 QWORD PTR [rax+48]
  000a4	83 f8 01	 cmp	 eax, 1
  000a7	75 4e		 jne	 SHORT $LN4@WriteBitst

; 95   :             sts = err_to_mfx(pWriter->WriteNextFrame((RGYBitstream *)&mfxBS));

  000a9	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 83 c0 78	 add	 rax, 120		; 00000078H
  000b5	48 8b c8	 mov	 rcx, rax
  000b8	e8 00 00 00 00	 call	 ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
  000bd	48 89 44 24 38	 mov	 QWORD PTR tv92[rsp], rax
  000c2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ca	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv92[rsp]
  000cf	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000d2	48 89 4c 24 40	 mov	 QWORD PTR tv216[rsp], rcx
  000d7	48 8b d0	 mov	 rdx, rax
  000da	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv92[rsp]
  000df	48 8b 44 24 40	 mov	 rax, QWORD PTR tv216[rsp]
  000e4	ff 50 18	 call	 QWORD PTR [rax+24]
  000e7	8b c8		 mov	 ecx, eax
  000e9	e8 00 00 00 00	 call	 ?err_to_mfx@@YA?AW4mfxStatus@@W4RGY_ERR@@@Z ; err_to_mfx
  000ee	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 96   :         } else {

  000f2	e9 67 01 00 00	 jmp	 $LN5@WriteBitst
$LN4@WriteBitst:

; 97   :             if (mfxSurf->Data.MemId) {

  000f7	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ff	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00103	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  0010b	74 73		 je	 SHORT $LN6@WriteBitst

; 98   :                 sts = pmfxAllocator->Lock(pmfxAllocator->pthis, mfxSurf->Data.MemId, &(mfxSurf->Data));

  0010d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00115	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00119	48 83 c0 58	 add	 rax, 88			; 00000058H
  0011d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00125	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00129	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00131	48 8b 92 88 00
	00 00		 mov	 rdx, QWORD PTR [rdx+136]
  00138	48 89 54 24 48	 mov	 QWORD PTR tv212[rsp], rdx
  0013d	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR this$[rsp]
  00145	4d 8b 80 88 00
	00 00		 mov	 r8, QWORD PTR [r8+136]
  0014c	4c 89 44 24 50	 mov	 QWORD PTR tv211[rsp], r8
  00151	4c 8b c0	 mov	 r8, rax
  00154	48 8b 91 a8 00
	00 00		 mov	 rdx, QWORD PTR [rcx+168]
  0015b	48 8b 44 24 48	 mov	 rax, QWORD PTR tv212[rsp]
  00160	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  00164	48 8b 44 24 50	 mov	 rax, QWORD PTR tv211[rsp]
  00169	ff 50 28	 call	 QWORD PTR [rax+40]
  0016c	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 99   :                 if (sts < MFX_ERR_NONE) {

  00170	83 7c 24 20 00	 cmp	 DWORD PTR sts$[rsp], 0
  00175	7d 09		 jge	 SHORT $LN7@WriteBitst

; 100  :                     return sts;

  00177	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
  0017b	e9 e2 00 00 00	 jmp	 $LN1@WriteBitst
$LN7@WriteBitst:
$LN6@WriteBitst:

; 101  :                 }
; 102  :             }
; 103  : 
; 104  :             sts = err_to_mfx(pWriter->WriteNextFrame((RGYFrame *)mfxSurf));

  00180	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00188	48 83 c0 78	 add	 rax, 120		; 00000078H
  0018c	48 8b c8	 mov	 rcx, rax
  0018f	e8 00 00 00 00	 call	 ??$?CVRGYOutput@@$0A@@?$shared_ptr@VRGYOutput@@@std@@QEBAPEAVRGYOutput@@XZ ; std::shared_ptr<RGYOutput>::operator-><RGYOutput,0>
  00194	48 89 44 24 58	 mov	 QWORD PTR tv162[rsp], rax
  00199	48 8b 44 24 58	 mov	 rax, QWORD PTR tv162[rsp]
  0019e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001a1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001a9	48 8b 51 48	 mov	 rdx, QWORD PTR [rcx+72]
  001ad	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv162[rsp]
  001b2	ff 50 10	 call	 QWORD PTR [rax+16]
  001b5	8b c8		 mov	 ecx, eax
  001b7	e8 00 00 00 00	 call	 ?err_to_mfx@@YA?AW4mfxStatus@@W4RGY_ERR@@@Z ; err_to_mfx
  001bc	89 44 24 20	 mov	 DWORD PTR sts$[rsp], eax

; 105  : 
; 106  :             if (mfxSurf->Data.MemId) {

  001c0	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001c8	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  001cc	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  001d4	74 5f		 je	 SHORT $LN8@WriteBitst

; 107  :                 pmfxAllocator->Unlock(pmfxAllocator->pthis, mfxSurf->Data.MemId, &(mfxSurf->Data));

  001d6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001de	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  001e2	48 83 c0 58	 add	 rax, 88			; 00000058H
  001e6	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ee	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  001f2	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  001fa	48 8b 92 88 00
	00 00		 mov	 rdx, QWORD PTR [rdx+136]
  00201	48 89 54 24 60	 mov	 QWORD PTR tv206[rsp], rdx
  00206	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR this$[rsp]
  0020e	4d 8b 80 88 00
	00 00		 mov	 r8, QWORD PTR [r8+136]
  00215	4c 89 44 24 68	 mov	 QWORD PTR tv205[rsp], r8
  0021a	4c 8b c0	 mov	 r8, rax
  0021d	48 8b 91 a8 00
	00 00		 mov	 rdx, QWORD PTR [rcx+168]
  00224	48 8b 44 24 60	 mov	 rax, QWORD PTR tv206[rsp]
  00229	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0022d	48 8b 44 24 68	 mov	 rax, QWORD PTR tv205[rsp]
  00232	ff 50 30	 call	 QWORD PTR [rax+48]
$LN8@WriteBitst:

; 108  :             }
; 109  : 
; 110  :             //最終で加算したLockをここで減算する
; 111  :             mfxSurf->Data.Locked--;

  00235	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0023d	48 8b 40 48	 mov	 rax, QWORD PTR [rax+72]
  00241	0f b7 80 84 00
	00 00		 movzx	 eax, WORD PTR [rax+132]
  00248	66 ff c8	 dec	 ax
  0024b	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00253	48 8b 49 48	 mov	 rcx, QWORD PTR [rcx+72]
  00257	66 89 81 84 00
	00 00		 mov	 WORD PTR [rcx+132], ax
$LN5@WriteBitst:

; 112  :         }
; 113  :         return sts;

  0025e	8b 44 24 20	 mov	 eax, DWORD PTR sts$[rsp]
$LN1@WriteBitst:

; 114  :     }

  00262	48 83 c4 70	 add	 rsp, 112		; 00000070H
  00266	5f		 pop	 rdi
  00267	c3		 ret	 0
?WriteBitstream@QSVTask@@QEAA?AW4mfxStatus@@XZ ENDP	; QSVTask::WriteBitstream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
_TEXT	SEGMENT
this$ = 48
??0QSVTask@@QEAA@XZ PROC				; QSVTask::QSVTask

; 47   :     pmfxAllocator(nullptr) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 43   :     mfxSurf(nullptr),

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 48 00
	00 00 00	 mov	 QWORD PTR [rax+72], 0

; 44   :     encSyncPoint(0),

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 50 00
	00 00 00	 mov	 QWORD PTR [rax+80], 0

; 45   :     vppSyncPoint(),

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c0 58	 add	 rax, 88			; 00000058H
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00049	90		 npad	 1

; 46   :     pWriter(),

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 83 c0 78	 add	 rax, 120		; 00000078H
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
  0005b	90		 npad	 1

; 47   :     pmfxAllocator(nullptr) {

  0005c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00061	48 c7 80 88 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+136], 0

; 48   :     RGY_MEMSET_ZERO(mfxBS);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00071	41 b8 48 00 00
	00		 mov	 r8d, 72			; 00000048H
  00077	33 d2		 xor	 edx, edx
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 memset
  00081	90		 npad	 1

; 49   : }

  00082	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00087	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0008b	5f		 pop	 rdi
  0008c	c3		 ret	 0
??0QSVTask@@QEAA@XZ ENDP				; QSVTask::QSVTask
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::QSVTask'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::QSVTask'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::QSVTask'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00042	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::QSVTask'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::QSVTask'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 58	 add	 rcx, 88			; 00000058H
  0001b	e8 00 00 00 00	 call	 ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::QSVTask'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA PROC			; `QSVTask::QSVTask'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00042	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0QSVTask@@QEAA@XZ@4HA ENDP			; `QSVTask::QSVTask'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv71 = 32
this$ = 64
??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ PROC		; std::shared_ptr<RGYOutput>::operator bool, COMDAT

; 1218 :     explicit operator bool() const noexcept { // test if shared_ptr object owns a resource

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1219 :         return get() != nullptr;

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ ; std::_Ptr_base<RGYOutput>::get
  00028	48 85 c0	 test	 rax, rax
  0002b	74 0a		 je	 SHORT $LN3@operator
  0002d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  00035	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00037	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@operator:
  0003f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv71[rsp]

; 1220 :     }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??B?$shared_ptr@VRGYOutput@@@std@@QEBA_NXZ ENDP		; std::shared_ptr<RGYOutput>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ PROC	; std::shared_ptr<RGYOutput>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYOutput>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ ENDP	; std::shared_ptr<RGYOutput>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYOutput>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYOutput>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYOutput>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYOutput@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYOutput>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z PROC ; std::shared_ptr<RGYOutput>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYOutput>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z ENDP ; std::shared_ptr<RGYOutput>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::shared_ptr<RGYOutput>::operator=, COMDAT

; 1136 :     shared_ptr& operator=(const shared_ptr& _Right) noexcept { // assign shared ownership of resource owned by _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1137 :         shared_ptr(_Right).swap(*this);

  00023	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
  00032	90		 npad	 1
  00033	48 89 44 24 30	 mov	 QWORD PTR tv73[rsp], rax
  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR tv73[rsp]
  0003d	48 89 44 24 38	 mov	 QWORD PTR tv72[rsp], rax
  00042	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  00047	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv72[rsp]
  0004c	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYOutput@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYOutput>::swap
  00051	90		 npad	 1
  00052	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00057	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0005c	90		 npad	 1

; 1138 :         return *this;

  0005d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1139 :     }

  00062	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
??4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::shared_ptr<RGYOutput>::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<RGYOutput>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<RGYOutput>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv73 = 48
tv72 = 56
this$ = 80
_Right$ = 88
?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA PROC ; `std::shared_ptr<RGYOutput>::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???4?$shared_ptr@VRGYOutput@@@std@@QEAAAEAV01@AEBV01@@Z@4HA ENDP ; `std::shared_ptr<RGYOutput>::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ ; std::_Ptr_base<RGYOutput>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYOutput>::~shared_ptr<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z PROC	; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>, COMDAT

; 1088 :     shared_ptr(shared_ptr&& _Right) noexcept { // construct shared_ptr object that takes resource from _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ ; std::_Ptr_base<RGYOutput>::_Ptr_base<RGYOutput>

; 1089 :         this->_Move_construct_from(_STD move(_Right));

  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00032	e8 00 00 00 00	 call	 ??$move@AEAV?$shared_ptr@VRGYOutput@@@std@@@std@@YA$$QEAV?$shared_ptr@VRGYOutput@@@0@AEAV10@@Z ; std::move<std::shared_ptr<RGYOutput> &>
  00037	48 8b d0	 mov	 rdx, rax
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Move_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<RGYOutput>::_Move_construct_from<RGYOutput>

; 1090 :     }

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??0?$shared_ptr@VRGYOutput@@@std@@QEAA@$$QEAV01@@Z ENDP	; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z PROC	; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>, COMDAT

; 1078 :     shared_ptr(const shared_ptr& _Other) noexcept { // construct shared_ptr object that owns same resource as _Other

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ ; std::_Ptr_base<RGYOutput>::_Ptr_base<RGYOutput>

; 1079 :         this->_Copy_construct_from(_Other);

  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??$_Copy_construct_from@VRGYOutput@@@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEBV?$shared_ptr@VRGYOutput@@@1@@Z ; std::_Ptr_base<RGYOutput>::_Copy_construct_from<RGYOutput>

; 1080 :     }

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??0?$shared_ptr@VRGYOutput@@@std@@QEAA@AEBV01@@Z ENDP	; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ ; std::_Ptr_base<RGYOutput>::_Ptr_base<RGYOutput>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VRGYOutput@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYOutput>::shared_ptr<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z PROC ; std::_Ptr_base<RGYOutput>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVRGYOutput@@X@std@@YAXAEAPEAVRGYOutput@@0@Z ; std::swap<RGYOutput *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VRGYOutput@@@std@@IEAAXAEAV12@@Z ENDP ; std::_Ptr_base<RGYOutput>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ PROC	; std::_Ptr_base<RGYOutput>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VRGYOutput@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<RGYOutput>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
;	COMDAT ??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ PROC		; std::_Ptr_base<RGYOutput>::_Ptr_base<RGYOutput>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VRGYOutput@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<RGYOutput>::_Ptr_base<RGYOutput>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ PROC ; std::_Ptr_base<RGYOutput>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYOutput@@@std@@IEBAPEAVRGYOutput@@XZ ENDP ; std::_Ptr_base<RGYOutput>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z PROC ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Take_contents, COMDAT

; 324  :     void _Take_contents(_Vector_val& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 325  :         this->_Swap_proxy_and_iterators(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 326  :         _Myfirst = _Right._Myfirst;

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00040	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 327  :         _Mylast  = _Right._Mylast;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004e	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00052	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 328  :         _Myend   = _Right._Myend;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00060	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00064	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 329  : 
; 330  :         _Right._Myfirst = pointer();

  00068	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0006d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 331  :         _Right._Mylast  = pointer();

  00075	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0007a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 332  :         _Right._Myend   = pointer();

  00082	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00087	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 333  :     }

  0008f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00093	5f		 pop	 rdi
  00094	c3		 ret	 0
?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z ; std::allocator<_mfxSyncPoint *>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YAXPEAPEAU_mfxSyncPoint@@QEAPEAU1@AEAV?$allocator@PEAU_mfxSyncPoint@@@0@@Z ; std::_Destroy_range<std::allocator<_mfxSyncPoint *> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAPEAPEAU_mfxSyncPoint@@XZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXPEAPEAU_mfxSyncPoint@@0@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXXZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXXZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><_mfxSyncPoint *>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::~vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >, COMDAT

; 531  :     vector(vector&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 532  :         : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) { // construct by moving _Right

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@YA$$QEAV?$allocator@PEAU_mfxSyncPoint@@@0@AEAV10@@Z ; std::move<std::allocator<_mfxSyncPoint *> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@PEAU_mfxSyncPoint@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><std::allocator<_mfxSyncPoint *> >
  00049	90		 npad	 1

; 533  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><_mfxSyncPoint *>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 534  :         _Move_construct(_Right, true_type{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Move_construct
  00097	90		 npad	 1

; 535  :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Move_construct, COMDAT

; 505  :     void _Move_construct(vector& _Right, true_type) noexcept { // move from _Right, stealing its contents

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 506  :         _Mypair._Myval2._Take_contents(_Right._Mypair._Myval2);

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b d0	 mov	 rdx, rax
  00035	e8 00 00 00 00	 call	 ?_Take_contents@?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@std@@QEAAXAEAV12@@Z ; std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >::_Take_contents

; 507  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?_Move_construct@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Move_construct
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ PROC ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAU_mfxSyncPoint@@@std@@V?$_Vector_val@U?$_Simple_types@PEAU_mfxSyncPoint@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1>::_Compressed_pair<std::allocator<_mfxSyncPoint *>,std::_Vector_val<std::_Simple_types<_mfxSyncPoint *> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@AEAAAEAV?$allocator@PEAU_mfxSyncPoint@@@2@XZ ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0PEAU_mfxSyncPoint@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAU_mfxSyncPoint@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><_mfxSyncPoint *>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@PEAU_mfxSyncPoint@@V?$allocator@PEAU_mfxSyncPoint@@@std@@@std@@QEAA@XZ ENDP ; std::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >::vector<_mfxSyncPoint *,std::allocator<_mfxSyncPoint *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z PROC ; std::allocator<_mfxSyncPoint *>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@PEAU_mfxSyncPoint@@@std@@QEAAXQEAPEAU_mfxSyncPoint@@_K@Z ENDP ; std::allocator<_mfxSyncPoint *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ PROC	; std::allocator<_mfxSyncPoint *>::allocator<_mfxSyncPoint *>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@PEAU_mfxSyncPoint@@@std@@QEAA@XZ ENDP	; std::allocator<_mfxSyncPoint *>::allocator<_mfxSyncPoint *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Incref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT

; 642  :     void _Incref() noexcept { // increment use count

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 643  :         _MT_INCR(_Uses);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 83 c0 08	 add	 rax, 8
  0000f	f0 ff 00	 lock inc DWORD PTR [rax]

; 644  :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Incref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_task.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
