; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG26058 DB	'invalid argument', 00H
	ORG $+3
$SG26059 DB	'%s', 00H
	ORG $+9
$SG26060 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
	ORG $+8
$SG26061 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG26062 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG26063 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
CONST	ENDS
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z		; CMFXPlugin::CMFXPlugin
PUBLIC	??1CMFXPlugin@@QEAA@XZ				; CMFXPlugin::~CMFXPlugin
PUBLIC	?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z ; CMFXPlugin::LoadPlugin
PUBLIC	?Unload@CMFXPlugin@@QEAAXXZ			; CMFXPlugin::Unload
PUBLIC	??_GCMFXPlugin@@QEAAPEAXI@Z			; CMFXPlugin::`scalar deleting destructor'
PUBLIC	??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z	; CSessionPlugins::CSessionPlugins
PUBLIC	??1CSessionPlugins@@QEAA@XZ			; CSessionPlugins::~CSessionPlugins
PUBLIC	?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z ; CSessionPlugins::LoadPlugin
PUBLIC	?UnloadPlugins@CSessionPlugins@@QEAAXXZ		; CSessionPlugins::UnloadPlugins
PUBLIC	??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate
PUBLIC	?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
PUBLIC	??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::push_back
PUBLIC	?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::clear
PUBLIC	?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
PUBLIC	?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::capacity
PUBLIC	?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Xlength
PUBLIC	?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range
PUBLIC	?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
PUBLIC	?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first
PUBLIC	??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z ; std::default_delete<CMFXPlugin>::operator()
PUBLIC	??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
PUBLIC	??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
PUBLIC	?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::get_deleter
PUBLIC	??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::operator->
PUBLIC	?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Get_first
PUBLIC	??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::`scalar deleting destructor'
PUBLIC	??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> ><std::default_delete<CMFXPlugin>,0>
PUBLIC	??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > &>
PUBLIC	??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back_with_unused_capacity<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::construct<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><CMFXPlugin * &>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::destroy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z ; std::forward<std::default_delete<CMFXPlugin> >
PUBLIC	??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><std::default_delete<CMFXPlugin>,CMFXPlugin *>
PUBLIC	??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z ; std::exchange<CMFXPlugin *,CMFXPlugin *>
PUBLIC	??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z ; std::forward<CMFXPlugin * &>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z ; std::forward<CMFXPlugin *>
PUBLIC	??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Release
PUBLIC	??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	MFXVideoUSER_Load:PROC
EXTRN	MFXAudioUSER_Load:PROC
EXTRN	MFXAudioUSER_UnLoad:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z
$pdata$??1CMFXPlugin@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$??1CMFXPlugin@@QEAA@XZ
$pdata$?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DD imagerel $LN6
	DD	imagerel $LN6+192
	DD	imagerel $unwind$?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z
$pdata$?Unload@CMFXPlugin@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+137
	DD	imagerel $unwind$?Unload@CMFXPlugin@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GCMFXPlugin@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GCMFXPlugin@@QEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA DD imagerel ?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1CSessionPlugins@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??1CSessionPlugins@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DD imagerel $LN8
	DD	imagerel $LN8+250
	DD	imagerel $unwind$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA DD imagerel ?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA
	DD	imagerel ?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA+40
	DD	imagerel $unwind$?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA
$pdata$?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA DD imagerel ?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA
	DD	imagerel ?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?UnloadPlugins@CSessionPlugins@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?UnloadPlugins@CSessionPlugins@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+269
	DD	imagerel $unwind$?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z DD 022c01H
	DD	070143218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z$rtcName$0 DB 05fH ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z$rtcVarDesc DD 024H ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z$rtcFrameData DD 01H ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z$rtcName$0 DB 070H ; CSessionPlugins::LoadPlugin
	DB	06cH
	DB	075H
	DB	067H
	DB	069H
	DB	06eH
	DB	00H
	ORG $+1
?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z$rtcVarDesc DD 028H ; CSessionPlugins::LoadPlugin
	DD	08H
	DQ	FLAT:?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z$rtcName$0
	ORG $+48
?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z$rtcFrameData DD 01H ; CSessionPlugins::LoadPlugin
	DD	00H
	DQ	FLAT:?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GCMFXPlugin@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
xdata	SEGMENT
$unwind$??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z DD 010b01H
	DD	0700bH
$unwind$??1CMFXPlugin@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CMFXPlugin@@QEAA@XZ
$cppxdata$??1CMFXPlugin@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1CMFXPlugin@@QEAA@XZ
$ip2state$??1CMFXPlugin@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
$unwind$?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DD 032d01H
	DD	070154219H
	DD	06014H
$unwind$?Unload@CMFXPlugin@@QEAAXXZ DD 021e01H
	DD	07006320aH
$unwind$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z
$cppxdata$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z
	DD	imagerel $ip2state$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z
$stateUnwindMap$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA
$ip2state$??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z DB 02H
	DB	00H
	DB	00H
$cppxdata$??1CSessionPlugins@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CSessionPlugins@@QEAA@XZ
	DD	imagerel $ip2state$??1CSessionPlugins@@QEAA@XZ
$cppxdata$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DB 08H
	DD	imagerel $stateUnwindMap$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z
	DD	imagerel $ip2state$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z
$unwind$?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1CSessionPlugins@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CSessionPlugins@@QEAA@XZ
$stateUnwindMap$??1CSessionPlugins@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA
$ip2state$??1CSessionPlugins@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	016H
	DB	00H
$stateUnwindMap$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA
$unwind$?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DD 022c11H
	DD	07014b218H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z
$ip2state$?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z DB 0aH
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'h'
	DB	00H
	DB	' '
	DB	04H
	DB	0a8H
	DB	00H
	ORG $+1
$unwind$?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?UnloadPlugins@CSessionPlugins@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::construct<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z PROC ; std::_Get_unwrapped<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z ENDP ; std::_Get_unwrapped<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z PROC ; std::forward<CMFXPlugin *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z ENDP ; std::forward<CMFXPlugin *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG26058
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG26059
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG26060
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG26061
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG26062
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG26063
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z PROC ; std::forward<CMFXPlugin * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z ENDP ; std::forward<CMFXPlugin * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z PROC ; std::exchange<CMFXPlugin *,CMFXPlugin *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z ENDP ; std::exchange<CMFXPlugin *,CMFXPlugin *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z PROC ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><std::default_delete<CMFXPlugin>,CMFXPlugin *>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z ; std::forward<std::default_delete<CMFXPlugin> >
  00036	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0003b	e8 00 00 00 00	 call	 ??$forward@PEAVCMFXPlugin@@@std@@YA$$QEAPEAVCMFXPlugin@@AEAPEAV1@@Z ; std::forward<CMFXPlugin *>
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 89 01	 mov	 QWORD PTR [rcx], rax
  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z ENDP ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><std::default_delete<CMFXPlugin>,CMFXPlugin *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z PROC ; std::forward<std::default_delete<CMFXPlugin> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<CMFXPlugin> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::destroy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::destroy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z PROC ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><CMFXPlugin * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCMFXPlugin@@@std@@YAAEAPEAVCMFXPlugin@@AEAPEAV1@@Z ; std::forward<CMFXPlugin * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z ENDP ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><CMFXPlugin * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 08	 add	 rax, 8
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::destroy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::construct<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::construct<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::construct<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z PROC ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back_with_unused_capacity<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::construct<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back_with_unused_capacity<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_back_with_unused_capacity<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Emplace_reallocate<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z PROC ; std::move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ENDP ; std::move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> ><std::default_delete<CMFXPlugin>,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVCMFXPlugin@@@Z ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><CMFXPlugin * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> ><std::default_delete<CMFXPlugin>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 08 00 00 00	 mov	 edx, 8
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAXI@Z ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAVCMFXPlugin@@PEAV1@@std@@YAPEAVCMFXPlugin@@AEAPEAV1@$$QEAPEAV1@@Z ; std::exchange<CMFXPlugin *,CMFXPlugin *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ
_TEXT	SEGMENT
this$ = 16
??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::operator->, COMDAT

; 1891 :     _NODISCARD pointer operator->() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1892 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1893 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::get_deleter, COMDAT

; 1879 :     _NODISCARD _Dx& get_deleter() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1880 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Get_first

; 1881 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z ; std::default_delete<CMFXPlugin>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Right$ = 72
??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >, COMDAT

; 1833 :     unique_ptr(unique_ptr&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1834 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {}

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?release@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAPEAVCMFXPlugin@@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::release
  0002d	90		 npad	 1
  0002e	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00033	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00038	e8 00 00 00 00	 call	 ?get_deleter@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAAAEAU?$default_delete@VCMFXPlugin@@@2@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::get_deleter
  0003d	90		 npad	 1
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??$forward@U?$default_delete@VCMFXPlugin@@@std@@@std@@YA$$QEAU?$default_delete@VCMFXPlugin@@@0@AEAU10@@Z ; std::forward<std::default_delete<CMFXPlugin> >
  00046	90		 npad	 1
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	4c 8d 4c 24 20	 lea	 r9, QWORD PTR $T1[rsp]
  00051	4c 8b c0	 mov	 r8, rax
  00054	0f b6 54 24 28	 movzx	 edx, BYTE PTR $T2[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@@?$_Compressed_pair@U?$default_delete@VCMFXPlugin@@@std@@PEAVCMFXPlugin@@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$default_delete@VCMFXPlugin@@@1@$$QEAPEAVCMFXPlugin@@@Z ; std::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1>::_Compressed_pair<std::default_delete<CMFXPlugin>,CMFXPlugin *,1><std::default_delete<CMFXPlugin>,CMFXPlugin *>
  0005e	90		 npad	 1
  0005f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
??0?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z PROC ; std::default_delete<CMFXPlugin>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 16		 je	 SHORT $LN3@operator
  00035	ba 01 00 00 00	 mov	 edx, 1
  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003f	e8 00 00 00 00	 call	 ??_GCMFXPlugin@@QEAAPEAXI@Z
  00044	48 89 44 24 28	 mov	 QWORD PTR tv68[rsp], rax
  00049	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0004b	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@operator:

; 1768 :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??R?$default_delete@VCMFXPlugin@@@std@@QEBAXPEAVCMFXPlugin@@@Z ENDP ; std::default_delete<CMFXPlugin>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA PROC ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA ENDP ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA PROC ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z@4HA ENDP ; `std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 03	 sar	 rax, 3
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e5	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000e9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000f6	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  000fb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00107	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
?_Change_array@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K1@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBA_K_K@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@YAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@0@@Z ; std::_Uninitialized_move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > *,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@PEAV32@00@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@0@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@1@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::emplace_back<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAXXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >,std::_Vector_val<std::_Simple_types<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z PROC ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ENDP ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z PROC ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAAXQEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@_K@Z ENDP ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 48
?UnloadPlugins@CSessionPlugins@@QEAAXXZ PROC		; CSessionPlugins::UnloadPlugins

; 79   : void CSessionPlugins::UnloadPlugins() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 80   :     m_plugins.clear();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?clear@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::clear

; 81   : }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
?UnloadPlugins@CSessionPlugins@@QEAAXXZ ENDP		; CSessionPlugins::UnloadPlugins
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
plugin$ = 40
sts$ = 52
$T4 = 56
$T5 = 64
$T6 = 72
tv79 = 80
this$ = 112
type$ = 120
uid$ = 128
version$ = 136
?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z PROC ; CSessionPlugins::LoadPlugin

; 71   : mfxStatus CSessionPlugins::LoadPlugin(mfxPluginType type, const mfxPluginUID &uid, mfxU32 version) {

$LN8:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 18 00 00 00	 mov	 ecx, 24
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 72   :     auto plugin = std::unique_ptr<CMFXPlugin>(new CMFXPlugin(m_session));

  0002c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00031	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00036	48 89 44 24 40	 mov	 QWORD PTR $T5[rsp], rax
  0003b	48 83 7c 24 40
	00		 cmp	 QWORD PTR $T5[rsp], 0
  00041	74 19		 je	 SHORT $LN4@LoadPlugin
  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR $T5[rsp]
  00050	e8 00 00 00 00	 call	 ??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z ; CMFXPlugin::CMFXPlugin
  00055	48 89 44 24 50	 mov	 QWORD PTR tv79[rsp], rax
  0005a	eb 09		 jmp	 SHORT $LN5@LoadPlugin
$LN4@LoadPlugin:
  0005c	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
$LN5@LoadPlugin:
  00065	48 8b 44 24 50	 mov	 rax, QWORD PTR tv79[rsp]
  0006a	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  0006f	48 8b 54 24 38	 mov	 rdx, QWORD PTR $T4[rsp]
  00074	48 8d 4c 24 28	 lea	 rcx, QWORD PTR plugin$[rsp]
  00079	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VCMFXPlugin@@@std@@$0A@@?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@PEAVCMFXPlugin@@@Z ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> ><std::default_delete<CMFXPlugin>,0>
  0007e	90		 npad	 1

; 73   :     mfxStatus sts = plugin->LoadPlugin(type, uid, version);

  0007f	48 8d 4c 24 28	 lea	 rcx, QWORD PTR plugin$[rsp]
  00084	e8 00 00 00 00	 call	 ??C?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEBAPEAVCMFXPlugin@@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::operator->
  00089	44 8b 8c 24 88
	00 00 00	 mov	 r9d, DWORD PTR version$[rsp]
  00091	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR uid$[rsp]
  00099	8b 54 24 78	 mov	 edx, DWORD PTR type$[rsp]
  0009d	48 8b c8	 mov	 rcx, rax
  000a0	e8 00 00 00 00	 call	 ?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z ; CMFXPlugin::LoadPlugin
  000a5	89 44 24 34	 mov	 DWORD PTR sts$[rsp], eax

; 74   :     if (sts == MFX_ERR_NONE) {

  000a9	83 7c 24 34 00	 cmp	 DWORD PTR sts$[rsp], 0
  000ae	75 1b		 jne	 SHORT $LN2@LoadPlugin

; 75   :         m_plugins.push_back(std::move(plugin));

  000b0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR plugin$[rsp]
  000b5	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@std@@YA$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@0@AEAV10@@Z ; std::move<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > &>
  000ba	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000bf	48 83 c1 08	 add	 rcx, 8
  000c3	48 8b d0	 mov	 rdx, rax
  000c6	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@2@@Z ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::push_back
$LN2@LoadPlugin:

; 76   :     }
; 77   :     return sts;

  000cb	8b 44 24 34	 mov	 eax, DWORD PTR sts$[rsp]
  000cf	89 44 24 48	 mov	 DWORD PTR $T6[rsp], eax
  000d3	48 8d 4c 24 28	 lea	 rcx, QWORD PTR plugin$[rsp]
  000d8	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
  000dd	8b 44 24 48	 mov	 eax, DWORD PTR $T6[rsp]

; 78   : }

  000e1	8b f8		 mov	 edi, eax
  000e3	48 8b cc	 mov	 rcx, rsp
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z$rtcFrameData
  000ed	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f2	8b c7		 mov	 eax, edi
  000f4	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000f8	5f		 pop	 rdi
  000f9	c3		 ret	 0
?LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z ENDP ; CSessionPlugins::LoadPlugin
_TEXT	ENDS
text$x	SEGMENT
plugin$ = 40
sts$ = 52
$T4 = 56
$T5 = 64
$T6 = 72
tv79 = 80
this$ = 112
type$ = 120
uid$ = 128
version$ = 136
?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA PROC ; `CSessionPlugins::LoadPlugin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00018	48 8b 4d 40	 mov	 rcx, QWORD PTR $T5[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA ENDP ; `CSessionPlugins::LoadPlugin'::`1'::dtor$0
plugin$ = 40
sts$ = 52
$T4 = 56
$T5 = 64
$T6 = 72
tv79 = 80
this$ = 112
type$ = 120
uid$ = 128
version$ = 136
?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA PROC ; `CSessionPlugins::LoadPlugin'::`1'::dtor$1
  00028	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00032	55		 push	 rbp
  00033	57		 push	 rdi
  00034	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00038	48 8b ea	 mov	 rbp, rdx
  0003b	48 8d 4d 28	 lea	 rcx, QWORD PTR plugin$[rbp]
  0003f	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
  00044	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA ENDP ; `CSessionPlugins::LoadPlugin'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
plugin$ = 40
sts$ = 52
$T4 = 56
$T5 = 64
$T6 = 72
tv79 = 80
this$ = 112
type$ = 120
uid$ = 128
version$ = 136
?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA PROC ; `CSessionPlugins::LoadPlugin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00018	48 8b 4d 40	 mov	 rcx, QWORD PTR $T5[rbp]
  0001c	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$0@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA ENDP ; `CSessionPlugins::LoadPlugin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
plugin$ = 40
sts$ = 52
$T4 = 56
$T5 = 64
$T6 = 72
tv79 = 80
this$ = 112
type$ = 120
uid$ = 128
version$ = 136
?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA PROC ; `CSessionPlugins::LoadPlugin'::`1'::dtor$1
  00028	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00032	55		 push	 rbp
  00033	57		 push	 rdi
  00034	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00038	48 8b ea	 mov	 rbp, rdx
  0003b	48 8d 4d 28	 lea	 rcx, QWORD PTR plugin$[rbp]
  0003f	e8 00 00 00 00	 call	 ??1?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@QEAA@XZ ; std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >::~unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >
  00044	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?dtor$1@?0??LoadPlugin@CSessionPlugins@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z@4HA ENDP ; `CSessionPlugins::LoadPlugin'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 48
??1CSessionPlugins@@QEAA@XZ PROC			; CSessionPlugins::~CSessionPlugins

; 68   : CSessionPlugins::~CSessionPlugins() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 69   :     UnloadPlugins();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?UnloadPlugins@CSessionPlugins@@QEAAXXZ ; CSessionPlugins::UnloadPlugins
  00028	90		 npad	 1

; 70   : }

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 83 c0 08	 add	 rax, 8
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  0003a	90		 npad	 1
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??1CSessionPlugins@@QEAA@XZ ENDP			; CSessionPlugins::~CSessionPlugins
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA PROC		; `CSessionPlugins::~CSessionPlugins'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA ENDP		; `CSessionPlugins::~CSessionPlugins'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA PROC		; `CSessionPlugins::~CSessionPlugins'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CSessionPlugins@@QEAA@XZ@4HA ENDP		; `CSessionPlugins::~CSessionPlugins'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 48
session$ = 56
??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z PROC	; CSessionPlugins::CSessionPlugins

; 66   : CSessionPlugins::CSessionPlugins(mfxSession session) : m_session(session), m_plugins() {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR session$[rsp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ??0?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00041	90		 npad	 1

; 67   : }

  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z ENDP	; CSessionPlugins::CSessionPlugins
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
session$ = 56
?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA PROC ; `CSessionPlugins::CSessionPlugins'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA ENDP ; `CSessionPlugins::CSessionPlugins'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
session$ = 56
?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA PROC ; `CSessionPlugins::CSessionPlugins'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@V?$allocator@V?$unique_ptr@VCMFXPlugin@@U?$default_delete@VCMFXPlugin@@@std@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >::~vector<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> >,std::allocator<std::unique_ptr<CMFXPlugin,std::default_delete<CMFXPlugin> > > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CSessionPlugins@@QEAA@PEAU_mfxSession@@@Z@4HA ENDP ; `CSessionPlugins::CSessionPlugins'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GCMFXPlugin@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GCMFXPlugin@@QEAAPEAXI@Z PROC			; CMFXPlugin::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1CMFXPlugin@@QEAA@XZ	; CMFXPlugin::~CMFXPlugin
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GCMFXPlugin@@QEAAPEAXI@Z ENDP			; CMFXPlugin::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 48
?Unload@CMFXPlugin@@QEAAXXZ PROC			; CMFXPlugin::Unload

; 54   : void CMFXPlugin::Unload() {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 55   :     if (m_status == MFX_ERR_NONE) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  00027	75 5a		 jne	 SHORT $LN2@Unload

; 56   :         if (   m_type == MFX_PLUGINTYPE_AUDIO_DECODE
; 57   :             || m_type == MFX_PLUGINTYPE_AUDIO_ENCODE) {

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	83 38 05	 cmp	 DWORD PTR [rax], 5
  00031	74 0a		 je	 SHORT $LN5@Unload
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	83 38 06	 cmp	 DWORD PTR [rax], 6
  0003b	75 24		 jne	 SHORT $LN3@Unload
$LN5@Unload:

; 58   :             m_status = MFXAudioUSER_UnLoad(m_session, &m_uid);

  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c0 04	 add	 rax, 4
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004e	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  00052	e8 00 00 00 00	 call	 MFXAudioUSER_UnLoad
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	89 41 20	 mov	 DWORD PTR [rcx+32], eax

; 59   :         } else {

  0005f	eb 22		 jmp	 SHORT $LN4@Unload
$LN3@Unload:

; 60   :             m_status = MFXAudioUSER_UnLoad(m_session, &m_uid);

  00061	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 83 c0 04	 add	 rax, 4
  0006a	48 8b d0	 mov	 rdx, rax
  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  00076	e8 00 00 00 00	 call	 MFXAudioUSER_UnLoad
  0007b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00080	89 41 20	 mov	 DWORD PTR [rcx+32], eax
$LN4@Unload:
$LN2@Unload:

; 61   :         }
; 62   :     }
; 63   : }

  00083	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00087	5f		 pop	 rdi
  00088	c3		 ret	 0
?Unload@CMFXPlugin@@QEAAXXZ ENDP			; CMFXPlugin::Unload
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 64
type$ = 72
uid$ = 80
version$ = 88
?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z PROC ; CMFXPlugin::LoadPlugin

; 42   : mfxStatus CMFXPlugin::LoadPlugin(mfxPluginType type, const mfxPluginUID &uid, mfxU32 version) {

$LN6:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	56		 push	 rsi
  00014	57		 push	 rdi
  00015	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0a 00 00 00	 mov	 ecx, 10
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 43   :     m_type = type;

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	8b 4c 24 48	 mov	 ecx, DWORD PTR type$[rsp]
  00036	89 08		 mov	 DWORD PTR [rax], ecx

; 44   :     m_uid = uid;

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8d 78 04	 lea	 rdi, QWORD PTR [rax+4]
  00041	48 8b 74 24 50	 mov	 rsi, QWORD PTR uid$[rsp]
  00046	b9 10 00 00 00	 mov	 ecx, 16
  0004b	f3 a4		 rep movsb

; 45   :     if (   m_type == MFX_PLUGINTYPE_AUDIO_DECODE
; 46   :         || m_type == MFX_PLUGINTYPE_AUDIO_ENCODE) {

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	83 38 05	 cmp	 DWORD PTR [rax], 5
  00055	74 0a		 je	 SHORT $LN4@LoadPlugin
  00057	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005c	83 38 06	 cmp	 DWORD PTR [rax], 6
  0005f	75 29		 jne	 SHORT $LN2@LoadPlugin
$LN4@LoadPlugin:

; 47   :         m_status = MFXAudioUSER_Load(m_session, &m_uid, version);

  00061	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 83 c0 04	 add	 rax, 4
  0006a	44 8b 44 24 58	 mov	 r8d, DWORD PTR version$[rsp]
  0006f	48 8b d0	 mov	 rdx, rax
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0007b	e8 00 00 00 00	 call	 MFXAudioUSER_Load
  00080	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00085	89 41 20	 mov	 DWORD PTR [rcx+32], eax

; 48   :     } else {

  00088	eb 27		 jmp	 SHORT $LN3@LoadPlugin
$LN2@LoadPlugin:

; 49   :         m_status = MFXVideoUSER_Load(m_session, &m_uid, version);

  0008a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008f	48 83 c0 04	 add	 rax, 4
  00093	44 8b 44 24 58	 mov	 r8d, DWORD PTR version$[rsp]
  00098	48 8b d0	 mov	 rdx, rax
  0009b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  000a4	e8 00 00 00 00	 call	 MFXVideoUSER_Load
  000a9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	89 41 20	 mov	 DWORD PTR [rcx+32], eax
$LN3@LoadPlugin:

; 50   :     }
; 51   :     return m_status;

  000b1	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b6	8b 40 20	 mov	 eax, DWORD PTR [rax+32]

; 52   : }

  000b9	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bd	5f		 pop	 rdi
  000be	5e		 pop	 rsi
  000bf	c3		 ret	 0
?LoadPlugin@CMFXPlugin@@QEAA?AW4mfxStatus@@W4mfxPluginType@@AEBUmfxPluginUID@@I@Z ENDP ; CMFXPlugin::LoadPlugin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 48
??1CMFXPlugin@@QEAA@XZ PROC				; CMFXPlugin::~CMFXPlugin

; 38   : CMFXPlugin::~CMFXPlugin() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 39   :     Unload();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Unload@CMFXPlugin@@QEAAXXZ ; CMFXPlugin::Unload
  00028	90		 npad	 1

; 40   : }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1CMFXPlugin@@QEAA@XZ ENDP				; CMFXPlugin::~CMFXPlugin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_plugin.cpp
_TEXT	SEGMENT
this$ = 16
session$ = 24
??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z PROC		; CMFXPlugin::CMFXPlugin

; 34   :     m_status(MFX_ERR_NONE) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 31   :     m_type(MFX_PLUGINTYPE_VIDEO_GENERAL),

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 32   :     m_uid(),

  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	48 83 c0 04	 add	 rax, 4
  0001f	48 8b f8	 mov	 rdi, rax
  00022	33 c0		 xor	 eax, eax
  00024	b9 10 00 00 00	 mov	 ecx, 16
  00029	f3 aa		 rep stosb

; 33   :     m_session(session),

  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 18	 mov	 rcx, QWORD PTR session$[rsp]
  00035	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 34   :     m_status(MFX_ERR_NONE) {

  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [rax+32], 0

; 35   : 
; 36   : };

  00045	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??0CMFXPlugin@@QEAA@PEAU_mfxSession@@@Z ENDP		; CMFXPlugin::CMFXPlugin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
