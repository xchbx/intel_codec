; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG62254 DB	'AMD', 00H
$SG64698 DB	'%s', 00H
	ORG $+1
$SG62255 DB	'Advanced Micro Devices', 00H
	ORG $+1
$SG63792 DB	'OpenCL.dll', 00H
	ORG $+5
$SG63793 DB	'clGetPlatformIDs', 00H
	ORG $+7
$SG63794 DB	'clGetPlatformInfo', 00H
	ORG $+6
$SG63795 DB	'clGetDeviceIDs', 00H
	ORG $+1
$SG63796 DB	'clGetDeviceInfo', 00H
$SG63797 DB	'clCreateProgramWithSource', 00H
	ORG $+6
$SG63798 DB	'clBuildProgram', 00H
	ORG $+1
$SG63799 DB	'clGetProgramBuildInfo', 00H
	ORG $+2
$SG63800 DB	'clReleaseProgram', 00H
	ORG $+7
$SG63801 DB	'clCreateContext', 00H
$SG63802 DB	'clReleaseContext', 00H
	ORG $+7
$SG63803 DB	'clCreateCommandQueue', 00H
	ORG $+3
$SG63804 DB	'clReleaseCommandQueue', 00H
	ORG $+2
$SG63805 DB	'clCreateBuffer', 00H
	ORG $+1
$SG63806 DB	'clReleaseMemObject', 00H
	ORG $+5
$SG63807 DB	'clCreateKernel', 00H
	ORG $+1
$SG63808 DB	'clReleaseKernel', 00H
$SG63809 DB	'clSetKernelArg', 00H
	ORG $+1
$SG63810 DB	'clEnqueueTask', 00H
	ORG $+2
$SG63811 DB	'clEnqueueNDRangeKernel', 00H
	ORG $+1
$SG63812 DB	'clFinish', 00H
	ORG $+7
$SG63813 DB	'clEnqueueReadBuffer', 00H
	ORG $+4
$SG63814 DB	'clEnqueueWriteBuffer', 00H
	ORG $+3
$SG63851 DB	'Error (clGetPlatformIDs): %d', 0aH, 00H
	ORG $+2
$SG63852 DB	'Crush (clGetPlatformIDs)', 0aH, 00H
	ORG $+6
$SG63857 DB	'Error (getPlatformIDs): %d', 0aH, 00H
	ORG $+4
$SG63858 DB	'Crush (getPlatformIDs)', 0aH, 00H
$SG63861 DB	'Crush (getPlatformInfo)', 0aH, 00H
	ORG $+7
$SG63865 DB	'Crush (getDeviceIDs)', 0aH, 00H
	ORG $+2
$SG63869 DB	'Crush (getDeviceIDs)', 0aH, 00H
	ORG $+2
$SG63884 DB	'Crush (getDeviceIDs)', 0aH, 00H
	ORG $+2
$SG63895 DB	'Crush (getDeviceIDs)', 0aH, 00H
	ORG $+2
$SG63906 DB	'Crush (getDeviceInfo)', 0aH, 00H
	ORG $+1
$SG63909 DB	'Unknown', 00H
$SG63920 DB	'Crush (getDeviceInfo)', 0aH, 00H
	ORG $+1
$SG63923 DB	'Unknown', 00H
$SG64697 DB	'invalid argument', 00H
	ORG $+7
$SG64702 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG64699 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
	ORG $+8
$SG64700 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG64701 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
CONST	ENDS
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	fprintf
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?cl_get_func@@YAHPEAUcl_func_t@@@Z		; cl_get_func
PUBLIC	?cl_release_func@@YAXPEAUcl_func_t@@@Z		; cl_release_func
PUBLIC	?cl_check_vendor_name@@YA_NPEBD0@Z		; cl_check_vendor_name
PUBLIC	?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z ; cl_get_platform_and_device
PUBLIC	?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z ; cl_get_device_max_compute_units
PUBLIC	?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z ; cl_get_device_name
PUBLIC	?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z ; cl_get_driver_version
PUBLIC	?cl_release@@YAXPEAUcl_data_t@@PEAUcl_func_t@@@Z ; cl_release
PUBLIC	?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z ; cl_get_device_max_clock_frequency_mhz
PUBLIC	??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ ; std::allocator<std::pair<void * *,char const *> >::allocator<std::pair<void * *,char const *> >
PUBLIC	?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z ; std::allocator<std::pair<void * *,char const *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z ; std::allocator<std::pair<void * *,char const *> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::max_size
PUBLIC	??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
PUBLIC	??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
PUBLIC	?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_end
PUBLIC	?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::max_size
PUBLIC	?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Destroy
PUBLIC	?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Tidy
PUBLIC	?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Xlength
PUBLIC	?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
PUBLIC	?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first
PUBLIC	??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z ; std::initializer_list<std::pair<void * *,char const *> >::initializer_list<std::pair<void * *,char const *> >
PUBLIC	?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ ; std::initializer_list<std::pair<void * *,char const *> >::begin
PUBLIC	?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ ; std::initializer_list<std::pair<void * *,char const *> >::end
PUBLIC	??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[17],0>
PUBLIC	??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[18],0>
PUBLIC	??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
PUBLIC	??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[16],0>
PUBLIC	??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[26],0>
PUBLIC	??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[22],0>
PUBLIC	??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[21],0>
PUBLIC	??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[19],0>
PUBLIC	??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[14],0>
PUBLIC	??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[23],0>
PUBLIC	??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[9],0>
PUBLIC	??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[20],0>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<void * *,char const *> >
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1><std::allocator<std::pair<void * *,char const *> > const &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<void * *,char const *> > >
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
PUBLIC	??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z ; std::forward<char const (&)[17]>
PUBLIC	??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z ; std::forward<char const (&)[18]>
PUBLIC	??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z ; std::forward<char const (&)[15]>
PUBLIC	??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z ; std::forward<char const (&)[16]>
PUBLIC	??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z ; std::forward<char const (&)[26]>
PUBLIC	??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z ; std::forward<char const (&)[22]>
PUBLIC	??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z ; std::forward<char const (&)[21]>
PUBLIC	??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z ; std::forward<char const (&)[19]>
PUBLIC	??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z ; std::forward<char const (&)[14]>
PUBLIC	??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z ; std::forward<char const (&)[23]>
PUBLIC	??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z ; std::forward<char const (&)[9]>
PUBLIC	??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z ; std::forward<char const (&)[20]>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<void * *,char const *> > const &>
PUBLIC	??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z ; std::distance<std::pair<void * *,char const *> const *>
PUBLIC	??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >::~_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >
PUBLIC	??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Ucopy<std::pair<void * *,char const *> const *>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >
PUBLIC	??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<void * *,char const *> const >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Release
PUBLIC	??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Emplace_back<std::pair<void * *,char const *> const &>
PUBLIC	??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z ; std::_Unfancy<std::pair<void * *,char const *> >
PUBLIC	??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z ; std::forward<std::pair<void * *,char const *> const &>
PUBLIC	??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::construct<std::pair<void * *,char const *>,std::pair<void * *,char const *> const &>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp_tolower:PROC
EXTRN	memset:PROC
EXTRN	__imp_strcpy_s:PROC
EXTRN	strlen:PROC
EXTRN	__imp__strnicmp:PROC
EXTRN	__imp_FreeLibrary:PROC
EXTRN	__imp_GetProcAddress:PROC
EXTRN	__imp_LoadLibraryA:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__GSHandlerCheck_SEH:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?opencl_crush@@3_NA DB 01H DUP (?)			; opencl_crush
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$fprintf DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$fprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
pdata	SEGMENT
$pdata$?cl_get_func@@YAHPEAUcl_func_t@@@Z DD imagerel $LN9
	DD	imagerel $LN9+1583
	DD	imagerel $unwind$?cl_get_func@@YAHPEAUcl_func_t@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA DD imagerel ?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA
	DD	imagerel ?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?cl_release_func@@YAXPEAUcl_func_t@@@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?cl_release_func@@YAXPEAUcl_func_t@@@Z
$pdata$?cl_check_vendor_name@@YA_NPEBD0@Z DD imagerel $LN7
	DD	imagerel $LN7+136
	DD	imagerel $unwind$?cl_check_vendor_name@@YA_NPEBD0@Z
$pdata$?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z DD imagerel $LN48
	DD	imagerel $LN48+1185
	DD	imagerel $unwind$?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
$pdata$?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
$pdata$?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
$pdata$?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
$pdata$?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z DD imagerel $LN11
	DD	imagerel $LN11+246
	DD	imagerel $unwind$?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z DD imagerel $LN12
	DD	imagerel $LN12+324
	DD	imagerel $unwind$?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA DD imagerel ?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA
	DD	imagerel ?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA+32
	DD	imagerel $unwind$?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z DD imagerel $LN12
	DD	imagerel $LN12+324
	DD	imagerel $unwind$?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA DD imagerel ?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA
	DD	imagerel ?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA+32
	DD	imagerel $unwind$?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?cl_release@@YAXPEAUcl_data_t@@PEAUcl_func_t@@@Z DD imagerel $LN9
	DD	imagerel $LN9+190
	DD	imagerel $unwind$?cl_release@@YAXPEAUcl_data_t@@PEAUcl_func_t@@@Z
$pdata$?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z DD imagerel $LN11
	DD	imagerel $LN11+246
	DD	imagerel $unwind$?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD imagerel ?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel ?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA+32
	DD	imagerel $unwind$?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?to_tchar@@YAXPEADIPEBD@Z DD imagerel ?to_tchar@@YAXPEADIPEBD@Z
	DD	imagerel ?to_tchar@@YAXPEADIPEBD@Z+67
	DD	imagerel $unwind$?to_tchar@@YAXPEADIPEBD@Z
$pdata$?strichr@@YAPEBDPEBDH@Z DD imagerel ?strichr@@YAPEBDPEBDH@Z
	DD	imagerel ?strichr@@YAPEBDPEBDH@Z+114
	DD	imagerel $unwind$?strichr@@YAPEBDPEBDH@Z
$pdata$?stristr@@YAPEBDPEBD0@Z DD imagerel ?stristr@@YAPEBDPEBD0@Z
	DD	imagerel ?stristr@@YAPEBDPEBD0@Z+175
	DD	imagerel $unwind$?stristr@@YAPEBDPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+258
	DD	imagerel $unwind$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+33
	DD	imagerel $unwind$??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+210
	DD	imagerel $unwind$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z DD 032901H
	DD	070116215H
	DD	06010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DD	01H
	DQ	FLAT:??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DD	00H
	DQ	FLAT:??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	')', 02H
	DB	02H
	DB	090H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
	DD	imagerel $ip2state$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcName$0 DB 024H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DB	053H
	DB	032H
	DB	00H
??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcName$1 DB 05fH ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+5
??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcVarDesc DD 058H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DD	010H
	DQ	FLAT:??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcName$0
	ORG $+96
??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcFrameData DD 02H ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
	DD	00H
	DQ	FLAT:??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
xdata	SEGMENT
$unwind$?cl_get_func@@YAHPEAUcl_func_t@@@Z DD 043719H
	DD	065010eH
	DD	060067007H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?cl_get_func@@YAHPEAUcl_func_t@@@Z
	DD	0312H
$cppxdata$?cl_get_func@@YAHPEAUcl_func_t@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?cl_get_func@@YAHPEAUcl_func_t@@@Z
	DD	imagerel $ip2state$?cl_get_func@@YAHPEAUcl_func_t@@@Z
$stateUnwindMap$?cl_get_func@@YAHPEAUcl_func_t@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA
$ip2state$?cl_get_func@@YAHPEAUcl_func_t@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'Y', 014H
	DB	02H
	DB	0d9H, 02H
	DB	00H
	DB	'&'
	DB	02H
	DB	' '
	DB	00H
$unwind$?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?cl_release_func@@YAXPEAUcl_func_t@@@Z DD 021e01H
	DD	07006320aH
$unwind$?cl_check_vendor_name@@YA_NPEBD0@Z DD 022301H
	DD	0700b520fH
$unwind$?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z DD 034419H
	DD	0a0011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck_SEH
	DD	05H
	DD	imagerel $LN48+105
	DD	imagerel $LN48+178
	DD	imagerel ?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN48+178
	DD	imagerel $LN48+272
	DD	imagerel $LN48+350
	DD	imagerel ?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN48+350
	DD	imagerel $LN48+476
	DD	imagerel $LN48+601
	DD	imagerel ?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN48+601
	DD	imagerel $LN48+674
	DD	imagerel $LN48+745
	DD	imagerel ?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN48+745
	DD	imagerel $LN48+850
	DD	imagerel $LN48+954
	DD	imagerel ?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN48+954
	DD	04f9H
$unwind$?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z DD 033b19H
	DD	0900112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_SEH
	DD	01H
	DD	imagerel $LN11+84
	DD	imagerel $LN11+163
	DD	imagerel ?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN11+163
	DD	0471H
$unwind$?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z DD 034519H
	DD	090011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_SEH
	DD	01H
	DD	imagerel $LN12+115
	DD	imagerel $LN12+169
	DD	imagerel ?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA
	DD	imagerel $LN12+169
	DD	0471H
$unwind$?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z DD 034519H
	DD	090011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_SEH
	DD	01H
	DD	imagerel $LN12+115
	DD	imagerel $LN12+169
	DD	imagerel ?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA
	DD	imagerel $LN12+169
	DD	0471H
$unwind$?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?cl_release@@YAXPEAUcl_data_t@@PEAUcl_func_t@@@Z DD 022301H
	DD	0700b320fH
$unwind$?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z DD 033b19H
	DD	0900112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_SEH
	DD	01H
	DD	imagerel $LN11+84
	DD	imagerel $LN11+163
	DD	imagerel ?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA
	DD	imagerel $LN11+163
	DD	0471H
$unwind$?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?to_tchar@@YAXPEADIPEBD@Z DD 022701H
	DD	0700f3213H
$unwind$?strichr@@YAPEBDPEBDH@Z DD 022201H
	DD	0700a320eH
$unwind$?stristr@@YAPEBDPEBD0@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcName$0 DB 063H	; cl_get_func
	DB	06cH
	DB	05fH
	DB	066H
	DB	075H
	DB	06eH
	DB	063H
	DB	05fH
	DB	06cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcName$1 DB 066H	; cl_get_func
	DB	075H
	DB	06eH
	DB	063H
	DB	00H
	ORG $+3
?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcFrameData DD 02H	; cl_get_func
	DD	00H
	DQ	FLAT:?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcVarDesc
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$1 DB 072H ; cl_get_platform_and_device
	DB	065H
	DB	074H
	DB	00H
	ORG $+4
?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcVarDesc DD 01f8H	; cl_get_func
	DD	010H
	DQ	FLAT:?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcName$0
	ORG $+96
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$0 DB 070H ; cl_get_platform_and_device
	DB	06cH
	DB	061H
	DB	074H
	DB	066H
	DB	06fH
	DB	072H
	DB	06dH
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+1
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$2 DB 074H ; cl_get_platform_and_device
	DB	061H
	DB	072H
	DB	067H
	DB	065H
	DB	074H
	DB	056H
	DB	065H
	DB	06eH
	DB	064H
	DB	06fH
	DB	072H
	DB	00H
	ORG $+3
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$3 DB 062H ; cl_get_platform_and_device
	DB	075H
	DB	066H
	DB	00H
?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$0 DB 063H ; cl_get_device_max_compute_units
	DB	075H
	DB	00H
	ORG $+1
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$4 DB 064H ; cl_get_platform_and_device
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+3
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcFrameData DD 05H ; cl_get_platform_and_device
	DD	00H
	DQ	FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcVarDesc
?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$0 DB 072H ; cl_get_device_name
	DB	065H
	DB	074H
	DB	00H
	ORG $+4
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcVarDesc DD 04c4H ; cl_get_platform_and_device
	DD	04H
	DQ	FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$4
	DD	0b0H
	DD	0400H
	DQ	FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$3
	DD	084H
	DD	01H
	DQ	FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$2
	DD	054H
	DD	04H
	DQ	FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$0
	ORG $+240
?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$1 DB 063H ; cl_get_device_max_compute_units
	DB	06cH
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	05fH
	DB	062H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcVarDesc DD 060H ; cl_get_device_max_compute_units
	DD	0400H
	DQ	FLAT:?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$0
	ORG $+96
?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcFrameData DD 02H ; cl_get_device_max_compute_units
	DD	00H
	DQ	FLAT:?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcVarDesc
?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$1 DB 063H ; cl_get_device_name
	DB	06cH
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	05fH
	DB	062H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcVarDesc DD 060H ; cl_get_device_name
	DD	0400H
	DQ	FLAT:?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$0
	ORG $+96
?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcFrameData DD 02H ; cl_get_device_name
	DD	00H
	DQ	FLAT:?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcVarDesc
?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$0 DB 072H ; cl_get_driver_version
	DB	065H
	DB	074H
	DB	00H
	ORG $+4
?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$1 DB 063H ; cl_get_driver_version
	DB	06cH
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	05fH
	DB	062H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcVarDesc DD 060H ; cl_get_driver_version
	DD	0400H
	DQ	FLAT:?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcName$0
	ORG $+96
?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcFrameData DD 02H ; cl_get_driver_version
	DD	00H
	DQ	FLAT:?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcVarDesc
?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$0 DB 066H ; cl_get_device_max_clock_frequency_mhz
	DB	072H
	DB	065H
	DB	071H
	DB	075H
	DB	065H
	DB	06eH
	DB	063H
	DB	079H
	DB	00H
	ORG $+6
?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$1 DB 063H ; cl_get_device_max_clock_frequency_mhz
	DB	06cH
	DB	05fH
	DB	069H
	DB	06eH
	DB	066H
	DB	06fH
	DB	05fH
	DB	062H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcVarDesc DD 060H ; cl_get_device_max_clock_frequency_mhz
	DD	0400H
	DQ	FLAT:?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcName$0
	ORG $+96
?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcFrameData DD 02H ; cl_get_device_max_clock_frequency_mhz
	DD	00H
	DQ	FLAT:?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$fprintf DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
fprintf$rtcName$0 DB 05fH
	DB	041H
	DB	072H
	DB	067H
	DB	04cH
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+7
fprintf$rtcVarDesc DD 038H
	DD	08H
	DQ	FLAT:fprintf$rtcName$0
	ORG $+48
fprintf$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:fprintf$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 80
_Ptr$ = 88
<_Args_0>$ = 96
??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::construct<std::pair<void * *,char const *>,std::pair<void * *,char const *> const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 0e 00 00 00	 mov	 ecx, 14
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00029	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	b9 10 00 00 00	 mov	 ecx, 16
  00033	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00038	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z ; std::forward<std::pair<void * *,char const *> const &>
  00047	48 8b 7c 24 20	 mov	 rdi, QWORD PTR $T1[rsp]
  0004c	48 8b f0	 mov	 rsi, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	f3 a4		 rep movsb

; 759  :     }

  00056	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005a	5f		 pop	 rdi
  0005b	5e		 pop	 rsi
  0005c	c3		 ret	 0
??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::construct<std::pair<void * *,char const *>,std::pair<void * *,char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z PROC ; std::forward<std::pair<void * *,char const *> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z ENDP ; std::forward<std::pair<void * *,char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z PROC ; std::_Unfancy<std::pair<void * *,char const *> >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z ENDP ; std::_Unfancy<std::pair<void * *,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Emplace_back<std::pair<void * *,char const *> const &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEBU?$pair@PEAPEAXPEBD@std@@@std@@YAAEBU?$pair@PEAPEAXPEBD@0@AEBU10@@Z ; std::forward<std::pair<void * *,char const *> const &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@U?$pair@PEAPEAXPEBD@std@@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@PEAU10@@Z ; std::_Unfancy<std::pair<void * *,char const *> >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@U?$pair@PEAPEAXPEBD@std@@AEBU12@@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SAXAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@QEAU?$pair@PEAPEAXPEBD@1@AEBU31@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::construct<std::pair<void * *,char const *>,std::pair<void * *,char const *> const &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 10	 add	 rax, 16
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Emplace_back<std::pair<void * *,char const *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<void * *,char const *> > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z PROC ; std::_Get_unwrapped<std::pair<void * *,char const *> const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z ENDP ; std::_Get_unwrapped<std::pair<void * *,char const *> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z PROC ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<void * *,char const *> const >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBU?$pair@PEAPEAXPEBD@std@@@std@@YAPEBU?$pair@PEAPEAXPEBD@0@QEBU10@@Z ; std::_Get_unwrapped<std::pair<void * *,char const *> const >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1611 :         _Dest += _ULast - _UFirst;
; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@PEAU?$pair@PEAPEAXPEBD@1@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
  00065	90		 npad	 1

; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 10	 add	 rax, 16
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 11		 je	 SHORT $LN3@Uninitiali

; 1616 :             _Backout._Emplace_back(*_UFirst);

  00082	48 8b 54 24 20	 mov	 rdx, QWORD PTR _UFirst$[rsp]
  00087	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Emplace_back@AEBU?$pair@PEAPEAXPEBD@std@@@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAXAEBU?$pair@PEAPEAXPEBD@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Emplace_back<std::pair<void * *,char const *> const &>

; 1617 :         }

  00091	eb d5		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1618 : 
; 1619 :         _Dest = _Backout._Release();

  00093	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00098	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::_Release
  0009d	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Dest$[rsp], rax

; 1620 :     }

  000a5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000aa	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >

; 1621 : 
; 1622 :     return _Dest;

  000af	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8b cc	 mov	 rcx, rsp
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z$rtcFrameData
  000c4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c9	48 8b c7	 mov	 rax, rdi
  000cc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ENDP ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >::~_Uninitialized_backout_al<std::allocator<std::pair<void * *,char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG64697
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG64698
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG64699
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG64700
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG64701
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG64702
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Ucopy<std::pair<void * *,char const *> const *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PEBU?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@YAPEAU?$pair@PEAPEAXPEBD@0@QEBU10@0PEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ; std::_Uninitialized_copy<std::pair<void * *,char const *> const *,std::allocator<std::pair<void * *,char const *> > >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Ucopy<std::pair<void * *,char const *> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >::~_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >::~_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z PROC ; std::distance<std::pair<void * *,char const *> const *>, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _First$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Last$[rsp]
  00015	48 2b c8	 sub	 rcx, rax
  00018	48 8b c1	 mov	 rax, rcx
  0001b	48 c1 f8 04	 sar	 rax, 4

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  0001f	5f		 pop	 rdi
  00020	c3		 ret	 0
??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z ENDP ; std::distance<std::pair<void * *,char const *> const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<std::pair<void * *,char const *> > const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<std::pair<void * *,char const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z PROC ; std::forward<char const (&)[20]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z ENDP ; std::forward<char const (&)[20]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z PROC ; std::forward<char const (&)[9]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z ENDP ; std::forward<char const (&)[9]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z PROC ; std::forward<char const (&)[23]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z ENDP ; std::forward<char const (&)[23]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z PROC ; std::forward<char const (&)[14]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z ENDP ; std::forward<char const (&)[14]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z PROC ; std::forward<char const (&)[19]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z ENDP ; std::forward<char const (&)[19]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z PROC ; std::forward<char const (&)[21]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z ENDP ; std::forward<char const (&)[21]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z PROC ; std::forward<char const (&)[22]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z ENDP ; std::forward<char const (&)[22]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z PROC ; std::forward<char const (&)[26]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z ENDP ; std::forward<char const (&)[26]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z PROC ; std::forward<char const (&)[16]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z ENDP ; std::forward<char const (&)[16]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z PROC ; std::forward<char const (&)[15]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z ENDP ; std::forward<char const (&)[15]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z PROC ; std::forward<char const (&)[18]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z ENDP ; std::forward<char const (&)[18]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z PROC ; std::forward<char const (&)[17]>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z ENDP ; std::forward<char const (&)[17]>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z PROC	; std::forward<void * *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ENDP	; std::forward<void * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<void * *,char const *> > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<void * *,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@PEBU?$pair@PEAPEAXPEBD@std@@@std@@YA_JPEBU?$pair@PEAPEAXPEBD@0@0@Z ; std::distance<std::pair<void * *,char const *> const *>
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAPEAU?$pair@PEAPEAXPEBD@1@PEBU21@0PEAU21@@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Ucopy<std::pair<void * *,char const *> const *>
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >::~_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >::~_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >::~_Tidy_guard<std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1><std::allocator<std::pair<void * *,char const *> > const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@AEBV10@@Z ; std::forward<std::allocator<std::pair<void * *,char const *> > const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1><std::allocator<std::pair<void * *,char const *> > const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<void * *,char const *> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<void * *,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[20],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BE@$$CBD@std@@YAAEAY0BE@$$CBDAEAY0BE@$$CBD@Z ; std::forward<char const (&)[20]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[20],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[9],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY08$$CBD@std@@YAAEAY08$$CBDAEAY08$$CBD@Z ; std::forward<char const (&)[9]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[9],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[23],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BH@$$CBD@std@@YAAEAY0BH@$$CBDAEAY0BH@$$CBD@Z ; std::forward<char const (&)[23]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[23],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[14],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0O@$$CBD@std@@YAAEAY0O@$$CBDAEAY0O@$$CBD@Z ; std::forward<char const (&)[14]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[14],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[19],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BD@$$CBD@std@@YAAEAY0BD@$$CBDAEAY0BD@$$CBD@Z ; std::forward<char const (&)[19]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[19],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[21],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BF@$$CBD@std@@YAAEAY0BF@$$CBDAEAY0BF@$$CBD@Z ; std::forward<char const (&)[21]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[21],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[22],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BG@$$CBD@std@@YAAEAY0BG@$$CBDAEAY0BG@$$CBD@Z ; std::forward<char const (&)[22]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[22],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[26],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BK@$$CBD@std@@YAAEAY0BK@$$CBDAEAY0BK@$$CBD@Z ; std::forward<char const (&)[26]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[26],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[16],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BA@$$CBD@std@@YAAEAY0BA@$$CBDAEAY0BA@$$CBD@Z ; std::forward<char const (&)[16]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[16],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0P@$$CBD@std@@YAAEAY0P@$$CBDAEAY0P@$$CBD@Z ; std::forward<char const (&)[15]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[18],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BC@$$CBD@std@@YAAEAY0BC@$$CBDAEAY0BC@$$CBD@Z ; std::forward<char const (&)[18]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[18],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z PROC ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[17],0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAPEAX@std@@YA$$QEAPEAPEAXAEAPEAPEAX@Z ; std::forward<void * *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAY0BB@$$CBD@std@@YAAEAY0BB@$$CBDAEAY0BB@$$CBD@Z ; std::forward<char const (&)[17]>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00050	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z ENDP ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[17],0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ PROC ; std::initializer_list<std::pair<void * *,char const *> >::end, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 39   :         return _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 40   :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ ENDP ; std::initializer_list<std::pair<void * *,char const *> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ PROC ; std::initializer_list<std::pair<void * *,char const *> >::begin, COMDAT

; 34   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 35   :         return _First;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 36   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ ENDP ; std::initializer_list<std::pair<void * *,char const *> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z
_TEXT	SEGMENT
this$ = 16
_First_arg$ = 24
_Last_arg$ = 32
??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z PROC ; std::initializer_list<std::pair<void * *,char const *> >::initializer_list<std::pair<void * *,char const *> >, COMDAT

; 32   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _First_arg$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Last_arg$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z ENDP ; std::initializer_list<std::pair<void * *,char const *> >::initializer_list<std::pair<void * *,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 04	 sar	 rax, 4
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z ; std::allocator<std::pair<void * *,char const *> >::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@CAXXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z ; std::allocator<std::pair<void * *,char const *> >::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 6b 44 24 68
	10		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 16
  00093	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00098	48 03 c8	 add	 rcx, rax
  0009b	48 8b c1	 mov	 rax, rcx
  0009e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a3	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a6	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000aa	5f		 pop	 rdi
  000ab	c3		 ret	 0
?_Buy_raw@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAX_K@Z ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@YAXPEAU?$pair@PEAPEAXPEBD@0@QEAU10@AEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<void * *,char const *> > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEAU?$pair@PEAPEAXPEBD@2@0@Z ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEBAAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S1$ = 52
$T4 = 68
this$ = 96
??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXXZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<void * *,char const *> >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z PROC ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >, COMDAT

; 458  :     vector(initializer_list<_Ty> _Ilist, const _Alloc& _Al = _Alloc())

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 459  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from initializer_list, optional allocator

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  0003e	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@PEAPEAXPEBD@std@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1>::_Compressed_pair<std::allocator<std::pair<void * *,char const *> >,std::_Vector_val<std::_Simple_types<std::pair<void * *,char const *> > >,1><std::allocator<std::pair<void * *,char const *> > const &>

; 460  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0004b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ?_Getal@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAAEAV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Getal
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  00060	e8 00 00 00 00	 call	 ??$?0U?$pair@PEAPEAXPEBD@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::pair<void * *,char const *> >
  00065	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  0006a	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 461  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0006f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00077	4c 8b c0	 mov	 r8, rax
  0007a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  0007f	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00084	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00089	90		 npad	 1

; 462  :         _Range_construct_or_tidy(_Ilist.begin(), _Ilist.end(), random_access_iterator_tag{});

  0008a	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  00092	e8 00 00 00 00	 call	 ?end@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ ; std::initializer_list<std::pair<void * *,char const *> >::end
  00097	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  0009c	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Ilist$[rsp]
  000a4	e8 00 00 00 00	 call	 ?begin@?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEBAPEBU?$pair@PEAPEAXPEBD@2@XZ ; std::initializer_list<std::pair<void * *,char const *> >::begin
  000a9	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000af	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  000b4	4c 8b c1	 mov	 r8, rcx
  000b7	48 8b d0	 mov	 rdx, rax
  000ba	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c2	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@PEBU?$pair@PEAPEAXPEBD@std@@@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@AEAAXPEBU?$pair@PEAPEAXPEBD@1@0Uforward_iterator_tag@1@@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Range_construct_or_tidy<std::pair<void * *,char const *> const *>

; 463  :         _Proxy._Release();

  000c7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000cc	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000d1	90		 npad	 1

; 464  :     }

  000d2	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000d7	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000dc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e4	48 8b f8	 mov	 rdi, rax
  000e7	48 8b cc	 mov	 rcx, rsp
  000ea	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z$rtcFrameData
  000f1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f6	48 8b c7	 mov	 rax, rdi
  000f9	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00100	5f		 pop	 rdi
  00101	c3		 ret	 0
??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ENDP ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA PROC ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA ENDP ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S2$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
tv90 = 120
this$ = 144
_Ilist$ = 152
_Al$ = 160
?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA PROC ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z@4HA ENDP ; `std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@@std@@SA_KAEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<void * *,char const *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z PROC ; std::allocator<std::pair<void * *,char const *> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@_K@Z ENDP ; std::allocator<std::pair<void * *,char const *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z PROC ; std::allocator<std::pair<void * *,char const *> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAAXQEAU?$pair@PEAPEAXPEBD@2@_K@Z ENDP ; std::allocator<std::pair<void * *,char const *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ PROC ; std::allocator<std::pair<void * *,char const *> >::allocator<std::pair<void * *,char const *> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::pair<void * *,char const *> >::allocator<std::pair<void * *,char const *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
len$ = 32
str$ = 64
substr$ = 72
?stristr@@YAPEBDPEBD0@Z PROC				; stristr

; 59   : static inline const char *stristr(const char *str, const char *substr) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 60   :     size_t len = 0;

  00023	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR len$[rsp], 0

; 61   :     if (substr && (len = strlen(substr)) != NULL)

  0002c	48 83 7c 24 48
	00		 cmp	 QWORD PTR substr$[rsp], 0
  00032	74 73		 je	 SHORT $LN5@stristr
  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR substr$[rsp]
  00039	e8 00 00 00 00	 call	 strlen
  0003e	48 89 44 24 20	 mov	 QWORD PTR len$[rsp], rax
  00043	48 83 7c 24 20
	00		 cmp	 QWORD PTR len$[rsp], 0
  00049	74 5c		 je	 SHORT $LN5@stristr

; 62   :         for (; (str = strichr(str, substr[0])) != NULL; str++)

  0004b	eb 0d		 jmp	 SHORT $LN4@stristr
$LN2@stristr:
  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR str$[rsp]
  00052	48 ff c0	 inc	 rax
  00055	48 89 44 24 40	 mov	 QWORD PTR str$[rsp], rax
$LN4@stristr:
  0005a	b8 01 00 00 00	 mov	 eax, 1
  0005f	48 6b c0 00	 imul	 rax, rax, 0
  00063	48 8b 4c 24 48	 mov	 rcx, QWORD PTR substr$[rsp]
  00068	0f be 04 01	 movsx	 eax, BYTE PTR [rcx+rax]
  0006c	8b d0		 mov	 edx, eax
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR str$[rsp]
  00073	e8 00 00 00 00	 call	 ?strichr@@YAPEBDPEBDH@Z	; strichr
  00078	48 89 44 24 40	 mov	 QWORD PTR str$[rsp], rax
  0007d	48 83 7c 24 40
	00		 cmp	 QWORD PTR str$[rsp], 0
  00083	74 22		 je	 SHORT $LN3@stristr

; 63   :             if (_strnicmp(str, substr, len) == NULL)

  00085	4c 8b 44 24 20	 mov	 r8, QWORD PTR len$[rsp]
  0008a	48 8b 54 24 48	 mov	 rdx, QWORD PTR substr$[rsp]
  0008f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR str$[rsp]
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__strnicmp
  0009a	85 c0		 test	 eax, eax
  0009c	75 07		 jne	 SHORT $LN6@stristr

; 64   :                 return str;

  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR str$[rsp]
  000a3	eb 04		 jmp	 SHORT $LN1@stristr
$LN6@stristr:
  000a5	eb a6		 jmp	 SHORT $LN2@stristr
$LN3@stristr:
$LN5@stristr:

; 65   :     return NULL;

  000a7	33 c0		 xor	 eax, eax
$LN1@stristr:

; 66   : }

  000a9	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?stristr@@YAPEBDPEBD0@Z ENDP				; stristr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
str$ = 48
c$ = 56
?strichr@@YAPEBDPEBDH@Z PROC				; strichr

; 52   : static inline const char *strichr(const char *str, int c) {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 53   :     c = tolower(c);

  00022	8b 4c 24 38	 mov	 ecx, DWORD PTR c$[rsp]
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  0002c	89 44 24 38	 mov	 DWORD PTR c$[rsp], eax

; 54   :     for (; *str; str++)

  00030	eb 0d		 jmp	 SHORT $LN4@strichr
$LN2@strichr:
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR str$[rsp]
  00037	48 ff c0	 inc	 rax
  0003a	48 89 44 24 30	 mov	 QWORD PTR str$[rsp], rax
$LN4@strichr:
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR str$[rsp]
  00044	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00047	85 c0		 test	 eax, eax
  00049	74 1f		 je	 SHORT $LN3@strichr

; 55   :         if (c == tolower(*str))

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR str$[rsp]
  00050	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00053	8b c8		 mov	 ecx, eax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  0005b	39 44 24 38	 cmp	 DWORD PTR c$[rsp], eax
  0005f	75 07		 jne	 SHORT $LN5@strichr

; 56   :             return str;

  00061	48 8b 44 24 30	 mov	 rax, QWORD PTR str$[rsp]
  00066	eb 04		 jmp	 SHORT $LN1@strichr
$LN5@strichr:
  00068	eb c8		 jmp	 SHORT $LN2@strichr
$LN3@strichr:

; 57   :     return NULL;

  0006a	33 c0		 xor	 eax, eax
$LN1@strichr:

; 58   : }

  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
?strichr@@YAPEBDPEBDH@Z ENDP				; strichr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
buf$ = 48
buf_size$ = 56
string$ = 64
?to_tchar@@YAXPEADIPEBD@Z PROC				; to_tchar

; 44   : static void to_tchar(TCHAR *buf, uint32_t buf_size, const char *string) {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 45   : #if UNICODE
; 46   :     MultiByteToWideChar(CP_ACP, 0, string, -1, buf, buf_size);
; 47   : #else
; 48   :     strcpy_s(buf, buf_size, string);

  00027	8b 44 24 38	 mov	 eax, DWORD PTR buf_size$[rsp]
  0002b	4c 8b 44 24 40	 mov	 r8, QWORD PTR string$[rsp]
  00030	8b d0		 mov	 edx, eax
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR buf$[rsp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcpy_s

; 49   : #endif
; 50   : };

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?to_tchar@@YAXPEADIPEBD@Z ENDP				; to_tchar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
frequency$ = 52
cl_info_buffer$5 = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z PROC ; cl_get_device_max_clock_frequency_mhz

; 231  : int cl_get_device_max_clock_frequency_mhz(const cl_data_t *cl_data, const cl_func_t *cl) {

$LN11:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 04
	00 00		 sub	 rsp, 1152		; 00000480H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1168]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 70
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 232  :     int frequency = 0;

  0003b	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR frequency$[rsp], 0

; 233  :     if (opencl_crush) {

  00043	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?opencl_crush@@3_NA
  0004a	85 c0		 test	 eax, eax
  0004c	74 06		 je	 SHORT $LN2@cl_get_dev

; 234  :         return frequency;

  0004e	8b 44 24 34	 mov	 eax, DWORD PTR frequency$[rsp]
  00052	eb 74		 jmp	 SHORT $LN6@cl_get_dev
$LN2@cl_get_dev:

; 235  :     }
; 236  :     #if defined(_WIN32) || defined(_WIN64)
; 237  :     __try {
; 238  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 239  :         char cl_info_buffer[1024] = { 0 };

  00054	48 8d 44 24 60	 lea	 rax, QWORD PTR cl_info_buffer$5[rsp]
  00059	48 8b f8	 mov	 rdi, rax
  0005c	33 c0		 xor	 eax, eax
  0005e	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00063	f3 aa		 rep stosb

; 240  :         if (CL_SUCCESS == cl->getDeviceInfo(cl_data->deviceID, CL_DEVICE_MAX_CLOCK_FREQUENCY, _countof(cl_info_buffer), cl_info_buffer, NULL)) {

  00065	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0006e	4c 8d 4c 24 60	 lea	 r9, QWORD PTR cl_info_buffer$5[rsp]
  00073	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00079	ba 0c 10 00 00	 mov	 edx, 4108		; 0000100cH
  0007e	48 8b 84 24 90
	04 00 00	 mov	 rax, QWORD PTR cl_data$[rsp]
  00086	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0008a	48 8b 84 24 98
	04 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00092	ff 50 20	 call	 QWORD PTR [rax+32]
  00095	85 c0		 test	 eax, eax
  00097	75 08		 jne	 SHORT $LN4@cl_get_dev

; 241  :             frequency = *(cl_uint *)cl_info_buffer;

  00099	8b 44 24 60	 mov	 eax, DWORD PTR cl_info_buffer$5[rsp]
  0009d	89 44 24 34	 mov	 DWORD PTR frequency$[rsp], eax
$LN4@cl_get_dev:

; 242  :         }

  000a1	eb 21		 jmp	 SHORT $LN10@cl_get_dev
$LN8@cl_get_dev:

; 243  :     #if defined(_WIN32) || defined(_WIN64)
; 244  :     } __except (EXCEPTION_EXECUTE_HANDLER) {
; 245  :         _ftprintf(stderr, _T("Crush (getDeviceIDs)\n"));

  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63884
  000b5	48 8b c8	 mov	 rcx, rax
  000b8	e8 00 00 00 00	 call	 fprintf

; 246  :         opencl_crush = true;

  000bd	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1
$LN10@cl_get_dev:

; 247  :     }
; 248  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 249  :     return frequency;

  000c4	8b 44 24 34	 mov	 eax, DWORD PTR frequency$[rsp]
$LN6@cl_get_dev:

; 250  : }

  000c8	48 8b f8	 mov	 rdi, rax
  000cb	48 8b cc	 mov	 rcx, rsp
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcFrameData
  000d5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000da	48 8b c7	 mov	 rax, rdi
  000dd	48 8b 8c 24 70
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 81 c4 80 04
	00 00		 add	 rsp, 1152		; 00000480H
  000f4	5f		 pop	 rdi
  000f5	c3		 ret	 0
?cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z ENDP ; cl_get_device_max_clock_frequency_mhz
_TEXT	ENDS
text$x	SEGMENT
frequency$ = 52
cl_info_buffer$5 = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_device_max_clock_frequency_mhz'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN7@filt$0:

; 243  :     #if defined(_WIN32) || defined(_WIN64)
; 244  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN9@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_device_max_clock_frequency_mhz'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
frequency$ = 52
cl_info_buffer$5 = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_device_max_clock_frequency_mhz'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN7@filt$0:

; 244  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN9@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_device_max_clock_frequency_mhz@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_device_max_clock_frequency_mhz'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
cl_data$ = 48
cl$ = 56
?cl_release@@YAXPEAUcl_data_t@@PEAUcl_func_t@@@Z PROC	; cl_release

; 323  : void cl_release(cl_data_t *cl_data, cl_func_t *cl) {

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 324  :     if (cl) {

  00023	48 83 7c 24 38
	00		 cmp	 QWORD PTR cl$[rsp], 0
  00029	0f 84 89 00 00
	00		 je	 $LN2@cl_release

; 325  :         if (cl_data) {

  0002f	48 83 7c 24 30
	00		 cmp	 QWORD PTR cl_data$[rsp], 0
  00035	74 77		 je	 SHORT $LN3@cl_release

; 326  :             if (cl_data->kernel) cl->releaseKernel(cl_data->kernel);

  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  0003c	48 83 78 28 00	 cmp	 QWORD PTR [rax+40], 0
  00041	74 14		 je	 SHORT $LN4@cl_release
  00043	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  00048	48 8b 48 28	 mov	 rcx, QWORD PTR [rax+40]
  0004c	48 8b 44 24 38	 mov	 rax, QWORD PTR cl$[rsp]
  00051	ff 90 80 00 00
	00		 call	 QWORD PTR [rax+128]
$LN4@cl_release:

; 327  :             if (cl_data->program) cl->releaseProgram(cl_data->program);

  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  0005c	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00061	74 11		 je	 SHORT $LN5@cl_release
  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  00068	48 8b 48 18	 mov	 rcx, QWORD PTR [rax+24]
  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR cl$[rsp]
  00071	ff 50 40	 call	 QWORD PTR [rax+64]
$LN5@cl_release:

; 328  :             if (cl_data->commands) cl->releaseCommandQueue(cl_data->commands);

  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  00079	48 83 78 20 00	 cmp	 QWORD PTR [rax+32], 0
  0007e	74 11		 je	 SHORT $LN6@cl_release
  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  00085	48 8b 48 20	 mov	 rcx, QWORD PTR [rax+32]
  00089	48 8b 44 24 38	 mov	 rax, QWORD PTR cl$[rsp]
  0008e	ff 50 60	 call	 QWORD PTR [rax+96]
$LN6@cl_release:

; 329  :             if (cl_data->contextCL) cl->releaseContext(cl_data->contextCL);

  00091	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  00096	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  0009b	74 11		 je	 SHORT $LN7@cl_release
  0009d	48 8b 44 24 30	 mov	 rax, QWORD PTR cl_data$[rsp]
  000a2	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  000a6	48 8b 44 24 38	 mov	 rax, QWORD PTR cl$[rsp]
  000ab	ff 50 50	 call	 QWORD PTR [rax+80]
$LN7@cl_release:
$LN3@cl_release:

; 330  :         }
; 331  :         cl_release_func(cl);

  000ae	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cl$[rsp]
  000b3	e8 00 00 00 00	 call	 ?cl_release_func@@YAXPEAUcl_func_t@@@Z ; cl_release_func
$LN2@cl_release:

; 332  :     }
; 333  : }

  000b8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
?cl_release@@YAXPEAUcl_data_t@@PEAUcl_func_t@@@Z ENDP	; cl_release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
ret$ = 52
cl_info_buffer$ = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
buffer$ = 1184
buffer_size$ = 1192
?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z PROC ; cl_get_driver_version

; 298  : cl_int cl_get_driver_version(const cl_data_t *cl_data, const cl_func_t *cl, TCHAR *buffer, unsigned int buffer_size) {

$LN12:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 04
	00 00		 sub	 rsp, 1152		; 00000480H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1168]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 70
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 299  :     if (opencl_crush) {

  00045	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?opencl_crush@@3_NA
  0004c	85 c0		 test	 eax, eax
  0004e	74 0a		 je	 SHORT $LN2@cl_get_dri

; 300  :         return CL_INVALID_VALUE;

  00050	b8 e2 ff ff ff	 mov	 eax, -30
  00055	e9 bc 00 00 00	 jmp	 $LN7@cl_get_dri
$LN2@cl_get_dri:

; 301  :     }
; 302  :     cl_int ret = CL_SUCCESS;

  0005a	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR ret$[rsp], 0

; 303  :     char cl_info_buffer[1024] = { 0 };

  00062	48 8d 44 24 60	 lea	 rax, QWORD PTR cl_info_buffer$[rsp]
  00067	48 8b f8	 mov	 rdi, rax
  0006a	33 c0		 xor	 eax, eax
  0006c	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00071	f3 aa		 rep stosb

; 304  :     #if defined(_WIN32) || defined(_WIN64)
; 305  :     __try {
; 306  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 307  :         ret = cl->getDeviceInfo(cl_data->deviceID, CL_DRIVER_VERSION, _countof(cl_info_buffer), cl_info_buffer, NULL);

  00073	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007c	4c 8d 4c 24 60	 lea	 r9, QWORD PTR cl_info_buffer$[rsp]
  00081	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00087	ba 2d 10 00 00	 mov	 edx, 4141		; 0000102dH
  0008c	48 8b 84 24 90
	04 00 00	 mov	 rax, QWORD PTR cl_data$[rsp]
  00094	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00098	48 8b 84 24 98
	04 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  000a0	ff 50 20	 call	 QWORD PTR [rax+32]
  000a3	89 44 24 34	 mov	 DWORD PTR ret$[rsp], eax
  000a7	eb 29		 jmp	 SHORT $LN11@cl_get_dri
$LN9@cl_get_dri:

; 308  :     #if defined(_WIN32) || defined(_WIN64)
; 309  :     } __except (EXCEPTION_EXECUTE_HANDLER) {
; 310  :         _ftprintf(stderr, _T("Crush (getDeviceInfo)\n"));

  000a9	b9 02 00 00 00	 mov	 ecx, 2
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000b4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63920
  000bb	48 8b c8	 mov	 rcx, rax
  000be	e8 00 00 00 00	 call	 fprintf

; 311  :         opencl_crush = true;

  000c3	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1

; 312  :         ret = CL_INVALID_VALUE;

  000ca	c7 44 24 34 e2
	ff ff ff	 mov	 DWORD PTR ret$[rsp], -30
$LN11@cl_get_dri:

; 313  :     }
; 314  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 315  :     if (ret == CL_SUCCESS) {

  000d2	83 7c 24 34 00	 cmp	 DWORD PTR ret$[rsp], 0
  000d7	75 1b		 jne	 SHORT $LN4@cl_get_dri

; 316  :         to_tchar(buffer, buffer_size, cl_info_buffer);

  000d9	4c 8d 44 24 60	 lea	 r8, QWORD PTR cl_info_buffer$[rsp]
  000de	8b 94 24 a8 04
	00 00		 mov	 edx, DWORD PTR buffer_size$[rsp]
  000e5	48 8b 8c 24 a0
	04 00 00	 mov	 rcx, QWORD PTR buffer$[rsp]
  000ed	e8 00 00 00 00	 call	 ?to_tchar@@YAXPEADIPEBD@Z ; to_tchar

; 317  :     } else {

  000f2	eb 1e		 jmp	 SHORT $LN5@cl_get_dri
$LN4@cl_get_dri:

; 318  :         _tcscpy_s(buffer, buffer_size, _T("Unknown"));

  000f4	8b 84 24 a8 04
	00 00		 mov	 eax, DWORD PTR buffer_size$[rsp]
  000fb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63923
  00102	8b d0		 mov	 edx, eax
  00104	48 8b 8c 24 a0
	04 00 00	 mov	 rcx, QWORD PTR buffer$[rsp]
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcpy_s
$LN5@cl_get_dri:

; 319  :     }
; 320  :     return ret;

  00112	8b 44 24 34	 mov	 eax, DWORD PTR ret$[rsp]
$LN7@cl_get_dri:

; 321  : }

  00116	48 8b f8	 mov	 rdi, rax
  00119	48 8b cc	 mov	 rcx, rsp
  0011c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcFrameData
  00123	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00128	48 8b c7	 mov	 rax, rdi
  0012b	48 8b 8c 24 70
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00133	48 33 cc	 xor	 rcx, rsp
  00136	e8 00 00 00 00	 call	 __security_check_cookie
  0013b	48 81 c4 80 04
	00 00		 add	 rsp, 1152		; 00000480H
  00142	5f		 pop	 rdi
  00143	c3		 ret	 0
?cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z ENDP ; cl_get_driver_version
_TEXT	ENDS
text$x	SEGMENT
ret$ = 52
cl_info_buffer$ = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
buffer$ = 1184
buffer_size$ = 1192
?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA PROC ; `cl_get_driver_version'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN8@filt$0:

; 308  :     #if defined(_WIN32) || defined(_WIN64)
; 309  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN10@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA ENDP ; `cl_get_driver_version'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ret$ = 52
cl_info_buffer$ = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
buffer$ = 1184
buffer_size$ = 1192
?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA PROC ; `cl_get_driver_version'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN8@filt$0:

; 309  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN10@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_driver_version@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA ENDP ; `cl_get_driver_version'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
ret$ = 52
cl_info_buffer$ = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
buffer$ = 1184
buffer_size$ = 1192
?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z PROC ; cl_get_device_name

; 273  : cl_int cl_get_device_name(const cl_data_t *cl_data, const cl_func_t *cl, TCHAR *buffer, unsigned int buffer_size) {

$LN12:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 04
	00 00		 sub	 rsp, 1152		; 00000480H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1168]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 70
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 274  :     if (opencl_crush) {

  00045	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?opencl_crush@@3_NA
  0004c	85 c0		 test	 eax, eax
  0004e	74 0a		 je	 SHORT $LN2@cl_get_dev

; 275  :         return CL_INVALID_VALUE;

  00050	b8 e2 ff ff ff	 mov	 eax, -30
  00055	e9 bc 00 00 00	 jmp	 $LN7@cl_get_dev
$LN2@cl_get_dev:

; 276  :     }
; 277  :     cl_int ret = CL_SUCCESS;

  0005a	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR ret$[rsp], 0

; 278  :     char cl_info_buffer[1024] = { 0 };

  00062	48 8d 44 24 60	 lea	 rax, QWORD PTR cl_info_buffer$[rsp]
  00067	48 8b f8	 mov	 rdi, rax
  0006a	33 c0		 xor	 eax, eax
  0006c	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00071	f3 aa		 rep stosb

; 279  :     #if defined(_WIN32) || defined(_WIN64)
; 280  :     __try {
; 281  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 282  :         ret = cl->getDeviceInfo(cl_data->deviceID, CL_DEVICE_NAME, _countof(cl_info_buffer), cl_info_buffer, NULL);

  00073	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007c	4c 8d 4c 24 60	 lea	 r9, QWORD PTR cl_info_buffer$[rsp]
  00081	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00087	ba 2b 10 00 00	 mov	 edx, 4139		; 0000102bH
  0008c	48 8b 84 24 90
	04 00 00	 mov	 rax, QWORD PTR cl_data$[rsp]
  00094	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00098	48 8b 84 24 98
	04 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  000a0	ff 50 20	 call	 QWORD PTR [rax+32]
  000a3	89 44 24 34	 mov	 DWORD PTR ret$[rsp], eax
  000a7	eb 29		 jmp	 SHORT $LN11@cl_get_dev
$LN9@cl_get_dev:

; 283  :     #if defined(_WIN32) || defined(_WIN64)
; 284  :     } __except (EXCEPTION_EXECUTE_HANDLER) {
; 285  :         _ftprintf(stderr, _T("Crush (getDeviceInfo)\n"));

  000a9	b9 02 00 00 00	 mov	 ecx, 2
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000b4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63906
  000bb	48 8b c8	 mov	 rcx, rax
  000be	e8 00 00 00 00	 call	 fprintf

; 286  :         opencl_crush = true;

  000c3	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1

; 287  :         ret = CL_INVALID_VALUE;

  000ca	c7 44 24 34 e2
	ff ff ff	 mov	 DWORD PTR ret$[rsp], -30
$LN11@cl_get_dev:

; 288  :     }
; 289  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 290  :     if (ret == CL_SUCCESS) {

  000d2	83 7c 24 34 00	 cmp	 DWORD PTR ret$[rsp], 0
  000d7	75 1b		 jne	 SHORT $LN4@cl_get_dev

; 291  :         to_tchar(buffer, buffer_size, cl_info_buffer);

  000d9	4c 8d 44 24 60	 lea	 r8, QWORD PTR cl_info_buffer$[rsp]
  000de	8b 94 24 a8 04
	00 00		 mov	 edx, DWORD PTR buffer_size$[rsp]
  000e5	48 8b 8c 24 a0
	04 00 00	 mov	 rcx, QWORD PTR buffer$[rsp]
  000ed	e8 00 00 00 00	 call	 ?to_tchar@@YAXPEADIPEBD@Z ; to_tchar

; 292  :     } else {

  000f2	eb 1e		 jmp	 SHORT $LN5@cl_get_dev
$LN4@cl_get_dev:

; 293  :         _tcscpy_s(buffer, buffer_size, _T("Unknown"));

  000f4	8b 84 24 a8 04
	00 00		 mov	 eax, DWORD PTR buffer_size$[rsp]
  000fb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63909
  00102	8b d0		 mov	 edx, eax
  00104	48 8b 8c 24 a0
	04 00 00	 mov	 rcx, QWORD PTR buffer$[rsp]
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strcpy_s
$LN5@cl_get_dev:

; 294  :     }
; 295  :     return ret;

  00112	8b 44 24 34	 mov	 eax, DWORD PTR ret$[rsp]
$LN7@cl_get_dev:

; 296  : }

  00116	48 8b f8	 mov	 rdi, rax
  00119	48 8b cc	 mov	 rcx, rsp
  0011c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z$rtcFrameData
  00123	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00128	48 8b c7	 mov	 rax, rdi
  0012b	48 8b 8c 24 70
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00133	48 33 cc	 xor	 rcx, rsp
  00136	e8 00 00 00 00	 call	 __security_check_cookie
  0013b	48 81 c4 80 04
	00 00		 add	 rsp, 1152		; 00000480H
  00142	5f		 pop	 rdi
  00143	c3		 ret	 0
?cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z ENDP ; cl_get_device_name
_TEXT	ENDS
text$x	SEGMENT
ret$ = 52
cl_info_buffer$ = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
buffer$ = 1184
buffer_size$ = 1192
?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA PROC ; `cl_get_device_name'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN8@filt$0:

; 283  :     #if defined(_WIN32) || defined(_WIN64)
; 284  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN10@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA ENDP ; `cl_get_device_name'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ret$ = 52
cl_info_buffer$ = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
buffer$ = 1184
buffer_size$ = 1192
?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA PROC ; `cl_get_device_name'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN8@filt$0:

; 284  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN10@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_device_name@@YAHPEBUcl_data_t@@PEBUcl_func_t@@PEADI@Z@4HA ENDP ; `cl_get_device_name'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
cu$ = 52
cl_info_buffer$5 = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z PROC ; cl_get_device_max_compute_units

; 252  : int cl_get_device_max_compute_units(const cl_data_t *cl_data, const cl_func_t *cl) {

$LN11:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 04
	00 00		 sub	 rsp, 1152		; 00000480H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 01 00 00	 mov	 ecx, 288		; 00000120H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	04 00 00	 mov	 rcx, QWORD PTR [rsp+1168]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 70
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 253  :     int cu = 0;

  0003b	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR cu$[rsp], 0

; 254  :     if (opencl_crush) {

  00043	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?opencl_crush@@3_NA
  0004a	85 c0		 test	 eax, eax
  0004c	74 06		 je	 SHORT $LN2@cl_get_dev

; 255  :         return cu;

  0004e	8b 44 24 34	 mov	 eax, DWORD PTR cu$[rsp]
  00052	eb 74		 jmp	 SHORT $LN6@cl_get_dev
$LN2@cl_get_dev:

; 256  :     }
; 257  :     #if defined(_WIN32) || defined(_WIN64)
; 258  :     __try {
; 259  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 260  :         char cl_info_buffer[1024] = { 0 };

  00054	48 8d 44 24 60	 lea	 rax, QWORD PTR cl_info_buffer$5[rsp]
  00059	48 8b f8	 mov	 rdi, rax
  0005c	33 c0		 xor	 eax, eax
  0005e	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  00063	f3 aa		 rep stosb

; 261  :         if (CL_SUCCESS == cl->getDeviceInfo(cl_data->deviceID, CL_DEVICE_MAX_COMPUTE_UNITS, _countof(cl_info_buffer), cl_info_buffer, NULL)) {

  00065	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0006e	4c 8d 4c 24 60	 lea	 r9, QWORD PTR cl_info_buffer$5[rsp]
  00073	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  00079	ba 02 10 00 00	 mov	 edx, 4098		; 00001002H
  0007e	48 8b 84 24 90
	04 00 00	 mov	 rax, QWORD PTR cl_data$[rsp]
  00086	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0008a	48 8b 84 24 98
	04 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00092	ff 50 20	 call	 QWORD PTR [rax+32]
  00095	85 c0		 test	 eax, eax
  00097	75 08		 jne	 SHORT $LN4@cl_get_dev

; 262  :             cu = *(cl_uint *)cl_info_buffer;

  00099	8b 44 24 60	 mov	 eax, DWORD PTR cl_info_buffer$5[rsp]
  0009d	89 44 24 34	 mov	 DWORD PTR cu$[rsp], eax
$LN4@cl_get_dev:

; 263  :         }

  000a1	eb 21		 jmp	 SHORT $LN10@cl_get_dev
$LN8@cl_get_dev:

; 264  :     #if defined(_WIN32) || defined(_WIN64)
; 265  :     } __except (EXCEPTION_EXECUTE_HANDLER) {
; 266  :         _ftprintf(stderr, _T("Crush (getDeviceIDs)\n"));

  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000ae	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63895
  000b5	48 8b c8	 mov	 rcx, rax
  000b8	e8 00 00 00 00	 call	 fprintf

; 267  :         opencl_crush = true;

  000bd	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1
$LN10@cl_get_dev:

; 268  :     }
; 269  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 270  :     return cu;

  000c4	8b 44 24 34	 mov	 eax, DWORD PTR cu$[rsp]
$LN6@cl_get_dev:

; 271  : }

  000c8	48 8b f8	 mov	 rdi, rax
  000cb	48 8b cc	 mov	 rcx, rsp
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z$rtcFrameData
  000d5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000da	48 8b c7	 mov	 rax, rdi
  000dd	48 8b 8c 24 70
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000e5	48 33 cc	 xor	 rcx, rsp
  000e8	e8 00 00 00 00	 call	 __security_check_cookie
  000ed	48 81 c4 80 04
	00 00		 add	 rsp, 1152		; 00000480H
  000f4	5f		 pop	 rdi
  000f5	c3		 ret	 0
?cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z ENDP ; cl_get_device_max_compute_units
_TEXT	ENDS
text$x	SEGMENT
cu$ = 52
cl_info_buffer$5 = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_device_max_compute_units'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN7@filt$0:

; 264  :     #if defined(_WIN32) || defined(_WIN64)
; 265  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN9@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_device_max_compute_units'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cu$ = 52
cl_info_buffer$5 = 96
__$ArrayPad$ = 1136
cl_data$ = 1168
cl$ = 1176
?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_device_max_compute_units'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN7@filt$0:

; 265  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN9@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_device_max_compute_units@@YAHPEBUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_device_max_compute_units'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z PROC ; cl_get_platform_and_device

; 120  : cl_int cl_get_platform_and_device(const char *VendorName, cl_int device_type, cl_data_t *cl_data, const cl_func_t *cl) {

$LN48:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 81 ec 00 05
	00 00		 sub	 rsp, 1280		; 00000500H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 40 01 00 00	 mov	 ecx, 320		; 00000140H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 10
	05 00 00	 mov	 rcx, QWORD PTR [rsp+1296]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 f8
	04 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 121  :     if (opencl_crush) {

  00044	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?opencl_crush@@3_NA
  0004b	85 c0		 test	 eax, eax
  0004d	74 0a		 je	 SHORT $LN5@cl_get_pla

; 122  :         return CL_INVALID_VALUE;

  0004f	b8 e2 ff ff ff	 mov	 eax, -30
  00054	e9 1a 04 00 00	 jmp	 $LN27@cl_get_pla
$LN5@cl_get_pla:

; 123  :     }
; 124  : 
; 125  :     cl_uint platform_count = 0;

  00059	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR platform_count$[rsp], 0

; 126  :     cl_int ret = CL_SUCCESS;

  00061	c7 44 24 54 00
	00 00 00	 mov	 DWORD PTR ret$[rsp], 0

; 127  : 
; 128  :     //OpenCLのドライバは場合によってはクラッシュする可能性がある
; 129  :     //その対策として、構造化例外を使用して回避を試みる
; 130  :     #if defined(_WIN32) || defined(_WIN64)
; 131  :     __try {
; 132  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 133  :         if (CL_SUCCESS != (ret = cl->getPlatformIDs(0, NULL, &platform_count))) {

  00069	4c 8d 44 24 34	 lea	 r8, QWORD PTR platform_count$[rsp]
  0006e	33 d2		 xor	 edx, edx
  00070	33 c9		 xor	 ecx, ecx
  00072	48 8b 84 24 28
	05 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0007a	ff 50 08	 call	 QWORD PTR [rax+8]
  0007d	89 44 24 54	 mov	 DWORD PTR ret$[rsp], eax
  00081	83 7c 24 54 00	 cmp	 DWORD PTR ret$[rsp], 0
  00086	74 28		 je	 SHORT $LN7@cl_get_pla

; 134  :             _ftprintf(stderr, _T("Error (clGetPlatformIDs): %d\n"), ret);

  00088	b9 02 00 00 00	 mov	 ecx, 2
  0008d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00093	44 8b 44 24 54	 mov	 r8d, DWORD PTR ret$[rsp]
  00098	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63851
  0009f	48 8b c8	 mov	 rcx, rax
  000a2	e8 00 00 00 00	 call	 fprintf

; 135  :             return ret;

  000a7	8b 44 24 54	 mov	 eax, DWORD PTR ret$[rsp]
  000ab	e9 c3 03 00 00	 jmp	 $LN27@cl_get_pla
$LN7@cl_get_pla:

; 136  :         }

  000b0	eb 2b		 jmp	 SHORT $LN31@cl_get_pla
$LN29@cl_get_pla:

; 137  :     #if defined(_WIN32) || defined(_WIN64)
; 138  :     } __except (EXCEPTION_EXECUTE_HANDLER) {
; 139  :         _ftprintf(stderr, _T("Crush (clGetPlatformIDs)\n"));

  000b2	b9 02 00 00 00	 mov	 ecx, 2
  000b7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63852
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 fprintf

; 140  :         opencl_crush = true; //クラッシュフラグを立てる

  000cc	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1

; 141  :         return CL_INVALID_VALUE;

  000d3	b8 e2 ff ff ff	 mov	 eax, -30
  000d8	e9 96 03 00 00	 jmp	 $LN27@cl_get_pla
$LN31@cl_get_pla:

; 142  :     }
; 143  :     #endif //#if defined(_WIN32) || defined(_WIN64)
; 144  :     if (platform_count > 0) {

  000dd	83 7c 24 34 00	 cmp	 DWORD PTR platform_count$[rsp], 0
  000e2	0f 86 87 03 00
	00		 jbe	 $LN8@cl_get_pla

; 145  :         cl_platform_id *platform_list = (cl_platform_id *)malloc(sizeof(platform_list[0]) * platform_count);

  000e8	8b 44 24 34	 mov	 eax, DWORD PTR platform_count$[rsp]
  000ec	48 c1 e0 03	 shl	 rax, 3
  000f0	48 8b c8	 mov	 rcx, rax
  000f3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  000f9	48 89 44 24 68	 mov	 QWORD PTR platform_list$8[rsp], rax

; 146  :         if (platform_list == nullptr) {

  000fe	48 83 7c 24 68
	00		 cmp	 QWORD PTR platform_list$8[rsp], 0
  00104	75 0a		 jne	 SHORT $LN9@cl_get_pla

; 147  :             return CL_OUT_OF_HOST_MEMORY;

  00106	b8 fa ff ff ff	 mov	 eax, -6
  0010b	e9 63 03 00 00	 jmp	 $LN27@cl_get_pla
$LN9@cl_get_pla:

; 148  :         }
; 149  :         #if defined(_WIN32) || defined(_WIN64)
; 150  :         __try {
; 151  :         #endif //#if defined(_WIN32) || defined(_WIN64)
; 152  :             if (CL_SUCCESS != (ret = cl->getPlatformIDs(platform_count, platform_list, &platform_count))) {

  00110	4c 8d 44 24 34	 lea	 r8, QWORD PTR platform_count$[rsp]
  00115	48 8b 54 24 68	 mov	 rdx, QWORD PTR platform_list$8[rsp]
  0011a	8b 4c 24 34	 mov	 ecx, DWORD PTR platform_count$[rsp]
  0011e	48 8b 84 24 28
	05 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00126	ff 50 08	 call	 QWORD PTR [rax+8]
  00129	89 44 24 54	 mov	 DWORD PTR ret$[rsp], eax
  0012d	83 7c 24 54 00	 cmp	 DWORD PTR ret$[rsp], 0
  00132	74 28		 je	 SHORT $LN11@cl_get_pla

; 153  :                 _ftprintf(stderr, _T("Error (getPlatformIDs): %d\n"), ret);

  00134	b9 02 00 00 00	 mov	 ecx, 2
  00139	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  0013f	44 8b 44 24 54	 mov	 r8d, DWORD PTR ret$[rsp]
  00144	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63857
  0014b	48 8b c8	 mov	 rcx, rax
  0014e	e8 00 00 00 00	 call	 fprintf

; 154  :                 return ret;

  00153	8b 44 24 54	 mov	 eax, DWORD PTR ret$[rsp]
  00157	e9 17 03 00 00	 jmp	 $LN27@cl_get_pla
$LN11@cl_get_pla:

; 155  :             }

  0015c	eb 31		 jmp	 SHORT $LN35@cl_get_pla
$LN33@cl_get_pla:

; 156  :         #if defined(_WIN32) || defined(_WIN64)
; 157  :         } __except (EXCEPTION_EXECUTE_HANDLER) {
; 158  :             _ftprintf(stderr, _T("Crush (getPlatformIDs)\n"));

  0015e	b9 02 00 00 00	 mov	 ecx, 2
  00163	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00169	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63858
  00170	48 8b c8	 mov	 rcx, rax
  00173	e8 00 00 00 00	 call	 fprintf

; 159  :             opencl_crush = true; //クラッシュフラグを立てる

  00178	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1

; 160  :             ret = CL_INVALID_VALUE;

  0017f	c7 44 24 54 e2
	ff ff ff	 mov	 DWORD PTR ret$[rsp], -30

; 161  :             platform_count = 0;

  00187	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR platform_count$[rsp], 0
$LN35@cl_get_pla:

; 162  :         }
; 163  :         #endif //#if defined(_WIN32) || defined(_WIN64)
; 164  : 
; 165  :         for (uint32_t i = 0; i < platform_count; i++) {

  0018f	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR i$9[rsp], 0
  00197	eb 0a		 jmp	 SHORT $LN4@cl_get_pla
$LN2@cl_get_pla:
  00199	8b 44 24 70	 mov	 eax, DWORD PTR i$9[rsp]
  0019d	ff c0		 inc	 eax
  0019f	89 44 24 70	 mov	 DWORD PTR i$9[rsp], eax
$LN4@cl_get_pla:
  001a3	8b 44 24 34	 mov	 eax, DWORD PTR platform_count$[rsp]
  001a7	39 44 24 70	 cmp	 DWORD PTR i$9[rsp], eax
  001ab	0f 83 ab 02 00
	00		 jae	 $LN3@cl_get_pla

; 166  :             bool targetVendor = true;

  001b1	c6 84 24 84 00
	00 00 01	 mov	 BYTE PTR targetVendor$10[rsp], 1

; 167  :             if (VendorName != nullptr) {

  001b9	48 83 bc 24 10
	05 00 00 00	 cmp	 QWORD PTR VendorName$[rsp], 0
  001c2	0f 84 bf 00 00
	00		 je	 $LN12@cl_get_pla

; 168  :                 char buf[1024] = { 0 };

  001c8	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR buf$11[rsp]
  001d0	48 8b f8	 mov	 rdi, rax
  001d3	33 c0		 xor	 eax, eax
  001d5	b9 00 04 00 00	 mov	 ecx, 1024		; 00000400H
  001da	f3 aa		 rep stosb

; 169  :                 #if defined(_WIN32) || defined(_WIN64)
; 170  :                 __try {
; 171  :                 #endif //#if defined(_WIN32) || defined(_WIN64)
; 172  :                     targetVendor = (CL_SUCCESS == cl->getPlatformInfo(platform_list[i], CL_PLATFORM_VENDOR, _countof(buf), buf, NULL)

  001dc	8b 44 24 70	 mov	 eax, DWORD PTR i$9[rsp]
  001e0	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  001e9	4c 8d 8c 24 b0
	00 00 00	 lea	 r9, QWORD PTR buf$11[rsp]
  001f1	41 b8 00 04 00
	00		 mov	 r8d, 1024		; 00000400H
  001f7	ba 03 09 00 00	 mov	 edx, 2307		; 00000903H
  001fc	48 8b 4c 24 68	 mov	 rcx, QWORD PTR platform_list$8[rsp]
  00201	48 8b 0c c1	 mov	 rcx, QWORD PTR [rcx+rax*8]
  00205	48 8b 84 24 28
	05 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0020d	ff 50 10	 call	 QWORD PTR [rax+16]
  00210	85 c0		 test	 eax, eax
  00212	75 29		 jne	 SHORT $LN25@cl_get_pla
  00214	48 8b 94 24 10
	05 00 00	 mov	 rdx, QWORD PTR VendorName$[rsp]
  0021c	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR buf$11[rsp]
  00224	e8 00 00 00 00	 call	 ?cl_check_vendor_name@@YA_NPEBD0@Z ; cl_check_vendor_name
  00229	0f b6 c0	 movzx	 eax, al
  0022c	85 c0		 test	 eax, eax
  0022e	74 0d		 je	 SHORT $LN25@cl_get_pla
  00230	c7 84 24 e8 04
	00 00 01 00 00
	00		 mov	 DWORD PTR tv160[rsp], 1
  0023b	eb 0b		 jmp	 SHORT $LN26@cl_get_pla
$LN25@cl_get_pla:
  0023d	c7 84 24 e8 04
	00 00 00 00 00
	00		 mov	 DWORD PTR tv160[rsp], 0
$LN26@cl_get_pla:
  00248	0f b6 84 24 e8
	04 00 00	 movzx	 eax, BYTE PTR tv160[rsp]
  00250	88 84 24 84 00
	00 00		 mov	 BYTE PTR targetVendor$10[rsp], al
  00257	eb 2e		 jmp	 SHORT $LN12@cl_get_pla
$LN37@cl_get_pla:

; 173  :                         && cl_check_vendor_name(buf, VendorName));
; 174  :                 #if defined(_WIN32) || defined(_WIN64)
; 175  :                 } __except (EXCEPTION_EXECUTE_HANDLER) {
; 176  :                     _ftprintf(stderr, _T("Crush (getPlatformInfo)\n"));

  00259	b9 02 00 00 00	 mov	 ecx, 2
  0025e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  00264	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63861
  0026b	48 8b c8	 mov	 rcx, rax
  0026e	e8 00 00 00 00	 call	 fprintf

; 177  :                     opencl_crush = true; //クラッシュフラグを立てる

  00273	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1

; 178  :                     ret = CL_INVALID_VALUE;

  0027a	c7 44 24 54 e2
	ff ff ff	 mov	 DWORD PTR ret$[rsp], -30

; 179  :                     break;

  00282	e9 d5 01 00 00	 jmp	 $LN3@cl_get_pla
$LN12@cl_get_pla:

; 180  :                 }
; 181  :                 #endif //#if defined(_WIN32) || defined(_WIN64)
; 182  :             }
; 183  :             if (targetVendor) {

  00287	0f b6 84 24 84
	00 00 00	 movzx	 eax, BYTE PTR targetVendor$10[rsp]
  0028f	85 c0		 test	 eax, eax
  00291	0f 84 c0 01 00
	00		 je	 $LN14@cl_get_pla

; 184  :                 cl_uint device_count = 0;

  00297	c7 84 24 c4 04
	00 00 00 00 00
	00		 mov	 DWORD PTR device_count$12[rsp], 0

; 185  :                 #if defined(_WIN32) || defined(_WIN64)
; 186  :                 __try {
; 187  :                 #endif //#if defined(_WIN32) || defined(_WIN64)
; 188  :                     if (CL_SUCCESS != (ret = cl->getDeviceIDs(platform_list[i], device_type, 0, NULL, &device_count))) {

  002a2	48 63 84 24 18
	05 00 00	 movsxd	 rax, DWORD PTR device_type$[rsp]
  002aa	8b 4c 24 70	 mov	 ecx, DWORD PTR i$9[rsp]
  002ae	48 8d 94 24 c4
	04 00 00	 lea	 rdx, QWORD PTR device_count$12[rsp]
  002b6	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  002bb	45 33 c9	 xor	 r9d, r9d
  002be	45 33 c0	 xor	 r8d, r8d
  002c1	48 8b d0	 mov	 rdx, rax
  002c4	48 8b 44 24 68	 mov	 rax, QWORD PTR platform_list$8[rsp]
  002c9	48 8b 0c c8	 mov	 rcx, QWORD PTR [rax+rcx*8]
  002cd	48 8b 84 24 28
	05 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  002d5	ff 50 18	 call	 QWORD PTR [rax+24]
  002d8	89 44 24 54	 mov	 DWORD PTR ret$[rsp], eax
  002dc	83 7c 24 54 00	 cmp	 DWORD PTR ret$[rsp], 0
  002e1	0f 85 b2 fe ff
	ff		 jne	 $LN2@cl_get_pla
$LN16@cl_get_pla:

; 189  :                         continue;
; 190  :                     }

  002e7	eb 27		 jmp	 SHORT $LN43@cl_get_pla
$LN41@cl_get_pla:

; 191  :                 #if defined(_WIN32) || defined(_WIN64)
; 192  :                 } __except (EXCEPTION_EXECUTE_HANDLER) {
; 193  :                     _ftprintf(stderr, _T("Crush (getDeviceIDs)\n"));

  002e9	b9 02 00 00 00	 mov	 ecx, 2
  002ee	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  002f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63865
  002fb	48 8b c8	 mov	 rcx, rax
  002fe	e8 00 00 00 00	 call	 fprintf

; 194  :                     ret = CL_INVALID_VALUE;

  00303	c7 44 24 54 e2
	ff ff ff	 mov	 DWORD PTR ret$[rsp], -30

; 195  :                     break;

  0030b	e9 4c 01 00 00	 jmp	 $LN3@cl_get_pla
$LN43@cl_get_pla:

; 196  :                 }
; 197  :                 #endif //#if defined(_WIN32) || defined(_WIN64)
; 198  :                 if (device_count == 0) {

  00310	83 bc 24 c4 04
	00 00 00	 cmp	 DWORD PTR device_count$12[rsp], 0
  00318	75 05		 jne	 SHORT $LN17@cl_get_pla

; 199  :                     continue;

  0031a	e9 7a fe ff ff	 jmp	 $LN2@cl_get_pla
$LN17@cl_get_pla:

; 200  :                 }
; 201  :                 bool got_result = false;

  0031f	c6 84 24 d4 04
	00 00 00	 mov	 BYTE PTR got_result$13[rsp], 0

; 202  :                 cl_device_id *device_list = (cl_device_id *)malloc(sizeof(device_list[0]) * device_count);

  00327	8b 84 24 c4 04
	00 00		 mov	 eax, DWORD PTR device_count$12[rsp]
  0032e	48 c1 e0 03	 shl	 rax, 3
  00332	48 8b c8	 mov	 rcx, rax
  00335	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
  0033b	48 89 84 24 d8
	04 00 00	 mov	 QWORD PTR device_list$14[rsp], rax

; 203  :                 if (device_list != nullptr) {

  00343	48 83 bc 24 d8
	04 00 00 00	 cmp	 QWORD PTR device_list$14[rsp], 0
  0034c	0f 84 d9 00 00
	00		 je	 $LN18@cl_get_pla

; 204  :                     #if defined(_WIN32) || defined(_WIN64)
; 205  :                     __try {
; 206  :                     #endif //#if defined(_WIN32) || defined(_WIN64)
; 207  :                         ret = cl->getDeviceIDs(platform_list[i], device_type, device_count, &device_list[0], &device_count);

  00352	b8 08 00 00 00	 mov	 eax, 8
  00357	48 6b c0 00	 imul	 rax, rax, 0
  0035b	48 8b 8c 24 d8
	04 00 00	 mov	 rcx, QWORD PTR device_list$14[rsp]
  00363	48 03 c8	 add	 rcx, rax
  00366	48 8b c1	 mov	 rax, rcx
  00369	48 63 8c 24 18
	05 00 00	 movsxd	 rcx, DWORD PTR device_type$[rsp]
  00371	8b 54 24 70	 mov	 edx, DWORD PTR i$9[rsp]
  00375	48 89 94 24 f0
	04 00 00	 mov	 QWORD PTR tv202[rsp], rdx
  0037d	48 8d bc 24 c4
	04 00 00	 lea	 rdi, QWORD PTR device_count$12[rsp]
  00385	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0038a	4c 8b c8	 mov	 r9, rax
  0038d	44 8b 84 24 c4
	04 00 00	 mov	 r8d, DWORD PTR device_count$12[rsp]
  00395	48 8b d1	 mov	 rdx, rcx
  00398	48 8b 44 24 68	 mov	 rax, QWORD PTR platform_list$8[rsp]
  0039d	48 8b 8c 24 f0
	04 00 00	 mov	 rcx, QWORD PTR tv202[rsp]
  003a5	48 8b 0c c8	 mov	 rcx, QWORD PTR [rax+rcx*8]
  003a9	48 8b 84 24 28
	05 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  003b1	ff 50 18	 call	 QWORD PTR [rax+24]
  003b4	89 44 24 54	 mov	 DWORD PTR ret$[rsp], eax
  003b8	eb 29		 jmp	 SHORT $LN47@cl_get_pla
$LN45@cl_get_pla:

; 208  :                     #if defined(_WIN32) || defined(_WIN64)
; 209  :                     } __except (EXCEPTION_EXECUTE_HANDLER) {
; 210  :                         _ftprintf(stderr, _T("Crush (getDeviceIDs)\n"));

  003ba	b9 02 00 00 00	 mov	 ecx, 2
  003bf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___acrt_iob_func
  003c5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG63869
  003cc	48 8b c8	 mov	 rcx, rax
  003cf	e8 00 00 00 00	 call	 fprintf

; 211  :                         opencl_crush = true; //クラッシュフラグを立てる

  003d4	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?opencl_crush@@3_NA, 1

; 212  :                         ret = CL_INVALID_VALUE;

  003db	c7 44 24 54 e2
	ff ff ff	 mov	 DWORD PTR ret$[rsp], -30
$LN47@cl_get_pla:

; 213  :                     }
; 214  :                     #endif //#if defined(_WIN32) || defined(_WIN64)
; 215  :                     if (ret == CL_SUCCESS) {

  003e3	83 7c 24 54 00	 cmp	 DWORD PTR ret$[rsp], 0
  003e8	75 41		 jne	 SHORT $LN18@cl_get_pla

; 216  :                         cl_data->platformID = platform_list[i];

  003ea	8b 44 24 70	 mov	 eax, DWORD PTR i$9[rsp]
  003ee	48 8b 8c 24 20
	05 00 00	 mov	 rcx, QWORD PTR cl_data$[rsp]
  003f6	48 8b 54 24 68	 mov	 rdx, QWORD PTR platform_list$8[rsp]
  003fb	48 8b 04 c2	 mov	 rax, QWORD PTR [rdx+rax*8]
  003ff	48 89 01	 mov	 QWORD PTR [rcx], rax

; 217  :                         cl_data->deviceID = device_list[0];

  00402	b8 08 00 00 00	 mov	 eax, 8
  00407	48 6b c0 00	 imul	 rax, rax, 0
  0040b	48 8b 8c 24 20
	05 00 00	 mov	 rcx, QWORD PTR cl_data$[rsp]
  00413	48 8b 94 24 d8
	04 00 00	 mov	 rdx, QWORD PTR device_list$14[rsp]
  0041b	48 8b 04 02	 mov	 rax, QWORD PTR [rdx+rax]
  0041f	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 218  :                         got_result = true;

  00423	c6 84 24 d4 04
	00 00 01	 mov	 BYTE PTR got_result$13[rsp], 1
$LN18@cl_get_pla:

; 219  :                     }
; 220  :                 }
; 221  :                 if (device_list) free(device_list);

  0042b	48 83 bc 24 d8
	04 00 00 00	 cmp	 QWORD PTR device_list$14[rsp], 0
  00434	74 0e		 je	 SHORT $LN21@cl_get_pla
  00436	48 8b 8c 24 d8
	04 00 00	 mov	 rcx, QWORD PTR device_list$14[rsp]
  0043e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN21@cl_get_pla:

; 222  :                 if (!got_result) continue;

  00444	0f b6 84 24 d4
	04 00 00	 movzx	 eax, BYTE PTR got_result$13[rsp]
  0044c	85 c0		 test	 eax, eax
  0044e	75 05		 jne	 SHORT $LN22@cl_get_pla
  00450	e9 44 fd ff ff	 jmp	 $LN2@cl_get_pla
$LN22@cl_get_pla:

; 223  :                 break;

  00455	eb 05		 jmp	 SHORT $LN3@cl_get_pla
$LN14@cl_get_pla:

; 224  :             }
; 225  :         }

  00457	e9 3d fd ff ff	 jmp	 $LN2@cl_get_pla
$LN3@cl_get_pla:

; 226  :         if (platform_list) free(platform_list);

  0045c	48 83 7c 24 68
	00		 cmp	 QWORD PTR platform_list$8[rsp], 0
  00462	74 0b		 je	 SHORT $LN8@cl_get_pla
  00464	48 8b 4c 24 68	 mov	 rcx, QWORD PTR platform_list$8[rsp]
  00469	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free
$LN8@cl_get_pla:

; 227  :     }
; 228  :     return ret;

  0046f	8b 44 24 54	 mov	 eax, DWORD PTR ret$[rsp]
$LN27@cl_get_pla:

; 229  : }

  00473	48 8b f8	 mov	 rdi, rax
  00476	48 8b cc	 mov	 rcx, rsp
  00479	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z$rtcFrameData
  00480	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00485	48 8b c7	 mov	 rax, rdi
  00488	48 8b 8c 24 f8
	04 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00490	48 33 cc	 xor	 rcx, rsp
  00493	e8 00 00 00 00	 call	 __security_check_cookie
  00498	48 81 c4 00 05
	00 00		 add	 rsp, 1280		; 00000500H
  0049f	5f		 pop	 rdi
  004a0	c3		 ret	 0
?cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z ENDP ; cl_get_platform_and_device
_TEXT	ENDS
text$x	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN28@filt$0:

; 137  :     #if defined(_WIN32) || defined(_WIN64)
; 138  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN30@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$0
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$1
  00020	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00025	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002a	55		 push	 rbp
  0002b	57		 push	 rdi
  0002c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00030	48 8b ea	 mov	 rbp, rdx
$LN32@filt$1:

; 156  :         #if defined(_WIN32) || defined(_WIN64)
; 157  :         } __except (EXCEPTION_EXECUTE_HANDLER) {

  00033	b8 01 00 00 00	 mov	 eax, 1
$LN34@filt$1:
  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	5f		 pop	 rdi
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
  0003f	cc		 int	 3
?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$1
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$2
  00040	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00045	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0004a	55		 push	 rbp
  0004b	57		 push	 rdi
  0004c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00050	48 8b ea	 mov	 rbp, rdx
$LN36@filt$2:

; 173  :                         && cl_check_vendor_name(buf, VendorName));
; 174  :                 #if defined(_WIN32) || defined(_WIN64)
; 175  :                 } __except (EXCEPTION_EXECUTE_HANDLER) {

  00053	b8 01 00 00 00	 mov	 eax, 1
$LN38@filt$2:
  00058	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
  0005f	cc		 int	 3
?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$2
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$3
  00060	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00065	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0006a	55		 push	 rbp
  0006b	57		 push	 rdi
  0006c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00070	48 8b ea	 mov	 rbp, rdx
$LN40@filt$3:

; 191  :                 #if defined(_WIN32) || defined(_WIN64)
; 192  :                 } __except (EXCEPTION_EXECUTE_HANDLER) {

  00073	b8 01 00 00 00	 mov	 eax, 1
$LN42@filt$3:
  00078	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
  0007f	cc		 int	 3
?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$3
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$4
  00080	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00085	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008a	55		 push	 rbp
  0008b	57		 push	 rdi
  0008c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00090	48 8b ea	 mov	 rbp, rdx
$LN44@filt$4:

; 208  :                     #if defined(_WIN32) || defined(_WIN64)
; 209  :                     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00093	b8 01 00 00 00	 mov	 eax, 1
$LN46@filt$4:
  00098	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
  0009f	cc		 int	 3
?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00010	48 8b ea	 mov	 rbp, rdx
$LN28@filt$0:

; 138  :     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00013	b8 01 00 00 00	 mov	 eax, 1
$LN30@filt$0:
  00018	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0001c	5f		 pop	 rdi
  0001d	5d		 pop	 rbp
  0001e	c3		 ret	 0
  0001f	cc		 int	 3
?filt$0@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$1
  00020	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00025	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002a	55		 push	 rbp
  0002b	57		 push	 rdi
  0002c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00030	48 8b ea	 mov	 rbp, rdx
$LN32@filt$1:

; 157  :         } __except (EXCEPTION_EXECUTE_HANDLER) {

  00033	b8 01 00 00 00	 mov	 eax, 1
$LN34@filt$1:
  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	5f		 pop	 rdi
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
  0003f	cc		 int	 3
?filt$1@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$2
  00040	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00045	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0004a	55		 push	 rbp
  0004b	57		 push	 rdi
  0004c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00050	48 8b ea	 mov	 rbp, rdx
$LN36@filt$2:

; 175  :                 } __except (EXCEPTION_EXECUTE_HANDLER) {

  00053	b8 01 00 00 00	 mov	 eax, 1
$LN38@filt$2:
  00058	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
  0005f	cc		 int	 3
?filt$2@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$3
  00060	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00065	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0006a	55		 push	 rbp
  0006b	57		 push	 rdi
  0006c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00070	48 8b ea	 mov	 rbp, rdx
$LN40@filt$3:

; 192  :                 } __except (EXCEPTION_EXECUTE_HANDLER) {

  00073	b8 01 00 00 00	 mov	 eax, 1
$LN42@filt$3:
  00078	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007c	5f		 pop	 rdi
  0007d	5d		 pop	 rbp
  0007e	c3		 ret	 0
  0007f	cc		 int	 3
?filt$3@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
platform_count$ = 52
ret$ = 84
platform_list$8 = 104
i$9 = 112
targetVendor$10 = 132
buf$11 = 176
device_count$12 = 1220
got_result$13 = 1236
device_list$14 = 1240
tv160 = 1256
tv202 = 1264
__$ArrayPad$ = 1272
VendorName$ = 1296
device_type$ = 1304
cl_data$ = 1312
cl$ = 1320
?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA PROC ; `cl_get_platform_and_device'::`1'::filt$4
  00080	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00085	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008a	55		 push	 rbp
  0008b	57		 push	 rdi
  0008c	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  00090	48 8b ea	 mov	 rbp, rdx
$LN44@filt$4:

; 209  :                     } __except (EXCEPTION_EXECUTE_HANDLER) {

  00093	b8 01 00 00 00	 mov	 eax, 1
$LN46@filt$4:
  00098	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
  0009f	cc		 int	 3
?filt$4@?0??cl_get_platform_and_device@@YAHPEBDHPEAUcl_data_t@@PEBUcl_func_t@@@Z@4HA ENDP ; `cl_get_platform_and_device'::`1'::filt$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
tv76 = 32
str$ = 64
VendorName$ = 72
?cl_check_vendor_name@@YA_NPEBD0@Z PROC			; cl_check_vendor_name

; 68   : bool cl_check_vendor_name(const char *str, const char *VendorName) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 69   :     if (NULL != stristr(str, VendorName))

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR VendorName$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR str$[rsp]
  0002d	e8 00 00 00 00	 call	 ?stristr@@YAPEBDPEBD0@Z	; stristr
  00032	48 85 c0	 test	 rax, rax
  00035	74 04		 je	 SHORT $LN2@cl_check_v

; 70   :         return true;

  00037	b0 01		 mov	 al, 1
  00039	eb 47		 jmp	 SHORT $LN1@cl_check_v
$LN2@cl_check_v:

; 71   :     if (NULL != stristr(VendorName, "AMD"))

  0003b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG62254
  00042	48 8b 4c 24 48	 mov	 rcx, QWORD PTR VendorName$[rsp]
  00047	e8 00 00 00 00	 call	 ?stristr@@YAPEBDPEBD0@Z	; stristr
  0004c	48 85 c0	 test	 rax, rax
  0004f	74 2f		 je	 SHORT $LN3@cl_check_v

; 72   :         return NULL != stristr(str, "Advanced Micro Devices");

  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG62255
  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR str$[rsp]
  0005d	e8 00 00 00 00	 call	 ?stristr@@YAPEBDPEBD0@Z	; stristr
  00062	48 85 c0	 test	 rax, rax
  00065	74 0a		 je	 SHORT $LN5@cl_check_v
  00067	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv76[rsp], 1
  0006f	eb 08		 jmp	 SHORT $LN6@cl_check_v
$LN5@cl_check_v:
  00071	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv76[rsp], 0
$LN6@cl_check_v:
  00079	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv76[rsp]
  0007e	eb 02		 jmp	 SHORT $LN1@cl_check_v
$LN3@cl_check_v:

; 73   :     return false;

  00080	32 c0		 xor	 al, al
$LN1@cl_check_v:

; 74   : }

  00082	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00086	5f		 pop	 rdi
  00087	c3		 ret	 0
?cl_check_vendor_name@@YA_NPEBD0@Z ENDP			; cl_check_vendor_name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
cl$ = 48
?cl_release_func@@YAXPEAUcl_func_t@@@Z PROC		; cl_release_func

; 113  : void cl_release_func(cl_func_t *cl) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 114  :     if (cl && cl->hdll) {

  0001e	48 83 7c 24 30
	00		 cmp	 QWORD PTR cl$[rsp], 0
  00024	74 19		 je	 SHORT $LN2@cl_release
  00026	48 8b 44 24 30	 mov	 rax, QWORD PTR cl$[rsp]
  0002b	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0002f	74 0e		 je	 SHORT $LN2@cl_release

; 115  :         FreeLibrary(cl->hdll);

  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR cl$[rsp]
  00036	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FreeLibrary
$LN2@cl_release:

; 116  :     }
; 117  :     ZeroMemory(cl, sizeof(cl_func_t));

  0003f	41 b8 b8 00 00
	00		 mov	 r8d, 184		; 000000b8H
  00045	33 d2		 xor	 edx, edx
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR cl$[rsp]
  0004c	e8 00 00 00 00	 call	 memset

; 118  : }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?cl_release_func@@YAXPEAUcl_func_t@@@Z ENDP		; cl_release_func
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\cl_func.cpp
_TEXT	SEGMENT
cl_func_list$ = 40
$T5 = 96
<range>$L0$6 = 464
<begin>$L0$7 = 472
<end>$L0$8 = 480
func$9 = 504
$T10 = 544
$T11 = 552
$T12 = 560
$T13 = 568
$T14 = 576
$T15 = 584
$T16 = 592
$T17 = 600
$T18 = 608
$T19 = 616
$T20 = 624
$T21 = 632
$T22 = 640
$T23 = 648
$T24 = 656
$T25 = 664
$T26 = 672
$T27 = 680
$T28 = 688
$T29 = 696
$T30 = 704
$T31 = 712
$T32 = 720
$T33 = 728
$T34 = 744
$T35 = 748
$T36 = 752
tv68 = 768
tv74 = 776
__$ArrayPad$ = 784
cl$ = 832
?cl_get_func@@YAHPEAUcl_func_t@@@Z PROC			; cl_get_func

; 75   : cl_int cl_get_func(cl_func_t *cl) {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 81 ec 28 03
	00 00		 sub	 rsp, 808		; 00000328H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 ca 00 00 00	 mov	 ecx, 202		; 000000caH
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR [rsp+832]
  00025	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002c	48 33 c4	 xor	 rax, rsp
  0002f	48 89 84 24 10
	03 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 76   :     ZeroMemory(cl, sizeof(cl_func_t));

  00037	41 b8 b8 00 00
	00		 mov	 r8d, 184		; 000000b8H
  0003d	33 d2		 xor	 edx, edx
  0003f	48 8b 8c 24 40
	03 00 00	 mov	 rcx, QWORD PTR cl$[rsp]
  00047	e8 00 00 00 00	 call	 memset

; 77   :     if (NULL == (cl->hdll = LoadLibrary(_T("OpenCL.dll")))) {

  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG63792
  00053	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadLibraryA
  00059	48 89 84 24 00
	03 00 00	 mov	 QWORD PTR tv68[rsp], rax
  00061	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00069	48 8b 8c 24 00
	03 00 00	 mov	 rcx, QWORD PTR tv68[rsp]
  00071	48 89 08	 mov	 QWORD PTR [rax], rcx
  00074	48 83 bc 24 00
	03 00 00 00	 cmp	 QWORD PTR tv68[rsp], 0
  0007d	75 0a		 jne	 SHORT $LN5@cl_get_fun

; 78   :         return 1;

  0007f	b8 01 00 00 00	 mov	 eax, 1
  00084	e9 77 05 00 00	 jmp	 $LN1@cl_get_fun
$LN5@cl_get_fun:

; 79   :     }
; 80   : 
; 81   :     std::vector<std::pair<void**, const char*>> cl_func_list = {

  00089	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00091	48 83 c0 08	 add	 rax, 8
  00095	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR $T11[rsp], rax
  0009d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63793
  000a4	48 8d 94 24 28
	02 00 00	 lea	 rdx, QWORD PTR $T11[rsp]
  000ac	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T5[rsp]
  000b1	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[17],0>
  000b6	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  000be	48 83 c0 10	 add	 rax, 16
  000c2	48 89 84 24 30
	02 00 00	 mov	 QWORD PTR $T12[rsp], rax
  000ca	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63794
  000d1	48 8d 94 24 30
	02 00 00	 lea	 rdx, QWORD PTR $T12[rsp]
  000d9	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T5[rsp+16]
  000de	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BC@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BC@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[18],0>
  000e3	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  000eb	48 83 c0 18	 add	 rax, 24
  000ef	48 89 84 24 38
	02 00 00	 mov	 QWORD PTR $T13[rsp], rax
  000f7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63795
  000fe	48 8d 94 24 38
	02 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  00106	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+32]
  0010e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
  00113	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0011b	48 83 c0 20	 add	 rax, 32			; 00000020H
  0011f	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR $T14[rsp], rax
  00127	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63796
  0012e	48 8d 94 24 40
	02 00 00	 lea	 rdx, QWORD PTR $T14[rsp]
  00136	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+48]
  0013e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[16],0>
  00143	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0014b	48 83 c0 28	 add	 rax, 40			; 00000028H
  0014f	48 89 84 24 48
	02 00 00	 mov	 QWORD PTR $T15[rsp], rax
  00157	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63797
  0015e	48 8d 94 24 48
	02 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  00166	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+64]
  0016e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BK@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BK@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[26],0>
  00173	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0017b	48 83 c0 30	 add	 rax, 48			; 00000030H
  0017f	48 89 84 24 50
	02 00 00	 mov	 QWORD PTR $T16[rsp], rax
  00187	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63798
  0018e	48 8d 94 24 50
	02 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00196	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+80]
  0019e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
  001a3	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  001ab	48 83 c0 38	 add	 rax, 56			; 00000038H
  001af	48 89 84 24 58
	02 00 00	 mov	 QWORD PTR $T17[rsp], rax
  001b7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63799
  001be	48 8d 94 24 58
	02 00 00	 lea	 rdx, QWORD PTR $T17[rsp]
  001c6	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+96]
  001ce	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[22],0>
  001d3	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  001db	48 83 c0 40	 add	 rax, 64			; 00000040H
  001df	48 89 84 24 60
	02 00 00	 mov	 QWORD PTR $T18[rsp], rax
  001e7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63800
  001ee	48 8d 94 24 60
	02 00 00	 lea	 rdx, QWORD PTR $T18[rsp]
  001f6	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+112]
  001fe	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[17],0>
  00203	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0020b	48 83 c0 48	 add	 rax, 72			; 00000048H
  0020f	48 89 84 24 68
	02 00 00	 mov	 QWORD PTR $T19[rsp], rax
  00217	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63801
  0021e	48 8d 94 24 68
	02 00 00	 lea	 rdx, QWORD PTR $T19[rsp]
  00226	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+128]
  0022e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[16],0>
  00233	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0023b	48 83 c0 50	 add	 rax, 80			; 00000050H
  0023f	48 89 84 24 70
	02 00 00	 mov	 QWORD PTR $T20[rsp], rax
  00247	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63802
  0024e	48 8d 94 24 70
	02 00 00	 lea	 rdx, QWORD PTR $T20[rsp]
  00256	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T5[rsp+144]
  0025e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BB@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BB@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[17],0>
  00263	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0026b	48 83 c0 58	 add	 rax, 88			; 00000058H
  0026f	48 89 84 24 78
	02 00 00	 mov	 QWORD PTR $T21[rsp], rax
  00277	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63803
  0027e	48 8d 94 24 78
	02 00 00	 lea	 rdx, QWORD PTR $T21[rsp]
  00286	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+160]
  0028e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[21],0>
  00293	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0029b	48 83 c0 60	 add	 rax, 96			; 00000060H
  0029f	48 89 84 24 80
	02 00 00	 mov	 QWORD PTR $T22[rsp], rax
  002a7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63804
  002ae	48 8d 94 24 80
	02 00 00	 lea	 rdx, QWORD PTR $T22[rsp]
  002b6	48 8d 8c 24 10
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+176]
  002be	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BG@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BG@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[22],0>
  002c3	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  002cb	48 83 c0 68	 add	 rax, 104		; 00000068H
  002cf	48 89 84 24 88
	02 00 00	 mov	 QWORD PTR $T23[rsp], rax
  002d7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63805
  002de	48 8d 94 24 88
	02 00 00	 lea	 rdx, QWORD PTR $T23[rsp]
  002e6	48 8d 8c 24 20
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+192]
  002ee	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
  002f3	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  002fb	48 83 c0 70	 add	 rax, 112		; 00000070H
  002ff	48 89 84 24 90
	02 00 00	 mov	 QWORD PTR $T24[rsp], rax
  00307	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63806
  0030e	48 8d 94 24 90
	02 00 00	 lea	 rdx, QWORD PTR $T24[rsp]
  00316	48 8d 8c 24 30
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+208]
  0031e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BD@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BD@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[19],0>
  00323	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0032b	48 83 c0 78	 add	 rax, 120		; 00000078H
  0032f	48 89 84 24 98
	02 00 00	 mov	 QWORD PTR $T25[rsp], rax
  00337	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63807
  0033e	48 8d 94 24 98
	02 00 00	 lea	 rdx, QWORD PTR $T25[rsp]
  00346	48 8d 8c 24 40
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+224]
  0034e	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
  00353	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0035b	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00361	48 89 84 24 a0
	02 00 00	 mov	 QWORD PTR $T26[rsp], rax
  00369	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63808
  00370	48 8d 94 24 a0
	02 00 00	 lea	 rdx, QWORD PTR $T26[rsp]
  00378	48 8d 8c 24 50
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+240]
  00380	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BA@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BA@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[16],0>
  00385	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0038d	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  00393	48 89 84 24 a8
	02 00 00	 mov	 QWORD PTR $T27[rsp], rax
  0039b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63809
  003a2	48 8d 94 24 a8
	02 00 00	 lea	 rdx, QWORD PTR $T27[rsp]
  003aa	48 8d 8c 24 60
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+256]
  003b2	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0P@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0P@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[15],0>
  003b7	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  003bf	48 05 90 00 00
	00		 add	 rax, 144		; 00000090H
  003c5	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR $T28[rsp], rax
  003cd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63810
  003d4	48 8d 94 24 b0
	02 00 00	 lea	 rdx, QWORD PTR $T28[rsp]
  003dc	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+272]
  003e4	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0O@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0O@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[14],0>
  003e9	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  003f1	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  003f7	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR $T29[rsp], rax
  003ff	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63811
  00406	48 8d 94 24 b8
	02 00 00	 lea	 rdx, QWORD PTR $T29[rsp]
  0040e	48 8d 8c 24 80
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+288]
  00416	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BH@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BH@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[23],0>
  0041b	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00423	48 05 a0 00 00
	00		 add	 rax, 160		; 000000a0H
  00429	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR $T30[rsp], rax
  00431	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63812
  00438	48 8d 94 24 c0
	02 00 00	 lea	 rdx, QWORD PTR $T30[rsp]
  00440	48 8d 8c 24 90
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+304]
  00448	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY08$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY08$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[9],0>
  0044d	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00455	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  0045b	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR $T31[rsp], rax
  00463	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63813
  0046a	48 8d 94 24 c8
	02 00 00	 lea	 rdx, QWORD PTR $T31[rsp]
  00472	48 8d 8c 24 a0
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+320]
  0047a	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BE@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BE@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[20],0>
  0047f	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  00487	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  0048d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR $T32[rsp], rax
  00495	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG63814
  0049c	48 8d 94 24 d0
	02 00 00	 lea	 rdx, QWORD PTR $T32[rsp]
  004a4	48 8d 8c 24 b0
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+336]
  004ac	e8 00 00 00 00	 call	 ??$?0PEAPEAXAEAY0BF@$$CBD$0A@@?$pair@PEAPEAXPEBD@std@@QEAA@$$QEAPEAPEAXAEAY0BF@$$CBD@Z ; std::pair<void * *,char const *>::pair<void * *,char const *><void * *,char const (&)[21],0>
  004b1	48 8d 8c 24 20
	02 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  004b9	e8 00 00 00 00	 call	 ??0?$allocator@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@XZ ; std::allocator<std::pair<void * *,char const *> >::allocator<std::pair<void * *,char const *> >
  004be	48 89 84 24 08
	03 00 00	 mov	 QWORD PTR tv74[rsp], rax
  004c6	48 8d 8c 24 c0
	01 00 00	 lea	 rcx, QWORD PTR $T5[rsp+352]
  004ce	4c 8b c1	 mov	 r8, rcx
  004d1	48 8d 54 24 60	 lea	 rdx, QWORD PTR $T5[rsp]
  004d6	48 8d 8c 24 d8
	02 00 00	 lea	 rcx, QWORD PTR $T33[rsp]
  004de	e8 00 00 00 00	 call	 ??0?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@std@@QEAA@PEBU?$pair@PEAPEAXPEBD@1@0@Z ; std::initializer_list<std::pair<void * *,char const *> >::initializer_list<std::pair<void * *,char const *> >
  004e3	48 8d 8c 24 f0
	02 00 00	 lea	 rcx, QWORD PTR $T36[rsp]
  004eb	48 8b f9	 mov	 rdi, rcx
  004ee	48 8b f0	 mov	 rsi, rax
  004f1	b9 10 00 00 00	 mov	 ecx, 16
  004f6	f3 a4		 rep movsb
  004f8	48 8b 84 24 08
	03 00 00	 mov	 rax, QWORD PTR tv74[rsp]
  00500	4c 8b c0	 mov	 r8, rax
  00503	48 8d 94 24 f0
	02 00 00	 lea	 rdx, QWORD PTR $T36[rsp]
  0050b	48 8d 4c 24 28	 lea	 rcx, QWORD PTR cl_func_list$[rsp]
  00510	e8 00 00 00 00	 call	 ??0?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@V?$initializer_list@U?$pair@PEAPEAXPEBD@std@@@1@AEBV?$allocator@U?$pair@PEAPEAXPEBD@std@@@1@@Z ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
  00515	90		 npad	 1

; 82   :         { (void **)&cl->getPlatformIDs, "clGetPlatformIDs" },
; 83   :         { (void **)&cl->getPlatformInfo, "clGetPlatformInfo" },
; 84   :         { (void **)&cl->getDeviceIDs, "clGetDeviceIDs" },
; 85   :         { (void **)&cl->getDeviceInfo, "clGetDeviceInfo" },
; 86   :         { (void **)&cl->createProgramWithSource, "clCreateProgramWithSource" },
; 87   :         { (void **)&cl->buildProgram, "clBuildProgram" },
; 88   :         { (void **)&cl->getProgramBuildInfo, "clGetProgramBuildInfo" },
; 89   :         { (void **)&cl->releaseProgram, "clReleaseProgram" },
; 90   :         { (void **)&cl->createContext, "clCreateContext" },
; 91   :         { (void **)&cl->releaseContext, "clReleaseContext" },
; 92   :         { (void **)&cl->createCommandQueue, "clCreateCommandQueue" },
; 93   :         { (void **)&cl->releaseCommandQueue, "clReleaseCommandQueue" },
; 94   :         { (void **)&cl->createBuffer, "clCreateBuffer" },
; 95   :         { (void **)&cl->releaseMemObject, "clReleaseMemObject" },
; 96   :         { (void **)&cl->createKernel, "clCreateKernel" },
; 97   :         { (void **)&cl->releaseKernel, "clReleaseKernel" },
; 98   :         { (void **)&cl->setKernelArg, "clSetKernelArg" },
; 99   :         { (void **)&cl->enqueueTask, "clEnqueueTask" },
; 100  :         { (void **)&cl->enqueueNDRangeKernel, "clEnqueueNDRangeKernel" },
; 101  :         { (void **)&cl->finish, "clFinish" },
; 102  :         { (void **)&cl->enqueueReadBuffer, "clEnqueueReadBuffer" },
; 103  :         { (void **)&cl->enqueueWriteBuffer, "clEnqueueWriteBuffer" },
; 104  :     };
; 105  : 
; 106  :     for (auto func : cl_func_list) {

  00516	48 8d 44 24 28	 lea	 rax, QWORD PTR cl_func_list$[rsp]
  0051b	48 89 84 24 d0
	01 00 00	 mov	 QWORD PTR <range>$L0$6[rsp], rax
  00523	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR <range>$L0$6[rsp]
  0052b	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_begin
  00530	48 89 84 24 d8
	01 00 00	 mov	 QWORD PTR <begin>$L0$7[rsp], rax
  00538	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR <range>$L0$6[rsp]
  00540	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAAPEAU?$pair@PEAPEAXPEBD@2@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::_Unchecked_end
  00545	48 89 84 24 e0
	01 00 00	 mov	 QWORD PTR <end>$L0$8[rsp], rax
  0054d	eb 14		 jmp	 SHORT $LN4@cl_get_fun
$LN2@cl_get_fun:
  0054f	48 8b 84 24 d8
	01 00 00	 mov	 rax, QWORD PTR <begin>$L0$7[rsp]
  00557	48 83 c0 10	 add	 rax, 16
  0055b	48 89 84 24 d8
	01 00 00	 mov	 QWORD PTR <begin>$L0$7[rsp], rax
$LN4@cl_get_fun:
  00563	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR <end>$L0$8[rsp]
  0056b	48 39 84 24 d8
	01 00 00	 cmp	 QWORD PTR <begin>$L0$7[rsp], rax
  00573	74 6f		 je	 SHORT $LN3@cl_get_fun
  00575	48 8d 84 24 f8
	01 00 00	 lea	 rax, QWORD PTR func$9[rsp]
  0057d	48 8b f8	 mov	 rdi, rax
  00580	48 8b b4 24 d8
	01 00 00	 mov	 rsi, QWORD PTR <begin>$L0$7[rsp]
  00588	b9 10 00 00 00	 mov	 ecx, 16
  0058d	f3 a4		 rep movsb

; 107  :         if (NULL == (*(func.first) = GetProcAddress(cl->hdll, func.second))) {

  0058f	48 8b 94 24 00
	02 00 00	 mov	 rdx, QWORD PTR func$9[rsp+8]
  00597	48 8b 84 24 40
	03 00 00	 mov	 rax, QWORD PTR cl$[rsp]
  0059f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  005a2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetProcAddress
  005a8	48 8b 8c 24 f8
	01 00 00	 mov	 rcx, QWORD PTR func$9[rsp]
  005b0	48 89 01	 mov	 QWORD PTR [rcx], rax
  005b3	48 8b 84 24 f8
	01 00 00	 mov	 rax, QWORD PTR func$9[rsp]
  005bb	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  005bf	75 1e		 jne	 SHORT $LN6@cl_get_fun

; 108  :             return 1;

  005c1	c7 84 24 e8 02
	00 00 01 00 00
	00		 mov	 DWORD PTR $T34[rsp], 1
  005cc	48 8d 4c 24 28	 lea	 rcx, QWORD PTR cl_func_list$[rsp]
  005d1	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
  005d6	8b 84 24 e8 02
	00 00		 mov	 eax, DWORD PTR $T34[rsp]
  005dd	eb 21		 jmp	 SHORT $LN1@cl_get_fun
$LN6@cl_get_fun:

; 109  :         }
; 110  :     }

  005df	e9 6b ff ff ff	 jmp	 $LN2@cl_get_fun
$LN3@cl_get_fun:

; 111  :     return CL_SUCCESS;

  005e4	c7 84 24 ec 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T35[rsp], 0
  005ef	48 8d 4c 24 28	 lea	 rcx, QWORD PTR cl_func_list$[rsp]
  005f4	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
  005f9	8b 84 24 ec 02
	00 00		 mov	 eax, DWORD PTR $T35[rsp]
$LN1@cl_get_fun:

; 112  : }

  00600	48 8b f8	 mov	 rdi, rax
  00603	48 8b cc	 mov	 rcx, rsp
  00606	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?cl_get_func@@YAHPEAUcl_func_t@@@Z$rtcFrameData
  0060d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00612	48 8b c7	 mov	 rax, rdi
  00615	48 8b 8c 24 10
	03 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0061d	48 33 cc	 xor	 rcx, rsp
  00620	e8 00 00 00 00	 call	 __security_check_cookie
  00625	48 81 c4 28 03
	00 00		 add	 rsp, 808		; 00000328H
  0062c	5f		 pop	 rdi
  0062d	5e		 pop	 rsi
  0062e	c3		 ret	 0
?cl_get_func@@YAHPEAUcl_func_t@@@Z ENDP			; cl_get_func
_TEXT	ENDS
text$x	SEGMENT
cl_func_list$ = 40
$T5 = 96
<range>$L0$6 = 464
<begin>$L0$7 = 472
<end>$L0$8 = 480
func$9 = 504
$T10 = 544
$T11 = 552
$T12 = 560
$T13 = 568
$T14 = 576
$T15 = 584
$T16 = 592
$T17 = 600
$T18 = 608
$T19 = 616
$T20 = 624
$T21 = 632
$T22 = 640
$T23 = 648
$T24 = 656
$T25 = 664
$T26 = 672
$T27 = 680
$T28 = 688
$T29 = 696
$T30 = 704
$T31 = 712
$T32 = 720
$T33 = 728
$T34 = 744
$T35 = 748
$T36 = 752
tv68 = 768
tv74 = 776
__$ArrayPad$ = 784
cl$ = 832
?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA PROC	; `cl_get_func'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR cl_func_list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA ENDP	; `cl_get_func'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
cl_func_list$ = 40
$T5 = 96
<range>$L0$6 = 464
<begin>$L0$7 = 472
<end>$L0$8 = 480
func$9 = 504
$T10 = 544
$T11 = 552
$T12 = 560
$T13 = 568
$T14 = 576
$T15 = 584
$T16 = 592
$T17 = 600
$T18 = 608
$T19 = 616
$T20 = 624
$T21 = 632
$T22 = 640
$T23 = 648
$T24 = 656
$T25 = 664
$T26 = 672
$T27 = 680
$T28 = 688
$T29 = 696
$T30 = 704
$T31 = 712
$T32 = 720
$T33 = 728
$T34 = 744
$T35 = 748
$T36 = 752
tv68 = 768
tv74 = 776
__$ArrayPad$ = 784
cl$ = 832
?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA PROC	; `cl_get_func'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR cl_func_list$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@U?$pair@PEAPEAXPEBD@std@@V?$allocator@U?$pair@PEAPEAXPEBD@std@@@2@@std@@QEAA@XZ ; std::vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >::~vector<std::pair<void * *,char const *>,std::allocator<std::pair<void * *,char const *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??cl_get_func@@YAHPEAUcl_func_t@@@Z@4HA ENDP	; `cl_get_func'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT fprintf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 56
_Stream$ = 96
_Format$ = 104
fprintf	PROC						; COMDAT

; 835  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  0002d	48 8d 44 24 70	 lea	 rax, QWORD PTR _Format$[rsp+8]
  00032	48 89 44 24 38	 mov	 QWORD PTR _ArgList$[rsp], rax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  00037	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _ArgList$[rsp]
  0003c	45 33 c0	 xor	 r8d, r8d
  0003f	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Format$[rsp]
  00044	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Stream$[rsp]
  00049	e8 00 00 00 00	 call	 _vfprintf_l
  0004e	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 840  :         __crt_va_end(_ArgList);

  00052	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 841  :         return _Result;

  0005b	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 842  :     }

  0005f	8b f8		 mov	 edi, eax
  00061	48 8b cc	 mov	 rcx, rsp
  00064	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:fprintf$rtcFrameData
  0006b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00070	8b c7		 mov	 eax, edi
  00072	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
fprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 642  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0003c	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00041	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00046	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vfprintf

; 644  :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
END
