; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG140558 DB	'invalid argument', 00H
?piecewise_construct@std@@3Upiecewise_construct_t@1@B	ORG $+1 ; std::piecewise_construct
	ORG $+2
$SG140559 DB	'%s', 00H
	ORG $+1
$SG140563 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG140560 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG116307 DB	'all', 00H
	ORG $+4
$SG140561 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG140562 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG140719 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
$SG116308 DB	'cpu', 00H
$SG116318 DB	'mem', 00H
$SG116309 DB	'cpu_total', 00H
	ORG $+2
$SG116313 DB	'cpu_in', 00H
	ORG $+1
$SG116321 DB	'io', 00H
	ORG $+1
$SG116310 DB	'cpu_kernel', 00H
	ORG $+1
$SG116324 DB	'fps', 00H
$SG116311 DB	'cpu_main', 00H
	ORG $+3
$SG116329 DB	'gpu', 00H
$SG116312 DB	'cpu_enc', 00H
$SG116314 DB	'cpu_aud', 00H
$SG116315 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG116316 DB	'cpu_aud_enc', 00H
$SG110618 DB	'rgb', 00H
$SG116317 DB	'cpu_out', 00H
$SG116319 DB	'mem_private', 00H
$SG110620 DB	'gbr', 00H
$SG116320 DB	'mem_virtual', 00H
$SG110623 DB	'y8', 00H
	ORG $+1
$SG116322 DB	'io_read', 00H
$SG116323 DB	'io_write', 00H
	ORG $+3
$SG116336 DB	'queue', 00H
	ORG $+2
$SG110590 DB	'yuv422', 00H
	ORG $+1
$SG119131 DB	'vp8', 00H
$SG116325 DB	'fps_avg', 00H
$SG116326 DB	'bitrate', 00H
$SG116327 DB	'bitrate_avg', 00H
$SG119132 DB	'raw', 00H
$SG116328 DB	'frame_out', 00H
	ORG $+2
$SG110592 DB	'yuv444', 00H
	ORG $+1
$SG119134 DB	'CBR', 00H
$SG116330 DB	'gpu_load', 00H
	ORG $+3
$SG110612 DB	'rgb24r', 00H
	ORG $+1
$SG119135 DB	'VBR', 00H
$SG116331 DB	'gpu_clock', 00H
	ORG $+2
$SG110613 DB	'rgb32r', 00H
	ORG $+1
$SG119136 DB	'CQP', 00H
$SG116332 DB	'vee_load', 00H
	ORG $+3
$SG110614 DB	'rgb24', 00H
	ORG $+2
$SG119138 DB	'LA', 00H
	ORG $+1
$SG116333 DB	'ved_load', 00H
	ORG $+3
$SG110615 DB	'rgb32', 00H
	ORG $+2
$SG119139 DB	'LA-EXT', 00H
	ORG $+1
$SG119142 DB	'ICQ', 00H
$SG116334 DB	'pcie_load', 00H
	ORG $+2
$SG119140 DB	'LA-HRD', 00H
	ORG $+1
$SG119144 DB	'VCM', 00H
$SG116335 DB	've_clock', 00H
	ORG $+3
$SG110616 DB	'bgr24', 00H
	ORG $+2
$SG119141 DB	'LA-ICQ', 00H
	ORG $+1
$SG119169 DB	'0', 00H
	ORG $+2
$SG126677 DB	'WaitToFinish: Encode Aborted, putting abort flag on.', 0aH
	DB	00H
	ORG $+2
$SG126679 DB	'WaitToFinish: Settings event on.', 0aH, 00H
	ORG $+2
$SG119153 DB	'main10', 00H
	ORG $+1
$SG119170 DB	'1', 00H
	ORG $+2
$SG126680 DB	'WaitToFinish: Encode thread shut down.', 0aH, 00H
$SG110586 DB	'Invalid', 00H
$SG110587 DB	'nv12', 00H
	ORG $+3
$SG110588 DB	'yv12', 00H
	ORG $+3
$SG110589 DB	'yuy2', 00H
	ORG $+3
$SG110591 DB	'nv16', 00H
	ORG $+3
$SG110593 DB	'yv12(9bit)', 00H
	ORG $+1
$SG119171 DB	'2', 00H
	ORG $+2
$SG110594 DB	'yv12(10bit)', 00H
$SG119172 DB	'3', 00H
	ORG $+2
$SG110595 DB	'yv12(12bit)', 00H
$SG119175 DB	'0', 00H
	ORG $+2
$SG110596 DB	'yv12(14bit)', 00H
$SG119176 DB	'1', 00H
	ORG $+2
$SG110597 DB	'yv12(16bit)', 00H
$SG110598 DB	'p010', 00H
	ORG $+3
$SG110617 DB	'bgr32', 00H
	ORG $+2
$SG119159 DB	'Simple', 00H
	ORG $+1
$SG119177 DB	'2', 00H
	ORG $+2
$SG110599 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG110600 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG110601 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG110602 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG110603 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG110604 DB	'p210', 00H
	ORG $+3
$SG110605 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG110606 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG110607 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG110608 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG110609 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG110610 DB	'yuva444', 00H
$SG110611 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG110619 DB	'rgba', 00H
	ORG $+3
$SG110621 DB	'gbra', 00H
	ORG $+3
$SG110622 DB	'yc48', 00H
	ORG $+3
$SG110624 DB	'yc16', 00H
	ORG $+3
$SG119127 DB	'h264', 00H
	ORG $+3
$SG119128 DB	'hevc', 00H
	ORG $+3
$SG119129 DB	'mpeg2', 00H
	ORG $+2
$SG119130 DB	'vc-1', 00H
	ORG $+3
$SG119137 DB	'AVBR', 00H
	ORG $+3
$SG119143 DB	'QVBR', 00H
	ORG $+3
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119146	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119147
	DD	042H
	ORG $+4
	DQ	FLAT:$SG119148
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG119149
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119146 DB	'auto', 00H
	ORG $+3
$SG119147 DB	'Baseline', 00H
	ORG $+3
$SG119148 DB	'Main', 00H
	ORG $+3
$SG119149 DB	'High', 00H
	ORG $+3
$SG119151 DB	'auto', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119151	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119152
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119153
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119152 DB	'main', 00H
	ORG $+3
$SG119155 DB	'main', 00H
	ORG $+3
$SG119156 DB	'high', 00H
	ORG $+3
$SG119158 DB	'auto', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119158	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119159
	DD	050H
	ORG $+4
	DQ	FLAT:$SG119160
	DD	040H
	ORG $+4
	DQ	FLAT:$SG119161
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119160 DB	'Main', 00H
	ORG $+3
$SG119161 DB	'High', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119163	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119164
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119165
	DD	05H
	ORG $+4
	DQ	FLAT:$SG119166
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119163 DB	'auto', 00H
	ORG $+3
$SG119164 DB	'Simple', 00H
	ORG $+1
$SG119165 DB	'Main', 00H
	ORG $+3
$SG119166 DB	'Advanced', 00H
	ORG $+3
$SG119168 DB	'auto', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119168	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119169
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119170
	DD	02H
	ORG $+4
	DQ	FLAT:$SG119171
	DD	03H
	ORG $+4
	DQ	FLAT:$SG119172
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG119174	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119175
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119176
	DD	02H
	ORG $+4
	DQ	FLAT:$SG119177
	DD	03H
	ORG $+4
	DQ	FLAT:$SG119178
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119174 DB	'auto', 00H
	ORG $+3
$SG119178 DB	'3', 00H
	ORG $+2
$SG119180 DB	'8', 00H
	ORG $+2
$SG119181 DB	'10', 00H
	ORG $+1
$SG119189 DB	'it', 00H
	ORG $+1
$SG119183 DB	'progressive', 00H
$SG119190 DB	'bob', 00H
$SG119184 DB	'interlaced(tff)', 00H
$SG119185 DB	'interlaced(bff)', 00H
$SG119187 DB	'none', 00H
	ORG $+3
$SG119188 DB	'normal', 00H
	ORG $+1
$SG119192 DB	'32', 00H
	ORG $+1
$SG119193 DB	'2332', 00H
	ORG $+3
$SG119194 DB	'repeat', 00H
	ORG $+1
$SG119195 DB	'41', 00H
	ORG $+1
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG119197	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119198
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG119199
	DD	09H
	ORG $+4
	DQ	FLAT:$SG119200
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG119201
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG119202
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG119203
	DD	014H
	ORG $+4
	DQ	FLAT:$SG119204
	DD	015H
	ORG $+4
	DQ	FLAT:$SG119205
	DD	016H
	ORG $+4
	DQ	FLAT:$SG119206
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG119207
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG119208
	DD	020H
	ORG $+4
	DQ	FLAT:$SG119209
	DD	028H
	ORG $+4
	DQ	FLAT:$SG119210
	DD	029H
	ORG $+4
	DQ	FLAT:$SG119211
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG119212
	DD	032H
	ORG $+4
	DQ	FLAT:$SG119213
	DD	033H
	ORG $+4
	DQ	FLAT:$SG119214
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119197 DB	'auto', 00H
	ORG $+3
$SG119198 DB	'1', 00H
	ORG $+2
$SG119199 DB	'1b', 00H
	ORG $+1
$SG119200 DB	'1.1', 00H
$SG119201 DB	'1.2', 00H
$SG119202 DB	'1.3', 00H
$SG119203 DB	'2', 00H
	ORG $+2
$SG119204 DB	'2.1', 00H
$SG119205 DB	'2.2', 00H
$SG119206 DB	'3', 00H
	ORG $+2
$SG119207 DB	'3.1', 00H
$SG119208 DB	'3.2', 00H
$SG119209 DB	'4', 00H
	ORG $+2
$SG119210 DB	'4.1', 00H
$SG119211 DB	'4.2', 00H
$SG119212 DB	'5', 00H
	ORG $+2
$SG119213 DB	'5.1', 00H
$SG119214 DB	'5.2', 00H
	ORG $+4
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG119216	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119217
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG119218
	DD	014H
	ORG $+4
	DQ	FLAT:$SG119219
	DD	015H
	ORG $+4
	DQ	FLAT:$SG119220
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG119221
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG119222
	DD	028H
	ORG $+4
	DQ	FLAT:$SG119223
	DD	029H
	ORG $+4
	DQ	FLAT:$SG119224
	DD	032H
	ORG $+4
	DQ	FLAT:$SG119225
	DD	033H
	ORG $+4
	DQ	FLAT:$SG119226
	DD	034H
	ORG $+4
	DQ	FLAT:$SG119227
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG119228
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG119229
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119216 DB	'auto', 00H
	ORG $+3
$SG119217 DB	'1', 00H
	ORG $+2
$SG119218 DB	'2', 00H
	ORG $+2
$SG119219 DB	'2.1', 00H
$SG119220 DB	'3', 00H
	ORG $+2
$SG119221 DB	'3.1', 00H
$SG119222 DB	'4', 00H
	ORG $+2
$SG119223 DB	'4.1', 00H
$SG119224 DB	'5', 00H
	ORG $+2
$SG119225 DB	'5.1', 00H
$SG119226 DB	'5.2', 00H
$SG119227 DB	'6', 00H
	ORG $+2
$SG119228 DB	'6.1', 00H
$SG119229 DB	'6.2', 00H
	ORG $+4
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG119231	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119232
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG119233
	DD	08H
	ORG $+4
	DQ	FLAT:$SG119234
	DD	04H
	ORG $+4
	DQ	FLAT:$SG119235
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119231 DB	'auto', 00H
	ORG $+3
$SG119232 DB	'low', 00H
$SG119233 DB	'main', 00H
	ORG $+3
$SG119234 DB	'high', 00H
	ORG $+3
$SG119238 DB	'low', 00H
$SG119235 DB	'high1440', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG119237	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG119238
	DD	01H
	ORG $+4
	DQ	FLAT:$SG119239
	DD	03H
	ORG $+4
	DQ	FLAT:$SG119240
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119237 DB	'auto', 00H
	ORG $+3
$SG119239 DB	'median', 00H
	ORG $+1
$SG119240 DB	'high', 00H
	ORG $+3
$SG119242 DB	'auto', 00H
	ORG $+3
$SG119243 DB	'0', 00H
	ORG $+2
$SG119244 DB	'1', 00H
	ORG $+2
$SG119245 DB	'2', 00H
	ORG $+2
$SG119246 DB	'3', 00H
	ORG $+2
$SG119247 DB	'4', 00H
	ORG $+2
$SG119254 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG119249	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119249 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG119251	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG119251 DB	'auto', 00H
	ORG $+3
$SG119253 DB	'Auto', 00H
	ORG $+3
$SG119255 DB	'for I frames', 00H
	ORG $+3
$SG119256 DB	'for I,P frames', 00H
	ORG $+1
$SG119257 DB	'for All frames', 00H
	ORG $+1
$SG119259 DB	'auto', 00H
	ORG $+3
$SG119260 DB	'off', 00H
$SG119261 DB	'i', 00H
	ORG $+2
$SG119262 DB	'ip', 00H
	ORG $+1
$SG119263 DB	'all', 00H
$SG119264 DB	'ipb', 00H
$SG119265 DB	'ib', 00H
	ORG $+1
$SG119266 DB	'p', 00H
	ORG $+2
$SG119267 DB	'pb', 00H
	ORG $+1
$SG119268 DB	'b', 00H
	ORG $+2
$SG119270 DB	'auto', 00H
	ORG $+3
$SG119271 DB	'slow', 00H
	ORG $+3
$SG119272 DB	'medium', 00H
	ORG $+1
$SG119273 DB	'fast', 00H
	ORG $+3
$SG119276 DB	'0', 00H
	ORG $+2
$SG119275 DB	'default', 00H
$SG119277 DB	'1', 00H
	ORG $+2
$SG119278 DB	'2', 00H
	ORG $+2
$SG119279 DB	'3', 00H
	ORG $+2
$SG119280 DB	'4', 00H
	ORG $+2
$SG119282 DB	'low', 00H
$SG119283 DB	'normal', 00H
	ORG $+1
$SG119284 DB	'high', 00H
	ORG $+3
$SG119296 DB	'none', 00H
	ORG $+3
$SG119297 DB	'copy', 00H
	ORG $+3
$SG119298 DB	'aac', 00H
$SG119299 DB	'libmp3lame', 00H
	ORG $+1
$SG119304 DB	'ac3', 00H
$SG119300 DB	'libtwolame', 00H
	ORG $+1
$SG119335 DB	'tff', 00H
$SG119301 DB	'libvorbis', 00H
	ORG $+2
$SG119336 DB	'bff', 00H
$SG119302 DB	'pcm_s16le', 00H
	ORG $+2
$SG119347 DB	'higher', 00H
	ORG $+1
$SG119361 DB	'8x8', 00H
$SG119303 DB	'libopus', 00H
$SG119334 DB	'none', 00H
	ORG $+3
$SG119338 DB	' 1 - best quality', 00H
	ORG $+2
$SG119351 DB	'faster', 00H
	ORG $+1
$SG119362 DB	'4x4', 00H
$SG119339 DB	' 2 - higher', 00H
$SG119365 DB	'16', 00H
	ORG $+1
$SG119340 DB	' 3 - high quality', 00H
	ORG $+2
$SG119366 DB	'32', 00H
	ORG $+1
$SG119341 DB	' 4 - balanced', 00H
	ORG $+2
$SG119342 DB	' 5 - fast', 00H
	ORG $+2
$SG119367 DB	'64', 00H
	ORG $+1
$SG119343 DB	' 6 - faster', 00H
$SG119375 DB	'all', 00H
$SG119344 DB	' 7 - fastest', 00H
	ORG $+3
$SG119346 DB	'best', 00H
	ORG $+3
$SG119348 DB	'high', 00H
	ORG $+3
$SG119349 DB	'balanced', 00H
	ORG $+3
$SG119350 DB	'fast', 00H
	ORG $+3
$SG119357 DB	'Q-pel', 00H
	ORG $+2
$SG119374 DB	'chroma', 00H
	ORG $+1
$SG119379 DB	'box', 00H
$SG119352 DB	'fastest', 00H
$SG119354 DB	'Auto', 00H
	ORG $+3
$SG119355 DB	'full-pel', 00H
	ORG $+3
$SG119360 DB	'16x16', 00H
	ORG $+2
$SG119381 DB	'off', 00H
$SG119356 DB	'half-pel', 00H
	ORG $+3
$SG119359 DB	'Auto', 00H
	ORG $+3
$SG119364 DB	'auto', 00H
	ORG $+3
$SG119371 DB	'auto', 00H
	ORG $+3
$SG119372 DB	'none', 00H
	ORG $+3
$SG119373 DB	'luma', 00H
	ORG $+3
$SG119377 DB	'none', 00H
	ORG $+3
$SG119382 DB	'x2', 00H
	ORG $+1
$SG119378 DB	'upscale', 00H
$SG119383 DB	'x2.5', 00H
	ORG $+3
$SG119385 DB	'simple', 00H
	ORG $+1
$SG119386 DB	'complex', 00H
$SG119388 DB	'0', 00H
	ORG $+2
$SG119389 DB	'90', 00H
	ORG $+1
$SG119390 DB	'180', 00H
$SG119391 DB	'270', 00H
$SG119393 DB	'n', 00H
	ORG $+2
$SG119394 DB	'h', 00H
	ORG $+2
$SG119395 DB	'v', 00H
	ORG $+2
$SG119397 DB	'auto', 00H
	ORG $+3
$SG119398 DB	'simple', 00H
	ORG $+1
$SG119399 DB	'fine', 00H
	ORG $+3
$SG119401 DB	'auto', 00H
	ORG $+3
$SG119402 DB	'none', 00H
	ORG $+3
$SG119403 DB	'sse2', 00H
	ORG $+3
$SG119404 DB	'sse3', 00H
	ORG $+3
$SG119405 DB	'ssse3', 00H
	ORG $+2
$SG119406 DB	'sse41', 00H
	ORG $+2
$SG119407 DB	'avx', 00H
$SG119408 DB	'avx2', 00H
	ORG $+3
$SG111556 DB	'H.264/AVC', 00H
	ORG $+2
$SG111568 DB	'VP8', 00H
$SG111558 DB	'H.265/HEVC', 00H
	ORG $+1
$SG111560 DB	'MPEG2', 00H
	ORG $+2
$SG111562 DB	'MPEG1', 00H
	ORG $+2
$SG111564 DB	'VC-1', 00H
	ORG $+3
$SG111566 DB	'MPEG4', 00H
	ORG $+2
$SG111570 DB	'VP9', 00H
$SG111572 DB	'unknown', 00H
$SG119800 DB	'%s', 00H
	ORG $+1
$SG112181 DB	'fcc', 00H
$SG111679 DB	'unknown', 00H
$SG112174 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112174	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112175
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112176
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112177
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112178
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112179
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112180
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112181
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112182
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112183
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112184
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112185
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112186
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112187
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112188
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112175 DB	'auto', 00H
	ORG $+3
$SG112176 DB	'bt709', 00H
	ORG $+2
$SG112177 DB	'smpte170m', 00H
	ORG $+2
$SG112182 DB	'GBR', 00H
$SG112178 DB	'bt470bg', 00H
$SG112179 DB	'smpte240m', 00H
	ORG $+2
$SG112180 DB	'YCgCo', 00H
	ORG $+2
$SG112333 DB	'bt470m', 00H
	ORG $+1
$SG112495 DB	'pal', 00H
$SG112183 DB	'bt2020nc', 00H
	ORG $+3
$SG112187 DB	'ictco', 00H
	ORG $+2
$SG112336 DB	'linear', 00H
	ORG $+1
$SG112497 DB	'mac', 00H
$SG112184 DB	'bt2020c', 00H
$SG112185 DB	'derived-ncl', 00H
$SG112499 DB	'0', 00H
	ORG $+2
$SG112186 DB	'derived-cl', 00H
	ORG $+1
$SG112500 DB	'1', 00H
	ORG $+2
$SG112188 DB	'2100-lms', 00H
	ORG $+7
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG112329	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112330
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112331
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112332
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112333
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112334
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112335
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112336
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112337
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112338
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112339
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112340
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112341
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112342
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112343
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG112344
	DD	010H
	ORG $+4
	DQ	FLAT:$SG112345
	DD	011H
	ORG $+4
	DQ	FLAT:$SG112346
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112329 DB	'undef', 00H
	ORG $+2
$SG112330 DB	'auto', 00H
	ORG $+3
$SG112331 DB	'bt709', 00H
	ORG $+2
$SG112332 DB	'smpte170m', 00H
	ORG $+2
$SG112337 DB	'log100', 00H
	ORG $+1
$SG112501 DB	'2', 00H
	ORG $+2
$SG112334 DB	'bt470bg', 00H
$SG112335 DB	'smpte240m', 00H
	ORG $+2
$SG112338 DB	'log316', 00H
	ORG $+1
$SG112502 DB	'3', 00H
	ORG $+2
$SG112339 DB	'iec61966-2-4', 00H
	ORG $+3
$SG112340 DB	'bt1361e', 00H
$SG112341 DB	'iec61966-2-1', 00H
	ORG $+3
$SG112342 DB	'bt2020-10', 00H
	ORG $+2
$SG112482 DB	'bt470m', 00H
	ORG $+1
$SG112503 DB	'4', 00H
	ORG $+2
$SG112343 DB	'bt2020-12', 00H
	ORG $+2
$SG112486 DB	'bt2020', 00H
	ORG $+1
$SG112504 DB	'5', 00H
	ORG $+2
$SG112344 DB	'smpte2084', 00H
	ORG $+2
$SG112508 DB	'tv', 00H
	ORG $+1
$SG112345 DB	'smpte428', 00H
	ORG $+3
$SG112478 DB	'undef', 00H
	ORG $+2
$SG112509 DB	'pc', 00H
	ORG $+1
$SG112346 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG112478	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112479
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112480
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112481
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112482
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112483
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112484
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112485
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112486
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112487
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112488
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG112489
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112490
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112479 DB	'auto', 00H
	ORG $+3
$SG112480 DB	'bt709', 00H
	ORG $+2
$SG112481 DB	'smpte170m', 00H
	ORG $+2
$SG113598 DB	'cfr', 00H
$SG112483 DB	'bt470bg', 00H
$SG112484 DB	'smpte240m', 00H
	ORG $+2
$SG112485 DB	'film', 00H
	ORG $+3
$SG112487 DB	'st428', 00H
	ORG $+2
$SG113599 DB	'vfr', 00H
$SG112488 DB	'st431-2', 00H
$SG112489 DB	'st432-1', 00H
$SG112490 DB	'ebu3213-e', 00H
	ORG $+2
$SG112492 DB	'undef', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG112492	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112493
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112494
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112495
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112496
	DD	03H
	ORG $+4
	DQ	FLAT:$SG112497
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112493 DB	'ntsc', 00H
	ORG $+3
$SG112494 DB	'component', 00H
	ORG $+2
$SG112496 DB	'secam', 00H
	ORG $+2
$SG113602 DB	'swr', 00H
$SG112506 DB	'limited', 00H
$SG112507 DB	'full', 00H
	ORG $+3
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG113591 DB	'trace', 00H
	ORG $+2
$SG113592 DB	'debug', 00H
	ORG $+2
$SG113593 DB	'more', 00H
	ORG $+3
$SG113594 DB	'info', 00H
	ORG $+3
$SG113595 DB	'warn', 00H
	ORG $+3
$SG113596 DB	'error', 00H
	ORG $+2
$SG113600 DB	'forcecfr', 00H
	ORG $+3
$SG113603 DB	'soxr', 00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??0thread@std@@QEAA@XZ				; std::thread::thread
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	??4thread@std@@QEAAAEAV01@$$QEAV01@@Z		; std::thread::operator=
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	?native_handle@thread@std@@QEAAPEAXXZ		; std::thread::native_handle
PUBLIC	??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
PUBLIC	?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
PUBLIC	?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ	; std::_Ptr_base<RGYLog>::_Decref
PUBLIC	??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
PUBLIC	??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
PUBLIC	??0CEncodingThread@@QEAA@XZ			; CEncodingThread::CEncodingThread
PUBLIC	??1CEncodingThread@@QEAA@XZ			; CEncodingThread::~CEncodingThread
PUBLIC	?Init@CEncodingThread@@QEAA?AW4mfxStatus@@G@Z	; CEncodingThread::Init
PUBLIC	?Close@CEncodingThread@@QEAAXXZ			; CEncodingThread::Close
PUBLIC	?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z ; CEncodingThread::WaitToFinish
PUBLIC	?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z ; CEncodingThread::RunEncFuncbyThread
PUBLIC	?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z	; std::_Atomic_storage<int,4>::store
PUBLIC	??E?$_Atomic_integral@H$03@std@@QEAAHH@Z	; std::_Atomic_integral<int,4>::operator++
PUBLIC	??4?$atomic@H@std@@QEAAHH@Z			; std::atomic<int>::operator=
PUBLIC	??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>
PUBLIC	??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
PUBLIC	??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z	; std::_Atomic_reinterpret_as<long,int>
PUBLIC	??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(void *)>
PUBLIC	??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
PUBLIC	??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>
PUBLIC	??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >::operator()
PUBLIC	??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
PUBLIC	??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Get_first
PUBLIC	??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>
PUBLIC	??$addressof@$$CBH@std@@YAPEBHAEBH@Z		; std::addressof<int const >
PUBLIC	??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *>
PUBLIC	??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><void (__cdecl*&)(void *),CQSVPipeline * &,0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,0>
PUBLIC	??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z ; std::get<0,void (__cdecl*)(void *),CQSVPipeline *>
PUBLIC	??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(void *)>
PUBLIC	??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z ; std::get<1,void (__cdecl*)(void *),CQSVPipeline *>
PUBLIC	??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::move<CQSVPipeline * &>
PUBLIC	??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(void *)>
PUBLIC	??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline *>
PUBLIC	??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CQSVPipeline *>
PUBLIC	??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z ; std::invoke<void (__cdecl*)(void *),CQSVPipeline *>
PUBLIC	??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><std::_Exact_args_t,void (__cdecl*&)(void *),CQSVPipeline * &,0>
PUBLIC	??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1><std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>
PUBLIC	??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z ; std::tuple<CQSVPipeline *>::tuple<CQSVPipeline *><std::_Exact_args_t,CQSVPipeline * &,0>
PUBLIC	??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl*&)(void *)>
PUBLIC	??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z ; std::_Tuple_val<CQSVPipeline *>::_Tuple_val<CQSVPipeline *><CQSVPipeline * &>
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	memcpy:PROC
EXTRN	memset:PROC
EXTRN	__imp__aligned_free:PROC
EXTRN	__imp__aligned_malloc:PROC
EXTRN	__imp_terminate:PROC
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_SetEvent:PROC
EXTRN	__imp_CreateEventA:PROC
EXTRN	__imp_SetThreadAffinityMask:PROC
EXTRN	__imp__beginthreadex:PROC
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0thread@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+32
	DD	imagerel $unwind$??0thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+152
	DD	imagerel $unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?joinable@thread@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$?joinable@thread@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?native_handle@thread@std@@QEAAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?native_handle@thread@std@@QEAAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0CEncodingThread@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+131
	DD	imagerel $unwind$??0CEncodingThread@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1CEncodingThread@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+65
	DD	imagerel $unwind$??1CEncodingThread@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?Init@CEncodingThread@@QEAA?AW4mfxStatus@@G@Z DD imagerel $LN9
	DD	imagerel $LN9+346
	DD	imagerel $unwind$?Init@CEncodingThread@@QEAA?AW4mfxStatus@@G@Z
$pdata$?Close@CEncodingThread@@QEAAXXZ DD imagerel $LN10
	DD	imagerel $LN10+338
	DD	imagerel $unwind$?Close@CEncodingThread@@QEAAXXZ
$pdata$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z DD imagerel $LN10
	DD	imagerel $LN10+368
	DD	imagerel $unwind$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA DD imagerel ?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z DD imagerel $LN6
	DD	imagerel $LN6+180
	DD	imagerel $unwind$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA DD imagerel ?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA
	DD	imagerel ?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$atomic@H@std@@QEAAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??4?$atomic@H@std@@QEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD imagerel $LN7
	DD	imagerel $LN7+258
	DD	imagerel $unwind$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD imagerel $LN7
	DD	imagerel $LN7+172
	DD	imagerel $unwind$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+179
	DD	imagerel $unwind$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA DD imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBH@std@@YAPEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBH@std@@YAPEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD 022c01H
	DD	070145218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 040H
	DD	imagerel $ip2state$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD 022819H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBH@std@@YAPEBHAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	0b8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
	DD	imagerel $ip2state$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcName$0 DB 05fH ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>
	DB	046H
	DB	06eH
	DB	056H
	DB	061H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+8
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcVarDesc DD 028H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>
	DD	08H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcName$0
	ORG $+48
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcFrameData DD 01H ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>
	DD	00H
	DQ	FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 04H
	DB	00H
	DB	00H
	DB	'U', 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
	DD	imagerel $ip2state$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD 022811H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z DB 040H
	DD	imagerel $ip2state$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z$rtcName$0 DB 05fH ; std::_Atomic_reinterpret_as<long,int>
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z$rtcVarDesc DD 024H ; std::_Atomic_reinterpret_as<long,int>
	DD	04H
	DQ	FLAT:??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z$rtcName$0
	ORG $+48
??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z$rtcFrameData DD 01H ; std::_Atomic_reinterpret_as<long,int>
	DD	00H
	DQ	FLAT:??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 06H
	DB	00H
	DB	00H
	DB	0b4H
	DB	02H
	DB	0fcH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
	DD	imagerel $ip2state$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z DD 022811H
	DD	07010b214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z$rtcName$0 DB 05fH ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>
	DB	044H
	DB	065H
	DB	063H
	DB	061H
	DB	079H
	DB	05fH
	DB	063H
	DB	06fH
	DB	070H
	DB	069H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z$rtcVarDesc DD 038H ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>
	DD	08H
	DQ	FLAT:??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z$rtcName$0
	ORG $+48
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z$rtcFrameData DD 01H ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>
	DD	00H
	DQ	FLAT:??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$atomic@H@std@@QEAAHH@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
xdata	SEGMENT
$unwind$??0CEncodingThread@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0CEncodingThread@@QEAA@XZ
$cppxdata$??0CEncodingThread@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0CEncodingThread@@QEAA@XZ
	DD	imagerel $ip2state$??0CEncodingThread@@QEAA@XZ
$stateUnwindMap$??0CEncodingThread@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA
$ip2state$??0CEncodingThread@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	090H
	DB	00H
$cppxdata$??1CEncodingThread@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1CEncodingThread@@QEAA@XZ
	DD	imagerel $ip2state$??1CEncodingThread@@QEAA@XZ
$cppxdata$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z
	DD	imagerel $ip2state$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z
$unwind$?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1CEncodingThread@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1CEncodingThread@@QEAA@XZ
$stateUnwindMap$??1CEncodingThread@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA
$ip2state$??1CEncodingThread@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	016H
	DB	00H
$stateUnwindMap$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA
$cppxdata$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z DB 08H
	DD	imagerel $stateUnwindMap$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z
	DD	imagerel $ip2state$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z
$unwind$?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Init@CEncodingThread@@QEAA?AW4mfxStatus@@G@Z DD 022301H
	DD	0700b720fH
$unwind$?Close@CEncodingThread@@QEAAXXZ DD 021e01H
	DD	07006520aH
$unwind$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z DD 022711H
	DD	0700f9213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z
$ip2state$?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'N'
	DB	02H
	DB	'*'
	DB	00H
	DB	'&'
	DB	02H
	DB	'5', 04H
	DB	00H
$unwind$?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z DD 022d11H
	DD	070157219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z
$stateUnwindMap$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA
$ip2state$?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z DB 06H
	DB	00H
	DB	00H
	DB	0c8H
	DB	02H
	DB	'.'
	DB	00H
	ORG $+3
$unwind$?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD 032901H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0 DB 05fH ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DB	04fH
	DB	06cH
	DB	064H
	DB	05fH
	DB	076H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+7
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc DD 028H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	010H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0
	ORG $+48
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData DD 01H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	00H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?native_handle@thread@std@@QEAAPEAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 031f01H
	DD	07007820bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?joinable@thread@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z DD 032419H
	DD	0700ca210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0thread@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z PROC ; std::_Tuple_val<CQSVPipeline *>::_Tuple_val<CQSVPipeline *><CQSVPipeline * &>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z ENDP ; std::_Tuple_val<CQSVPipeline *>::_Tuple_val<CQSVPipeline *><CQSVPipeline * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 214  :     constexpr tuple(_Tag) noexcept { // strengthened, construct from one arg per element

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi

; 215  :     }

  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z PROC ; std::forward<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z ENDP ; std::forward<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z
_TEXT	SEGMENT
this$ = 48
_Arg$ = 56
??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z PROC ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl*&)(void *)>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(void *)>
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z ENDP ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z PROC ; std::tuple<CQSVPipeline *>::tuple<CQSVPipeline *><std::_Exact_args_t,CQSVPipeline * &,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00027	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0002c	48 8b f8	 mov	 rdi, rax
  0002f	33 c0		 xor	 eax, eax
  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	f3 aa		 rep stosb
  00038	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00047	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8b d0	 mov	 rdx, rax
  00059	e8 00 00 00 00	 call	 ??$?0AEAPEAVCQSVPipeline@@@?$_Tuple_val@PEAVCQSVPipeline@@@std@@QEAA@AEAPEAVCQSVPipeline@@@Z ; std::_Tuple_val<CQSVPipeline *>::_Tuple_val<CQSVPipeline *><CQSVPipeline * &>

; 243  :     }

  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z ENDP ; std::tuple<CQSVPipeline *>::tuple<CQSVPipeline *><std::_Exact_args_t,CQSVPipeline * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1><std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@YAAEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1><std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
<_Rest_arg_0>$ = 88
??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z PROC ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><std::_Exact_args_t,void (__cdecl*&)(void *),CQSVPipeline * &,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 0c 00 00 00	 mov	 ecx, 12
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  0002c	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00031	48 8b f8	 mov	 rdi, rax
  00034	33 c0		 xor	 eax, eax
  00036	b9 01 00 00 00	 mov	 ecx, 1
  0003b	f3 aa		 rep stosb
  0003d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  00047	4c 8b c0	 mov	 r8, rax
  0004a	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0004f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEAPEAVCQSVPipeline@@$$V$0A@@?$tuple@PEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAPEAVCQSVPipeline@@@Z ; std::tuple<CQSVPipeline *>::tuple<CQSVPipeline *><std::_Exact_args_t,CQSVPipeline * &,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00059	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0005e	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(void *)>
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 83 c1 08	 add	 rcx, 8
  0006c	48 8b d0	 mov	 rdx, rax
  0006f	e8 00 00 00 00	 call	 ??$?0AEAP6AXPEAX@Z@?$_Tuple_val@P6AXPEAX@Z@std@@QEAA@AEAP6AXPEAX@Z@Z ; std::_Tuple_val<void (__cdecl*)(void *)>::_Tuple_val<void (__cdecl*)(void *)><void (__cdecl*&)(void *)>

; 243  :     }

  00074	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007d	5f		 pop	 rdi
  0007e	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ENDP ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><std::_Exact_args_t,void (__cdecl*&)(void *),CQSVPipeline * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
tv64 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z PROC ; std::invoke<void (__cdecl*)(void *),CQSVPipeline *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(void *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00041	48 8b d1	 mov	 rdx, rcx
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CQSVPipeline *>
  0004c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z ENDP ; std::invoke<void (__cdecl*)(void *),CQSVPipeline *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
tv66 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z PROC ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CQSVPipeline *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline *>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00037	e8 00 00 00 00	 call	 ??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*)(void *)>
  0003c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv66[rsp]
  00041	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00044	ff 10		 call	 QWORD PTR [rax]
  00046	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??$_Call@P6AXPEAX@ZPEAVCQSVPipeline@@@_Invoker_functor@std@@SAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z ENDP ; std::_Invoker_functor::_Call<void (__cdecl*)(void *),CQSVPipeline *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z PROC ; std::forward<CQSVPipeline *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ENDP ; std::forward<CQSVPipeline *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*)(void *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@P6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z PROC ; std::move<CQSVPipeline * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ENDP ; std::move<CQSVPipeline * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z PROC ; std::get<1,void (__cdecl*)(void *),CQSVPipeline *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]

; 652  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z ENDP ; std::get<1,void (__cdecl*)(void *),CQSVPipeline *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z PROC ; std::move<void (__cdecl*&)(void *)>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ENDP ; std::move<void (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z PROC ; std::get<0,void (__cdecl*)(void *),CQSVPipeline *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]
  0000b	48 83 c0 08	 add	 rax, 8

; 652  : }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z ENDP ; std::get<0,void (__cdecl*)(void *),CQSVPipeline *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1><std::tuple<void (__cdecl*)(void *),CQSVPipeline *> * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_This_arg$ = 72
<_Rest_arg_0>$ = 80
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z PROC ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><void (__cdecl*&)(void *),CQSVPipeline * &,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0002d	48 8b f8	 mov	 rdi, rax
  00030	33 c0		 xor	 eax, eax
  00032	b9 01 00 00 00	 mov	 ecx, 1
  00037	f3 aa		 rep stosb
  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rsp]
  0003e	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  00043	90		 npad	 1
  00044	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00049	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(void *)>
  00053	90		 npad	 1
  00054	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00059	4c 8b c9	 mov	 r9, rcx
  0005c	4c 8b c0	 mov	 r8, rax
  0005f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00064	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00069	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@U_Exact_args_t@1@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><std::_Exact_args_t,void (__cdecl*&)(void *),CQSVPipeline * &,0>
  0006e	90		 npad	 1
  0006f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00074	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00078	5f		 pop	 rdi
  00079	c3		 ret	 0
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ENDP ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><void (__cdecl*&)(void *),CQSVPipeline * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBH@std@@YAPEBHAEBH@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBH@std@@YAPEBHAEBH@Z PROC		; std::addressof<int const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBH@std@@YAPEBHAEBH@Z ENDP		; std::addressof<int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z
_TEXT	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
_RawVals$ = 96
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z PROC ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>, COMDAT

; 36   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept { // enforces termination

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 37   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 38   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

  0001e	48 8b 54 24 60	 mov	 rdx, QWORD PTR _RawVals$[rsp]
  00023	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00028	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,0>
  0002d	90		 npad	 1

; 39   :         _Tuple& _Tup = *_FnVals;

  0002e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00033	e8 00 00 00 00	 call	 ??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::operator*
  00038	90		 npad	 1
  00039	48 89 44 24 38	 mov	 QWORD PTR _Tup$[rsp], rax

; 40   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

  0003e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  00043	e8 00 00 00 00	 call	 ??$get@$00P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z ; std::get<1,void (__cdecl*)(void *),CQSVPipeline *>
  00048	90		 npad	 1
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$move@AEAPEAVCQSVPipeline@@@std@@YA$$QEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::move<CQSVPipeline * &>
  00051	90		 npad	 1
  00052	48 89 44 24 48	 mov	 QWORD PTR tv70[rsp], rax
  00057	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  0005c	e8 00 00 00 00	 call	 ??$get@$0A@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAAEAP6AXPEAX@ZAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@@Z ; std::get<0,void (__cdecl*)(void *),CQSVPipeline *>
  00061	90		 npad	 1
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 ??$move@AEAP6AXPEAX@Z@std@@YA$$QEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::move<void (__cdecl*&)(void *)>
  0006a	90		 npad	 1
  0006b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv70[rsp]
  00070	48 8b d1	 mov	 rdx, rcx
  00073	48 8b c8	 mov	 rcx, rax
  00076	e8 00 00 00 00	 call	 ??$invoke@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@YAX$$QEAP6AXPEAX@Z$$QEAPEAVCQSVPipeline@@@Z ; std::invoke<void (__cdecl*)(void *),CQSVPipeline *>
  0007b	90		 npad	 1

; 41   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

  0007c	e8 00 00 00 00	 call	 _Cnd_do_broadcast_at_thread_exit
  00081	90		 npad	 1

; 42   :         return 0;

  00082	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0
  0008a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  0008f	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
  00094	90		 npad	 1
  00095	8b 44 24 40	 mov	 eax, DWORD PTR $T4[rsp]

; 43   :     }

  00099	8b f8		 mov	 edi, eax
  0009b	48 8b cc	 mov	 rcx, rsp
  0009e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcFrameData
  000a5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000aa	90		 npad	 1
  000ab	8b c7		 mov	 eax, edi
  000ad	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000b1	5f		 pop	 rdi
  000b2	c3		 ret	 0
??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z ENDP ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
_RawVals$ = 96
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
tv70 = 72
_RawVals$ = 96
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@PEAV12@@std@@YAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ
_TEXT	SEGMENT
this$ = 16
??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::operator*, COMDAT

; 1887 :     _NODISCARD add_lvalue_reference_t<_Ty> operator*() const noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1888 :         return *_Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1889 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??D?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAAEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,std::tuple<void (__cdecl*)(void *),CQSVPipeline *> *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	ba 10 00 00 00	 mov	 edx, 16
  00032	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00037	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete

; 1768 :     }

  0003c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??R?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@QEBAXPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
<_Args_1>$ = 96
??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z PROC ; std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>, COMDAT

; 2056 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00028	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 2057 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00045	74 35		 je	 SHORT $LN3@make_uniqu
  00047	48 8b 4c 24 60	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  00051	48 89 44 24 30	 mov	 QWORD PTR tv74[rsp], rax
  00056	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(void *)>
  00060	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv74[rsp]
  00065	4c 8b c1	 mov	 r8, rcx
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00070	e8 00 00 00 00	 call	 ??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::tuple<void (__cdecl*)(void *),CQSVPipeline *>::tuple<void (__cdecl*)(void *),CQSVPipeline *><void (__cdecl*&)(void *),CQSVPipeline * &,0>
  00075	48 89 44 24 38	 mov	 QWORD PTR tv80[rsp], rax
  0007a	eb 09		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  0007c	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv80[rsp], 0
$LN4@make_uniqu:
  00085	48 8b 54 24 38	 mov	 rdx, QWORD PTR tv80[rsp]
  0008a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0008f	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@PEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > ><std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> >,0>
  00094	90		 npad	 1
  00095	8b 44 24 28	 mov	 eax, DWORD PTR $T2[rsp]
  00099	83 c8 01	 or	 eax, 1
  0009c	89 44 24 28	 mov	 DWORD PTR $T2[rsp], eax
  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 2058 : }

  000a5	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a9	5f		 pop	 rdi
  000aa	c3		 ret	 0
  000ab	cc		 int	 3
??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ENDP ; std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
<_Args_1>$ = 96
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA PROC ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA ENDP ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv74 = 48
tv80 = 56
__$ReturnUdt$ = 80
<_Args_0>$ = 88
<_Args_1>$ = 96
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA PROC ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA ENDP ; `std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z PROC ; std::forward<CQSVPipeline * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ENDP ; std::forward<CQSVPipeline * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z PROC ; std::forward<void (__cdecl*&)(void *)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ENDP ; std::forward<void (__cdecl*&)(void *)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z
_TEXT	SEGMENT
_Result$ = 36
_Source$ = 80
??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z PROC	; std::_Atomic_reinterpret_as<long,int>, COMDAT

; 215  : _NODISCARD _Integral _Atomic_reinterpret_as(const _Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 216  :     // interprets _Source as the supplied integral type
; 217  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 218  :     _Integral _Result{}; // zero padding bits

  0001e	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR _Result$[rsp], 0

; 219  :     _CSTD memcpy(&_Result, _STD addressof(_Source), sizeof(_Source));

  00026	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Source$[rsp]
  0002b	e8 00 00 00 00	 call	 ??$addressof@$$CBH@std@@YAPEBHAEBH@Z ; std::addressof<int const >
  00030	90		 npad	 1
  00031	41 b8 04 00 00
	00		 mov	 r8d, 4
  00037	48 8b d0	 mov	 rdx, rax
  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Result$[rsp]
  0003f	e8 00 00 00 00	 call	 memcpy
  00044	90		 npad	 1

; 220  :     return _Result;

  00045	8b 44 24 24	 mov	 eax, DWORD PTR _Result$[rsp]

; 221  : }

  00049	8b f8		 mov	 edi, eax
  0004b	48 8b cc	 mov	 rcx, rsp
  0004e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z$rtcFrameData
  00055	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0005a	90		 npad	 1
  0005b	8b c7		 mov	 eax, edi
  0005d	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z ENDP	; std::_Atomic_reinterpret_as<long,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z
_TEXT	SEGMENT
_Source$ = 16
??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z PROC ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Source$[rsp]

; 72   : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ENDP ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z
_TEXT	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv77 = 88
this$ = 112
_Fx$ = 120
<_Ax_0>$ = 128
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z PROC ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>, COMDAT

; 53   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) { // construct with _Fx(_Ax...)

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 18 00 00 00	 mov	 ecx, 24
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 54   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 55   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

  00028	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <_Ax_0>$[rsp]
  00030	e8 00 00 00 00	 call	 ??$forward@AEAPEAVCQSVPipeline@@@std@@YAAEAPEAVCQSVPipeline@@AEAPEAV1@@Z ; std::forward<CQSVPipeline * &>
  00035	48 89 44 24 50	 mov	 QWORD PTR tv65[rsp], rax
  0003a	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Fx$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$forward@AEAP6AXPEAX@Z@std@@YAAEAP6AXPEAX@ZAEAP6AX0@Z@Z ; std::forward<void (__cdecl*&)(void *)>
  00044	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv65[rsp]
  00049	4c 8b c1	 mov	 r8, rcx
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  00054	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@0@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::make_unique<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,void (__cdecl*&)(void *),CQSVPipeline * &,0>
  00059	90		 npad	 1

; 56   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??$_Invoke@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@$0A@$00@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,0,1>
  00061	48 89 44 24 48	 mov	 QWORD PTR _Invoker_proc$[rsp], rax

; 57   : 
; 58   : #pragma warning(push)
; 59   : #pragma warning(disable : 5039) // pointer or reference to potentially throwing function passed to
; 60   :                                 // extern C function under -EHc. Undefined behavior may occur
; 61   :                                 // if this function throws an exception. (/Wall)
; 62   :         _Thr._Hnd =

  00066	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 83 c0 08	 add	 rax, 8
  0006f	48 89 44 24 58	 mov	 QWORD PTR tv77[rsp], rax
  00074	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  00079	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEBAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::get
  0007e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv77[rsp]
  00083	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00088	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00090	4c 8b c8	 mov	 r9, rax
  00093	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Invoker_proc$[rsp]
  00098	33 d2		 xor	 edx, edx
  0009a	33 c9		 xor	 ecx, ecx
  0009c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__beginthreadex
  000a2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000a7	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 64   : #pragma warning(pop)
; 65   : 
; 66   :         if (_Thr._Hnd) { // ownership transferred to the thread

  000aa	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000af	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000b3	74 0c		 je	 SHORT $LN2@thread

; 67   :             (void) _Decay_copied.release();

  000b5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000ba	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAAPEAV?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::release

; 68   :         } else { // failed to start thread

  000bf	eb 17		 jmp	 SHORT $LN3@thread
$LN2@thread:

; 69   :             _Thr._Id = 0;

  000c1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000c6	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 70   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

  000cd	b9 06 00 00 00	 mov	 ecx, 6
  000d2	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
  000d7	90		 npad	 1
$LN3@thread:

; 71   :         }
; 72   :     }

  000d8	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000dd	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
  000e2	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000e7	48 8b f8	 mov	 rdi, rax
  000ea	48 8b cc	 mov	 rcx, rsp
  000ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z$rtcFrameData
  000f4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f9	48 8b c7	 mov	 rax, rdi
  000fc	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00100	5f		 pop	 rdi
  00101	c3		 ret	 0
$LN6@thread:
??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ENDP ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv77 = 88
this$ = 112
_Fx$ = 120
<_Ax_0>$ = 128
?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA PROC ; `std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv65 = 80
tv77 = 88
this$ = 112
_Fx$ = 120
<_Ax_0>$ = 128
?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA PROC ; `std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@U?$default_delete@V?$tuple@P6AXPEAX@ZPEAVCQSVPipeline@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >::~unique_ptr<std::tuple<void (__cdecl*)(void *),CQSVPipeline *>,std::default_delete<std::tuple<void (__cdecl*)(void *),CQSVPipeline *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??4?$atomic@H@std@@QEAAHH@Z
_TEXT	SEGMENT
this$ = 48
_Value$ = 56
??4?$atomic@H@std@@QEAAHH@Z PROC			; std::atomic<int>::operator=, COMDAT

; 1508 :     _Ty operator=(const _Ty _Value) noexcept {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1509 :         this->store(_Value);

  00022	8b 54 24 38	 mov	 edx, DWORD PTR _Value$[rsp]
  00026	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002b	e8 00 00 00 00	 call	 ?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z ; std::_Atomic_storage<int,4>::store

; 1510 :         return _Value;

  00030	8b 44 24 38	 mov	 eax, DWORD PTR _Value$[rsp]

; 1511 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??4?$atomic@H@std@@QEAAHH@Z ENDP			; std::atomic<int>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??E?$_Atomic_integral@H$03@std@@QEAAHH@Z
_TEXT	SEGMENT
_After$ = 32
this$ = 64
__formal$ = 72
??E?$_Atomic_integral@H$03@std@@QEAAHH@Z PROC		; std::_Atomic_integral<int,4>::operator++, COMDAT

; 1008 :     _Ty operator++(int) noexcept {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1009 :         unsigned long _After =

  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
  0002c	b9 01 00 00 00	 mov	 ecx, 1
  00031	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00035	ff c1		 inc	 ecx
  00037	8b c1		 mov	 eax, ecx
  00039	89 44 24 20	 mov	 DWORD PTR _After$[rsp], eax

; 1010 :             static_cast<unsigned long>(_InterlockedIncrement(_Atomic_address_as<long>(this->_Storage)));
; 1011 :         --_After;

  0003d	8b 44 24 20	 mov	 eax, DWORD PTR _After$[rsp]
  00041	ff c8		 dec	 eax
  00043	89 44 24 20	 mov	 DWORD PTR _After$[rsp], eax

; 1012 :         return static_cast<_Ty>(_After);

  00047	8b 44 24 20	 mov	 eax, DWORD PTR _After$[rsp]

; 1013 :     }

  0004b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??E?$_Atomic_integral@H$03@std@@QEAAHH@Z ENDP		; std::_Atomic_integral<int,4>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z
_TEXT	SEGMENT
tv65 = 32
this$ = 64
_Value$ = 72
?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z PROC	; std::_Atomic_storage<int,4>::store, COMDAT

; 552  :     void store(const _Ty _Value) noexcept { // store with sequential consistency

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 553  : #if defined(_M_ARM) || defined(_M_ARM64)
; 554  :         _Memory_barrier();
; 555  :         _ISO_VOLATILE_STORE32(_Storage, _Atomic_reinterpret_as<int>(_Value));
; 556  :         _Memory_barrier();
; 557  : #else // ^^^ ARM32/ARM64 hardware / x86/x64 hardware vvv
; 558  :         (void) _InterlockedExchange(_Atomic_address_as<long>(_Storage), _Atomic_reinterpret_as<long>(_Value));

  00022	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Value$[rsp]
  00027	e8 00 00 00 00	 call	 ??$_Atomic_reinterpret_as@JH@std@@YAJAEBH@Z ; std::_Atomic_reinterpret_as<long,int>
  0002c	89 44 24 20	 mov	 DWORD PTR tv65[rsp], eax
  00030	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
  0003a	8b 4c 24 20	 mov	 ecx, DWORD PTR tv65[rsp]
  0003e	87 08		 xchg	 DWORD PTR [rax], ecx

; 559  : #endif // hardware
; 560  :     }

  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
?store@?$_Atomic_storage@H$03@std@@QEAAXH@Z ENDP	; std::_Atomic_storage<int,4>::store
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
_TEXT	SEGMENT
$T1 = 32
tv84 = 48
tv83 = 56
this$ = 80
func$ = 88
pipeline$ = 96
threadAffinityMask$ = 104
?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z PROC ; CEncodingThread::RunEncFuncbyThread

; 75   : mfxStatus CEncodingThread::RunEncFuncbyThread(void(*func)(void *prm), CQSVPipeline *pipeline, size_t threadAffinityMask) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 76   :     if (!m_bInit) return MFX_ERR_NOT_INITIALIZED;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	0f b6 40 30	 movzx	 eax, BYTE PTR [rax+48]
  00036	85 c0		 test	 eax, eax
  00038	75 07		 jne	 SHORT $LN2@RunEncFunc
  0003a	b8 f8 ff ff ff	 mov	 eax, -8
  0003f	eb 6d		 jmp	 SHORT $LN1@RunEncFunc
$LN2@RunEncFunc:

; 77   : 
; 78   :     m_thEncode = std::thread(func, pipeline);

  00041	4c 8d 44 24 60	 lea	 r8, QWORD PTR pipeline$[rsp]
  00046	48 8d 54 24 58	 lea	 rdx, QWORD PTR func$[rsp]
  0004b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00050	e8 00 00 00 00	 call	 ??$?0AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@X@thread@std@@QEAA@AEAP6AXPEAX@ZAEAPEAVCQSVPipeline@@@Z ; std::thread::thread<void (__cdecl*&)(void *),CQSVPipeline * &,void>
  00055	48 89 44 24 30	 mov	 QWORD PTR tv84[rsp], rax
  0005a	48 8b 44 24 30	 mov	 rax, QWORD PTR tv84[rsp]
  0005f	48 89 44 24 38	 mov	 QWORD PTR tv83[rsp], rax
  00064	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 83 c0 20	 add	 rax, 32			; 00000020H
  0006d	48 8b 54 24 38	 mov	 rdx, QWORD PTR tv83[rsp]
  00072	48 8b c8	 mov	 rcx, rax
  00075	e8 00 00 00 00	 call	 ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ; std::thread::operator=
  0007a	90		 npad	 1
  0007b	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00080	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread

; 79   : 
; 80   :     if (threadAffinityMask)

  00085	48 83 7c 24 68
	00		 cmp	 QWORD PTR threadAffinityMask$[rsp], 0
  0008b	74 1f		 je	 SHORT $LN3@RunEncFunc

; 81   :         SetThreadAffinityMask(m_thEncode.native_handle(), threadAffinityMask);

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 83 c0 20	 add	 rax, 32			; 00000020H
  00096	48 8b c8	 mov	 rcx, rax
  00099	e8 00 00 00 00	 call	 ?native_handle@thread@std@@QEAAPEAXXZ ; std::thread::native_handle
  0009e	48 8b 54 24 68	 mov	 rdx, QWORD PTR threadAffinityMask$[rsp]
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetThreadAffinityMask
$LN3@RunEncFunc:

; 82   : 
; 83   :     return MFX_ERR_NONE;

  000ac	33 c0		 xor	 eax, eax
$LN1@RunEncFunc:

; 84   : }

  000ae	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
?RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z ENDP ; CEncodingThread::RunEncFuncbyThread
_TEXT	ENDS
text$x	SEGMENT
$T1 = 32
tv84 = 48
tv83 = 56
this$ = 80
func$ = 88
pipeline$ = 96
threadAffinityMask$ = 104
?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA PROC ; `CEncodingThread::RunEncFuncbyThread'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA ENDP ; `CEncodingThread::RunEncFuncbyThread'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
$T1 = 32
tv84 = 48
tv83 = 56
this$ = 80
func$ = 88
pipeline$ = 96
threadAffinityMask$ = 104
?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA PROC ; `CEncodingThread::RunEncFuncbyThread'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??RunEncFuncbyThread@CEncodingThread@@QEAA?AW4mfxStatus@@P6AXPEAX@ZPEAVCQSVPipeline@@_K@Z@4HA ENDP ; `CEncodingThread::RunEncFuncbyThread'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
_TEXT	SEGMENT
i$1 = 32
$T2 = 36
$T3 = 40
tv73 = 48
tv90 = 56
tv142 = 64
this$ = 96
sts$ = 104
pQSVLog$ = 112
?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z PROC ; CEncodingThread::WaitToFinish

; 87   : mfxStatus CEncodingThread::WaitToFinish(mfxStatus sts, shared_ptr<RGYLog> pQSVLog) {

$LN10:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 14 00 00 00	 mov	 ecx, 20
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 88   :     if (!m_bInit) return MFX_ERR_NOT_INITIALIZED;

  00027	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002c	0f b6 40 30	 movzx	 eax, BYTE PTR [rax+48]
  00030	85 c0		 test	 eax, eax
  00032	75 1b		 jne	 SHORT $LN5@WaitToFini
  00034	c7 44 24 24 f8
	ff ff ff	 mov	 DWORD PTR $T2[rsp], -8
  0003c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00041	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00046	8b 44 24 24	 mov	 eax, DWORD PTR $T2[rsp]
  0004a	e9 1b 01 00 00	 jmp	 $LN1@WaitToFini
$LN5@WaitToFini:

; 89   :     //最後のLoadNextFrameの結果をm_stsThreadにセットし、RunEncodeに知らせる
; 90   :     m_stsThread = sts;

  0004f	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00054	8b 4c 24 68	 mov	 ecx, DWORD PTR sts$[rsp]
  00058	89 48 18	 mov	 DWORD PTR [rax+24], ecx

; 91   :     //読み込み終了(MFX_ERR_MORE_DATA)ではなく、エラーや中断だった場合、
; 92   :     //直ちに終了する
; 93   :     if (sts != MFX_ERR_MORE_DATA) {

  0005b	83 7c 24 68 f6	 cmp	 DWORD PTR sts$[rsp], -10
  00060	0f 84 b2 00 00
	00		 je	 $LN6@WaitToFini

; 94   :         pQSVLog->write(RGY_LOG_DEBUG, _T("WaitToFinish: Encode Aborted, putting abort flag on.\n"));

  00066	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  0006b	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00070	48 89 44 24 30	 mov	 QWORD PTR tv73[rsp], rax
  00075	48 8b 44 24 30	 mov	 rax, QWORD PTR tv73[rsp]
  0007a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG126677
  00084	ba fe ff ff ff	 mov	 edx, -2
  00089	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv73[rsp]
  0008e	ff 50 20	 call	 QWORD PTR [rax+32]

; 95   :         m_bthForceAbort++; //m_bthForceAbort = TRUE;

  00091	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00096	33 d2		 xor	 edx, edx
  00098	48 8b c8	 mov	 rcx, rax
  0009b	e8 00 00 00 00	 call	 ??E?$_Atomic_integral@H$03@std@@QEAAHH@Z ; std::_Atomic_integral<int,4>::operator++

; 96   :         if (m_InputBuf) {

  000a0	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000a5	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  000aa	74 6c		 je	 SHORT $LN6@WaitToFini

; 97   :             pQSVLog->write(RGY_LOG_DEBUG, _T("WaitToFinish: Settings event on.\n"));

  000ac	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  000b1	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  000b6	48 89 44 24 38	 mov	 QWORD PTR tv90[rsp], rax
  000bb	48 8b 44 24 38	 mov	 rax, QWORD PTR tv90[rsp]
  000c0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG126679
  000ca	ba fe ff ff ff	 mov	 edx, -2
  000cf	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv90[rsp]
  000d4	ff 50 20	 call	 QWORD PTR [rax+32]

; 98   :             for (mfxU32 i = 0; i < m_nFrameBuffer; i++) {

  000d7	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  000df	eb 0a		 jmp	 SHORT $LN4@WaitToFini
$LN2@WaitToFini:
  000e1	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  000e5	ff c0		 inc	 eax
  000e7	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@WaitToFini:
  000eb	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000f0	0f b7 40 1c	 movzx	 eax, WORD PTR [rax+28]
  000f4	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  000f8	73 1e		 jae	 SHORT $LN6@WaitToFini

; 99   :                 SetEvent(m_InputBuf[i].heInputDone);

  000fa	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  000fe	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  00102	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00107	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0010b	48 8b 4c 01 10	 mov	 rcx, QWORD PTR [rcx+rax+16]
  00110	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent

; 100  :             }

  00116	eb c9		 jmp	 SHORT $LN2@WaitToFini
$LN6@WaitToFini:

; 101  :         }
; 102  :     }
; 103  :     //RunEncodeの終了を待つ
; 104  :     m_thEncode.join();

  00118	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0011d	48 83 c0 20	 add	 rax, 32			; 00000020H
  00121	48 8b c8	 mov	 rcx, rax
  00124	e8 00 00 00 00	 call	 ?join@thread@std@@QEAAXXZ ; std::thread::join

; 105  :     pQSVLog->write(RGY_LOG_DEBUG, _T("WaitToFinish: Encode thread shut down.\n"));

  00129	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  0012e	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00133	48 89 44 24 40	 mov	 QWORD PTR tv142[rsp], rax
  00138	48 8b 44 24 40	 mov	 rax, QWORD PTR tv142[rsp]
  0013d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00140	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG126680
  00147	ba fe ff ff ff	 mov	 edx, -2
  0014c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv142[rsp]
  00151	ff 50 20	 call	 QWORD PTR [rax+32]

; 106  :     return MFX_ERR_NONE;

  00154	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T3[rsp], 0
  0015c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR pQSVLog$[rsp]
  00161	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00166	8b 44 24 28	 mov	 eax, DWORD PTR $T3[rsp]
$LN1@WaitToFini:

; 107  : }

  0016a	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0016e	5f		 pop	 rdi
  0016f	c3		 ret	 0
?WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z ENDP ; CEncodingThread::WaitToFinish
_TEXT	ENDS
text$x	SEGMENT
i$1 = 32
$T2 = 36
$T3 = 40
tv73 = 48
tv90 = 56
tv142 = 64
this$ = 96
sts$ = 104
pQSVLog$ = 112
?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA PROC ; `CEncodingThread::WaitToFinish'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR pQSVLog$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA ENDP ; `CEncodingThread::WaitToFinish'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
i$1 = 32
$T2 = 36
$T3 = 40
tv73 = 48
tv90 = 56
tv142 = 64
this$ = 96
sts$ = 104
pQSVLog$ = 112
?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA PROC ; `CEncodingThread::WaitToFinish'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 70	 mov	 rcx, QWORD PTR pQSVLog$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??WaitToFinish@CEncodingThread@@QEAA?AW4mfxStatus@@W42@V?$shared_ptr@VRGYLog@@@std@@@Z@4HA ENDP ; `CEncodingThread::WaitToFinish'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
_TEXT	SEGMENT
i$1 = 32
this$ = 64
?Close@CEncodingThread@@QEAAXXZ PROC			; CEncodingThread::Close

; 109  : void CEncodingThread::Close() {

$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 110  :     if (m_thEncode.joinable()) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  0002f	0f b6 c0	 movzx	 eax, al
  00032	85 c0		 test	 eax, eax
  00034	74 11		 je	 SHORT $LN5@Close

; 111  :         m_thEncode.join();

  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c0 20	 add	 rax, 32			; 00000020H
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ?join@thread@std@@QEAAXXZ ; std::thread::join
$LN5@Close:

; 112  :     }
; 113  :     if (m_InputBuf) {

  00047	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00051	0f 84 ae 00 00
	00		 je	 $LN6@Close

; 114  :         for (mfxU32 i = 0; i < m_nFrameBuffer; i++) {

  00057	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0005f	eb 0a		 jmp	 SHORT $LN4@Close
$LN2@Close:
  00061	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00065	ff c0		 inc	 eax
  00067	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@Close:
  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00070	0f b7 40 1c	 movzx	 eax, WORD PTR [rax+28]
  00074	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  00078	73 6f		 jae	 SHORT $LN3@Close

; 115  :             if (m_InputBuf[i].heInputDone)

  0007a	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0007e	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  00082	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00087	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0008b	48 83 7c 01 10
	00		 cmp	 QWORD PTR [rcx+rax+16], 0
  00091	74 1c		 je	 SHORT $LN7@Close

; 116  :                 CloseEvent(m_InputBuf[i].heInputDone);

  00093	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00097	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  0009b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000a4	48 8b 4c 01 10	 mov	 rcx, QWORD PTR [rcx+rax+16]
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle
$LN7@Close:

; 117  :             if (m_InputBuf[i].heInputStart)

  000af	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  000b3	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  000b7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bc	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000c0	48 83 7c 01 08
	00		 cmp	 QWORD PTR [rcx+rax+8], 0
  000c6	74 1c		 je	 SHORT $LN8@Close

; 118  :                 CloseEvent(m_InputBuf[i].heInputStart);

  000c8	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  000cc	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  000d0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000d9	48 8b 4c 01 08	 mov	 rcx, QWORD PTR [rcx+rax+8]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle
$LN8@Close:

; 119  :         }

  000e4	e9 78 ff ff ff	 jmp	 $LN2@Close
$LN3@Close:

; 120  :         _mm_free(m_InputBuf);

  000e9	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000ee	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  000f2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_free

; 121  :         m_InputBuf = NULL;

  000f8	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000fd	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
$LN6@Close:

; 122  :     }
; 123  :     m_nFrameBuffer = 0;

  00105	33 c0		 xor	 eax, eax
  00107	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0010c	66 89 41 1c	 mov	 WORD PTR [rcx+28], ax

; 124  :     m_nFrameSet = 0;

  00110	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00115	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0

; 125  :     m_nFrameGet = 0;

  0011c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00121	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0

; 126  :     m_bthForceAbort = FALSE;

  00128	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0012d	33 d2		 xor	 edx, edx
  0012f	48 8b c8	 mov	 rcx, rax
  00132	e8 00 00 00 00	 call	 ??4?$atomic@H@std@@QEAAHH@Z ; std::atomic<int>::operator=

; 127  :     m_stsThread = MFX_ERR_NONE;

  00137	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0013c	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [rax+24], 0

; 128  :     m_bInit = false;

  00143	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00148	c6 40 30 00	 mov	 BYTE PTR [rax+48], 0

; 129  : }

  0014c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00150	5f		 pop	 rdi
  00151	c3		 ret	 0
?Close@CEncodingThread@@QEAAXXZ ENDP			; CEncodingThread::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
_TEXT	SEGMENT
i$1 = 32
tv67 = 40
tv93 = 48
tv136 = 56
this$ = 80
bufferSize$ = 88
?Init@CEncodingThread@@QEAA?AW4mfxStatus@@G@Z PROC	; CEncodingThread::Init

; 55   : mfxStatus CEncodingThread::Init(mfxU16 bufferSize) {

$LN9:
  00000	66 89 54 24 10	 mov	 WORD PTR [rsp+16], dx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 56   :     Close();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?Close@CEncodingThread@@QEAAXXZ ; CEncodingThread::Close

; 57   : 
; 58   :     m_nFrameBuffer = bufferSize;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	0f b7 4c 24 58	 movzx	 ecx, WORD PTR bufferSize$[rsp]
  00037	66 89 48 1c	 mov	 WORD PTR [rax+28], cx

; 59   :     if (nullptr == (m_InputBuf = (sInputBufSys *)_mm_malloc(m_nFrameBuffer * sizeof(sInputBufSys), 64)))

  0003b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00040	0f b7 40 1c	 movzx	 eax, WORD PTR [rax+28]
  00044	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  00048	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0004d	48 8b c8	 mov	 rcx, rax
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__aligned_malloc
  00056	48 89 44 24 28	 mov	 QWORD PTR tv67[rsp], rax
  0005b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00060	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv67[rsp]
  00065	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00069	48 83 7c 24 28
	00		 cmp	 QWORD PTR tv67[rsp], 0
  0006f	75 0a		 jne	 SHORT $LN5@Init

; 60   :         return MFX_ERR_NULL_PTR;

  00071	b8 fe ff ff ff	 mov	 eax, -2
  00076	e9 d9 00 00 00	 jmp	 $LN1@Init
$LN5@Init:

; 61   : 
; 62   :     memset(m_InputBuf, 0, m_nFrameBuffer * sizeof(sInputBufSys));

  0007b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00080	0f b7 40 1c	 movzx	 eax, WORD PTR [rax+28]
  00084	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  00088	4c 8b c0	 mov	 r8, rax
  0008b	33 d2		 xor	 edx, edx
  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00096	e8 00 00 00 00	 call	 memset

; 63   : 
; 64   :     for (mfxU32 i = 0; i < m_nFrameBuffer; i++) {

  0009b	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  000a3	eb 0a		 jmp	 SHORT $LN4@Init
$LN2@Init:
  000a5	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  000a9	ff c0		 inc	 eax
  000ab	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@Init:
  000af	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b4	0f b7 40 1c	 movzx	 eax, WORD PTR [rax+28]
  000b8	39 44 24 20	 cmp	 DWORD PTR i$1[rsp], eax
  000bc	73 7c		 jae	 SHORT $LN3@Init

; 65   :         if (   NULL == (m_InputBuf[i].heInputDone  = CreateEvent(NULL, FALSE, FALSE, NULL))
; 66   :             || NULL == (m_InputBuf[i].heInputStart = CreateEvent(NULL, FALSE, FALSE, NULL))) {

  000be	45 33 c9	 xor	 r9d, r9d
  000c1	45 33 c0	 xor	 r8d, r8d
  000c4	33 d2		 xor	 edx, edx
  000c6	33 c9		 xor	 ecx, ecx
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateEventA
  000ce	48 89 44 24 30	 mov	 QWORD PTR tv93[rsp], rax
  000d3	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  000d7	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  000db	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000e0	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000e4	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv93[rsp]
  000e9	48 89 54 01 10	 mov	 QWORD PTR [rcx+rax+16], rdx
  000ee	48 83 7c 24 30
	00		 cmp	 QWORD PTR tv93[rsp], 0
  000f4	74 38		 je	 SHORT $LN7@Init
  000f6	45 33 c9	 xor	 r9d, r9d
  000f9	45 33 c0	 xor	 r8d, r8d
  000fc	33 d2		 xor	 edx, edx
  000fe	33 c9		 xor	 ecx, ecx
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateEventA
  00106	48 89 44 24 38	 mov	 QWORD PTR tv136[rsp], rax
  0010b	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  0010f	48 6b c0 40	 imul	 rax, rax, 64		; 00000040H
  00113	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00118	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0011c	48 8b 54 24 38	 mov	 rdx, QWORD PTR tv136[rsp]
  00121	48 89 54 01 08	 mov	 QWORD PTR [rcx+rax+8], rdx
  00126	48 83 7c 24 38
	00		 cmp	 QWORD PTR tv136[rsp], 0
  0012c	75 07		 jne	 SHORT $LN6@Init
$LN7@Init:

; 67   :             return MFX_ERR_INVALID_HANDLE;

  0012e	b8 fa ff ff ff	 mov	 eax, -6
  00133	eb 1f		 jmp	 SHORT $LN1@Init
$LN6@Init:

; 68   :         }
; 69   :     }

  00135	e9 6b ff ff ff	 jmp	 $LN2@Init
$LN3@Init:

; 70   :     m_bInit = true;

  0013a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0013f	c6 40 30 01	 mov	 BYTE PTR [rax+48], 1

; 71   :     m_bthForceAbort = FALSE;

  00143	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00148	33 d2		 xor	 edx, edx
  0014a	48 8b c8	 mov	 rcx, rax
  0014d	e8 00 00 00 00	 call	 ??4?$atomic@H@std@@QEAAHH@Z ; std::atomic<int>::operator=

; 72   :     return MFX_ERR_NONE;

  00152	33 c0		 xor	 eax, eax
$LN1@Init:

; 73   : }

  00154	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00158	5f		 pop	 rdi
  00159	c3		 ret	 0
?Init@CEncodingThread@@QEAA?AW4mfxStatus@@G@Z ENDP	; CEncodingThread::Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
_TEXT	SEGMENT
this$ = 48
??1CEncodingThread@@QEAA@XZ PROC			; CEncodingThread::~CEncodingThread

; 51   : CEncodingThread::~CEncodingThread() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 52   :     Close();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?Close@CEncodingThread@@QEAAXXZ ; CEncodingThread::Close
  00028	90		 npad	 1

; 53   : }

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 83 c0 20	 add	 rax, 32			; 00000020H
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0003a	90		 npad	 1
  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??1CEncodingThread@@QEAA@XZ ENDP			; CEncodingThread::~CEncodingThread
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA PROC		; `CEncodingThread::~CEncodingThread'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA ENDP		; `CEncodingThread::~CEncodingThread'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA PROC		; `CEncodingThread::~CEncodingThread'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1CEncodingThread@@QEAA@XZ@4HA ENDP		; `CEncodingThread::~CEncodingThread'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
_TEXT	SEGMENT
this$ = 48
??0CEncodingThread@@QEAA@XZ PROC			; CEncodingThread::CEncodingThread

; 42   : CEncodingThread::CEncodingThread() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 20	 add	 rax, 32			; 00000020H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0thread@std@@QEAA@XZ	; std::thread::thread
  0002f	90		 npad	 1

; 43   :     m_nFrameBuffer = 0;

  00030	33 c0		 xor	 eax, eax
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	66 89 41 1c	 mov	 WORD PTR [rcx+28], ax

; 44   :     m_bthForceAbort = FALSE;

  0003b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00040	33 d2		 xor	 edx, edx
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??4?$atomic@H@std@@QEAAHH@Z ; std::atomic<int>::operator=

; 45   :     m_nFrameSet = 0;

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004f	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [rax+16], 0

; 46   :     m_nFrameGet = 0;

  00056	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005b	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0

; 47   :     m_InputBuf = NULL;

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 48   :     m_bInit = false;

  0006f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00074	c6 40 30 00	 mov	 BYTE PTR [rax+48], 0

; 49   : }

  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0007d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00081	5f		 pop	 rdi
  00082	c3		 ret	 0
??0CEncodingThread@@QEAA@XZ ENDP			; CEncodingThread::CEncodingThread
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA PROC		; `CEncodingThread::CEncodingThread'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA ENDP		; `CEncodingThread::CEncodingThread'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA PROC		; `CEncodingThread::CEncodingThread'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0CEncodingThread@@QEAA@XZ@4HA ENDP		; `CEncodingThread::CEncodingThread'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ PROC ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ENDP ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ; std::_Ptr_base<RGYLog>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ PROC	; std::_Ptr_base<RGYLog>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<RGYLog>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ PROC	; std::_Ptr_base<RGYLog>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ENDP	; std::_Ptr_base<RGYLog>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
_TEXT	SEGMENT
_Old_val$ = 40
$T4 = 112
_Val$ = 120
_New_val$ = 128
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z PROC ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 16 00 00 00	 mov	 ecx, 22
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00029	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  0002e	48 8b f8	 mov	 rdi, rax
  00031	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Val$[rsp]
  00036	b9 10 00 00 00	 mov	 ecx, 16
  0003b	f3 a4		 rep movsb

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0003d	48 8b 7c 24 78	 mov	 rdi, QWORD PTR _Val$[rsp]
  00042	48 8b b4 24 80
	00 00 00	 mov	 rsi, QWORD PTR _New_val$[rsp]
  0004a	b9 10 00 00 00	 mov	 ecx, 16
  0004f	f3 a4		 rep movsb

; 529  :     return _Old_val;

  00051	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  00056	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T4[rsp]
  0005b	48 8b f0	 mov	 rsi, rax
  0005e	b9 10 00 00 00	 mov	 ecx, 16
  00063	f3 a4		 rep movsb
  00065	48 8b 44 24 70	 mov	 rax, QWORD PTR $T4[rsp]

; 530  : }

  0006a	48 8b f8	 mov	 rdi, rax
  0006d	48 8b cc	 mov	 rcx, rsp
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData
  00077	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0007c	48 8b c7	 mov	 rax, rdi
  0007f	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00083	5f		 pop	 rdi
  00084	5e		 pop	 rsi
  00085	c3		 ret	 0
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ENDP ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?native_handle@thread@std@@QEAAPEAXXZ
_TEXT	SEGMENT
this$ = 16
?native_handle@thread@std@@QEAAPEAXXZ PROC		; std::thread::native_handle, COMDAT

; 135  :     _NODISCARD native_handle_type native_handle() { // return Win32 HANDLE as void *

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 136  :         return _Thr._Hnd;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 137  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?native_handle@thread@std@@QEAAPEAXXZ ENDP		; std::thread::native_handle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 104  :     void join() { // join thread

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000b	48 8b fc	 mov	 rdi, rsp
  0000e	b9 12 00 00 00	 mov	 ecx, 18
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 105  :         if (!joinable()) {

  0001f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00024	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00029	0f b6 c0	 movzx	 eax, al
  0002c	85 c0		 test	 eax, eax
  0002e	75 0a		 jne	 SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

  0003a	e8 00 00 00 00	 call	 _Thrd_id
  0003f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00044	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00047	75 0a		 jne	 SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  00049	b9 05 00 00 00	 mov	 ecx, 5
  0004e	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

  00053	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b 74 24 60	 mov	 rsi, QWORD PTR this$[rsp]
  00060	b9 10 00 00 00	 mov	 ecx, 16
  00065	f3 a4		 rep movsb
  00067	33 d2		 xor	 edx, edx
  00069	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  0006e	e8 00 00 00 00	 call	 _Thrd_join
  00073	85 c0		 test	 eax, eax
  00075	74 0a		 je	 SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

  00081	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00086	48 8b f8	 mov	 rdi, rax
  00089	33 c0		 xor	 eax, eax
  0008b	b9 10 00 00 00	 mov	 ecx, 16
  00090	f3 aa		 rep stosb
  00092	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00097	48 8b 7c 24 60	 mov	 rdi, QWORD PTR this$[rsp]
  0009c	48 8b f0	 mov	 rsi, rax
  0009f	b9 10 00 00 00	 mov	 ecx, 16
  000a4	f3 a4		 rep movsb
$LN5@join:

; 118  :     }

  000a6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000aa	5f		 pop	 rdi
  000ab	5e		 pop	 rsi
  000ac	c3		 ret	 0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 100  :     _NODISCARD bool joinable() const noexcept { // return true if this thread can be joined

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 101  :         return _Thr._Id != 0;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00027	74 09		 je	 SHORT $LN3@joinable
  00029	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00030	eb 07		 jmp	 SHORT $LN4@joinable
$LN3@joinable:
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@joinable:
  00039	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 102  :     }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??4thread@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
this$ = 112
_Other$ = 120
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z PROC		; std::thread::operator=, COMDAT

; 83   :     thread& operator=(thread&& _Other) noexcept { // move from _Other

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 16 00 00 00	 mov	 ecx, 22
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 84   : 
; 85   :         if (joinable()) {

  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00029	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  0002e	90		 npad	 1
  0002f	0f b6 c0	 movzx	 eax, al
  00032	85 c0		 test	 eax, eax
  00034	74 07		 je	 SHORT $LN2@operator

; 86   :             _STD terminate();

  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
  0003c	90		 npad	 1
$LN2@operator:

; 87   :         }
; 88   : 
; 89   :         _Thr = _STD exchange(_Other._Thr, {});

  0003d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00042	48 8b f8	 mov	 rdi, rax
  00045	33 c0		 xor	 eax, eax
  00047	b9 10 00 00 00	 mov	 ecx, 16
  0004c	f3 aa		 rep stosb
  0004e	48 8b 44 24 78	 mov	 rax, QWORD PTR _Other$[rsp]
  00053	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T2[rsp]
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  00060	e8 00 00 00 00	 call	 ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
  00065	90		 npad	 1
  00066	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006b	48 8b f9	 mov	 rdi, rcx
  0006e	48 8b f0	 mov	 rsi, rax
  00071	b9 10 00 00 00	 mov	 ecx, 16
  00076	f3 a4		 rep movsb
  00078	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0007d	48 8b 7c 24 70	 mov	 rdi, QWORD PTR this$[rsp]
  00082	48 8b f0	 mov	 rsi, rax
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 90   :         return *this;

  0008c	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]

; 91   :     }

  00091	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00095	5f		 pop	 rdi
  00096	5e		 pop	 rsi
  00097	c3		 ret	 0
$LN4@operator:
??4thread@std@@QEAAAEAV01@$$QEAV01@@Z ENDP		; std::thread::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 74   :     ~thread() noexcept { // clean up

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 75   :         if (joinable()) {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	74 06		 je	 SHORT $LN2@thread

; 76   :             _STD terminate();

  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
$LN2@thread:
$LN3@thread:

; 77   :         }
; 78   :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??0thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0thread@std@@QEAA@XZ PROC				; std::thread::thread, COMDAT

; 31   :     thread() noexcept : _Thr{} { // construct with no thread

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 7c 24 10	 mov	 rdi, QWORD PTR this$[rsp]
  00010	33 c0		 xor	 eax, eax
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	f3 aa		 rep stosb

; 32   :     }

  00019	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001e	5f		 pop	 rdi
  0001f	c3		 ret	 0
??0thread@std@@QEAA@XZ ENDP				; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\qsv_control.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
