; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG147537 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
?HW_DECODE_LIST@@3QBUCodecMap@@B DD 01bH		; HW_DECODE_LIST
	DD	01H
	DD	0adH
	DD	02H
	DD	02H
	DD	04H
	DD	08bH
	DD	06H
	DD	0a7H
	DD	07H
	DD	046H
	DD	08H
$SG123072 DB	'auto', 00H
	ORG $+3
$SG123074 DB	'copy', 00H
	ORG $+3
$SG123199 DB	'.', 0aH, 00H
	ORG $+1
$SG123200 DB	' for ', 00H
	ORG $+2
$SG123279 DB	'srt', 00H
$SG123203 DB	'avcodec-58.dll', 00H
	ORG $+1
$SG123204 DB	'avformat-58.dll', 00H
$SG123205 DB	'avutil-56.dll', 00H
	ORG $+2
$SG123206 DB	'avfilter-7.dll', 00H
	ORG $+1
$SG123207 DB	'swresample-3.dll', 00H
	ORG $+3
$SG123280 DB	'ass', 00H
$SG123278 DB	'invalid', 00H
$SG123287 DB	'invalid', 00H
$SG123288 DB	'kigou', 00H
	ORG $+2
$SG123289 DB	'box', 00H
$SG123290 DB	'draw', 00H
	ORG $+3
$SG115372 DB	'all', 00H
$SG115373 DB	'cpu', 00H
$SG115383 DB	'mem', 00H
$SG115374 DB	'cpu_total', 00H
	ORG $+2
$SG115378 DB	'cpu_in', 00H
	ORG $+1
$SG115386 DB	'io', 00H
	ORG $+1
$SG115375 DB	'cpu_kernel', 00H
	ORG $+1
$SG115389 DB	'fps', 00H
$SG115376 DB	'cpu_main', 00H
	ORG $+3
$SG115394 DB	'gpu', 00H
$SG115377 DB	'cpu_enc', 00H
$SG115379 DB	'cpu_aud', 00H
$SG115380 DB	'cpu_aud_proc', 00H
	ORG $+3
$SG115381 DB	'cpu_aud_enc', 00H
$SG132595 DB	')', 00H
	ORG $+2
$SG115382 DB	'cpu_out', 00H
$SG115384 DB	'mem_private', 00H
$SG132596 DB	'(', 00H
	ORG $+2
$SG115385 DB	'mem_virtual', 00H
$SG132597 DB	'->', 00H
	ORG $+1
$SG115387 DB	'io_read', 00H
$SG115388 DB	'io_write', 00H
	ORG $+3
$SG115401 DB	'queue', 00H
	ORG $+2
$SG132599 DB	']', 00H
	ORG $+2
$SG115390 DB	'fps_avg', 00H
$SG115391 DB	'bitrate', 00H
$SG115392 DB	'bitrate_avg', 00H
$SG132600 DB	' [', 00H
	ORG $+1
$SG115393 DB	'frame_out', 00H
	ORG $+2
$SG132601 DB	', ', 00H
	ORG $+1
$SG115395 DB	'gpu_load', 00H
	ORG $+3
$SG132602 DB	', ', 00H
	ORG $+1
$SG115396 DB	'gpu_clock', 00H
	ORG $+2
$SG132603 DB	'x', 00H
	ORG $+2
$SG115397 DB	'vee_load', 00H
	ORG $+3
$SG132605 DB	'/', 00H
	ORG $+2
$SG115398 DB	'ved_load', 00H
	ORG $+3
$SG127476 DB	'mpeg2', 00H
	ORG $+2
$SG127478 DB	'vp8', 00H
$SG115399 DB	'pcie_load', 00H
	ORG $+2
$SG127479 DB	'raw', 00H
$SG115400 DB	've_clock', 00H
	ORG $+3
$SG127481 DB	'CBR', 00H
$SG132264 DB	'unknown', 00H
$SG132283 DB	'Closing...', 0aH, 00H
$SG127482 DB	'VBR', 00H
$SG132284 DB	'Close...', 0aH, 00H
	ORG $+2
$SG132604 DB	' fps', 00H
	ORG $+3
$SG127474 DB	'h264', 00H
	ORG $+3
$SG127475 DB	'hevc', 00H
	ORG $+3
$SG127477 DB	'vc-1', 00H
	ORG $+3
$SG127483 DB	'CQP', 00H
$SG127484 DB	'AVBR', 00H
	ORG $+3
$SG127485 DB	'LA', 00H
	ORG $+1
$SG127486 DB	'LA-EXT', 00H
	ORG $+1
$SG127487 DB	'LA-HRD', 00H
	ORG $+1
$SG127488 DB	'LA-ICQ', 00H
	ORG $+1
$SG127489 DB	'ICQ', 00H
$SG127490 DB	'QVBR', 00H
	ORG $+3
$SG127491 DB	'VCM', 00H
$SG127493 DB	'auto', 00H
	ORG $+7
?list_avc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG127493	; list_avc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127494
	DD	042H
	ORG $+4
	DQ	FLAT:$SG127495
	DD	04dH
	ORG $+4
	DQ	FLAT:$SG127496
	DD	064H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127494 DB	'Baseline', 00H
	ORG $+3
$SG127495 DB	'Main', 00H
	ORG $+3
$SG127496 DB	'High', 00H
	ORG $+7
?list_hevc_profile@@3QBUCX_DESC@@B DQ FLAT:$SG127498	; list_hevc_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127499
	DD	01H
	ORG $+4
	DQ	FLAT:$SG127500
	DD	02H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127498 DB	'auto', 00H
	ORG $+3
$SG127499 DB	'main', 00H
	ORG $+3
$SG127500 DB	'main10', 00H
	ORG $+1
$SG127502 DB	'main', 00H
	ORG $+3
$SG127503 DB	'high', 00H
	ORG $+3
$SG127505 DB	'auto', 00H
	ORG $+3
?list_mpeg2_profile@@3QBUCX_DESC@@B DQ FLAT:$SG127505	; list_mpeg2_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127506
	DD	050H
	ORG $+4
	DQ	FLAT:$SG127507
	DD	040H
	ORG $+4
	DQ	FLAT:$SG127508
	DD	010H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127506 DB	'Simple', 00H
	ORG $+1
$SG127507 DB	'Main', 00H
	ORG $+3
$SG127508 DB	'High', 00H
	ORG $+3
$SG127510 DB	'auto', 00H
	ORG $+3
?list_vc1_profile@@3QBUCX_DESC@@B DQ FLAT:$SG127510	; list_vc1_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127511
	DD	01H
	ORG $+4
	DQ	FLAT:$SG127512
	DD	05H
	ORG $+4
	DQ	FLAT:$SG127513
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127511 DB	'Simple', 00H
	ORG $+1
$SG127512 DB	'Main', 00H
	ORG $+3
$SG127513 DB	'Advanced', 00H
	ORG $+7
?list_vp8_profile@@3QBUCX_DESC@@B DQ FLAT:$SG127515	; list_vp8_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127516
	DD	01H
	ORG $+4
	DQ	FLAT:$SG127517
	DD	02H
	ORG $+4
	DQ	FLAT:$SG127518
	DD	03H
	ORG $+4
	DQ	FLAT:$SG127519
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127515 DB	'auto', 00H
	ORG $+3
$SG127516 DB	'0', 00H
	ORG $+2
$SG127517 DB	'1', 00H
	ORG $+2
$SG127518 DB	'2', 00H
	ORG $+2
$SG127519 DB	'3', 00H
	ORG $+2
$SG127521 DB	'auto', 00H
	ORG $+3
?list_vp9_profile@@3QBUCX_DESC@@B DQ FLAT:$SG127521	; list_vp9_profile
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127522
	DD	01H
	ORG $+4
	DQ	FLAT:$SG127523
	DD	02H
	ORG $+4
	DQ	FLAT:$SG127524
	DD	03H
	ORG $+4
	DQ	FLAT:$SG127525
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127522 DB	'0', 00H
	ORG $+2
$SG127523 DB	'1', 00H
	ORG $+2
$SG127524 DB	'2', 00H
	ORG $+2
$SG127525 DB	'3', 00H
	ORG $+2
$SG127527 DB	'8', 00H
	ORG $+2
$SG127528 DB	'10', 00H
	ORG $+1
$SG127530 DB	'progressive', 00H
$SG127536 DB	'it', 00H
	ORG $+1
$SG127531 DB	'interlaced(tff)', 00H
$SG127532 DB	'interlaced(bff)', 00H
$SG127534 DB	'none', 00H
	ORG $+3
$SG127535 DB	'normal', 00H
	ORG $+1
$SG127537 DB	'bob', 00H
$SG127539 DB	'32', 00H
	ORG $+1
$SG127540 DB	'2332', 00H
	ORG $+3
$SG127541 DB	'repeat', 00H
	ORG $+1
$SG127542 DB	'41', 00H
	ORG $+1
$SG127544 DB	'auto', 00H
	ORG $+7
?list_avc_level@@3QBUCX_DESC@@B DQ FLAT:$SG127544	; list_avc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127545
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG127546
	DD	09H
	ORG $+4
	DQ	FLAT:$SG127547
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG127548
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG127549
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG127550
	DD	014H
	ORG $+4
	DQ	FLAT:$SG127551
	DD	015H
	ORG $+4
	DQ	FLAT:$SG127552
	DD	016H
	ORG $+4
	DQ	FLAT:$SG127553
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG127554
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG127555
	DD	020H
	ORG $+4
	DQ	FLAT:$SG127556
	DD	028H
	ORG $+4
	DQ	FLAT:$SG127557
	DD	029H
	ORG $+4
	DQ	FLAT:$SG127558
	DD	02aH
	ORG $+4
	DQ	FLAT:$SG127559
	DD	032H
	ORG $+4
	DQ	FLAT:$SG127560
	DD	033H
	ORG $+4
	DQ	FLAT:$SG127561
	DD	034H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127545 DB	'1', 00H
	ORG $+2
$SG127546 DB	'1b', 00H
	ORG $+1
$SG127547 DB	'1.1', 00H
$SG127548 DB	'1.2', 00H
$SG127549 DB	'1.3', 00H
$SG127550 DB	'2', 00H
	ORG $+2
$SG127551 DB	'2.1', 00H
$SG127552 DB	'2.2', 00H
$SG127553 DB	'3', 00H
	ORG $+2
$SG127554 DB	'3.1', 00H
$SG127555 DB	'3.2', 00H
$SG127556 DB	'4', 00H
	ORG $+2
$SG127557 DB	'4.1', 00H
$SG127558 DB	'4.2', 00H
$SG127559 DB	'5', 00H
	ORG $+2
$SG127560 DB	'5.1', 00H
$SG127561 DB	'5.2', 00H
$SG127563 DB	'auto', 00H
	ORG $+7
?list_hevc_level@@3QBUCX_DESC@@B DQ FLAT:$SG127563	; list_hevc_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127564
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG127565
	DD	014H
	ORG $+4
	DQ	FLAT:$SG127566
	DD	015H
	ORG $+4
	DQ	FLAT:$SG127567
	DD	01eH
	ORG $+4
	DQ	FLAT:$SG127568
	DD	01fH
	ORG $+4
	DQ	FLAT:$SG127569
	DD	028H
	ORG $+4
	DQ	FLAT:$SG127570
	DD	029H
	ORG $+4
	DQ	FLAT:$SG127571
	DD	032H
	ORG $+4
	DQ	FLAT:$SG127572
	DD	033H
	ORG $+4
	DQ	FLAT:$SG127573
	DD	034H
	ORG $+4
	DQ	FLAT:$SG127574
	DD	03cH
	ORG $+4
	DQ	FLAT:$SG127575
	DD	03dH
	ORG $+4
	DQ	FLAT:$SG127576
	DD	03eH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127564 DB	'1', 00H
	ORG $+2
$SG127565 DB	'2', 00H
	ORG $+2
$SG127566 DB	'2.1', 00H
$SG127567 DB	'3', 00H
	ORG $+2
$SG127568 DB	'3.1', 00H
$SG127569 DB	'4', 00H
	ORG $+2
$SG127570 DB	'4.1', 00H
$SG127571 DB	'5', 00H
	ORG $+2
$SG127572 DB	'5.1', 00H
$SG127573 DB	'5.2', 00H
$SG127574 DB	'6', 00H
	ORG $+2
$SG127575 DB	'6.1', 00H
$SG127576 DB	'6.2', 00H
$SG127578 DB	'auto', 00H
	ORG $+7
?list_mpeg2_level@@3QBUCX_DESC@@B DQ FLAT:$SG127578	; list_mpeg2_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127579
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG127580
	DD	08H
	ORG $+4
	DQ	FLAT:$SG127581
	DD	04H
	ORG $+4
	DQ	FLAT:$SG127582
	DD	06H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127579 DB	'low', 00H
$SG127580 DB	'main', 00H
	ORG $+3
$SG127581 DB	'high', 00H
	ORG $+3
$SG127585 DB	'low', 00H
$SG127582 DB	'high1440', 00H
	ORG $+3
$SG127584 DB	'auto', 00H
	ORG $+7
?list_vc1_level@@3QBUCX_DESC@@B DQ FLAT:$SG127584	; list_vc1_level
	DD	00H
	ORG $+4
	DQ	FLAT:$SG127585
	DD	01H
	ORG $+4
	DQ	FLAT:$SG127586
	DD	03H
	ORG $+4
	DQ	FLAT:$SG127587
	DD	05H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127586 DB	'median', 00H
	ORG $+1
$SG127587 DB	'high', 00H
	ORG $+3
$SG127589 DB	'auto', 00H
	ORG $+3
$SG127590 DB	'0', 00H
	ORG $+2
$SG127591 DB	'1', 00H
	ORG $+2
$SG127592 DB	'2', 00H
	ORG $+2
$SG127593 DB	'3', 00H
	ORG $+2
$SG127594 DB	'4', 00H
	ORG $+2
$SG127601 DB	'off', 00H
?list_vp8_level@@3QBUCX_DESC@@B DQ FLAT:$SG127596	; list_vp8_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127596 DB	'auto', 00H
	ORG $+3
?list_vp9_level@@3QBUCX_DESC@@B DQ FLAT:$SG127598	; list_vp9_level
	DD	00H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG127598 DB	'auto', 00H
	ORG $+3
$SG127600 DB	'Auto', 00H
	ORG $+3
$SG127602 DB	'for I frames', 00H
	ORG $+3
$SG127603 DB	'for I,P frames', 00H
	ORG $+1
$SG127604 DB	'for All frames', 00H
	ORG $+1
$SG127606 DB	'auto', 00H
	ORG $+3
$SG127607 DB	'off', 00H
$SG127608 DB	'i', 00H
	ORG $+2
$SG127609 DB	'ip', 00H
	ORG $+1
$SG127610 DB	'all', 00H
$SG127611 DB	'ipb', 00H
$SG127612 DB	'ib', 00H
	ORG $+1
$SG127613 DB	'p', 00H
	ORG $+2
$SG127614 DB	'pb', 00H
	ORG $+1
$SG127615 DB	'b', 00H
	ORG $+2
$SG127617 DB	'auto', 00H
	ORG $+3
$SG127618 DB	'slow', 00H
	ORG $+3
$SG127619 DB	'medium', 00H
	ORG $+1
$SG127620 DB	'fast', 00H
	ORG $+3
$SG127623 DB	'0', 00H
	ORG $+2
$SG127622 DB	'default', 00H
$SG127624 DB	'1', 00H
	ORG $+2
$SG127625 DB	'2', 00H
	ORG $+2
$SG127626 DB	'3', 00H
	ORG $+2
$SG127627 DB	'4', 00H
	ORG $+2
$SG127629 DB	'low', 00H
$SG127630 DB	'normal', 00H
	ORG $+1
$SG127631 DB	'high', 00H
	ORG $+3
$SG127643 DB	'none', 00H
	ORG $+3
$SG127644 DB	'copy', 00H
	ORG $+3
$SG127645 DB	'aac', 00H
$SG127646 DB	'libmp3lame', 00H
	ORG $+1
$SG127651 DB	'ac3', 00H
$SG127647 DB	'libtwolame', 00H
	ORG $+1
$SG127682 DB	'tff', 00H
$SG127648 DB	'libvorbis', 00H
	ORG $+2
$SG111298 DB	'yuv422', 00H
	ORG $+1
$SG127683 DB	'bff', 00H
$SG127649 DB	'pcm_s16le', 00H
	ORG $+2
$SG111300 DB	'yuv444', 00H
	ORG $+1
$SG127708 DB	'8x8', 00H
$SG127650 DB	'libopus', 00H
$SG111294 DB	'Invalid', 00H
$SG111295 DB	'nv12', 00H
	ORG $+3
$SG111296 DB	'yv12', 00H
	ORG $+3
$SG127681 DB	'none', 00H
	ORG $+3
$SG111297 DB	'yuy2', 00H
	ORG $+3
$SG111299 DB	'nv16', 00H
	ORG $+3
$SG127685 DB	' 1 - best quality', 00H
	ORG $+2
$SG127694 DB	'higher', 00H
	ORG $+1
$SG127709 DB	'4x4', 00H
$SG111301 DB	'yv12(9bit)', 00H
	ORG $+1
$SG111326 DB	'rgb', 00H
$SG127686 DB	' 2 - higher', 00H
$SG127712 DB	'16', 00H
	ORG $+1
$SG111302 DB	'yv12(10bit)', 00H
$SG111328 DB	'gbr', 00H
$SG127687 DB	' 3 - high quality', 00H
	ORG $+2
$SG127698 DB	'faster', 00H
	ORG $+1
$SG127713 DB	'32', 00H
	ORG $+1
$SG111303 DB	'yv12(12bit)', 00H
$SG127714 DB	'64', 00H
	ORG $+1
$SG127688 DB	' 4 - balanced', 00H
	ORG $+2
$SG111304 DB	'yv12(14bit)', 00H
$SG111331 DB	'y8', 00H
	ORG $+1
$SG127689 DB	' 5 - fast', 00H
	ORG $+2
$SG111320 DB	'rgb24r', 00H
	ORG $+1
$SG127722 DB	'all', 00H
$SG111305 DB	'yv12(16bit)', 00H
$SG127726 DB	'box', 00H
$SG127690 DB	' 6 - faster', 00H
$SG111306 DB	'p010', 00H
	ORG $+3
$SG127704 DB	'Q-pel', 00H
	ORG $+2
$SG111321 DB	'rgb32r', 00H
	ORG $+1
$SG127728 DB	'off', 00H
$SG127691 DB	' 7 - fastest', 00H
	ORG $+3
$SG111307 DB	'yuv422(9bit)', 00H
	ORG $+3
$SG111308 DB	'yuv422(10bit)', 00H
	ORG $+2
$SG127693 DB	'best', 00H
	ORG $+3
$SG111309 DB	'yuv422(12bit)', 00H
	ORG $+2
$SG111310 DB	'yuv422(14bit)', 00H
	ORG $+2
$SG127695 DB	'high', 00H
	ORG $+3
$SG111311 DB	'yuv422(16bit)', 00H
	ORG $+2
$SG127696 DB	'balanced', 00H
	ORG $+3
$SG111312 DB	'p210', 00H
	ORG $+3
$SG127697 DB	'fast', 00H
	ORG $+3
$SG111322 DB	'rgb24', 00H
	ORG $+2
$SG127721 DB	'chroma', 00H
	ORG $+1
$SG127729 DB	'x2', 00H
	ORG $+1
$SG111313 DB	'yuv444(9bit)', 00H
	ORG $+3
$SG111314 DB	'yuv444(10bit)', 00H
	ORG $+2
$SG127699 DB	'fastest', 00H
$SG111315 DB	'yuv444(12bit)', 00H
	ORG $+2
$SG111316 DB	'yuv444(14bit)', 00H
	ORG $+2
$SG127701 DB	'Auto', 00H
	ORG $+3
$SG111317 DB	'yuv444(16bit)', 00H
	ORG $+2
$SG127702 DB	'full-pel', 00H
	ORG $+3
$SG127707 DB	'16x16', 00H
	ORG $+2
$SG127732 DB	'simple', 00H
	ORG $+1
$SG127735 DB	'0', 00H
	ORG $+2
$SG111318 DB	'yuva444', 00H
$SG127703 DB	'half-pel', 00H
	ORG $+3
$SG111323 DB	'rgb32', 00H
	ORG $+2
$SG127736 DB	'90', 00H
	ORG $+1
$SG111319 DB	'yuva444(16bit)', 00H
	ORG $+1
$SG127706 DB	'Auto', 00H
	ORG $+3
$SG111324 DB	'bgr24', 00H
	ORG $+2
$SG111325 DB	'bgr32', 00H
	ORG $+2
$SG127711 DB	'auto', 00H
	ORG $+3
$SG111327 DB	'rgba', 00H
	ORG $+3
$SG111329 DB	'gbra', 00H
	ORG $+3
$SG111330 DB	'yc48', 00H
	ORG $+3
$SG111332 DB	'yc16', 00H
	ORG $+3
$SG127718 DB	'auto', 00H
	ORG $+3
$SG127719 DB	'none', 00H
	ORG $+3
$SG127720 DB	'luma', 00H
	ORG $+3
$SG127724 DB	'none', 00H
	ORG $+3
$SG127725 DB	'upscale', 00H
$SG127730 DB	'x2.5', 00H
	ORG $+3
$SG127733 DB	'complex', 00H
$SG127737 DB	'180', 00H
$SG127738 DB	'270', 00H
$SG127740 DB	'n', 00H
	ORG $+2
$SG127741 DB	'h', 00H
	ORG $+2
$SG127742 DB	'v', 00H
	ORG $+2
$SG127744 DB	'auto', 00H
	ORG $+3
$SG127745 DB	'simple', 00H
	ORG $+1
$SG127746 DB	'fine', 00H
	ORG $+3
$SG127748 DB	'auto', 00H
	ORG $+3
$SG127749 DB	'none', 00H
	ORG $+3
$SG127750 DB	'sse2', 00H
	ORG $+3
$SG127751 DB	'sse3', 00H
	ORG $+3
$SG127752 DB	'ssse3', 00H
	ORG $+2
$SG127753 DB	'sse41', 00H
	ORG $+2
$SG127754 DB	'avx', 00H
$SG127755 DB	'avx2', 00H
	ORG $+3
$SG128147 DB	'%s', 00H
	ORG $+1
$SG112276 DB	'VP8', 00H
$SG112264 DB	'H.264/AVC', 00H
	ORG $+2
$SG112278 DB	'VP9', 00H
$SG112266 DB	'H.265/HEVC', 00H
	ORG $+1
$SG112268 DB	'MPEG2', 00H
	ORG $+2
$SG112270 DB	'MPEG1', 00H
	ORG $+2
$SG112272 DB	'VC-1', 00H
	ORG $+3
$SG112274 DB	'MPEG4', 00H
	ORG $+2
$SG112889 DB	'fcc', 00H
$SG112280 DB	'unknown', 00H
$SG112387 DB	'unknown', 00H
$SG112882 DB	'undef', 00H
	ORG $+2
?list_colormatrix@@3QBUCX_DESC@@B DQ FLAT:$SG112882	; list_colormatrix
	DD	02H
	ORG $+4
	DQ	FLAT:$SG112883
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG112884
	DD	01H
	ORG $+4
	DQ	FLAT:$SG112885
	DD	06H
	ORG $+4
	DQ	FLAT:$SG112886
	DD	05H
	ORG $+4
	DQ	FLAT:$SG112887
	DD	07H
	ORG $+4
	DQ	FLAT:$SG112888
	DD	08H
	ORG $+4
	DQ	FLAT:$SG112889
	DD	04H
	ORG $+4
	DQ	FLAT:$SG112890
	DD	00H
	ORG $+4
	DQ	FLAT:$SG112891
	DD	09H
	ORG $+4
	DQ	FLAT:$SG112892
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG112893
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG112894
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG112895
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG112896
	DD	0fH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG112883 DB	'auto', 00H
	ORG $+3
$SG112884 DB	'bt709', 00H
	ORG $+2
$SG112885 DB	'smpte170m', 00H
	ORG $+2
$SG112890 DB	'GBR', 00H
$SG112886 DB	'bt470bg', 00H
$SG112887 DB	'smpte240m', 00H
	ORG $+2
$SG112888 DB	'YCgCo', 00H
	ORG $+2
$SG113041 DB	'bt470m', 00H
	ORG $+1
$SG113203 DB	'pal', 00H
$SG112891 DB	'bt2020nc', 00H
	ORG $+3
$SG112895 DB	'ictco', 00H
	ORG $+2
$SG113044 DB	'linear', 00H
	ORG $+1
$SG113205 DB	'mac', 00H
$SG112892 DB	'bt2020c', 00H
$SG112893 DB	'derived-ncl', 00H
$SG113207 DB	'0', 00H
	ORG $+2
$SG112894 DB	'derived-cl', 00H
	ORG $+1
$SG113208 DB	'1', 00H
	ORG $+2
$SG112896 DB	'2100-lms', 00H
	ORG $+7
?list_transfer@@3QBUCX_DESC@@B DQ FLAT:$SG113037	; list_transfer
	DD	02H
	ORG $+4
	DQ	FLAT:$SG113038
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG113039
	DD	01H
	ORG $+4
	DQ	FLAT:$SG113040
	DD	06H
	ORG $+4
	DQ	FLAT:$SG113041
	DD	04H
	ORG $+4
	DQ	FLAT:$SG113042
	DD	05H
	ORG $+4
	DQ	FLAT:$SG113043
	DD	07H
	ORG $+4
	DQ	FLAT:$SG113044
	DD	08H
	ORG $+4
	DQ	FLAT:$SG113045
	DD	09H
	ORG $+4
	DQ	FLAT:$SG113046
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG113047
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG113048
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG113049
	DD	0dH
	ORG $+4
	DQ	FLAT:$SG113050
	DD	0eH
	ORG $+4
	DQ	FLAT:$SG113051
	DD	0fH
	ORG $+4
	DQ	FLAT:$SG113052
	DD	010H
	ORG $+4
	DQ	FLAT:$SG113053
	DD	011H
	ORG $+4
	DQ	FLAT:$SG113054
	DD	012H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG113037 DB	'undef', 00H
	ORG $+2
$SG113038 DB	'auto', 00H
	ORG $+3
$SG113039 DB	'bt709', 00H
	ORG $+2
$SG113040 DB	'smpte170m', 00H
	ORG $+2
$SG113045 DB	'log100', 00H
	ORG $+1
$SG113209 DB	'2', 00H
	ORG $+2
$SG113042 DB	'bt470bg', 00H
$SG113043 DB	'smpte240m', 00H
	ORG $+2
$SG113046 DB	'log316', 00H
	ORG $+1
$SG113210 DB	'3', 00H
	ORG $+2
$SG113047 DB	'iec61966-2-4', 00H
	ORG $+3
$SG113048 DB	'bt1361e', 00H
$SG113049 DB	'iec61966-2-1', 00H
	ORG $+3
$SG113050 DB	'bt2020-10', 00H
	ORG $+2
$SG113190 DB	'bt470m', 00H
	ORG $+1
$SG113211 DB	'4', 00H
	ORG $+2
$SG113051 DB	'bt2020-12', 00H
	ORG $+2
$SG113194 DB	'bt2020', 00H
	ORG $+1
$SG113212 DB	'5', 00H
	ORG $+2
$SG113052 DB	'smpte2084', 00H
	ORG $+2
$SG113216 DB	'tv', 00H
	ORG $+1
$SG113053 DB	'smpte428', 00H
	ORG $+3
$SG113186 DB	'undef', 00H
	ORG $+2
$SG113217 DB	'pc', 00H
	ORG $+1
$SG113054 DB	'arib-srd-b67', 00H
	ORG $+3
?list_colorprim@@3QBUCX_DESC@@B DQ FLAT:$SG113186	; list_colorprim
	DD	02H
	ORG $+4
	DQ	FLAT:$SG113187
	DD	07fffffffH
	ORG $+4
	DQ	FLAT:$SG113188
	DD	01H
	ORG $+4
	DQ	FLAT:$SG113189
	DD	06H
	ORG $+4
	DQ	FLAT:$SG113190
	DD	04H
	ORG $+4
	DQ	FLAT:$SG113191
	DD	05H
	ORG $+4
	DQ	FLAT:$SG113192
	DD	07H
	ORG $+4
	DQ	FLAT:$SG113193
	DD	08H
	ORG $+4
	DQ	FLAT:$SG113194
	DD	09H
	ORG $+4
	DQ	FLAT:$SG113195
	DD	0aH
	ORG $+4
	DQ	FLAT:$SG113196
	DD	0bH
	ORG $+4
	DQ	FLAT:$SG113197
	DD	0cH
	ORG $+4
	DQ	FLAT:$SG113198
	DD	0dH
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG113187 DB	'auto', 00H
	ORG $+3
$SG113188 DB	'bt709', 00H
	ORG $+2
$SG113189 DB	'smpte170m', 00H
	ORG $+2
$SG114306 DB	'cfr', 00H
$SG113191 DB	'bt470bg', 00H
$SG113192 DB	'smpte240m', 00H
	ORG $+2
$SG113193 DB	'film', 00H
	ORG $+3
$SG113195 DB	'st428', 00H
	ORG $+2
$SG114307 DB	'vfr', 00H
$SG113196 DB	'st431-2', 00H
$SG113197 DB	'st432-1', 00H
$SG113198 DB	'ebu3213-e', 00H
	ORG $+2
$SG113200 DB	'undef', 00H
	ORG $+6
?list_videoformat@@3QBUCX_DESC@@B DQ FLAT:$SG113200	; list_videoformat
	DD	05H
	ORG $+4
	DQ	FLAT:$SG113201
	DD	02H
	ORG $+4
	DQ	FLAT:$SG113202
	DD	00H
	ORG $+4
	DQ	FLAT:$SG113203
	DD	01H
	ORG $+4
	DQ	FLAT:$SG113204
	DD	03H
	ORG $+4
	DQ	FLAT:$SG113205
	DD	04H
	ORG $+4
	DQ	0000000000000000H
	DD	00H
	ORG $+4
$SG113201 DB	'ntsc', 00H
	ORG $+3
$SG113202 DB	'component', 00H
	ORG $+2
$SG113204 DB	'secam', 00H
	ORG $+2
$SG114310 DB	'swr', 00H
$SG113214 DB	'limited', 00H
$SG113215 DB	'full', 00H
	ORG $+3
?list_empty@@3QBUCX_DESC@@B DQ 0000000000000000H	; list_empty
	DD	00H
	ORG $+4
$SG114299 DB	'trace', 00H
	ORG $+2
$SG114300 DB	'debug', 00H
	ORG $+2
$SG114301 DB	'more', 00H
	ORG $+3
$SG114302 DB	'info', 00H
	ORG $+3
$SG114303 DB	'warn', 00H
	ORG $+3
$SG114304 DB	'error', 00H
	ORG $+2
$SG114308 DB	'forcecfr', 00H
	ORG $+3
$SG114311 DB	'soxr', 00H
	ORG $+3
$SG147098 DB	'%s', 00H
	ORG $+1
$SG147097 DB	'invalid argument', 00H
	ORG $+7
$SG147099 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG147102 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG147100 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG147101 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsprintf_s_l
PUBLIC	vsprintf_s
PUBLIC	_vscprintf_l
PUBLIC	_vscprintf
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z	; std::_Narrow_char_traits<char,int>::eq
PUBLIC	?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset
PUBLIC	?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
PUBLIC	?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
PUBLIC	?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
PUBLIC	?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
PUBLIC	?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??0bad_cast@std@@QEAA@XZ			; std::bad_cast::bad_cast
PUBLIC	??1bad_cast@std@@UEAA@XZ			; std::bad_cast::~bad_cast
PUBLIC	??0bad_cast@std@@QEAA@AEBV01@@Z			; std::bad_cast::bad_cast
PUBLIC	??_Gbad_cast@std@@UEAAPEAXI@Z			; std::bad_cast::`scalar deleting destructor'
PUBLIC	?_Throw_bad_cast@std@@YAXXZ			; std::_Throw_bad_cast
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	??1locale@std@@QEAA@XZ				; std::locale::~locale
PUBLIC	?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z	; std::locale::_Getfacet
PUBLIC	?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z ; std::stoi
PUBLIC	??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z		; std::_Fgetc<char>
PUBLIC	??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z		; std::_Fputc<char>
PUBLIC	??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z	; std::_Ungetc<char>
PUBLIC	?_Throw_tree_length_error@std@@YAXXZ		; std::_Throw_tree_length_error
PUBLIC	_tcscmp
PUBLIC	??Rhandle_deleter@@QEBAXPEAX@Z			; handle_deleter::operator()
PUBLIC	??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
PUBLIC	??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
PUBLIC	??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
PUBLIC	??0VideoVUIInfo@@QEAA@XZ			; VideoVUIInfo::VideoVUIInfo
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0VideoInfo@@QEAA@XZ				; VideoInfo::VideoInfo
PUBLIC	??0?$allocator@UsTrim@@@std@@QEAA@XZ		; std::allocator<sTrim>::allocator<sTrim>
PUBLIC	?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z ; std::allocator<sTrim>::deallocate
PUBLIC	??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::vector<sTrim,std::allocator<sTrim> >
PUBLIC	??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
PUBLIC	?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ ; std::vector<sTrim,std::allocator<sTrim> >::clear
PUBLIC	?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z ; std::vector<sTrim,std::allocator<sTrim> >::_Destroy
PUBLIC	?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ ; std::vector<sTrim,std::allocator<sTrim> >::_Tidy
PUBLIC	?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::vector<sTrim,std::allocator<sTrim> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<sTrim> >::_Vector_val<std::_Simple_types<sTrim> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Get_first
PUBLIC	??0sTrimParam@@QEAA@XZ				; sTrimParam::sTrimParam
PUBLIC	??1sTrimParam@@QEAA@XZ				; sTrimParam::~sTrimParam
PUBLIC	?getLogLevel@RGYLog@@QEAAHXZ			; RGYLog::getLogLevel
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	??0thread@std@@QEAA@$$QEAV01@@Z			; std::thread::thread
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	??_Gthread@std@@QEAAPEAXI@Z			; std::thread::`scalar deleting destructor'
PUBLIC	??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
PUBLIC	??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter>
PUBLIC	??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ	; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
PUBLIC	?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ ; std::unique_ptr<void,handle_deleter>::get_deleter
PUBLIC	?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
PUBLIC	?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ ; std::unique_ptr<void,handle_deleter>::release
PUBLIC	?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
PUBLIC	??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z ; std::unique_ptr<void,handle_deleter>::`scalar deleting destructor'
PUBLIC	??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
PUBLIC	?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap
PUBLIC	??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
PUBLIC	??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
PUBLIC	?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
PUBLIC	?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset
PUBLIC	?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
PUBLIC	??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
PUBLIC	?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ	; std::_Ptr_base<RGYLog>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap
PUBLIC	??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
PUBLIC	??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
PUBLIC	?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
PUBLIC	?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ	; std::shared_ptr<RGYLog>::reset
PUBLIC	??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
PUBLIC	?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
PUBLIC	??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
PUBLIC	?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
PUBLIC	?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
PUBLIC	?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
PUBLIC	?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ; read_keyfile
PUBLIC	??0RGYConvertCSPPrm@@QEAA@XZ			; RGYConvertCSPPrm::RGYConvertCSPPrm
PUBLIC	??0?$allocator@Vthread@std@@@std@@QEAA@XZ	; std::allocator<std::thread>::allocator<std::thread>
PUBLIC	?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate
PUBLIC	?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size
PUBLIC	??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
PUBLIC	??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
PUBLIC	?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z ; std::vector<std::thread,std::allocator<std::thread> >::push_back
PUBLIC	?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::clear
PUBLIC	?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
PUBLIC	?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::max_size
PUBLIC	?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::capacity
PUBLIC	??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
PUBLIC	?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Change_array
PUBLIC	?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
PUBLIC	?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
PUBLIC	?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
PUBLIC	?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
PUBLIC	??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocator<std::unique_ptr<void,handle_deleter> >
PUBLIC	?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate
PUBLIC	?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
PUBLIC	??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
PUBLIC	??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
PUBLIC	?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::push_back
PUBLIC	?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear
PUBLIC	?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::size
PUBLIC	?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
PUBLIC	?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::capacity
PUBLIC	??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::operator[]
PUBLIC	?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Change_array
PUBLIC	?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Tidy
PUBLIC	?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Xlength
PUBLIC	?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range
PUBLIC	?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
PUBLIC	?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first
PUBLIC	??0?$allocator@PEAX@std@@QEAA@XZ		; std::allocator<void *>::allocator<void *>
PUBLIC	?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z ; std::allocator<void *>::deallocate
PUBLIC	?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z	; std::allocator<void *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z ; std::_Default_allocator_traits<std::allocator<void *> >::max_size
PUBLIC	??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >
PUBLIC	??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
PUBLIC	?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::push_back
PUBLIC	?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ ; std::vector<void *,std::allocator<void *> >::clear
PUBLIC	?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ ; std::vector<void *,std::allocator<void *> >::data
PUBLIC	?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::size
PUBLIC	?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::max_size
PUBLIC	?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::capacity
PUBLIC	?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z ; std::vector<void *,std::allocator<void *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z ; std::vector<void *,std::allocator<void *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ ; std::vector<void *,std::allocator<void *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ ; std::vector<void *,std::allocator<void *> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<void *> >::_Vector_val<std::_Simple_types<void *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first
PUBLIC	??0RGYConvertCSP@@QEAA@XZ			; RGYConvertCSP::RGYConvertCSP
PUBLIC	??0RGYConvertCSP@@QEAA@H@Z			; RGYConvertCSP::RGYConvertCSP
PUBLIC	??1RGYConvertCSP@@QEAA@XZ			; RGYConvertCSP::~RGYConvertCSP
PUBLIC	?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z ; RGYConvertCSP::getFunc
PUBLIC	?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z ; RGYConvertCSP::run
PUBLIC	??_GRGYConvertCSP@@QEAAPEAXI@Z			; RGYConvertCSP::`scalar deleting destructor'
PUBLIC	??0RGYInput@@QEAA@XZ				; RGYInput::RGYInput
PUBLIC	??1RGYInput@@UEAA@XZ				; RGYInput::~RGYInput
PUBLIC	?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYInput::GetNextBitstream
PUBLIC	?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYInput::GetNextBitstreamNoDelete
PUBLIC	?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ; RGYInput::GetHeader
PUBLIC	?Close@RGYInput@@UEAAXXZ			; RGYInput::Close
PUBLIC	?GetAudioTrackCount@RGYInput@@UEAAHXZ		; RGYInput::GetAudioTrackCount
PUBLIC	?GetSubtitleTrackCount@RGYInput@@UEAAHXZ	; RGYInput::GetSubtitleTrackCount
PUBLIC	?GetDataTrackCount@RGYInput@@UEAAHXZ		; RGYInput::GetDataTrackCount
PUBLIC	?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYInput::AddMessage
PUBLIC	?AddMessage@RGYInput@@QEAAXHPEBDZZ		; RGYInput::AddMessage
PUBLIC	?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z ; RGYInput::CreateInputInfo
PUBLIC	??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ; std::default_delete<RGYConvertCSP>::operator()
PUBLIC	??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=
PUBLIC	??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
PUBLIC	?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
PUBLIC	??_GRGYInput@@UEAAPEAXI@Z			; RGYInput::`scalar deleting destructor'
PUBLIC	??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
PUBLIC	??0?$allocator@H@std@@QEAA@XZ			; std::allocator<int>::allocator<int>
PUBLIC	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z	; std::allocator<int>::deallocate
PUBLIC	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z	; std::allocator<int>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z ; std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>::_Kfn
PUBLIC	??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_Tree_node<int,void *> >::allocator<std::_Tree_node<int,void *> >
PUBLIC	?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z ; std::allocator<std::_Tree_node<int,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z ; std::allocator<std::_Tree_node<int,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::max_size
PUBLIC	??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
PUBLIC	??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
PUBLIC	?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin
PUBLIC	?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end
PUBLIC	?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::max_size
PUBLIC	?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Check_grow_by_1
PUBLIC	?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getcomp
PUBLIC	?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
PUBLIC	?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
PUBLIC	?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
PUBLIC	?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
PUBLIC	??R?$less@H@std@@QEBA_NAEBH0@Z			; std::less<int>::operator()
PUBLIC	??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ ; std::_Tree_val<std::_Tree_simple_types<int> >::_Tree_val<std::_Tree_simple_types<int> >
PUBLIC	?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Min
PUBLIC	?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Lrotate
PUBLIC	?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Rrotate
PUBLIC	?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Get_first
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1><>
PUBLIC	??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ ; std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >
PUBLIC	??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ ; std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
PUBLIC	??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
PUBLIC	?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ifstream<char,std::char_traits<char> >::is_open
PUBLIC	??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
PUBLIC	??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
PUBLIC	?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::is_open
PUBLIC	?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
PUBLIC	?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
PUBLIC	?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
PUBLIC	?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
PUBLIC	?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::overflow
PUBLIC	?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
PUBLIC	?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::underflow
PUBLIC	?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::uflow
PUBLIC	?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
PUBLIC	?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
PUBLIC	?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
PUBLIC	?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
PUBLIC	?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
PUBLIC	?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ; std::basic_filebuf<char,std::char_traits<char> >::sync
PUBLIC	?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::imbue
PUBLIC	?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
PUBLIC	?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
PUBLIC	?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
PUBLIC	?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
PUBLIC	?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
PUBLIC	??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
PUBLIC	??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Unwrapped
PUBLIC	??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
PUBLIC	??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
PUBLIC	??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>
PUBLIC	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
PUBLIC	??$min@H@std@@YAAEBHAEBH0@Z			; std::min<int>
PUBLIC	??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
PUBLIC	??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
PUBLIC	??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>
PUBLIC	??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z	; std::_Max_value<char *>
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_head<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<int,void *> >
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z ; std::_Unfancy_maybe_null<void *>
PUBLIC	??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z	; std::move<void * &>
PUBLIC	??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::emplace_back<void *>
PUBLIC	??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z	; std::forward<void *>
PUBLIC	??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::_Emplace_back_with_unused_capacity<void *>
PUBLIC	??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z	; std::_Unfancy<void *>
PUBLIC	??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z ; std::_Default_allocator_traits<std::allocator<void *> >::construct<void *,void *>
PUBLIC	??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>
PUBLIC	??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><void *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1><>
PUBLIC	??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::emplace_back<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back_with_unused_capacity<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::construct<std::unique_ptr<void,handle_deleter>,std::unique_ptr<void,handle_deleter> >
PUBLIC	??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<void,handle_deleter> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1><>
PUBLIC	??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::move<std::thread &>
PUBLIC	??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<std::thread>
PUBLIC	??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
PUBLIC	??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_back_with_unused_capacity<std::thread>
PUBLIC	??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
PUBLIC	??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>
PUBLIC	??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>
PUBLIC	??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><>
PUBLIC	??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><sTrim>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1><>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$addressof@D@std@@YAPEADAEAD@Z		; std::addressof<char>
PUBLIC	??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
PUBLIC	??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
PUBLIC	??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > >
PUBLIC	??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1><std::less<int> const &,std::_Zero_then_variadic_args_t>
PUBLIC	??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>
PUBLIC	??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z ; std::_Destroy_range<std::allocator<void *> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::unique_ptr<void,handle_deleter> > >
PUBLIC	??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::thread> >
PUBLIC	??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z ; std::_Destroy_range<std::allocator<sTrim> >
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
PUBLIC	??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
PUBLIC	??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>
PUBLIC	??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>
PUBLIC	??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
PUBLIC	??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
PUBLIC	?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
PUBLIC	??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
PUBLIC	??$move@AEAH@std@@YA$$QEAHAEAH@Z		; std::move<int &>
PUBLIC	??$forward@_N@std@@YA$$QEA_NAEA_N@Z		; std::forward<bool>
PUBLIC	??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
PUBLIC	??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>
PUBLIC	??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>
PUBLIC	??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>
PUBLIC	??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >
PUBLIC	??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>
PUBLIC	??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator++
PUBLIC	??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator!=
PUBLIC	??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,0>
PUBLIC	??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
PUBLIC	??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::move<handle_deleter &>
PUBLIC	??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void * &>
PUBLIC	??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><>
PUBLIC	??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<int,void *>::_Freenode0<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z ; std::forward<std::less<int> const &>
PUBLIC	??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
PUBLIC	??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::destroy<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
PUBLIC	??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
PUBLIC	??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
PUBLIC	??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::_Facet_base *,std::_Facet_base *>
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z		; std::_Get_size_of_n<32>
PUBLIC	??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z ; std::_Uninitialized_move<void * *,std::allocator<void *> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >
PUBLIC	??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >
PUBLIC	??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::forward<handle_deleter>
PUBLIC	??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void *>
PUBLIC	??$_Get_size_of_n@$03@std@@YA_K_K@Z		; std::_Get_size_of_n<4>
PUBLIC	??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
PUBLIC	??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z ; std::exchange<void *,void *>
PUBLIC	??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
PUBLIC	??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z ; std::_In_place_key_extract_set<int,int>::_Extract
PUBLIC	??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
PUBLIC	??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Lower_bound_duplicate<int>
PUBLIC	??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> * &,bool,0>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Release
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>
PUBLIC	??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> *,bool,0>
PUBLIC	??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >
PUBLIC	??$forward@AEB_N@std@@YAAEB_NAEB_N@Z		; std::forward<bool const &>
PUBLIC	??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ; std::forward<std::allocator<int> const &>
PUBLIC	??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
PUBLIC	??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
PUBLIC	??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
PUBLIC	??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z	; std::forward<void * &>
PUBLIC	??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<int,void *>::_Freenode<std::allocator<std::_Tree_node<int,void *> > >
PUBLIC	??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<int,void *> *>
PUBLIC	??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ; std::forward<std::_Tree_node<int,void *> * const &>
PUBLIC	??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z	; std::_Get_unwrapped<void *>
PUBLIC	??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z ; std::_Copy_memmove<void * *,void * *>
PUBLIC	??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::unique_ptr<void,handle_deleter> >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Release
PUBLIC	??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back<std::unique_ptr<void,handle_deleter> >
PUBLIC	??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z ; std::_Get_unwrapped<std::thread>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release
PUBLIC	??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<std::thread>
PUBLIC	??$addressof@H@std@@YAPEAHAEAH@Z		; std::addressof<int>
PUBLIC	??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::destroy<int>
PUBLIC	??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Tree_node<int,void *> *,std::nullptr_t>
PUBLIC	??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
PUBLIC	??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z ; std::_Debug_lt_pred<std::less<int> const &,int const &,int const &,0>
PUBLIC	??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<int,void *> * &>
PUBLIC	??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::construct<int,int>
PUBLIC	??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
PUBLIC	??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<int,void *> *>
PUBLIC	??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Adl_verify_range<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
PUBLIC	??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>
PUBLIC	??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
PUBLIC	??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > const >
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
PUBLIC	??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int const &>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$_Unfancy@H@std@@YAPEAHPEAH@Z			; std::_Unfancy<int>
PUBLIC	??$forward@AEBH@std@@YAAEBHAEBH@Z		; std::forward<int const &>
PUBLIC	??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int const &>
PUBLIC	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_7bad_cast@std@@6B@				; std::bad_cast::`vftable'
PUBLIC	??_C@_08EPJLHIJG@bad?5cast@			; `string'
PUBLIC	_TI2?AVbad_cast@std@@
PUBLIC	_CTA2?AVbad_cast@std@@
PUBLIC	??_R0?AVbad_cast@std@@@8			; std::bad_cast `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument@	; `string'
PUBLIC	??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0BB@GCADKGJO@map?1set?5too?5long@		; `string'
PUBLIC	??_C@_05PKCPKOLM@undef@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_7RGYInput@@6B@				; RGYInput::`vftable'
PUBLIC	??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
PUBLIC	??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
PUBLIC	??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BCM@NMHCBNAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ ; `string'
PUBLIC	??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
PUBLIC	??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@ ; `string'
PUBLIC	??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ ; `string'
PUBLIC	??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_0BI@CFPLBAOH@invalid?5string?5position@	; `string'
PUBLIC	??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_0DJ@PBHPKNPD@map?1set?5iterators?5in?5range?5are?5@ ; `string'
PUBLIC	??_C@_0GG@OCININGN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MM@HFHBGPEE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1HG@KNBJPECF@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@ ; `string'
PUBLIC	??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_cast@std@@6B@				; std::bad_cast::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_cast@std@@8				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_cast@std@@8				; std::bad_cast::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_cast@std@@8			; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4RGYInput@@6B@				; RGYInput::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVRGYInput@@@8				; RGYInput `RTTI Type Descriptor'
PUBLIC	??_R3RGYInput@@8				; RGYInput::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2RGYInput@@8				; RGYInput::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@RGYInput@@8			; RGYInput::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	_purecall:PROC
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	__imp__errno:PROC
EXTRN	__imp_strtol:PROC
EXTRN	__imp__get_stream_buffer_pointers:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_fflush:PROC
EXTRN	__imp_fgetc:PROC
EXTRN	__imp_fgetpos:PROC
EXTRN	__imp_fputc:PROC
EXTRN	__imp_fread:PROC
EXTRN	__imp_fsetpos:PROC
EXTRN	__imp__fseeki64:PROC
EXTRN	__imp_fwrite:PROC
EXTRN	__imp_setvbuf:PROC
EXTRN	__imp_ungetc:PROC
EXTRN	__imp__lock_file:PROC
EXTRN	__imp__unlock_file:PROC
EXTRN	__imp___stdio_common_vsprintf:PROC
EXTRN	__imp___stdio_common_vsprintf_s:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_terminate:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	strlen:PROC
EXTRN	?_Xinvalid_argument@std@@YAXPEBD@Z:PROC		; std::_Xinvalid_argument
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?_Xout_of_range@std@@YAXPEBD@Z:PROC		; std::_Xout_of_range
EXTRN	??_Ebad_cast@std@@UEAAPEAXI@Z:PROC		; std::bad_cast::`vector deleting destructor'
EXTRN	?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z:PROC ; std::_Facet_Register
EXTRN	__imp_??Bid@locale@std@@QEAA_KXZ:PROC
EXTRN	?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ:PROC ; std::locale::_Getgloballocale
EXTRN	__imp_?always_noconv@codecvt_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z:PROC
EXTRN	__imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z:PROC
EXTRN	__imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z:PROC
EXTRN	__imp_??Bios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ:PROC
EXTRN	__imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ:PROC
EXTRN	__imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ:PROC
EXTRN	__imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ:PROC
EXTRN	__imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ:PROC
EXTRN	__imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z:PROC
EXTRN	__imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC
EXTRN	__imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	__imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	__imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z:PROC
EXTRN	__imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z:PROC
EXTRN	__imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ:PROC
EXTRN	?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z:PROC	; std::_Fiopen
EXTRN	__imp_CloseHandle:PROC
EXTRN	__imp_SetEvent:PROC
EXTRN	__imp_WaitForSingleObject:PROC
EXTRN	__imp_CreateEventA:PROC
EXTRN	__imp_WaitForMultipleObjects:PROC
EXTRN	__imp__beginthreadex:PROC
EXTRN	__imp__mbscmp:PROC
EXTRN	?get_cpu_info@@YA?AUcpu_info_t@@XZ:PROC		; get_cpu_info
EXTRN	?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z:PROC ; get_convert_csp_func
EXTRN	?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z:PROC ; split
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	??_ERGYInput@@UEAAPEAXI@Z:PROC			; RGYInput::`vector deleting destructor'
EXTRN	??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_filebuf<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z:PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z:PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A:QWORD
EXTRN	__security_cookie:QWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B DB 038H DUP (?) ; CspMatrixList
?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B DB 03cH DUP (?) ; CspTransferList
?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B DB 030H DUP (?) ; CspColorprimList
_BSS	ENDS
;	COMDAT ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A
_BSS	SEGMENT
?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A DQ 01H DUP (?) ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
_BSS	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB
_BSS	SEGMENT
?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB DQ 01H DUP (?) ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$__local_stdio_printf_options DD imagerel $LN3
	DD	imagerel $LN3+11
	DD	imagerel $unwind$__local_stdio_printf_options
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_s_l DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$_vsprintf_s_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsprintf_s DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$vsprintf_s
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf_l DD imagerel $LN5
	DD	imagerel $LN5+130
	DD	imagerel $unwind$_vscprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vscprintf DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$_vscprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+78
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+83
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+14
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+424
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+175
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN6
	DD	imagerel $LN6+182
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN7
	DD	imagerel $LN7+161
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+251
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+76
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+270
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+28
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+77
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z DD imagerel $LN7
	DD	imagerel $LN7+102
	DD	imagerel $unwind$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+9
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+68
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+163
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+153
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD imagerel $LN4
	DD	imagerel $LN4+270
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+198
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+236
	DD	imagerel $unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD imagerel $LN12
	DD	imagerel $LN12+197
	DD	imagerel $unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z DD imagerel $LN4
	DD	imagerel $LN4+213
	DD	imagerel $unwind$?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ DD imagerel $LN12
	DD	imagerel $LN12+188
	DD	imagerel $unwind$?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+153
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD imagerel $LN5
	DD	imagerel $LN5+125
	DD	imagerel $unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD imagerel $LN7
	DD	imagerel $LN7+219
	DD	imagerel $unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+189
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+214
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_cast@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1bad_cast@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_cast@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??0bad_cast@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_cast@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gbad_cast@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_cast@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?_Throw_bad_cast@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1locale@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+121
	DD	imagerel $unwind$??1locale@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD imagerel $LN8
	DD	imagerel $LN8+189
	DD	imagerel $unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z DD imagerel $LN7
	DD	imagerel $LN7+231
	DD	imagerel $unwind$?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+83
	DD	imagerel $unwind$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_tree_length_error@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Throw_tree_length_error@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_tcscmp DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$_tcscmp
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Rhandle_deleter@@QEBAXPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??Rhandle_deleter@@QEBAXPEAX@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z DD imagerel ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z
	DD	imagerel ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z+138
	DD	imagerel $unwind$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+297
	DD	imagerel $unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspMatrixList@@YAXXZ DD imagerel ??__ECspMatrixList@@YAXXZ
	DD	imagerel ??__ECspMatrixList@@YAXXZ+452
	DD	imagerel $unwind$??__ECspMatrixList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+311
	DD	imagerel $unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspTransferList@@YAXXZ DD imagerel ??__ECspTransferList@@YAXXZ
	DD	imagerel ??__ECspTransferList@@YAXXZ+476
	DD	imagerel $unwind$??__ECspTransferList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??__ECspColorprimList@@YAXXZ DD imagerel ??__ECspColorprimList@@YAXXZ
	DD	imagerel ??__ECspColorprimList@@YAXXZ+398
	DD	imagerel $unwind$??__ECspColorprimList@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VideoVUIInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$??0VideoVUIInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+270
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0VideoInfo@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??0VideoInfo@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UsTrim@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@UsTrim@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sTrimParam@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+55
	DD	imagerel $unwind$??0sTrimParam@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sTrimParam@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1sTrimParam@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getLogLevel@RGYLog@@QEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?getLogLevel@RGYLog@@QEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+59
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0thread@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??0thread@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?joinable@thread@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+67
	DD	imagerel $unwind$?joinable@thread@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gthread@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_Gthread@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+16
	DD	imagerel $unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+247
	DD	imagerel $unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD imagerel $LN22
	DD	imagerel $LN22+682
	DD	imagerel $unwind$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+70
	DD	imagerel $unwind$?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+58
	DD	imagerel $unwind$?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$pdata$?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD imagerel ?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DD	imagerel ?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA+38
	DD	imagerel $unwind$?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYConvertCSPPrm@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??0RGYConvertCSPPrm@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@Vthread@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@Vthread@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+219
	DD	imagerel $unwind$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+275
	DD	imagerel $unwind$?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+222
	DD	imagerel $unwind$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+269
	DD	imagerel $unwind$?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAX@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@PEAX@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+166
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+269
	DD	imagerel $unwind$?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z DD imagerel $LN9
	DD	imagerel $LN9+214
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYConvertCSP@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+54
	DD	imagerel $unwind$??0RGYConvertCSP@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYConvertCSP@@QEAA@H@Z DD imagerel $LN7
	DD	imagerel $LN7+194
	DD	imagerel $unwind$??0RGYConvertCSP@@QEAA@H@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
$pdata$?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD imagerel ?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
$pdata$?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD imagerel ?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
$pdata$?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD imagerel ?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1RGYConvertCSP@@QEAA@XZ DD imagerel $LN13
	DD	imagerel $LN13+368
	DD	imagerel $unwind$??1RGYConvertCSP@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z DD imagerel $LN6
	DD	imagerel $LN6+184
	DD	imagerel $unwind$?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z
$pdata$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z DD imagerel $LN21
	DD	imagerel $LN21+1620
	DD	imagerel $unwind$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA DD imagerel ?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
	DD	imagerel ?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
$pdata$?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA DD imagerel ?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
	DD	imagerel ?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
$pdata$?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA DD imagerel ?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
	DD	imagerel ?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRGYConvertCSP@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GRGYConvertCSP@@QEAAPEAXI@Z
pdata	ENDS
pdata	SEGMENT
$pdata$??0RGYInput@@QEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+319
	DD	imagerel $unwind$??0RGYInput@@QEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA
$pdata$?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA DD imagerel ?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA
$pdata$?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA DD imagerel ?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA
$pdata$?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA DD imagerel ?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA
$pdata$?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA DD imagerel ?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA
$pdata$?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA DD imagerel ?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$??1RGYInput@@UEAA@XZ DD imagerel $LN9
	DD	imagerel $LN9+180
	DD	imagerel $unwind$??1RGYInput@@UEAA@XZ
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA
$pdata$?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA
$pdata$?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA DD imagerel ?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA
$pdata$?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA DD imagerel ?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA
$pdata$?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA DD imagerel ?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA
$pdata$?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA DD imagerel ?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA
	DD	imagerel ?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA+42
	DD	imagerel $unwind$?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD imagerel $LN3
	DD	imagerel $LN3+15
	DD	imagerel $unwind$?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?Close@RGYInput@@UEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$?Close@RGYInput@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetAudioTrackCount@RGYInput@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?GetAudioTrackCount@RGYInput@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSubtitleTrackCount@RGYInput@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?GetSubtitleTrackCount@RGYInput@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetDataTrackCount@RGYInput@@UEAAHXZ DD imagerel $LN3
	DD	imagerel $LN3+10
	DD	imagerel $unwind$?GetDataTrackCount@RGYInput@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD imagerel $LN14
	DD	imagerel $LN14+688
	DD	imagerel $unwind$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD imagerel ?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DD	imagerel ?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddMessage@RGYInput@@QEAAXHPEBDZZ DD imagerel $LN6
	DD	imagerel $LN6+354
	DD	imagerel $unwind$?AddMessage@RGYInput@@QEAAXHPEBDZZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA DD imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA
pdata	ENDS
pdata	SEGMENT
$pdata$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z DD imagerel $LN6
	DD	imagerel $LN6+586
	DD	imagerel $unwind$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z
pdata	ENDS
pdata	SEGMENT
$pdata$?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA DD imagerel ?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA
	DD	imagerel ?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA
$pdata$?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA DD imagerel ?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA
	DD	imagerel ?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z DD imagerel $LN5
	DD	imagerel $LN5+90
	DD	imagerel $unwind$??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DD imagerel $LN4
	DD	imagerel $LN4+101
	DD	imagerel $unwind$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GRGYInput@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_GRGYInput@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@H@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@H@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+169
	DD	imagerel $unwind$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+78
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+237
	DD	imagerel $unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+110
	DD	imagerel $unwind$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA DD imagerel ?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+186
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$less@H@std@@QEBA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+82
	DD	imagerel $unwind$??R?$less@H@std@@QEBA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z DD imagerel $LN5
	DD	imagerel $LN5+44
	DD	imagerel $unwind$?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+236
	DD	imagerel $unwind$?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z DD imagerel $LN8
	DD	imagerel $LN8+239
	DD	imagerel $unwind$?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z DD imagerel $LN19
	DD	imagerel $LN19+767
	DD	imagerel $unwind$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+57
	DD	imagerel $unwind$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DD imagerel $LN9
	DD	imagerel $LN9+323
	DD	imagerel $unwind$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA+57
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD imagerel $LN4
	DD	imagerel $LN4+165
	DD	imagerel $unwind$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+163
	DD	imagerel $unwind$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA+47
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+65
	DD	imagerel $unwind$?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD imagerel $LN6
	DD	imagerel $LN6+197
	DD	imagerel $unwind$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA DD imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
	DD	imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ DD imagerel $LN7
	DD	imagerel $LN7+152
	DD	imagerel $unwind$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN18
	DD	imagerel $LN18+816
	DD	imagerel $unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD imagerel $LN13
	DD	imagerel $LN13+406
	DD	imagerel $unwind$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN7
	DD	imagerel $LN7+216
	DD	imagerel $unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN21
	DD	imagerel $LN21+978
	DD	imagerel $unwind$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA DD imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
	DD	imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z DD imagerel $LN11
	DD	imagerel $LN11+576
	DD	imagerel $unwind$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z DD imagerel $LN7
	DD	imagerel $LN7+322
	DD	imagerel $unwind$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN8
	DD	imagerel $LN8+298
	DD	imagerel $unwind$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z DD imagerel $LN7
	DD	imagerel $LN7+179
	DD	imagerel $unwind$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+150
	DD	imagerel $unwind$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z DD imagerel $LN6
	DD	imagerel $LN6+376
	DD	imagerel $unwind$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ DD imagerel $LN15
	DD	imagerel $LN15+522
	DD	imagerel $unwind$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+104
	DD	imagerel $unwind$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+151
	DD	imagerel $unwind$?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z DD imagerel $LN6
	DD	imagerel $LN6+217
	DD	imagerel $unwind$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA DD imagerel ?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA
	DD	imagerel ?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA DD imagerel ?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA
	DD	imagerel ?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA+52
	DD	imagerel $unwind$?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+92
	DD	imagerel $unwind$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+72
	DD	imagerel $unwind$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z DD imagerel $LN12
	DD	imagerel $LN12+195
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+62
	DD	imagerel $unwind$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+50
	DD	imagerel $unwind$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+331
	DD	imagerel $unwind$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA DD imagerel ?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA+38
	DD	imagerel $unwind$?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA DD imagerel ?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
	DD	imagerel ?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@H@std@@YAAEBHAEBH0@Z DD imagerel $LN13
	DD	imagerel $LN13+210
	DD	imagerel $unwind$??$min@H@std@@YAAEBHAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ DD imagerel ??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ
	DD	imagerel ??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ+363
	DD	imagerel $unwind$??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z DD imagerel ??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z
	DD	imagerel ??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z+107
	DD	imagerel $unwind$??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+227
	DD	imagerel $unwind$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA DD imagerel ?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN8
	DD	imagerel $LN8+252
	DD	imagerel $unwind$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+57
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+40
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+161
	DD	imagerel $unwind$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA+47
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA+46
	DD	imagerel $unwind$?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+89
	DD	imagerel $unwind$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+49
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN9
	DD	imagerel $LN9+411
	DD	imagerel $unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD imagerel ?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DD	imagerel ?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA+52
	DD	imagerel $unwind$?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN16
	DD	imagerel $LN16+683
	DD	imagerel $unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD imagerel $LN6
	DD	imagerel $LN6+278
	DD	imagerel $unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ DD imagerel $LN8
	DD	imagerel $LN8+309
	DD	imagerel $unwind$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD imagerel $LN23
	DD	imagerel $LN23+701
	DD	imagerel $unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD imagerel $LN10
	DD	imagerel $LN10+430
	DD	imagerel $unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+252
	DD	imagerel $unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z DD imagerel $LN7
	DD	imagerel $LN7+124
	DD	imagerel $unwind$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+939
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ DD imagerel $LN3
	DD	imagerel $LN3+35
	DD	imagerel $unwind$?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+25
	DD	imagerel $unwind$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD imagerel $LN11
	DD	imagerel $LN11+328
	DD	imagerel $unwind$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+551
	DD	imagerel $unwind$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DD imagerel $LN13
	DD	imagerel $LN13+562
	DD	imagerel $unwind$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA+81
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+133
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+231
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+75
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+145
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD imagerel $LN6
	DD	imagerel $LN6+497
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@D@std@@YAPEADAEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@D@std@@YAPEADAEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+330
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z DD imagerel $LN3
	DD	imagerel $LN3+151
	DD	imagerel $unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD imagerel $LN6
	DD	imagerel $LN6+523
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD imagerel $LN3
	DD	imagerel $LN3+150
	DD	imagerel $unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+525
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+45
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+81
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+162
	DD	imagerel $unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+18
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD imagerel $LN6
	DD	imagerel $LN6+101
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+74
	DD	imagerel $unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+76
	DD	imagerel $unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@_N@std@@YA$$QEA_NAEA_N@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@_N@std@@YA$$QEA_NAEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD imagerel $LN21
	DD	imagerel $LN21+618
	DD	imagerel $unwind$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA DD imagerel ?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA
	DD	imagerel ?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA DD imagerel ?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA
	DD	imagerel ?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA+79
	DD	imagerel $unwind$?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z DD imagerel $LN5
	DD	imagerel $LN5+472
	DD	imagerel $unwind$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA DD imagerel ?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA+38
	DD	imagerel $unwind$?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z DD imagerel $LN4
	DD	imagerel $LN4+98
	DD	imagerel $unwind$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ DD imagerel $LN3
	DD	imagerel $LN3+20
	DD	imagerel $unwind$??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ DD imagerel $LN7
	DD	imagerel $LN7+165
	DD	imagerel $unwind$??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+86
	DD	imagerel $unwind$??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+61
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+194
	DD	imagerel $unwind$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z DD imagerel ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z
	DD	imagerel ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z+13
	DD	imagerel $unwind$??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+144
	DD	imagerel $unwind$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA+49
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DD imagerel ??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
	DD	imagerel ??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z+66
	DD	imagerel $unwind$??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ DD imagerel ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ
	DD	imagerel ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ+76
	DD	imagerel $unwind$??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ DD imagerel ??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ
	DD	imagerel ??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ+16
	DD	imagerel $unwind$??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ DD imagerel ?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
	DD	imagerel ?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ+16
	DD	imagerel $unwind$?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ DD imagerel ?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
	DD	imagerel ?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ+64
	DD	imagerel $unwind$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ DD imagerel ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ
	DD	imagerel ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ+13
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z DD imagerel $LN4
	DD	imagerel $LN4+146
	DD	imagerel $unwind$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA DD imagerel ?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+29
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+279
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel ??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z
	DD	imagerel ??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z+73
	DD	imagerel $unwind$??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+84
	DD	imagerel $unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+212
	DD	imagerel $unwind$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+87
	DD	imagerel $unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD imagerel $LN6
	DD	imagerel $LN6+459
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+133
	DD	imagerel $unwind$??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z DD imagerel $LN7
	DD	imagerel $LN7+324
	DD	imagerel $unwind$??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z DD imagerel $LN5
	DD	imagerel $LN5+142
	DD	imagerel $unwind$??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+47
	DD	imagerel $unwind$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z DD imagerel $LN4
	DD	imagerel $LN4+229
	DD	imagerel $unwind$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA DD imagerel ?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEB_N@std@@YAAEB_NAEB_N@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEB_N@std@@YAAEB_NAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z DD imagerel $LN6
	DD	imagerel $LN6+176
	DD	imagerel $unwind$??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+60
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+93
	DD	imagerel $unwind$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DD imagerel ??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
	DD	imagerel ??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z+70
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z DD imagerel ??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z
	DD	imagerel ??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z+13
	DD	imagerel $unwind$??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z DD imagerel ??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z
	DD	imagerel ??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z+13
	DD	imagerel $unwind$??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+54
	DD	imagerel $unwind$??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+54
	DD	imagerel $unwind$??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+8
	DD	imagerel $unwind$??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@H@std@@YAPEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@H@std@@YAPEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z DD imagerel $LN13
	DD	imagerel $LN13+234
	DD	imagerel $unwind$??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+245
	DD	imagerel $unwind$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA+35
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+105
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DD imagerel ??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
	DD	imagerel ??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z+71
	DD	imagerel $unwind$??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+17
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD imagerel ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z+73
	DD	imagerel $unwind$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z DD imagerel ??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z
	DD	imagerel ??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z+13
	DD	imagerel $unwind$??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBH@std@@YAAEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+13
	DD	imagerel $unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z
pdata	ENDS
CRT$XCU	SEGMENT
?CspMatrixList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspMatrixList@@YAXXZ ; CspMatrixList$initializer$
CRT$XCU	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@RGYInput@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@RGYInput@@8 DD imagerel ??_R0?AVRGYInput@@@8 ; RGYInput::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3RGYInput@@8
rdata$r	ENDS
;	COMDAT ??_R2RGYInput@@8
rdata$r	SEGMENT
??_R2RGYInput@@8 DD imagerel ??_R1A@?0A@EA@RGYInput@@8	; RGYInput::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3RGYInput@@8
rdata$r	SEGMENT
??_R3RGYInput@@8 DD 00H					; RGYInput::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2RGYInput@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVRGYInput@@@8
data$r	SEGMENT
??_R0?AVRGYInput@@@8 DQ FLAT:??_7type_info@@6B@		; RGYInput `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVRGYInput@@', 00H
data$r	ENDS
;	COMDAT ??_R4RGYInput@@6B@
rdata$r	SEGMENT
??_R4RGYInput@@6B@ DD 01H				; RGYInput::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVRGYInput@@@8
	DD	imagerel ??_R3RGYInput@@8
	DD	imagerel ??_R4RGYInput@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_cast@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_cast@std@@8 DD imagerel ??_R0?AVbad_cast@std@@@8 ; std::bad_cast::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_cast@std@@8
rdata$r	SEGMENT
??_R2bad_cast@std@@8 DD imagerel ??_R1A@?0A@EA@bad_cast@std@@8 ; std::bad_cast::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_cast@std@@8
rdata$r	SEGMENT
??_R3bad_cast@std@@8 DD 00H				; std::bad_cast::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_cast@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_cast@std@@6B@
rdata$r	SEGMENT
??_R4bad_cast@std@@6B@ DD 01H				; std::bad_cast::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	imagerel ??_R3bad_cast@std@@8
	DD	imagerel ??_R4bad_cast@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	imagerel ??_R2?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ifstream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_ifstream<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	0b0H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_ifstream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_filebuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@@8
	DD	imagerel ??_R3?$basic_filebuf@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (16,-1,0,64)'
	DD	03H
	DD	010H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD imagerel ??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD imagerel ??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD imagerel ??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@ios_base@std@@8
	DD	imagerel ??_R17?0A@EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	imagerel ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_istream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_istream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_istream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_istream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_istream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	DD	imagerel ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	09H
	DD	imagerel ??_R2?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_iostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_iostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	08H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_iostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	09H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_iostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@?0A@EA@?$basic_istream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	DD	imagerel ??_R1BA@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	imagerel ??_R1A@A@3EA@ios_base@std@@8
	DD	imagerel ??_R17A@3EA@?$_Iosb@H@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	03H
	DD	0aH
	DD	imagerel ??_R2?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$alloc'
	DB	'ator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	098H
	DD	04H
	DD	imagerel ??_R0?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD imagerel ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD imagerel ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	imagerel ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
	DD	imagerel ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
CONST	SEGMENT
??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'b', 00H, 'u', 00H, 'g', 00H, '_', 00H, 'l', 00H, 't'
	DB	00H, '_', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HG@KNBJPECF@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@
CONST	SEGMENT
??_C@_1HG@KNBJPECF@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@ DB '"'
	DB	00H, 'm', 00H, 'a', 00H, 'p', 00H, '/', 00H, 's', 00H, 'e', 00H
	DB	't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H
	DB	'n', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e'
	DB	00H, ' ', 00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H
	DB	'r', 00H, 'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i'
	DB	00H, 'n', 00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MM@HFHBGPEE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MM@HFHBGPEE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 't', 00H
	DB	'r', 00H, 'e', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GG@OCININGN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GG@OCININGN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xtree', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@PBHPKNPD@map?1set?5iterators?5in?5range?5are?5@
CONST	SEGMENT
??_C@_0DJ@PBHPKNPD@map?1set?5iterators?5in?5range?5are?5@ DB 'map/set ite'
	DB	'rators in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'u', 00H
	DB	't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CFPLBAOH@invalid?5string?5position@
CONST	SEGMENT
??_C@_0BI@CFPLBAOH@invalid?5string?5position@ DB 'invalid string position'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@ DB '"'
	DB	00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'e'
	DB	00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'e', 00H
	DB	'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' ', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@
CONST	SEGMENT
??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@ DB 'front() '
	DB	'called on empty string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
CONST	SEGMENT
??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'b', 00H, 'a', 00H
	DB	's', 00H, 'i', 00H, 'c', 00H, '_', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, '<', 00H, 'c', 00H, 'h', 00H
	DB	'a', 00H, 'r', 00H, ',', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u'
	DB	00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H
	DB	':', 00H, ':', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '_'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'h', 00H, 'a', 00H, 'r', 00H, '>'
	DB	00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, '[', 00H, ']', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 's', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xstring', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@ DB 'string subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xutility', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H
	DB	's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':'
	DB	00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 't', 00H, 'h', 00H, 'r', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
CONST	SEGMENT
??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r'
	DB	00H, 'i', 00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H
	DB	't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a'
	DB	00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BCM@NMHCBNAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
CONST	SEGMENT
??_C@_1BCM@NMHCBNAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 'q'
	DB	00H, 'u', 00H, 'e', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H
	DB	'<', 00H, 'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ',', 00H, 's'
	DB	00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H
	DB	'h', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '_'
	DB	00H, 'd', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, '>', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H
	DB	':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c', 00H, 'l', 00H
	DB	'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd'
	DB	00H, ':', 00H, ':', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 'q', 00H
	DB	'u', 00H, 'e', 00H, '_', 00H, 'p', 00H, 't', 00H, 'r', 00H, '<'
	DB	00H, 'v', 00H, 'o', 00H, 'i', 00H, 'd', 00H, ',', 00H, 's', 00H
	DB	't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'h'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	'd', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '[', 00H, ']', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@ DB 'vector subscrip'
	DB	't out of range', 00H			; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	088H
CONST	ENDS
;	COMDAT ??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
CONST	SEGMENT
??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@ DD 00H ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	098H
CONST	ENDS
;	COMDAT ??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DQ FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DQ	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
CONST	SEGMENT
??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@ DD 00H ; std::basic_ifstream<char,std::char_traits<char> >::`vbtable'
	DD	0b0H
CONST	ENDS
;	COMDAT ??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_ifstream<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
CONST	SEGMENT
??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ DQ FLAT:??_R4?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@ ; std::basic_filebuf<char,std::char_traits<char> >::`vftable'
	DQ	FLAT:??_E?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
	DQ	FLAT:?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
	DQ	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
	DQ	FLAT:?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DQ	FLAT:?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
	DQ	FLAT:?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DQ	FLAT:?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
CONST	ENDS
;	COMDAT ??_7RGYInput@@6B@
CONST	SEGMENT
??_7RGYInput@@6B@ DQ FLAT:??_R4RGYInput@@6B@		; RGYInput::`vftable'
	DQ	FLAT:??_ERGYInput@@UEAAPEAXI@Z
	DQ	FLAT:_purecall
	DQ	FLAT:_purecall
	DQ	FLAT:?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
	DQ	FLAT:?Close@RGYInput@@UEAAXXZ
	DQ	FLAT:?GetAudioTrackCount@RGYInput@@UEAAHXZ
	DQ	FLAT:?GetSubtitleTrackCount@RGYInput@@UEAAHXZ
	DQ	FLAT:?GetDataTrackCount@RGYInput@@UEAAHXZ
	DQ	FLAT:?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PKCPKOLM@undef@
CONST	SEGMENT
??_C@_05PKCPKOLM@undef@ DB 'undef', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCADKGJO@map?1set?5too?5long@
CONST	SEGMENT
??_C@_0BB@GCADKGJO@map?1set?5too?5long@ DB 'map/set too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range@
CONST	SEGMENT
??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range@ DB 'stoi argument out '
	DB	'of range', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument@
CONST	SEGMENT
??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument@ DB 'invalid stoi argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_cast@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_cast@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_cast@std@@@8
data$r	SEGMENT
??_R0?AVbad_cast@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_cast `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_cast@std@@', 00H
data$r	ENDS
;	COMDAT _CTA2?AVbad_cast@std@@
xdata$x	SEGMENT
_CTA2?AVbad_cast@std@@ DD 02H
	DD	imagerel _CT??_R0?AVbad_cast@std@@@8??0bad_cast@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI2?AVbad_cast@std@@
xdata$x	SEGMENT
_TI2?AVbad_cast@std@@ DD 00H
	DD	imagerel ??1bad_cast@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVbad_cast@std@@
xdata$x	ENDS
;	COMDAT ??_C@_08EPJLHIJG@bad?5cast@
CONST	SEGMENT
??_C@_08EPJLHIJG@bad?5cast@ DB 'bad cast', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7bad_cast@std@@6B@
CONST	SEGMENT
??_7bad_cast@std@@6B@ DQ FLAT:??_R4bad_cast@std@@6B@	; std::bad_cast::`vftable'
	DQ	FLAT:??_Ebad_cast@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 032401H
	DD	0700c4210H
	DD	0600bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 022701H
	DD	0700f5213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0f0H
	DB	02H
	DB	09aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z DD 033311H
	DD	012011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcName$1 DB 05fH ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcName$2 DB 05fH ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcVarDesc DD 068H ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcName$0
	ORG $+144
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcFrameData DD 03H ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@H@std@@YAPEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DB 040H
	DD	imagerel $ip2state$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 040H
	DD	imagerel $ip2state$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z DD 022301H
	DD	0700bb20fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcName$0 DB 05fH ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DB	055H
	DB	046H
	DB	069H
	DB	072H
	DB	073H
	DB	074H
	DB	00H
??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcName$1 DB 05fH ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+1
??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcVarDesc DD 048H ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DD	08H
	DQ	FLAT:??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcName$0
	ORG $+96
??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcFrameData DD 02H ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DD	00H
	DQ	FLAT:??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEB_N@std@@YAAEB_NAEB_N@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z DB 06H
	DB	00H
	DB	00H
	DB	'z'
	DB	02H
	DB	'u', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z
	DD	imagerel $ip2state$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ DB 040H
	DD	imagerel $ip2state$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z DD 032c01H
	DD	07011e215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z$rtcName$0 DB 05fH ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z$rtcVarDesc DD 038H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
	DD	018H
	DQ	FLAT:??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z$rtcName$0
	ORG $+48
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z$rtcFrameData DD 01H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
	DD	00H
	DQ	FLAT:??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z DB 08H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z
	DD	imagerel $ip2state$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z DD 022e01H
	DD	07010f217H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z DD 022c01H
	DD	070143218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0ccH
	DB	02H
	DB	088H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DD 022d11H
	DD	07015b219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z$rtcVarDesc DD 038H ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DB 040H
	DD	imagerel $ip2state$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z DB 040H
	DD	imagerel $ip2state$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 010a01H
	DD	0700aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'v'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z DB 048H
	DD	imagerel $stateUnwindMap$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z
	DD	imagerel $ip2state$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z$rtcName$0 DB 05fH ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>
	DB	046H
	DB	06eH
	DB	056H
	DB	061H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+8
??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z$rtcVarDesc DD 028H ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>
	DD	08H
	DQ	FLAT:??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z$rtcName$0
	ORG $+48
??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z$rtcFrameData DD 01H ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>
	DD	00H
	DQ	FLAT:??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 04H
	DB	00H
	DB	00H
	DB	0f2H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel $ip2state$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 022311H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z DD 022c01H
	DD	070143218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'r'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z
	DD	imagerel $ip2state$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z$rtcName$0 DB 05fH ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+9
??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc DD 038H ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DD	08H
	DQ	FLAT:??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z$rtcName$0
	ORG $+48
??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
	DD	00H
	DQ	FLAT:??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z DD 022701H
	DD	0700f3213H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z DB 06H
	DB	00H
	DB	00H
	DB	082H
	DB	02H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z DB 048H
	DD	imagerel $stateUnwindMap$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z
	DD	imagerel $ip2state$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z DB 06H
	DB	00H
	DB	00H
	DB	0d1H, 04H
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z DB 08H
	DD	imagerel $stateUnwindMap$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z
	DD	imagerel $ip2state$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z DD 042f11H
	DD	01d0118H
	DD	060107011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z$rtcName$0 DB 05fH ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>
	DB	04cH
	DB	06fH
	DB	063H
	DB	00H
	ORG $+11
??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z$rtcVarDesc DD 038H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>
	DD	018H
	DQ	FLAT:??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z$rtcName$0
	ORG $+48
??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z$rtcFrameData DD 01H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>
	DD	00H
	DQ	FLAT:??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DB 0aH
	DB	00H
	DB	00H
	DB	0a2H
	DB	02H
	DB	'*'
	DB	04H
	DB	05H, 06H
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DB 02H
	DB	00H
	DD	imagerel ?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DB 018H
	DD	imagerel $stateUnwindMap$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	imagerel $tryMap$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
	DD	imagerel $ip2state$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z DD 032e19H
	DD	0160117H
	DD	07010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcName$0 DB 05fH ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+4
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcName$1 DB 05fH ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	DB	04dH
	DB	065H
	DB	074H
	DB	061H
	DB	064H
	DB	065H
	DB	06cH
	DB	069H
	DB	06dH
	DB	00H
	ORG $+1
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcName$2 DB 05fH ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	DB	04dH
	DB	065H
	DB	074H
	DB	061H
	DB	00H
	ORG $+6
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcVarDesc DD 084H ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	DD	04H
	DQ	FLAT:??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcName$1
	DD	038H
	DD	010H
	DQ	FLAT:??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcName$0
	ORG $+144
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcFrameData DD 03H ; std::getline<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@_N@std@@YA$$QEA_NAEA_N@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAH@std@@YA$$QEAHAEAH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0 DB 05fH ; std::swap<EncodeStatus *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc DD 028H ; std::swap<EncodeStatus *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData DD 01H ; std::swap<EncodeStatus *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0 DB 05fH ; std::swap<RGYLog *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc DD 028H ; std::swap<RGYLog *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData DD 01H ; std::swap<RGYLog *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z$rtcName$0 DB 05fH ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >
	DB	050H
	DB	06eH
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+9
??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z$rtcVarDesc DD 028H ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >
	DD	08H
	DQ	FLAT:??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z$rtcName$0
	ORG $+48
??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z$rtcFrameData DD 01H ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >
	DD	00H
	DQ	FLAT:??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 040H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc DD 048H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DB 040H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z DD 022c01H
	DD	070143218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@D@std@@YAPEADAEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
	DD	imagerel $ip2state$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 022711H
	DD	0700f3213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z DD 033301H
	DD	012011cH
	DD	07015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	0a5H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	'Q', 04H
	DB	02H
	DB	099H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DB 06H
	DB	00H
	DB	00H
	DB	'M', 04H
	DB	02H
	DB	'}', 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DB 02H
	DB	00H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DB 018H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z DD 022e19H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'd'
	DB	02H
	DB	'M', 02H
	DB	04H
	DB	'v'
	DB	02H
	DB	'.'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
	DD	imagerel $ip2state$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z DD 032411H
	DD	012010dH
	DD	07006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$0 DB 05fH ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$1 DB 05fH ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	00H
	ORG $+1
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$2 DB 05fH ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DB	050H
	DB	073H
	DB	061H
	DB	076H
	DB	065H
	DB	05fH
	DB	067H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+3
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcVarDesc DD 078H ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DD	08H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcName$0
	ORG $+144
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcFrameData DD 03H ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
	DD	00H
	DQ	FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0f1H, 03H
	DB	02H
	DB	'B'
	DB	04H
	DB	095H, 08H
	DB	02H
	DB	'x'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	00H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 018H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 032919H
	DD	0120112H
	DD	0700bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 048H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z DD 021c01H
	DD	070051209H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 022d01H
	DD	07015b219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DB	050H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+10
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcVarDesc DD 038H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DD	08H
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcName$0
	ORG $+48
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcFrameData DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
	DD	00H
	DQ	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z DD 022201H
	DD	0700ab20eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 06H
	DB	00H
	DB	00H
	DB	0baH
	DB	04H
	DB	0f5H, 03H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 08H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 033b19H
	DD	0120112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	082H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$0 DB 05fH ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcVarDesc DD 028H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DD	028H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcName$0
	ORG $+48
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcFrameData DD 01H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	DD	00H
	DQ	FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 06H
	DB	00H
	DB	00H
	DB	'\'
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	084H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DB 08H
	DD	imagerel $stateUnwindMap$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	imagerel $ip2state$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 022311H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DB	00H
	DB	00H
	DB	0d4H
	DB	02H
	DB	'\'
	DB	04H
	DB	0b2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
	DD	imagerel $ip2state$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z DD 022711H
	DD	0700f5213H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z DB 040H
	DD	imagerel $ip2state$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	0fcH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
	DD	imagerel $ip2state$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z DD 022311H
	DD	0700bb20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z$rtcName$0 DB 05fH ; std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>
	DB	044H
	DB	065H
	DB	063H
	DB	061H
	DB	079H
	DB	05fH
	DB	063H
	DB	06fH
	DB	070H
	DB	069H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z$rtcVarDesc DD 038H ; std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>
	DD	08H
	DQ	FLAT:??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z$rtcName$0
	ORG $+48
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z$rtcFrameData DD 01H ; std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>
	DD	00H
	DQ	FLAT:??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z DD 011501H
	DD	07015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ DD 052401H
	DD	07009c20dH
	DD	050076008H
	DD	03006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z DB 040H
	DD	imagerel $ip2state$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z DD 022819H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$min@H@std@@YAAEBHAEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$min@H@std@@YAAEBHAEBH0@Z DB 040H
	DD	imagerel $ip2state$??$min@H@std@@YAAEBHAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@H@std@@YAAEBHAEBH0@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$min@H@std@@YAAEBHAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z DB 0cH
	DB	00H
	DB	00H
	DB	'f'
	DB	04H
	DB	0b8H
	DB	06H
	DB	0e0H
	DB	04H
	DB	016H
	DB	02H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z
	DD	imagerel $ip2state$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z DD 033311H
	DD	012011cH
	DD	07015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
	DB	053H
	DB	032H
	DB	032H
	DB	00H
	ORG $+3
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcName$1 DB 05fH ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcVarDesc DD 058H ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
	DD	010H
	DQ	FLAT:??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcName$0
	ORG $+96
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcFrameData DD 02H ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
	DD	00H
	DQ	FLAT:??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	'<'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
	DD	imagerel $ip2state$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z DD 022811H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z DB 06H
	DB	00H
	DB	00H
	DB	019H, 02H
	DB	04H
	DB	'D'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z DB 08H
	DD	imagerel $stateUnwindMap$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z
	DD	imagerel $ip2state$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z DD 022e11H
	DD	07010f217H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z$rtcName$0 DB 05fH ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z$rtcVarDesc DD 028H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>
	DD	010H
	DQ	FLAT:??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z$rtcName$0
	ORG $+48
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z$rtcFrameData DD 01H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>
	DD	00H
	DQ	FLAT:??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ DD 033619H
	DD	01a010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck
	DD	0c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+2
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcVarDesc DD 088H ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DD	08H
	DQ	FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcName$0
	ORG $+96
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcFrameData DD 02H ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
	DD	00H
	DQ	FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z DD 032e01H
	DD	0160117H
	DD	07010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DB	050H
	DB	062H
	DB	00H
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DB	050H
	DB	06eH
	DB	00H
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$2 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DB	04eH
	DB	072H
	DB	00H
	ORG $+4
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcVarDesc DD 088H ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DD	08H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$2
	DD	068H
	DD	08H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcName$0
	ORG $+144
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcFrameData DD 03H ; std::basic_filebuf<char,std::char_traits<char> >::_Init
	DD	00H
	DQ	FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
	DB	04fH
	DB	066H
	DB	066H
	DB	00H
	ORG $+11
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcVarDesc DD 028H ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
	DD	08H
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcName$0
	ORG $+48
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcFrameData DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
	DD	00H
	DQ	FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	070H
	DB	06fH
	DB	073H
	DB	069H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+2
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcVarDesc DD 028H ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
	DD	08H
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcName$0
	ORG $+48
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcFrameData DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
	DD	00H
	DQ	FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z DD 022b01H
	DD	07010d214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DB	043H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	05fH
	DB	073H
	DB	00H
	ORG $+7
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DB	041H
	DB	076H
	DB	061H
	DB	069H
	DB	06cH
	DB	061H
	DB	062H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+5
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcVarDesc DD 048H ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DD	08H
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcName$0
	ORG $+96
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcFrameData DD 02H ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
	DD	00H
	DQ	FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DB 016H
	DB	00H
	DB	00H
	DB	08dH, 04H
	DB	02H
	DB	'd'
	DB	00H
	DB	','
	DB	02H
	DB	09dH, 06H
	DB	00H
	DB	'&'
	DB	02H
	DB	'z'
	DB	00H
	DB	'&'
	DB	02H
	DB	018H
	DB	00H
	DB	'&'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DB 08H
	DD	imagerel $stateUnwindMap$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	imagerel $ip2state$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 033619H
	DD	02c010dH
	DD	07006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
	DD	0152H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	043H
	DB	068H
	DB	00H
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$2 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	053H
	DB	072H
	DB	063H
	DB	00H
	ORG $+3
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$3 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	043H
	DB	068H
	DB	00H
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$4 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+2
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc DD 0e8H ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DD	08H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$4
	DD	0c4H
	DD	01H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$3
	DD	0a8H
	DD	08H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$2
	DD	068H
	DD	028H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0
	ORG $+240
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData DD 05H ; std::basic_filebuf<char,std::char_traits<char> >::uflow
	DD	00H
	DQ	FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::underflow
	DB	04dH
	DB	065H
	DB	074H
	DB	061H
	DB	00H
	ORG $+10
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc DD 024H ; std::basic_filebuf<char,std::char_traits<char> >::underflow
	DD	04H
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcName$0
	ORG $+48
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData DD 01H ; std::basic_filebuf<char,std::char_traits<char> >::underflow
	DD	00H
	DQ	FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z DD 033a19H
	DD	0240111H
	DD	0700aH
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$0 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	053H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$1 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	043H
	DB	068H
	DB	00H
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$2 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	053H
	DB	072H
	DB	063H
	DB	00H
	ORG $+3
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$3 DB 05fH ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+6
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcVarDesc DD 0d8H ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DD	08H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$3
	DD	0b8H
	DD	08H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$2
	DD	094H
	DD	01H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$1
	DD	058H
	DD	020H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcName$0
	ORG $+192
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcFrameData DD 04H ; std::basic_filebuf<char,std::char_traits<char> >::overflow
	DD	00H
	DQ	FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DB 06H
	DB	00H
	DB	00H
	DB	'a', 02H
	DB	02H
	DB	'0'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DB 08H
	DD	imagerel $stateUnwindMap$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
	DD	imagerel $ip2state$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z DD 022d11H
	DD	070159219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'Z'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	'D'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
	DD	imagerel $ip2state$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	0e8H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
	DD	imagerel $ip2state$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DB 06H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
	DB	086H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
	DD	imagerel $ip2state$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c0H
	DB	02H
	DB	'b'
	DB	04H
	DB	0aeH
	DB	06H
	DB	0a0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
	DD	imagerel $ip2state$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z DD 022d11H
	DD	070155219H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ DD 021e11H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z DB 040H
	DD	imagerel $ip2state$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z DD 022819H
	DD	070107214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$less@H@std@@QEBA_NAEBH0@Z DD 022801H
	DD	070101214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	0deH
	DB	02H
	DB	'R'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DB 08H
	DD	imagerel $stateUnwindMap$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
	DD	imagerel $ip2state$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DD 022411H
	DD	07006f20dH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcName$0 DB 024H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy
	DB	053H
	DB	032H
	DB	031H
	DB	00H
	ORG $+3
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcName$1 DB 05fH ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcVarDesc DD 058H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy
	DD	010H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcName$0
	ORG $+96
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcFrameData DD 02H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy
	DD	00H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0a8H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DB 04H
	DB	00H
	DB	00H
	DB	0aeH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DB 048H
	DD	imagerel $stateUnwindMap$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
	DD	imagerel $ip2state$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006920aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
	DD	01H
	DQ	FLAT:??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
	DD	00H
	DQ	FLAT:??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	01H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	00H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@H@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRGYInput@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DB 040H
	DD	imagerel $ip2state$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?AddMessage@RGYInput@@QEAAXHPEBDZZ DB 06H
	DB	00H
	DB	00H
	DB	0fdH, 02H
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?AddMessage@RGYInput@@QEAAXHPEBDZZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?AddMessage@RGYInput@@QEAAXHPEBDZZ DB 08H
	DD	imagerel $stateUnwindMap$?AddMessage@RGYInput@@QEAAXHPEBDZZ
	DD	imagerel $ip2state$?AddMessage@RGYInput@@QEAAXHPEBDZZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddMessage@RGYInput@@QEAAXHPEBDZZ DD 034419H
	DD	014011bH
	DD	07014H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?AddMessage@RGYInput@@QEAAXHPEBDZZ
	DD	092H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$0 DB 061H	; RGYInput::AddMessage
	DB	072H
	DB	067H
	DB	073H
	DB	00H
	ORG $+3
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$1 DB 062H	; RGYInput::AddMessage
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcVarDesc DD 048H	; RGYInput::AddMessage
	DD	028H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcName$0
	ORG $+96
?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcFrameData DD 02H	; RGYInput::AddMessage
	DD	00H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 014H
	DB	00H
	DB	00H
	DB	'q', 02H
	DB	02H
	DB	'6'
	DB	06H
	DB	0c9H, 03H
	DB	08H
	DB	'j'
	DB	0aH
	DB	'h'
	DB	0cH
	DB	'|'
	DB	0aH
	DB	01cH
	DB	08H
	DB	01cH
	DB	06H
	DB	'$'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	05eH
	DD	imagerel ?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	imagerel $ip2state$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z DD 033f19H
	DD	02e0116H
	DD	0700fH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
	DD	0162H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0 DB 06cH ; RGYInput::AddMessage
	DB	069H
	DB	06eH
	DB	065H
	DB	073H
	DB	00H
	ORG $+10
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc DD 028H ; RGYInput::AddMessage
	DD	020H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcName$0
	ORG $+48
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData DD 01H ; RGYInput::AddMessage
	DD	00H
	DQ	FLAT:?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetDataTrackCount@RGYInput@@UEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSubtitleTrackCount@RGYInput@@UEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetAudioTrackCount@RGYInput@@UEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GRGYConvertCSP@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z$rtcName$0 DB 05fH ; std::vector<void *,std::allocator<void *> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z$rtcVarDesc DD 024H ; std::vector<void *,std::allocator<void *> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z$rtcFrameData DD 01H ; std::vector<void *,std::allocator<void *> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ DB 040H
	DD	imagerel $ip2state$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
	DB	053H
	DB	033H
	DB	00H
	ORG $+12
??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAX@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z$rtcName$0 DB 05fH ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z$rtcVarDesc DD 024H ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z$rtcFrameData DD 01H ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
	DB	053H
	DB	034H
	DB	00H
	ORG $+12
??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	0faH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z DB 08H
	DD	imagerel $stateUnwindMap$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z
	DD	imagerel $ip2state$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z DD 022811H
	DD	070109214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z$rtcName$0 DB 05fH ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z$rtcVarDesc DD 024H ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z$rtcFrameData DD 01H ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z DD 022d01H
	DD	070159219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z DD 022d01H
	DD	070153219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DB 040H
	DD	imagerel $ip2state$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
	DD	01H
	DQ	FLAT:??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
	DD	00H
	DQ	FLAT:??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@Vthread@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
CONST	SEGMENT
	ORG $+2
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$0 DB 073H ; read_keyfile
	DB	00H
	ORG $+2
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$1 DB 069H ; read_keyfile
	DB	066H
	DB	073H
	DB	00H
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$2 DB 062H ; read_keyfile
	DB	075H
	DB	066H
	DB	066H
	DB	00H
	ORG $+3
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcVarDesc DD 0198H ; read_keyfile
	DD	028H
	DQ	FLAT:?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$2
	DD	070H
	DD	0110H
	DQ	FLAT:?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$1
	DD	038H
	DD	018H
	DQ	FLAT:?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcName$0
	ORG $+144
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcFrameData DD 03H ; read_keyfile
	DD	00H
	DQ	FLAT:?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcVarDesc
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcName$0 DB 06dH ; RGYConvertCSP::run
	DB	061H
	DB	078H
	DB	00H
?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z$rtcName$0 DB 073H ; RGYInput::CreateInputInfo
	DB	073H
	DB	00H
	ORG $+1
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcName$1 DB 068H ; RGYConvertCSP::run
	DB	065H
	DB	053H
	DB	074H
	DB	061H
	DB	072H
	DB	074H
	DB	00H
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcName$2 DB 068H ; RGYConvertCSP::run
	DB	065H
	DB	046H
	DB	069H
	DB	06eH
	DB	00H
	ORG $+2
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcFrameData DD 03H ; RGYConvertCSP::run
	DD	00H
	DQ	FLAT:?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcVarDesc
	ORG $+8
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcVarDesc DD 0138H ; RGYConvertCSP::run
	DD	08H
	DQ	FLAT:?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcName$2
	DD	0118H
	DD	08H
	DQ	FLAT:?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcName$1
	DD	074H
	DD	04H
	DQ	FLAT:?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcName$0
	ORG $+144
?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z$rtcVarDesc DD 030H ; RGYInput::CreateInputInfo
	DD	0f8H
	DQ	FLAT:?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z$rtcName$0
	ORG $+48
?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z$rtcFrameData DD 01H ; RGYInput::CreateInputInfo
	DD	00H
	DQ	FLAT:?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DB	053H
	DB	036H
	DB	00H
	ORG $+12
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	01H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
	DD	00H
	DQ	FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	' '
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
	DD	imagerel $ip2state$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ DD 021e11H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DB 040H
	DD	imagerel $ip2state$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z DD 032901H
	DD	07011a215H
	DD	06010H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0 DB 05fH ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DB	04fH
	DB	06cH
	DB	064H
	DB	05fH
	DB	076H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+7
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc DD 028H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	010H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcName$0
	ORG $+48
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData DD 01H ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
	DD	00H
	DQ	FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gthread@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 031f01H
	DD	07007820bH
	DD	06006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?joinable@thread@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0thread@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0thread@std@@QEAA@$$QEAV01@@Z DB 040H
	DD	imagerel $ip2state$??0thread@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0thread@std@@QEAA@$$QEAV01@@Z DD 032419H
	DD	0700ca210H
	DD	0600bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0thread@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getLogLevel@RGYLog@@QEAAHXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sTrimParam@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1sTrimParam@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sTrimParam@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1sTrimParam@@QEAA@XZ
	DD	imagerel $ip2state$??1sTrimParam@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sTrimParam@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sTrimParam@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sTrimParam@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sTrimParam@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sTrimParam@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0sTrimParam@@QEAA@XZ
	DD	imagerel $ip2state$??0sTrimParam@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sTrimParam@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sTrimParam@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
	DB	053H
	DB	037H
	DB	00H
	ORG $+12
??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
	DD	01H
	DQ	FLAT:??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
	DD	00H
	DQ	FLAT:??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DB 040H
	DD	imagerel $ip2state$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UsTrim@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VideoInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 04H
	DB	00H
	DB	00H
	DB	0aaH
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z DD 022811H
	DD	070105214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0a0H
	DB	04H
	DB	01H, 02H
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	imagerel $ip2state$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z DD 023d19H
	DD	07010f217H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
	DD	072H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0 DB 05fH ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DB	041H
	DB	06eH
	DB	073H
	DB	00H
	ORG $+11
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc DD 028H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	028H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcName$0
	ORG $+48
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData DD 01H ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0VideoVUIInfo@@QEAA@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspColorprimList@@YAXXZ DD 042b19H
	DD	023010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z DD 033d19H
	DD	07016821aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspTransferList@@YAXXZ DD 042b19H
	DD	02b010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	048H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??__ECspMatrixList@@YAXXZ DD 042b19H
	DD	029010aH
	DD	060027003H
	DD	imagerel __GSHandlerCheck
	DD	0130H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z DD 033d19H
	DD	07016a21aH
	DD	06015H
	DD	imagerel __GSHandlerCheck
	DD	040H
xdata	ENDS
xdata	SEGMENT
$unwind$?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z DD 022301H
	DD	0700b520fH
$unwind$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DD 033b19H
	DD	0500112H
	DD	0700bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	027bH
$cppxdata$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 018H
	DD	imagerel $stateUnwindMap$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	imagerel $tryMap$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
	DD	imagerel $ip2state$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
$stateUnwindMap$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 012H
	DB	0eH
	DD	imagerel ?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	028H
	DB	030H
	DB	066H
	DD	imagerel ?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$tryMap$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 02H
	DB	0aH
	DB	0aH
	DB	0cH
	DD	imagerel $handlerMap$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z
$handlerMap$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB 02H
	DB	00H
	DD	imagerel ?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA
$ip2state$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z DB '$'
	DB	00H
	DB	00H
	DB	08cH
	DB	04H
	DB	016H
	DB	06H
	DB	'N'
	DB	08H
	DB	'F'
	DB	0aH
	DB	0baH
	DB	0cH
	DB	088H
	DB	0aH
	DB	04H
	DB	08H
	DB	01cH
	DB	06H
	DB	016H
	DB	04H
	DB	016H
	DB	02H
	DB	'4'
	DB	0aH
	DB	0aH
	DB	08H
	DB	0d8H
	DB	010H
	DB	'T'
	DB	08H
	DB	'r'
	DB	06H
	DB	016H
	DB	04H
	DB	016H
	DB	02H
$cppxdata$??0RGYConvertCSP@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0RGYConvertCSP@@QEAA@XZ
	DD	imagerel $ip2state$??0RGYConvertCSP@@QEAA@XZ
$cppxdata$??0RGYConvertCSP@@QEAA@H@Z DB 08H
	DD	imagerel $stateUnwindMap$??0RGYConvertCSP@@QEAA@H@Z
	DD	imagerel $ip2state$??0RGYConvertCSP@@QEAA@H@Z
$unwind$?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c6210H
	DD	0500bH
$unwind$?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??0RGYConvertCSPPrm@@QEAA@XZ DD 010601H
	DD	07006H
$unwind$??0RGYConvertCSP@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RGYConvertCSP@@QEAA@XZ
$stateUnwindMap$??0RGYConvertCSP@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA
$ip2state$??0RGYConvertCSP@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
$stateUnwindMap$??0RGYConvertCSP@@QEAA@H@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA
$ip2state$??0RGYConvertCSP@@QEAA@H@Z DB 0cH
	DB	00H
	DB	00H
	DB	0daH
	DB	02H
	DB	'$'
	DB	04H
	DB	'$'
	DB	06H
	DB	'$'
	DB	08H
	DB	'('
	DB	00H
$cppxdata$??1RGYConvertCSP@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1RGYConvertCSP@@QEAA@XZ
	DD	imagerel $ip2state$??1RGYConvertCSP@@QEAA@XZ
$unwind$?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??0RGYConvertCSP@@QEAA@H@Z DD 022211H
	DD	0700a320eH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RGYConvertCSP@@QEAA@H@Z
$unwind$?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1RGYConvertCSP@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1RGYConvertCSP@@QEAA@XZ
$stateUnwindMap$??1RGYConvertCSP@@QEAA@XZ DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA
$ip2state$??1RGYConvertCSP@@QEAA@XZ DB 0cH
	DB	00H
	DB	00H
	DB	'<'
	DB	08H
	DB	011H, 04H
	DB	06H
	DB	'$'
	DB	04H
	DB	'$'
	DB	02H
	DB	'$'
	DB	00H
$cppxdata$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z DB 08H
	DD	imagerel $stateUnwindMap$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z
	DD	imagerel $ip2state$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z
$unwind$?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z DD 022c01H
	DD	070143218H
$unwind$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z DD 044519H
	DD	04f011cH
	DD	060147015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z
	DD	026aH
$stateUnwindMap$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA
$ip2state$?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z DB 0eH
	DB	00H
	DB	00H
	DB	'U', 08H
	DB	02H
	DB	'R'
	DB	04H
	DB	0f5H, 02H
	DB	06H
	DB	':'
	DB	04H
	DB	05H, 02H
	DB	02H
	DB	01cH
	DB	00H
$cppxdata$??0RGYInput@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0RGYInput@@QEAA@XZ
	DD	imagerel $ip2state$??0RGYInput@@QEAA@XZ
$ip2state$??0RGYInput@@QEAA@XZ DB 010H
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	096H
	DB	04H
	DB	'('
	DB	06H
	DB	'('
	DB	08H
	DB	'6'
	DB	0aH
	DB	'V'
	DB	0cH
	DB	'x'
	DB	00H
$unwind$?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??0RGYInput@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RGYInput@@QEAA@XZ
$stateUnwindMap$??0RGYInput@@QEAA@XZ DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA
$cppxdata$??1RGYInput@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1RGYInput@@UEAA@XZ
	DD	imagerel $ip2state$??1RGYInput@@UEAA@XZ
$unwind$?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$??1RGYInput@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1RGYInput@@UEAA@XZ
$stateUnwindMap$??1RGYInput@@UEAA@XZ DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA
	DB	02eH
	DD	imagerel ?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA
$ip2state$??1RGYInput@@UEAA@XZ DB 010H
	DB	00H
	DB	00H
	DB	'Z'
	DB	0cH
	DB	016H
	DB	0aH
	DB	'('
	DB	08H
	DB	'('
	DB	06H
	DB	'('
	DB	04H
	DB	'('
	DB	02H
	DB	'('
	DB	00H
$unwind$?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?Close@RGYInput@@UEAAXXZ DD 021e01H
	DD	07006320aH
$unwind$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z DD 034519H
	DD	030011cH
	DD	07015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z
	DD	017aH
$cppxdata$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z DB 08H
	DD	imagerel $stateUnwindMap$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z
	DD	imagerel $ip2state$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z
$stateUnwindMap$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA
$ip2state$?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0b6H
	DB	02H
	DB	'A', 06H
	DB	04H
	DB	'>'
	DB	02H
	DB	01cH
	DB	00H
$unwind$?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
$unwind$?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Rhandle_deleter@@QEBAXPEAX@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_tcscmp DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_tree_length_error@std@@YAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z DD 022201H
	DD	0700a520eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z$rtcName$0 DB 05fH ; std::stoi
	DB	045H
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+10
?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z$rtcVarDesc DD 038H ; std::stoi
	DD	08H
	DQ	FLAT:?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z$rtcName$0
	ORG $+48
?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z$rtcFrameData DD 01H ; std::stoi
	DD	00H
	DQ	FLAT:?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z DD 022301H
	DD	0700b720fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1locale@std@@QEAA@XZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_cast@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_cast@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_cast@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_cast@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_cast@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_cast@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_cast@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_cast@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_cast@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_cast@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_cast@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_cast@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_cast@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_cast@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_cast@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_cast@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'l'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_cast@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_cast@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_cast@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_cast@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_cast@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_cast@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 021e01H
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 021e01H
	DD	07006b20aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 040H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z DD 022201H
	DD	0700a720eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DB 040H
	DD	imagerel $ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DB 040H
	DD	imagerel $ip2state$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 022801H
	DD	070109214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'<'
	DB	02H
	DB	0aeH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e11H
	DD	07006920aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	036H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 034H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 040H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 040H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 022301H
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	09cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'~'
	DB	02H
	DB	'~'
	DB	04H
	DB	'Z'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 08H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 022911H
	DD	0700bf212H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	038H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 058H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'v'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 022319H
	DD	0700b520fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'b'
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 021e19H
	DD	07006520aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z DD 022801H
	DD	070105214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ DD 021501H
	DD	070023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	'4'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 08H
	DD	imagerel $stateUnwindMap$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
	DD	imagerel $ip2state$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 022801H
	DD	070103214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z DD 021e01H
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z DD 022301H
	DD	0700b120fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DB 040H
	DD	imagerel $ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 040H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 022819H
	DD	070103214H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 040H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 040H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	088H
	DB	00H
	DB	'>'
	DB	04H
	DB	01cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
	DB	036H
	DD	imagerel ?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 022619H
	DD	0700bd20fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 054H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	034H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'^'
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1_Iterator_base12@std@@QEAA@XZ
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d2H
	DB	02H
	DB	016H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::operator=
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::operator=
	DD	04H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0
	ORG $+48
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::operator=
	DD	00H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'h'
	DB	02H
	DB	0c0H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 048H
	DD	imagerel $stateUnwindMap$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 022319H
	DD	0700b720fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	't'
	DB	02H
	DB	0a6H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 048H
	DD	imagerel $stateUnwindMap$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 021e19H
	DD	07006720aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 010601H
	DD	07006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 022301H
	DD	0700b920fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 021e01H
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 021501H
	DD	070027206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_array_new_length@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_array_new_length@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_array_new_length@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	'`'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??0bad_array_new_length@std@@QEAA@XZ
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	'f'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??1bad_alloc@std@@UEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1bad_alloc@std@@UEAA@XZ DB 048H
	DD	imagerel $stateUnwindMap$??1bad_alloc@std@@UEAA@XZ
	DD	imagerel $ip2state$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 021e11H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1bad_alloc@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	'r'
	DB	02H
	DB	01eH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 048H
	DD	imagerel $stateUnwindMap$??0bad_alloc@std@@AEAA@QEBD@Z
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 022311H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 022201H
	DD	0700a320eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 021e01H
	DD	07006120aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 040H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 021e19H
	DD	07006320aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 040H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 022319H
	DD	0700b320fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 011001H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf DD 022301H
	DD	0700b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vscprintf_l DD 022801H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsprintf_s DD 022d01H
	DD	070155219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_s_l DD 022d01H
	DD	070157219H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$__local_stdio_printf_options DD 010201H
	DD	07002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 010b01H
	DD	0700bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 010601H
	DD	07006H
xdata	ENDS
CRT$XCU	SEGMENT
?CspTransferList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspTransferList@@YAXXZ ; CspTransferList$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?CspColorprimList$initializer$@@3P6AXXZEA DQ FLAT:??__ECspColorprimList@@YAXXZ ; CspColorprimList$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor', COMDAT
  00000	48 63 41 fc	 movsxd	 rax, DWORD PTR [rcx-4]
  00004	48 2b c8	 sub	 rcx, rax
  00007	e9 00 00 00 00	 jmp	 ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu
;	COMDAT ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z
_TEXT	SEGMENT
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
  00000	48 63 41 fc	 movsxd	 rax, DWORD PTR [rcx-4]
  00004	48 2b c8	 sub	 rcx, rax
  00007	e9 00 00 00 00	 jmp	 ??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
??_E?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 04 00 00 00	 mov	 ecx, 4
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	8b 00		 mov	 eax, DWORD PTR [rax]
  0004d	89 01		 mov	 DWORD PTR [rcx], eax

; 759  :     }

  0004f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBH@std@@YAAEBHAEBH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBH@std@@YAAEBHAEBH@Z PROC			; std::forward<int const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBH@std@@YAAEBHAEBH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@H@std@@YAPEAHPEAH@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@H@std@@YAPEAHPEAH@Z PROC			; std::_Unfancy<int>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@H@std@@YAPEAHPEAH@Z ENDP			; std::_Unfancy<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z PROC ; std::forward<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z ENDP ; std::forward<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
this$ = 64
_Arg$ = 72
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::_Tuple_val<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::_Tuple_val<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><<lambda_7d02ae0d862af7151d39e7a5bd162218> >, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 0a 00 00 00	 mov	 ecx, 10
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00024	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Arg$[rsp]
  00029	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  0002e	48 8b 7c 24 40	 mov	 rdi, QWORD PTR this$[rsp]
  00033	48 8b f0	 mov	 rsi, rax
  00036	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  0003b	f3 a4		 rep movsb

; 156  :     }

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5e		 pop	 rsi
  00048	c3		 ret	 0
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::_Tuple_val<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::_Tuple_val<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><<lambda_7d02ae0d862af7151d39e7a5bd162218> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 214  :     constexpr tuple(_Tag) noexcept { // strengthened, construct from one arg per element

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi

; 215  :     }

  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int const &>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@H@std@@YAPEAHPEAH@Z ; std::_Unfancy<int>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@HAEBH@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SAXAEAV?$allocator@H@1@QEAHAEBH@Z ; std::_Default_allocator_traits<std::allocator<int> >::construct<int,int const &>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 04	 add	 rax, 4
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1><std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@YAAEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@@Z ; std::forward<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1><std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
_This_arg$ = 80
??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><std::_Exact_args_t,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>, COMDAT

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00027	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  0002c	48 8b f8	 mov	 rdi, rax
  0002f	33 c0		 xor	 eax, eax
  00031	b9 01 00 00 00	 mov	 ecx, 1
  00036	f3 aa		 rep stosb
  00038	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00047	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  00051	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00056	48 8b d0	 mov	 rdx, rax
  00059	e8 00 00 00 00	 call	 ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@?$_Tuple_val@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::_Tuple_val<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::_Tuple_val<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><<lambda_7d02ae0d862af7151d39e7a5bd162218> >

; 243  :     }

  0005e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><std::_Exact_args_t,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_Backout$6 = 104
_First$ = 160
_Last$ = 168
_Dest$ = 176
_Al$ = 184
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

  00033	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _First$[rsp]
  0003b	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>
  00040	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00043	48 89 44 24 28	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

  00048	48 8d 8c 24 a8
	00 00 00	 lea	 rcx, QWORD PTR _Last$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>
  00055	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00058	48 89 44 24 48	 mov	 QWORD PTR _ULast$[rsp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1611 :         _Dest += _ULast - _UFirst;
; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0005d	4c 8b 84 24 b8
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00065	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0006d	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Backout$6[rsp]
  00072	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@PEAHAEAV?$allocator@H@1@@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Uninitialized_backout_al<std::allocator<int> >
  00077	90		 npad	 1

; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {

  00078	eb 0a		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0007a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _UFirst$[rsp]
  0007f	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator++
$LN4@Uninitiali:
  00084	48 8d 54 24 48	 lea	 rdx, QWORD PTR _ULast$[rsp]
  00089	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _UFirst$[rsp]
  0008e	e8 00 00 00 00	 call	 ??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator!=
  00093	0f b6 c0	 movzx	 eax, al
  00096	85 c0		 test	 eax, eax
  00098	74 19		 je	 SHORT $LN3@Uninitiali

; 1616 :             _Backout._Emplace_back(*_UFirst);

  0009a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _UFirst$[rsp]
  0009f	e8 00 00 00 00	 call	 ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator*
  000a4	48 8b d0	 mov	 rdx, rax
  000a7	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Backout$6[rsp]
  000ac	e8 00 00 00 00	 call	 ??$_Emplace_back@AEBH@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAXAEBH@Z ; std::_Uninitialized_backout_al<std::allocator<int> >::_Emplace_back<int const &>

; 1617 :         }

  000b1	eb c7		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1618 : 
; 1619 :         _Dest = _Backout._Release();

  000b3	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Backout$6[rsp]
  000b8	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::_Uninitialized_backout_al<std::allocator<int> >::_Release
  000bd	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR _Dest$[rsp], rax

; 1620 :     }

  000c5	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Backout$6[rsp]
  000ca	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >

; 1621 : 
; 1622 :     return _Dest;

  000cf	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR _Dest$[rsp]

; 1623 : }

  000d7	48 8b f8	 mov	 rdi, rax
  000da	48 8b cc	 mov	 rcx, rsp
  000dd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z$rtcFrameData
  000e4	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e9	48 8b c7	 mov	 rax, rdi
  000ec	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  000f3	5f		 pop	 rdi
  000f4	c3		 ret	 0
??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_Backout$6 = 104
_First$ = 160
_Last$ = 168
_Dest$ = 176
_Al$ = 184
?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR _Backout$6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 40
_ULast$ = 72
_Backout$6 = 104
_First$ = 160
_Last$ = 168
_Dest$ = 176
_Al$ = 184
?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA PROC ; `std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR _Backout$6[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@H@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<int> >::~_Uninitialized_backout_al<std::allocator<int> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z
_TEXT	SEGMENT
_It$ = 16
??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z PROC ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>, COMDAT

; 263  : _NODISCARD constexpr const _Iter& _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 264  :     // (don't) unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 265  :     return _It;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _It$[rsp]

; 266  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z ENDP ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z PROC ; std::_Adl_verify_range<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);
; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<int,void *> *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z PROC ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<int,void *> *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<int,void *> * &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::construct<int,int>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 04 00 00 00	 mov	 ecx, 4
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	8b 00		 mov	 eax, DWORD PTR [rax]
  0004d	89 01		 mov	 DWORD PTR [rcx], eax

; 759  :     }

  0004f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_Tree_node<int,void *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Tree_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z
_TEXT	SEGMENT
_Result$ = 48
_Pred$ = 80
_Left$ = 88
_Right$ = 96
??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z PROC ; std::_Debug_lt_pred<std::less<int> const &,int const &,int const &,0>, COMDAT

; 617  :     _NOEXCEPT_COND(noexcept(_Pred(_Left, _Right)) && noexcept(_Pred(_Right, _Left))) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 618  :     // test if _Pred(_Left, _Right) and _Pred is strict weak ordering, when the arguments are the cv-same-type
; 619  :     const auto _Result = static_cast<bool>(_Pred(_Left, _Right));

  00028	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Right$[rsp]
  0002d	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Left$[rsp]
  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Pred$[rsp]
  00037	e8 00 00 00 00	 call	 ??R?$less@H@std@@QEBA_NAEBH0@Z ; std::less<int>::operator()
  0003c	88 44 24 30	 mov	 BYTE PTR _Result$[rsp], al

; 620  :     if (_Result) {

  00040	0f b6 44 24 30	 movzx	 eax, BYTE PTR _Result$[rsp]
  00045	85 c0		 test	 eax, eax
  00047	0f 84 92 00 00
	00		 je	 $LN8@Debug_lt_p
$LN4@Debug_lt_p:

; 621  :         _STL_VERIFY(!_Pred(_Right, _Left), "invalid comparator");

  0004d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Left$[rsp]
  00052	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Right$[rsp]
  00057	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Pred$[rsp]
  0005c	e8 00 00 00 00	 call	 ??R?$less@H@std@@QEBA_NAEBH0@Z ; std::less<int>::operator()
  00061	0f b6 c0	 movzx	 eax, al
  00064	85 c0		 test	 eax, eax
  00066	75 02		 jne	 SHORT $LN9@Debug_lt_p
  00068	eb 6b		 jmp	 SHORT $LN10@Debug_lt_p
$LN9@Debug_lt_p:
$LN7@Debug_lt_p:
  0006a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00071	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00076	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0007d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00082	45 33 c9	 xor	 r9d, r9d
  00085	41 b8 6d 02 00
	00		 mov	 r8d, 621		; 0000026dH
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@GDKIGMBO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00092	b9 02 00 00 00	 mov	 ecx, 2
  00097	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0009d	83 f8 01	 cmp	 eax, 1
  000a0	75 03		 jne	 SHORT $LN12@Debug_lt_p
  000a2	cc		 int	 3
  000a3	33 c0		 xor	 eax, eax
$LN12@Debug_lt_p:
  000a5	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ae	41 b9 6d 02 00
	00		 mov	 r9d, 621		; 0000026dH
  000b4	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@OIIHGCJJ@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
  000c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000cf	33 c0		 xor	 eax, eax
  000d1	85 c0		 test	 eax, eax
  000d3	75 95		 jne	 SHORT $LN7@Debug_lt_p
$LN10@Debug_lt_p:
  000d5	33 c0		 xor	 eax, eax
  000d7	85 c0		 test	 eax, eax
  000d9	0f 85 6e ff ff
	ff		 jne	 $LN4@Debug_lt_p
$LN8@Debug_lt_p:

; 622  :     }
; 623  : 
; 624  :     return _Result;

  000df	0f b6 44 24 30	 movzx	 eax, BYTE PTR _Result$[rsp]

; 625  : }

  000e4	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000e8	5f		 pop	 rdi
  000e9	c3		 ret	 0
??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z ENDP ; std::_Debug_lt_pred<std::less<int> const &,int const &,int const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z PROC ; std::forward<std::_Facet_base * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ENDP ; std::forward<std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Tree_node<int,void *> *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Tree_node<int,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z
_TEXT	SEGMENT
__formal$ = 16
_Ptr$ = 24
??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::destroy<int>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 763  :         _Ptr->~_Uty();
; 764  :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@H@std@@YAPEAHAEAH@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@H@std@@YAPEAHAEAH@Z PROC			; std::addressof<int>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@H@std@@YAPEAHAEAH@Z ENDP			; std::addressof<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<std::thread>, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 10	 add	 rax, 16
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::thread> >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z PROC ; std::_Get_unwrapped<std::thread>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z ENDP ; std::_Get_unwrapped<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
_TEXT	SEGMENT
tv64 = 32
this$ = 64
<_Vals_0>$ = 72
??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back<std::unique_ptr<void,handle_deleter> >, COMDAT

; 1580 :     void _Emplace_back(_Types&&... _Vals) { // construct a new element at *_Last and increment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1581 :         allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
  0002d	48 89 44 24 20	 mov	 QWORD PTR tv64[rsp], rax
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv64[rsp]
  00045	4c 8b c1	 mov	 r8, rcx
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00054	e8 00 00 00 00	 call	 ??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::construct<std::unique_ptr<void,handle_deleter>,std::unique_ptr<void,handle_deleter> >

; 1582 :         ++_Last;

  00059	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1583 :     }

  0006f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Release, COMDAT

; 1585 :     pointer _Release() { // suppress any exception handling backout and return _Last

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1586 :         _First = _Last;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00010	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00014	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1587 :         return _Last;

  00017	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1588 :     }

  00020	5f		 pop	 rdi
  00021	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 1575 :     ~_Uninitialized_backout_al() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1576 :         _Destroy_range(_First, _Last, _Al);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  00027	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::unique_ptr<void,handle_deleter> > >

; 1577 :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Dest$ = 24
_Al_$ = 32
??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 1570 :     _Uninitialized_backout_al(pointer _Dest, _Alloc& _Al_) : _First(_Dest), _Last(_Dest), _Al(_Al_) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00027	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  0002b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00035	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00039	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z PROC ; std::_Get_unwrapped<std::unique_ptr<void,handle_deleter> >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z ENDP ; std::_Get_unwrapped<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z
_TEXT	SEGMENT
_First_ch$ = 32
_Last_ch$ = 40
_Dest_ch$ = 48
_Count$ = 56
_First$ = 80
_Last$ = 88
_Dest$ = 96
??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z PROC ; std::_Copy_memmove<void * *,void * *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _First$[rsp]
  0002d	48 89 44 24 20	 mov	 QWORD PTR _First_ch$[rsp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  00032	48 8b 44 24 58	 mov	 rax, QWORD PTR _Last$[rsp]
  00037	48 89 44 24 28	 mov	 QWORD PTR _Last_ch$[rsp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  0003c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Dest$[rsp]
  00041	48 89 44 24 30	 mov	 QWORD PTR _Dest_ch$[rsp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR _First_ch$[rsp]
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Last_ch$[rsp]
  00050	48 2b c8	 sub	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 89 44 24 38	 mov	 QWORD PTR _Count$[rsp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  0005b	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00060	48 8b 54 24 20	 mov	 rdx, QWORD PTR _First_ch$[rsp]
  00065	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  0006a	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  0006f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Count$[rsp]
  00074	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Dest_ch$[rsp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx

; 1746 : }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z ENDP ; std::_Copy_memmove<void * *,void * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z PROC	; std::_Get_unwrapped<void *>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 276  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 277  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z ENDP	; std::_Get_unwrapped<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_Tree_node<int,void *> * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_Tree_node<int,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_Tree_node<int,void *> *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_Tree_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z PROC ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<int,void *>::_Freenode<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 379  :     static void _Freenode(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 380  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode call");
; 381  :         allocator_traits<_Alloc>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 83 c0 1c	 add	 rax, 28
  0002c	48 8b c8	 mov	 rcx, rax
  0002f	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPEAHAEAH@Z ; std::addressof<int>
  00034	90		 npad	 1
  00035	48 8b d0	 mov	 rdx, rax
  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0003d	e8 00 00 00 00	 call	 ??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::destroy<int>
  00042	90		 npad	 1

; 382  :         _Freenode0(_Al, _Ptr);

  00043	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00048	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0004d	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<int,void *>::_Freenode0<std::allocator<std::_Tree_node<int,void *> > >
  00052	90		 npad	 1

; 383  :     }

  00053	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<int,void *>::_Freenode<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z PROC ; std::exchange<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z ENDP ; std::exchange<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
_Obj$ = 48
??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::invoke<<lambda_7d02ae0d862af7151d39e7a5bd162218> >, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00023	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::_Invoker_functor::_Call<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::invoke<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
_Obj$ = 48
??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::_Invoker_functor::_Call<<lambda_7d02ae0d862af7151d39e7a5bd162218> >, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00023	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ ; <lambda_7d02ae0d862af7151d39e7a5bd162218>::operator()
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??$_Call@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::_Invoker_functor::_Call<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z PROC ; std::move<<lambda_7d02ae0d862af7151d39e7a5bd162218> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ENDP ; std::move<<lambda_7d02ae0d862af7151d39e7a5bd162218> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 16
??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z PROC ; std::get<0,<lambda_7d02ae0d862af7151d39e7a5bd162218> >, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Tuple$[rsp]

; 652  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z ENDP ; std::get<0,<lambda_7d02ae0d862af7151d39e7a5bd162218> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z PROC ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > ><std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1>::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1><std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ENDP ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > ><std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_This_arg$ = 72
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 01 00 00 00	 mov	 ecx, 1
  00032	f3 aa		 rep stosb
  00034	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _This_arg$[rsp]
  00039	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  0003e	90		 npad	 1
  0003f	4c 8b c0	 mov	 r8, rax
  00042	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><std::_Exact_args_t,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>
  00051	90		 npad	 1
  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z PROC		; std::forward<void * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z ENDP		; std::forward<void * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z PROC ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V?$allocator@H@2@@std@@YAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_copy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::allocator<int> >

; 1545 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z ENDP ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3527 :         if (_Target) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 0d		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00031	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z
_TEXT	SEGMENT
_UFirst$5 = 40
_ULast$6 = 72
_Off$7 = 88
_First$ = 112
_Last$ = 120
??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z PROC ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 18 00 00 00	 mov	 ecx, 24
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking
; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);

  00023	48 8d 54 24 78	 lea	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@V12@@std@@YAXAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::_Adl_verify_range<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >

; 786  :         auto _UFirst             = _Get_unwrapped(_First);

  00032	48 8d 4c 24 70	 lea	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 28	 mov	 QWORD PTR _UFirst$5[rsp], rax

; 787  :         const auto _ULast        = _Get_unwrapped(_Last);

  00044	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Last$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@$0A@@std@@YAAEBV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV10@@Z ; std::_Get_unwrapped<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>,0>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 44 24 48	 mov	 QWORD PTR _ULast$6[rsp], rax

; 788  :         _Iter_diff_t<_InIt> _Off = 0;

  00056	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR _Off$7[rsp], 0

; 789  :         for (; _UFirst != _ULast; ++_UFirst) {

  0005f	eb 0a		 jmp	 SHORT $LN4@distance
$LN2@distance:
  00061	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _UFirst$5[rsp]
  00066	e8 00 00 00 00	 call	 ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator++
$LN4@distance:
  0006b	48 8d 54 24 48	 lea	 rdx, QWORD PTR _ULast$6[rsp]
  00070	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _UFirst$5[rsp]
  00075	e8 00 00 00 00	 call	 ??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator!=
  0007a	0f b6 c0	 movzx	 eax, al
  0007d	85 c0		 test	 eax, eax
  0007f	74 0f		 je	 SHORT $LN3@distance

; 790  :             ++_Off;

  00081	48 8b 44 24 58	 mov	 rax, QWORD PTR _Off$7[rsp]
  00086	48 ff c0	 inc	 rax
  00089	48 89 44 24 58	 mov	 QWORD PTR _Off$7[rsp], rax

; 791  :         }

  0008e	eb d1		 jmp	 SHORT $LN2@distance
$LN3@distance:

; 792  : 
; 793  :         return _Off;

  00090	48 8b 44 24 58	 mov	 rax, QWORD PTR _Off$7[rsp]

; 794  :     }
; 795  : }

  00095	48 8b f8	 mov	 rdi, rax
  00098	48 8b cc	 mov	 rcx, rsp
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z$rtcFrameData
  000a2	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a7	48 8b c7	 mov	 rax, rdi
  000aa	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000ae	5f		 pop	 rdi
  000af	c3		 ret	 0
??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z ENDP ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z PROC ; std::forward<std::allocator<int> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ENDP ; std::forward<std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEB_N@std@@YAAEB_NAEB_N@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEB_N@std@@YAAEB_NAEB_N@Z PROC		; std::forward<bool const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEB_N@std@@YAAEB_NAEB_N@Z ENDP		; std::forward<bool const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> *,bool,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@PEAU?$_Tree_node@HPEAX@std@@@std@@YA$$QEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<int,void *> *>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0004f	88 41 08	 mov	 BYTE PTR [rcx+8], al
  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> *,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z
_TEXT	SEGMENT
tv76 = 32
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$ = 88
??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>, COMDAT

; 807  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Al_$[rsp]
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >
  0003c	90		 npad	 1

; 808  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  0003d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00047	48 89 44 24 20	 mov	 QWORD PTR tv76[rsp], rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00051	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00055	48 83 c1 1c	 add	 rcx, 28
  00059	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPEAHAEAH@Z ; std::addressof<int>
  0005e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv76[rsp]
  00063	4c 8b c1	 mov	 r8, rcx
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$construct@HH@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH$$QEAH@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::construct<int,int>

; 809  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00076	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007f	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Myhead$[rsp]
  00084	48 8b c8	 mov	 rcx, rax
  00087	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>

; 810  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0008c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00091	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00095	48 83 c0 08	 add	 rax, 8
  00099	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Myhead$[rsp]
  0009e	48 8b c8	 mov	 rcx, rax
  000a1	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>

; 811  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000a6	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000ab	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000af	48 83 c0 10	 add	 rax, 16
  000b3	48 8d 54 24 50	 lea	 rdx, QWORD PTR _Myhead$[rsp]
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@0@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>

; 812  :         this->_Ptr->_Color = _Red;

  000c0	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000c5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c9	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0

; 813  :         this->_Ptr->_Isnil = false;

  000cd	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000d2	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000d6	c6 40 19 00	 mov	 BYTE PTR [rax+25], 0

; 814  :     }

  000da	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000df	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e3	5f		 pop	 rdi
  000e4	c3		 ret	 0
??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv76 = 32
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$ = 88
?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
tv76 = 32
this$ = 64
_Al_$ = 72
_Myhead$ = 80
<_Vals_0>$ = 88
?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 819  :     ~_Tree_temp_node() {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 820  :         if (this->_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 65		 je	 SHORT $LN2@Tree_temp_

; 821  :             _Destroy_in_place(this->_Ptr->_Left);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 8b c8	 mov	 rcx, rax
  00036	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
  0003b	90		 npad	 1

; 822  :             _Destroy_in_place(this->_Ptr->_Parent);

  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00045	48 83 c0 08	 add	 rax, 8
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
  00051	90		 npad	 1

; 823  :             _Destroy_in_place(this->_Ptr->_Right);

  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005b	48 83 c0 10	 add	 rax, 16
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
  00067	90		 npad	 1

; 824  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00071	48 83 c0 1c	 add	 rax, 28
  00075	48 8b c8	 mov	 rcx, rax
  00078	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPEAHAEAH@Z ; std::addressof<int>
  0007d	90		 npad	 1
  0007e	48 8b d0	 mov	 rdx, rax
  00081	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00086	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00089	e8 00 00 00 00	 call	 ??$destroy@H@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@QEAH@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::destroy<int>
  0008e	90		 npad	 1
$LN2@Tree_temp_:

; 825  :         }
; 826  :     }

  0008f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00094	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
  00099	90		 npad	 1
  0009a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009e	5f		 pop	 rdi
  0009f	c3		 ret	 0
??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al_$ = 56
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z PROC ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 786  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Al_$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  00032	90		 npad	 1

; 787  :         _Alloc_construct_ptr<_Alnode>::_Allocate();

  00033	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Allocate
  0003d	90		 npad	 1

; 788  :     }

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ENDP ; std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Al_$ = 56
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Al_$ = 56
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA PROC ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_temp_node_alloc@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z@4HA ENDP ; `std::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node_alloc<std::allocator<std::_Tree_node<int,void *> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 1134 :     ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1135 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 1d		 je	 SHORT $LN2@Alloc_cons

; 1136 :             _Al.deallocate(_Ptr, 1);

  0002a	41 b8 01 00 00
	00		 mov	 r8d, 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00041	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z ; std::allocator<std::_Tree_node<int,void *> >::deallocate
  00046	90		 npad	 1
$LN2@Alloc_cons:

; 1137 :         }
; 1138 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Allocate, COMDAT

; 1129 :     void _Allocate() { // disengage *this, then allocate a new memory block

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1130 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1131 :         _Ptr = _Al.allocate(1);

  0002b	ba 01 00 00 00	 mov	 edx, 1
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00038	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z ; std::allocator<std::_Tree_node<int,void *> >::allocate
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1132 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Release, COMDAT

; 1125 :     _NODISCARD pointer _Release() noexcept { // disengage *this and return contained pointer

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1126 :         return _STD exchange(_Ptr, nullptr);

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 83 c0 08	 add	 rax, 8
  00030	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??$exchange@PEAU?$_Tree_node@HPEAX@std@@$$T@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Tree_node<int,void *> *,std::nullptr_t>
  0003d	90		 npad	 1

; 1127 :     }

  0003e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
_Al_$ = 24
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 1123 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z PROC ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> * &,bool,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@AEAPEAU?$_Tree_node@HPEAX@std@@@std@@YAAEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::forward<std::_Tree_node<int,void *> * &>
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00042	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0004f	88 41 08	 mov	 BYTE PTR [rcx+8], al
  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00057	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005b	5f		 pop	 rdi
  0005c	c3		 ret	 0
??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z ENDP ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> * &,bool,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z
_TEXT	SEGMENT
tv68 = 32
tv78 = 40
this$ = 64
_Bound$ = 72
_Keyval$ = 80
??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Lower_bound_duplicate<int>, COMDAT

; 1699 :     bool _Lower_bound_duplicate(const _Nodeptr _Bound, const _Keyty& _Keyval) const {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1700 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00028	48 8b 44 24 48	 mov	 rax, QWORD PTR _Bound$[rsp]
  0002d	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  00031	85 c0		 test	 eax, eax
  00033	75 46		 jne	 SHORT $LN3@Lower_boun
  00035	48 8b 44 24 48	 mov	 rax, QWORD PTR _Bound$[rsp]
  0003a	48 83 c0 1c	 add	 rax, 28
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z ; std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>::_Kfn
  00046	48 89 44 24 20	 mov	 QWORD PTR tv68[rsp], rax
  0004b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getcomp
  00055	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv68[rsp]
  0005a	4c 8b c1	 mov	 r8, rcx
  0005d	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Keyval$[rsp]
  00062	48 8b c8	 mov	 rcx, rax
  00065	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z ; std::_Debug_lt_pred<std::less<int> const &,int const &,int const &,0>
  0006a	0f b6 c0	 movzx	 eax, al
  0006d	85 c0		 test	 eax, eax
  0006f	75 0a		 jne	 SHORT $LN3@Lower_boun
  00071	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv78[rsp], 1
  00079	eb 08		 jmp	 SHORT $LN4@Lower_boun
$LN3@Lower_boun:
  0007b	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv78[rsp], 0
$LN4@Lower_boun:
  00083	0f b6 44 24 28	 movzx	 eax, BYTE PTR tv78[rsp]

; 1701 :     }

  00088	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008c	5f		 pop	 rdi
  0008d	c3		 ret	 0
??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Lower_bound_duplicate<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z
_TEXT	SEGMENT
_Scary$ = 32
_Result$ = 56
_Trynode$ = 88
tv74 = 96
this$ = 144
__$ReturnUdt$ = 152
_Keyval$ = 160
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>, COMDAT

; 1704 :     _Tree_find_result<_Nodeptr> _Find_lower_bound(const _Keyty& _Keyval) const {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 78	 sub	 rsp, 120		; 00000078H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 1e 00 00 00	 mov	 ecx, 30
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 1705 :         const auto _Scary = _Get_scary();

  0002c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00039	48 89 44 24 20	 mov	 QWORD PTR _Scary$[rsp], rax

; 1706 :         _Tree_find_result<_Nodeptr> _Result{{_Scary->_Myhead->_Parent, _Tree_child::_Right}, _Scary->_Myhead};

  0003e	48 8b 44 24 20	 mov	 rax, QWORD PTR _Scary$[rsp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004b	48 89 44 24 38	 mov	 QWORD PTR _Result$[rsp], rax
  00050	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _Result$[rsp+8], 0
  00058	48 8b 44 24 20	 mov	 rax, QWORD PTR _Scary$[rsp]
  0005d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00061	48 89 44 24 48	 mov	 QWORD PTR _Result$[rsp+16], rax

; 1707 :         _Nodeptr _Trynode = _Result._Location._Parent;

  00066	48 8b 44 24 38	 mov	 rax, QWORD PTR _Result$[rsp]
  0006b	48 89 44 24 58	 mov	 QWORD PTR _Trynode$[rsp], rax
$LN2@Find_lower:

; 1708 :         while (!_Trynode->_Isnil) {

  00070	48 8b 44 24 58	 mov	 rax, QWORD PTR _Trynode$[rsp]
  00075	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  00079	85 c0		 test	 eax, eax
  0007b	0f 85 88 00 00
	00		 jne	 $LN3@Find_lower

; 1709 :             _Result._Location._Parent = _Trynode;

  00081	48 8b 44 24 58	 mov	 rax, QWORD PTR _Trynode$[rsp]
  00086	48 89 44 24 38	 mov	 QWORD PTR _Result$[rsp], rax

; 1710 :             if (_DEBUG_LT_PRED(_Getcomp(), _Traits::_Kfn(_Trynode->_Myval), _Keyval)) {

  0008b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Trynode$[rsp]
  00090	48 83 c0 1c	 add	 rax, 28
  00094	48 8b c8	 mov	 rcx, rax
  00097	e8 00 00 00 00	 call	 ?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z ; std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>::_Kfn
  0009c	48 89 44 24 60	 mov	 QWORD PTR tv74[rsp], rax
  000a1	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a9	e8 00 00 00 00	 call	 ?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getcomp
  000ae	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR _Keyval$[rsp]
  000b6	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv74[rsp]
  000bb	48 8b d1	 mov	 rdx, rcx
  000be	48 8b c8	 mov	 rcx, rax
  000c1	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEBU?$less@H@std@@AEBHAEBH$0A@@std@@YA_NAEBU?$less@H@0@AEBH1@Z ; std::_Debug_lt_pred<std::less<int> const &,int const &,int const &,0>
  000c6	0f b6 c0	 movzx	 eax, al
  000c9	85 c0		 test	 eax, eax
  000cb	74 18		 je	 SHORT $LN4@Find_lower

; 1711 :                 _Result._Location._Child = _Tree_child::_Right;

  000cd	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR _Result$[rsp+8], 0

; 1712 :                 _Trynode                 = _Trynode->_Right;

  000d5	48 8b 44 24 58	 mov	 rax, QWORD PTR _Trynode$[rsp]
  000da	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000de	48 89 44 24 58	 mov	 QWORD PTR _Trynode$[rsp], rax

; 1713 :             } else {

  000e3	eb 1f		 jmp	 SHORT $LN5@Find_lower
$LN4@Find_lower:

; 1714 :                 _Result._Location._Child = _Tree_child::_Left;

  000e5	c7 44 24 40 01
	00 00 00	 mov	 DWORD PTR _Result$[rsp+8], 1

; 1715 :                 _Result._Bound           = _Trynode;

  000ed	48 8b 44 24 58	 mov	 rax, QWORD PTR _Trynode$[rsp]
  000f2	48 89 44 24 48	 mov	 QWORD PTR _Result$[rsp+16], rax

; 1716 :                 _Trynode                 = _Trynode->_Left;

  000f7	48 8b 44 24 58	 mov	 rax, QWORD PTR _Trynode$[rsp]
  000fc	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ff	48 89 44 24 58	 mov	 QWORD PTR _Trynode$[rsp], rax
$LN5@Find_lower:

; 1717 :             }
; 1718 :         }

  00104	e9 67 ff ff ff	 jmp	 $LN2@Find_lower
$LN3@Find_lower:

; 1719 : 
; 1720 :         return _Result;

  00109	48 8d 44 24 38	 lea	 rax, QWORD PTR _Result$[rsp]
  0010e	48 8b bc 24 98
	00 00 00	 mov	 rdi, QWORD PTR __$ReturnUdt$[rsp]
  00116	48 8b f0	 mov	 rsi, rax
  00119	b9 18 00 00 00	 mov	 ecx, 24
  0011e	f3 a4		 rep movsb
  00120	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1721 :     }

  00128	48 8b f8	 mov	 rdi, rax
  0012b	48 8b cc	 mov	 rcx, rsp
  0012e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z$rtcFrameData
  00135	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0013a	48 8b c7	 mov	 rax, rdi
  0013d	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00141	5f		 pop	 rdi
  00142	5e		 pop	 rsi
  00143	c3		 ret	 0
??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z
_TEXT	SEGMENT
_Val$ = 16
?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z PROC ; std::_In_place_key_extract_set<int,int>::_Extract, COMDAT

; 2018 :     static const _Key& _Extract(const _Key& _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 2019 :         return _Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 2020 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z ENDP ; std::_In_place_key_extract_set<int,int>::_Extract
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_istream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_istream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_istream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_istream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\istream
;	COMDAT ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 16
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 105  :         explicit __CLR_OR_THIS_CALL operator bool() const { // test if _Ipfx succeeded

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 106  :             return _Ok;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 107  :         }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\istream
;	COMDAT ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z
_TEXT	SEGMENT
this$ = 48
_Istr$ = 56
_Noskip$ = 64
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z PROC ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 100  :         explicit __CLR_OR_THIS_CALL sentry(basic_istream& _Istr, bool _Noskip = false)

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 101  :             : _Sentry_base(_Istr) { // construct locking and calling _Ipfx

  00028	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Istr$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  00037	90		 npad	 1

; 102  :             _Ok = this->_Myistr._Ipfx(_Noskip);

  00038	0f b6 54 24 40	 movzx	 edx, BYTE PTR _Noskip$[rsp]
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z
  0004b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00050	88 41 08	 mov	 BYTE PTR [rcx+8], al

; 103  :         }

  00053	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00058	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Istr$ = 56
_Noskip$ = 64
?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA PROC ; `std::basic_istream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA ENDP ; `std::basic_istream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Istr$ = 56
_Noskip$ = 64
?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA PROC ; `std::basic_istream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z@4HA ENDP ; `std::basic_istream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\istream
;	COMDAT ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 32
tv72 = 40
this$ = 64
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 86   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 87   :             const auto _Rdbuf = _Myistr.rdbuf();

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00026	48 89 44 24 28	 mov	 QWORD PTR tv72[rsp], rax
  0002b	48 8b 44 24 28	 mov	 rax, QWORD PTR tv72[rsp]
  00030	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00033	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00037	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv72[rsp]
  0003c	48 03 c8	 add	 rcx, rax
  0003f	48 8b c1	 mov	 rax, rcx
  00042	48 8b c8	 mov	 rcx, rax
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0004b	90		 npad	 1
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Rdbuf$[rsp], rax

; 88   :             if (_Rdbuf) {

  00051	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Rdbuf$[rsp], 0
  00057	74 11		 je	 SHORT $LN2@Sentry_bas

; 89   :                 _Rdbuf->_Unlock();

  00059	48 8b 44 24 20	 mov	 rax, QWORD PTR _Rdbuf$[rsp]
  0005e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rdbuf$[rsp]
  00066	ff 50 10	 call	 QWORD PTR [rax+16]
  00069	90		 npad	 1
$LN2@Sentry_bas:

; 90   :             }
; 91   :         }

  0006a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\istream
;	COMDAT ??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 32
tv73 = 40
this$ = 64
_Istr$ = 72
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 79   :         __CLR_OR_THIS_CALL _Sentry_base(basic_istream& _Istr) : _Myistr(_Istr) { // lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Istr$[rsp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 80   :             const auto _Rdbuf = _Myistr.rdbuf();

  00030	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00038	48 89 44 24 28	 mov	 QWORD PTR tv73[rsp], rax
  0003d	48 8b 44 24 28	 mov	 rax, QWORD PTR tv73[rsp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv73[rsp]
  0004e	48 03 c8	 add	 rcx, rax
  00051	48 8b c1	 mov	 rax, rcx
  00054	48 8b c8	 mov	 rcx, rax
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0005d	48 89 44 24 20	 mov	 QWORD PTR _Rdbuf$[rsp], rax

; 81   :             if (_Rdbuf) {

  00062	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Rdbuf$[rsp], 0
  00068	74 10		 je	 SHORT $LN2@Sentry_bas

; 82   :                 _Rdbuf->_Lock();

  0006a	48 8b 44 24 20	 mov	 rax, QWORD PTR _Rdbuf$[rsp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rdbuf$[rsp]
  00077	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 83   :             }
; 84   :         }

  0007a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??0_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_istream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
<_Val2_0>$ = 64
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEAPEAV_Facet_base@std@@@std@@YAAEAPEAV_Facet_base@0@AEAPEAV10@@Z ; std::forward<std::_Facet_base * &>
  00031	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00036	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00039	48 89 01	 mov	 QWORD PTR [rcx], rax
  0003c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00045	5f		 pop	 rdi
  00046	c3		 ret	 0
??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z PROC	; std::exchange<void *,void *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z ENDP	; std::exchange<void *,void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Old_size$ = 40
_New_size$ = 48
_Old_capacity$ = 56
_New_capacity$ = 64
_Al$ = 72
_New_ptr$ = 88
_Raw_new$ = 104
_Old_ptr$4 = 112
this$ = 144
_Size_increase$ = 152
_Fn$ = 160
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  0002e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00044	48 89 44 24 28	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  00049	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00056	48 2b 44 24 28	 sub	 rax, QWORD PTR _Old_size$[rsp]
  0005b	48 3b 84 24 98
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00063	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  00065	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006a	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00072	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00077	48 03 c8	 add	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 44 24 30	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00082	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00087	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0008b	48 89 44 24 38	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00090	48 8b 54 24 30	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00095	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a2	48 89 44 24 40	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000a7	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b4	48 89 44 24 48	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000b9	48 8b 44 24 40	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000be	48 ff c0	 inc	 rax
  000c1	48 8b d0	 mov	 rdx, rax
  000c4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  000c9	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000ce	48 89 44 24 58	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d8	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000dd	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000e7	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000eb	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f0	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000f9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000fe	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00103	48 89 44 24 68	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00108	48 83 7c 24 38
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  0010e	72 5c		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00110	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00115	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00119	48 89 44 24 70	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0011e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  00123	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00128	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00135	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0013d	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00142	48 8b 44 24 38	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  00147	48 ff c0	 inc	 rax
  0014a	4c 8b c0	 mov	 r8, rax
  0014d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00152	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  00157	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  0015c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00161	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00166	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  0016a	eb 39		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  0016c	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00171	48 83 c0 08	 add	 rax, 8
  00175	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Old_size$[rsp]
  0017a	4c 8b c0	 mov	 r8, rax
  0017d	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00182	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  0018a	e8 00 00 00 00	 call	 ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  0018f	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00194	48 83 c0 08	 add	 rax, 8
  00198	48 8d 54 24 58	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001a5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ad	48 8b f8	 mov	 rdi, rax
  001b0	48 8b cc	 mov	 rcx, rsp
  001b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z$rtcFrameData
  001ba	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001bf	48 8b c7	 mov	 rax, rdi
  001c2	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  001c9	5f		 pop	 rdi
  001ca	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z
_TEXT	SEGMENT
this$ = 48
_New_ptr$ = 56
_Old_ptr$ = 64
_Old_size$ = 72
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z PROC ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator(), COMDAT

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);

  0002d	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00032	48 ff c0	 inc	 rax
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00042	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3607 :                 });

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??R<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@QEBAXQEADQEBD_K@Z ENDP ; <lambda_9013ee9e23efe4882b67eff5b0ecf103>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$03@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<4>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 02	 shl	 rax, 2
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$03@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z PROC ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void *>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::forward<handle_deleter>
  00036	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0003b	e8 00 00 00 00	 call	 ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::forward<void *>
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 89 01	 mov	 QWORD PTR [rcx], rax
  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z ENDP ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z PROC ; std::forward<handle_deleter>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ENDP ; std::forward<handle_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z PROC ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z ; std::_Get_unwrapped<std::thread>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@Vthread@std@@@std@@YAPEAVthread@0@QEAV10@@Z ; std::_Get_unwrapped<std::thread>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@PEAVthread@1@AEAV?$allocator@Vthread@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Uninitialized_backout_al<std::allocator<std::thread> >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 10	 add	 rax, 16
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::move<std::thread &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@Vthread@std@@@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAX$$QEAVthread@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Emplace_back<std::thread>

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAAPEAVthread@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::thread> >::~_Uninitialized_backout_al<std::allocator<std::thread> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z PROC ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN7:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::unique_ptr<void,handle_deleter> >
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@@Z ; std::_Get_unwrapped<std::unique_ptr<void,handle_deleter> >
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));
; 1738 :         return _Dest + (_ULast - _UFirst);
; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};

  0004b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00053	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Dest$[rsp]
  0005b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00060	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@PEAV?$unique_ptr@XUhandle_deleter@@@1@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
  00065	90		 npad	 1

; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {

  00066	eb 0e		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  00068	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006d	48 83 c0 08	 add	 rax, 8
  00071	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax
$LN4@Uninitiali:
  00076	48 8b 44 24 28	 mov	 rax, QWORD PTR _ULast$[rsp]
  0007b	48 39 44 24 20	 cmp	 QWORD PTR _UFirst$[rsp], rax
  00080	74 19		 je	 SHORT $LN3@Uninitiali

; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));

  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00087	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  00094	e8 00 00 00 00	 call	 ??$_Emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back<std::unique_ptr<void,handle_deleter> >

; 1744 :         }

  00099	eb cd		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 1745 : 
; 1746 :         return _Backout._Release();

  0009b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000a0	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::_Release
  000a5	48 89 44 24 58	 mov	 QWORD PTR $T5[rsp], rax
  000aa	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Backout$4[rsp]
  000af	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
  000b4	48 8b 44 24 58	 mov	 rax, QWORD PTR $T5[rsp]

; 1747 :     }
; 1748 : }

  000b9	48 8b f8	 mov	 rdi, rax
  000bc	48 8b cc	 mov	 rcx, rsp
  000bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z$rtcFrameData
  000c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ENDP ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_Backout$4 = 56
$T5 = 88
_First$ = 112
_Last$ = 120
_Dest$ = 128
_Al$ = 136
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Backout$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >::~_Uninitialized_backout_al<std::allocator<std::unique_ptr<void,handle_deleter> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0004d	48 c1 e0 03	 shl	 rax, 3
$LN3@Get_size_o:

; 36   : }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z
_TEXT	SEGMENT
_UFirst$ = 32
_ULast$ = 40
_First$ = 64
_Last$ = 72
_Dest$ = 80
_Al$ = 88
??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z PROC ; std::_Uninitialized_move<void * *,std::allocator<void *> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _First$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z ; std::_Get_unwrapped<void *>
  00037	48 89 44 24 20	 mov	 QWORD PTR _UFirst$[rsp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Last$[rsp]
  00041	e8 00 00 00 00	 call	 ??$_Get_unwrapped@PEAX@std@@YAPEAPEAXQEAPEAX@Z ; std::_Get_unwrapped<void *>
  00046	48 89 44 24 28	 mov	 QWORD PTR _ULast$[rsp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00050	e8 00 00 00 00	 call	 ??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z ; std::_Unfancy<void *>
  00055	4c 8b c0	 mov	 r8, rax
  00058	48 8b 54 24 28	 mov	 rdx, QWORD PTR _ULast$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _UFirst$[rsp]
  00062	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAPEAXPEAPEAX@std@@YAPEAPEAXPEAPEAX00@Z ; std::_Copy_memmove<void * *,void * *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR _UFirst$[rsp]
  0006c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _ULast$[rsp]
  00071	48 2b c8	 sub	 rcx, rax
  00074	48 8b c1	 mov	 rax, rcx
  00077	48 c1 f8 03	 sar	 rax, 3
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00080	48 8d 04 c1	 lea	 rax, QWORD PTR [rcx+rax*8]

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z ENDP ; std::_Uninitialized_move<void * *,std::allocator<void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<32>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Count$[rsp], 32 ; 00000020H
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::_Facet_base *,std::_Facet_base *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::_Facet_base *,std::_Facet_base *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ENDP ; std::forward<std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z PROC ; std::move<EncodeStatus * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ENDP ; std::move<EncodeStatus * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z PROC ; std::move<RGYLog * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ENDP ; std::move<RGYLog * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z PROC ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAU?$_Tree_node@HPEAX@std@@@std@@YAPEAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@@Z ; std::addressof<std::_Tree_node<int,void *> *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAU?$_Tree_node@HPEAX@std@@@std@@YAAEBQEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ; std::forward<std::_Tree_node<int,void *> * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 48
_Ptr_container$ = 56
_Ptr$ = 64
_Bytes$ = 96
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00023	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00027	48 89 44 24 30	 mov	 QWORD PTR _Block_size$[rsp], rax

; 86   :     if (_Block_size <= _Bytes) {

  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00031	48 39 44 24 30	 cmp	 QWORD PTR _Block_size$[rsp], rax
  00036	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00038	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Block_size$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  0004c	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Ptr_container$[rsp], 0
  00052	74 02		 je	 SHORT $LN9@Allocate_m
  00054	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG147097
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG147098
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG147099
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN12@Allocate_m
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG147100
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG147101
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG147102
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	75 85		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000c7	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr_container$[rsp]
  000cc	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000d0	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000d4	48 89 44 24 40	 mov	 QWORD PTR _Ptr$[rsp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000d9	b8 08 00 00 00	 mov	 eax, 8
  000de	48 6b c0 ff	 imul	 rax, rax, -1
  000e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000e7	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr_container$[rsp]
  000ec	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  000f0	b8 08 00 00 00	 mov	 eax, 8
  000f5	48 6b c0 fe	 imul	 rax, rax, -2
  000f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000fe	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00108	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0010c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Ptr$[rsp]
$LN11@Allocate_m:

; 99   : }

  00111	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00115	5f		 pop	 rdi
  00116	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_Gthread@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::destroy<std::unique_ptr<void,handle_deleter> >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 763  :         _Ptr->~_Uty();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0002a	e8 00 00 00 00	 call	 ??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z

; 764  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::destroy<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z PROC ; std::forward<std::_Zero_then_variadic_args_t>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z ENDP ; std::forward<std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z PROC ; std::forward<std::less<int> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z ENDP ; std::forward<std::less<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00038	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z PROC ; std::_Tree_node<int,void *>::_Freenode0<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 370  :     static void _Freenode0(_Alloc& _Al, _Nodeptr _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 371  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Freenode0 call");
; 372  :         _Destroy_in_place(_Ptr->_Left);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
  00030	90		 npad	 1

; 373  :         _Destroy_in_place(_Ptr->_Parent);

  00031	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00036	48 83 c0 08	 add	 rax, 8
  0003a	48 8b c8	 mov	 rcx, rax
  0003d	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
  00042	90		 npad	 1

; 374  :         _Destroy_in_place(_Ptr->_Right);

  00043	48 8b 44 24 38	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00048	48 83 c0 10	 add	 rax, 16
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_Tree_node@HPEAX@std@@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@@Z ; std::_Destroy_in_place<std::_Tree_node<int,void *> *>
  00054	90		 npad	 1

; 375  :         allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

  00055	41 b8 01 00 00
	00		 mov	 r8d, 1
  0005b	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00060	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00065	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::deallocate
  0006a	90		 npad	 1

; 376  :     }

  0006b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ENDP ; std::_Tree_node<int,void *>::_Freenode0<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
_Rootnode$ = 64
??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 744  :     void _Erase_tree(_Alnode& _Al, _Nodeptr _Rootnode) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
$LN2@Erase_tree:

; 745  :         while (!_Rootnode->_Isnil) { // free subtrees, then node

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Rootnode$[rsp]
  0002d	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  00031	85 c0		 test	 eax, eax
  00033	75 3c		 jne	 SHORT $LN3@Erase_tree

; 746  :             _Erase_tree(_Al, _Rootnode->_Right);

  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR _Rootnode$[rsp]
  0003a	4c 8b 40 10	 mov	 r8, QWORD PTR [rax+16]
  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Al$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
  0004d	90		 npad	 1

; 747  :             _Alnode::value_type::_Freenode(_Al, _STD exchange(_Rootnode, _Rootnode->_Left));

  0004e	48 8b 44 24 40	 mov	 rax, QWORD PTR _Rootnode$[rsp]
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8d 4c 24 40	 lea	 rcx, QWORD PTR _Rootnode$[rsp]
  0005b	e8 00 00 00 00	 call	 ??$exchange@PEAU?$_Tree_node@HPEAX@std@@AEAPEAU12@@std@@YAPEAU?$_Tree_node@HPEAX@0@AEAPEAU10@0@Z ; std::exchange<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * &>
  00060	90		 npad	 1
  00061	48 8b d0	 mov	 rdx, rax
  00064	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Al$[rsp]
  00069	e8 00 00 00 00	 call	 ??$_Freenode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<int,void *>::_Freenode<std::allocator<std::_Tree_node<int,void *> > >
  0006e	90		 npad	 1

; 748  :         }

  0006f	eb b7		 jmp	 SHORT $LN2@Erase_tree
$LN3@Erase_tree:

; 749  :     }

  00071	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000f	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001b	5f		 pop	 rdi
  0001c	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z
_TEXT	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
_RawVals$ = 96
??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z PROC ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>, COMDAT

; 36   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept { // enforces termination

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 37   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 38   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

  0001e	48 8b 54 24 60	 mov	 rdx, QWORD PTR _RawVals$[rsp]
  00023	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00028	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > ><std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,0>
  0002d	90		 npad	 1

; 39   :         _Tuple& _Tup = *_FnVals;

  0002e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  00033	e8 00 00 00 00	 call	 ??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::operator*
  00038	90		 npad	 1
  00039	48 89 44 24 38	 mov	 QWORD PTR _Tup$[rsp], rax

; 40   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

  0003e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Tup$[rsp]
  00043	e8 00 00 00 00	 call	 ??$get@$0A@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YAAEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@@Z ; std::get<0,<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  00048	90		 npad	 1
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ??$move@AEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::move<<lambda_7d02ae0d862af7151d39e7a5bd162218> &>
  00051	90		 npad	 1
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??$invoke@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V@std@@YAX$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::invoke<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  0005a	90		 npad	 1

; 41   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

  0005b	e8 00 00 00 00	 call	 _Cnd_do_broadcast_at_thread_exit
  00060	90		 npad	 1

; 42   :         return 0;

  00061	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0
  00069	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _FnVals$[rsp]
  0006e	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
  00073	90		 npad	 1
  00074	8b 44 24 40	 mov	 eax, DWORD PTR $T4[rsp]

; 43   :     }

  00078	8b f8		 mov	 edi, eax
  0007a	48 8b cc	 mov	 rcx, rsp
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z$rtcFrameData
  00084	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00089	90		 npad	 1
  0008a	8b c7		 mov	 eax, edi
  0008c	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00090	5f		 pop	 rdi
  00091	c3		 ret	 0
??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z ENDP ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
_RawVals$ = 96
?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_FnVals$ = 40
_Tup$ = 56
$T4 = 64
_RawVals$ = 96
?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA PROC ; `std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z@4HA ENDP ; `std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ PROC ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::release, COMDAT

; 1903 :     pointer release() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@PEAV12@@std@@YAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ PROC ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ
_TEXT	SEGMENT
this$ = 16
??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ PROC ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::operator*, COMDAT

; 1887 :     _NODISCARD add_lvalue_reference_t<_Ty> operator*() const noexcept { // strengthened

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1888 :         return *_Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1889 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
??D?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAAEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ; std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z PROC ; std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  00032	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00037	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete

; 1768 :     }

  0003c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
??R?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@QEBAXPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ENDP ; std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
tv77 = 48
__$ReturnUdt$ = 80
<_Args_0>$ = 88
??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>, COMDAT

; 2056 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T2[rsp], 0

; 2057 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  0002b	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00030	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00035	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003a	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00040	74 1e		 je	 SHORT $LN3@make_uniqu
  00042	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00047	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$V$0A@@?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> ><<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>
  00059	48 89 44 24 30	 mov	 QWORD PTR tv77[rsp], rax
  0005e	eb 09		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  00060	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv77[rsp], 0
$LN4@make_uniqu:
  00069	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv77[rsp]
  0006e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00073	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@PEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@1@@Z ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > ><std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > >,0>
  00078	90		 npad	 1
  00079	8b 44 24 28	 mov	 eax, DWORD PTR $T2[rsp]
  0007d	83 c8 01	 or	 eax, 1
  00080	89 44 24 28	 mov	 DWORD PTR $T2[rsp], eax
  00084	48 8b 44 24 50	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 2058 : }

  00089	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008d	5f		 pop	 rdi
  0008e	c3		 ret	 0
  0008f	cc		 int	 3
??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv77 = 48
__$ReturnUdt$ = 80
<_Args_0>$ = 88
?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA PROC ; `std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA ENDP ; `std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 40
tv77 = 48
__$ReturnUdt$ = 80
<_Args_0>$ = 88
?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA PROC ; `std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T2[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN6@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T2[rbp], -2
  00021	48 8b 4d 50	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
$LN6@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA ENDP ; `std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z PROC ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ENDP ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z PROC ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void * &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::forward<handle_deleter>
  00036	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0003b	e8 00 00 00 00	 call	 ??$forward@AEAPEAX@std@@YAAEAPEAXAEAPEAX@Z ; std::forward<void * &>
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 89 01	 mov	 QWORD PTR [rcx], rax
  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z ENDP ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z PROC ; std::move<handle_deleter &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ENDP ; std::move<handle_deleter &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z
_TEXT	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >, COMDAT

; 435  :     void _Range_construct_or_tidy(_Iter _First, _Iter _Last, forward_iterator_tag) {

$LN5:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 436  :         // initialize with forward range [_First, _Last)
; 437  :         const auto _Count = _Convert_size<size_type>(static_cast<size_t>(_STD distance(_First, _Last)));

  0002d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Last$[rsp]
  00032	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _First$[rsp]
  00037	e8 00 00 00 00	 call	 ??$distance@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@std@@YA_JV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@0@Z ; std::distance<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00044	48 89 44 24 20	 mov	 QWORD PTR _Count$[rsp], rax

; 438  :         if (_Count != 0) {

  00049	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0004f	74 5c		 je	 SHORT $LN2@Range_cons

; 439  :             _Buy_nonzero(_Count);

  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Count$[rsp]
  00056	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_nonzero

; 440  :             _Tidy_guard<vector> _Guard{this};

  00060	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 89 44 24 38	 mov	 QWORD PTR _Guard$4[rsp], rax

; 441  :             auto& _My_data   = _Mypair._Myval2;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 89 44 24 48	 mov	 QWORD PTR _My_data$5[rsp], rax

; 442  :             _My_data._Mylast = _Ucopy(_First, _Last, _My_data._Myfirst);

  00074	48 8b 44 24 48	 mov	 rax, QWORD PTR _My_data$5[rsp]
  00079	4c 8b 48 08	 mov	 r9, QWORD PTR [rax+8]
  0007d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Last$[rsp]
  00082	48 8b 54 24 68	 mov	 rdx, QWORD PTR _First$[rsp]
  00087	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008c	e8 00 00 00 00	 call	 ??$_Ucopy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0PEAH@Z ; std::vector<int,std::allocator<int> >::_Ucopy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
  00091	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _My_data$5[rsp]
  00096	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 443  :             _Guard._Target   = nullptr;

  0009a	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR _Guard$4[rsp], 0

; 444  :         }

  000a3	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Guard$4[rsp]
  000a8	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
$LN2@Range_cons:

; 445  :     }

  000ad	48 8b cc	 mov	 rcx, rsp
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z$rtcFrameData
  000b7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000bc	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Count$ = 32
_Guard$4 = 56
_My_data$5 = 72
this$ = 96
_First$ = 104
_Last$ = 112
__formal$ = 120
?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Guard$4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 48
_It$ = 56
??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  00023	48 8b 54 24 30	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _It$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Unwrapped
  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 260  : }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 32
this$ = 64
_Right$ = 72
??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator!=, COMDAT

; 97   :     _NODISCARD bool operator!=(const _Tree_unchecked_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 98   :         return !(*this == _Right);

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator==
  00032	0f b6 c0	 movzx	 eax, al
  00035	85 c0		 test	 eax, eax
  00037	75 0a		 jne	 SHORT $LN3@operator
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@operator:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 99   :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??9?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv67 = 0
this$ = 32
_Right$ = 40
??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator==, COMDAT

; 93   :     _NODISCARD bool operator==(const _Tree_unchecked_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 94   :         return _Ptr == _Right._Ptr;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	75 09		 jne	 SHORT $LN3@operator
  00035	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  0003c	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003e	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@operator:
  00045	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 95   :     }

  00049	48 83 c4 10	 add	 rsp, 16
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??8?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
_Pnode$1 = 32
this$ = 64
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator++, COMDAT

; 47   :     _Tree_unchecked_const_iterator& operator++() {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 48   :         if (_Ptr->_Right->_Isnil) { // climb looking for right subtree

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00026	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0002a	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  0002e	85 c0		 test	 eax, eax
  00030	74 4f		 je	 SHORT $LN4@operator
$LN2@operator:

; 49   :             _Nodeptr _Pnode;
; 50   :             while (!(_Pnode = _Ptr->_Parent)->_Isnil && _Ptr == _Pnode->_Right) {

  00032	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0003e	48 89 44 24 20	 mov	 QWORD PTR _Pnode$1[rsp], rax
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00048	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  0004c	85 c0		 test	 eax, eax
  0004e	75 22		 jne	 SHORT $LN3@operator
  00050	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00055	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Pnode$1[rsp]
  0005a	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0005e	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00061	75 0f		 jne	 SHORT $LN3@operator

; 51   :                 _Ptr = _Pnode; // ==> parent while right subtree

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Pnode$1[rsp]
  0006d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 52   :             }

  00070	eb c0		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 53   : 
; 54   :             _Ptr = _Pnode; // ==> parent (head if end())

  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Pnode$1[rsp]
  0007c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :         } else {

  0007f	eb 19		 jmp	 SHORT $LN5@operator
$LN4@operator:

; 56   :             _Ptr = _Mytree::_Min(_Ptr->_Right); // ==> smallest of right subtree

  00081	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00086	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00089	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  0008d	e8 00 00 00 00	 call	 ?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Min
  00092	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00097	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@operator:

; 57   :         }
; 58   : 
; 59   :         return *this;

  0009a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 60   :     }

  0009f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a3	5f		 pop	 rdi
  000a4	c3		 ret	 0
??E?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ
_TEXT	SEGMENT
this$ = 16
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator*, COMDAT

; 39   :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 40   :         return _Ptr->_Myval;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0000e	48 83 c0 1c	 add	 rax, 28

; 41   :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
??D?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBHXZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>, COMDAT

; 35   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) : _Ptr(_Pnode) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  00032	48 89 08	 mov	 QWORD PTR [rax], rcx

; 36   :         this->_Adopt(_Plist);

  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Plist$[rsp]
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 37   :     }

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Last$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ; std::forward<std::allocator<int> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z
_TEXT	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$forward@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@@std@@YA$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >
  00032	90		 npad	 1
  00033	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00038	48 8b d0	 mov	 rdx, rax
  0003b	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00040	90		 npad	 1
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val2$[rsp]
  00046	e8 00 00 00 00	 call	 ??$forward@AEB_N@std@@YAAEB_NAEB_N@Z ; std::forward<bool const &>
  0004b	90		 npad	 1
  0004c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00051	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00054	88 41 18	 mov	 BYTE PTR [rcx+24], al
  00057	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA PROC ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA ENDP ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Val1$ = 56
_Val2$ = 64
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA PROC ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z@4HA ENDP ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z
_TEXT	SEGMENT
_Scary$ = 32
_Loc$ = 56
_Inserted$ = 88
_Keyval$4 = 96
$T5 = 104
$T6 = 128
$T7 = 136
$T8 = 152
$T9 = 160
$T10 = 176
tv88 = 192
tv142 = 200
tv141 = 208
this$ = 256
__$ReturnUdt$ = 264
<_Vals_0>$ = 272
??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>, COMDAT

; 1000 :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR [rsp+256]

; 1001 :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Remove_cvref_t<_Valtys>...>;
; 1002 :         const auto _Scary             = _Get_scary();

  0002f	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  0003c	48 89 44 24 20	 mov	 QWORD PTR _Scary$[rsp], rax

; 1003 :         _Tree_find_result<_Nodeptr> _Loc;
; 1004 :         _Nodeptr _Inserted;
; 1005 :         if constexpr (!_Multi && _In_place_key_extractor::_Extractable) {
; 1006 :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);

  00041	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Extract@?$_In_place_key_extract_set@HH@std@@SAAEBHAEBH@Z ; std::_In_place_key_extract_set<int,int>::_Extract
  0004e	48 89 44 24 60	 mov	 QWORD PTR _Keyval$4[rsp], rax

; 1007 :             _Loc                = _Find_lower_bound(_Keyval);

  00053	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Keyval$4[rsp]
  00058	48 8d 54 24 68	 lea	 rdx, QWORD PTR $T5[rsp]
  0005d	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00065	e8 00 00 00 00	 call	 ??$_Find_lower_bound@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA?AU?$_Tree_find_result@PEAU?$_Tree_node@HPEAX@std@@@1@AEBH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Find_lower_bound<int>
  0006a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Loc$[rsp]
  0006f	48 8b f9	 mov	 rdi, rcx
  00072	48 8b f0	 mov	 rsi, rax
  00075	b9 18 00 00 00	 mov	 ecx, 24
  0007a	f3 a4		 rep movsb

; 1008 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {

  0007c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Keyval$4[rsp]
  00081	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Loc$[rsp+16]
  00086	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008e	e8 00 00 00 00	 call	 ??$_Lower_bound_duplicate@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBA_NQEAU?$_Tree_node@HPEAX@1@AEBH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Lower_bound_duplicate<int>
  00093	0f b6 c0	 movzx	 eax, al
  00096	85 c0		 test	 eax, eax
  00098	74 2f		 je	 SHORT $LN2@Emplace

; 1009 :                 return {_Loc._Bound, false};

  0009a	c6 84 24 80 00
	00 00 00	 mov	 BYTE PTR $T6[rsp], 0
  000a2	4c 8d 84 24 80
	00 00 00	 lea	 r8, QWORD PTR $T6[rsp]
  000aa	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Loc$[rsp+16]
  000af	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000b7	e8 00 00 00 00	 call	 ??$?0AEAPEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@AEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> * &,bool,0>
  000bc	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000c4	e9 f0 00 00 00	 jmp	 $LN1@Emplace
$LN2@Emplace:

; 1010 :             }
; 1011 : 
; 1012 :             _Check_grow_by_1();

  000c9	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d1	e8 00 00 00 00	 call	 ?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Check_grow_by_1

; 1013 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  000d6	48 8b 8c 24 10
	01 00 00	 mov	 rcx, QWORD PTR <_Vals_0>$[rsp]
  000de	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  000e3	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR tv88[rsp], rax
  000eb	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000f3	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
  000f8	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR tv88[rsp]
  00100	4c 8b c9	 mov	 r9, rcx
  00103	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Scary$[rsp]
  00108	4c 8b 41 08	 mov	 r8, QWORD PTR [rcx+8]
  0010c	48 8b d0	 mov	 rdx, rax
  0010f	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  00117	e8 00 00 00 00	 call	 ??$?0H@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@$$QEAH@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > ><int>
  0011c	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR tv142[rsp], rax
  00124	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR tv142[rsp]
  0012c	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR tv141[rsp], rax
  00134	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR tv141[rsp]
  0013c	e8 00 00 00 00	 call	 ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<int,void *> > >::_Release
  00141	48 89 44 24 58	 mov	 QWORD PTR _Inserted$[rsp], rax
  00146	48 8d 8c 24 88
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  0014e	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >

; 1014 :             // nothrow hereafter
; 1015 :         } else {
; 1016 :             _Tree_temp_node<_Alnode> _Newnode(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...);
; 1017 :             const auto& _Keyval = _Traits::_Kfn(_Newnode._Ptr->_Myval);
; 1018 :             if constexpr (_Multi) { // duplicate check if unique
; 1019 :                 _Loc = _Find_upper_bound(_Keyval);
; 1020 :             } else {
; 1021 :                 _Loc = _Find_lower_bound(_Keyval);
; 1022 :                 if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1023 :                     return {_Loc._Bound, false};
; 1024 :                 }
; 1025 :             }
; 1026 : 
; 1027 :             _Check_grow_by_1();
; 1028 :             // nothrow hereafter
; 1029 :             _Inserted = _Newnode._Release();
; 1030 :         }
; 1031 : 
; 1032 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00153	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0015b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Loc$[rsp]
  00160	48 8b f8	 mov	 rdi, rax
  00163	48 8b f1	 mov	 rsi, rcx
  00166	b9 10 00 00 00	 mov	 ecx, 16
  0016b	f3 a4		 rep movsb
  0016d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Inserted$[rsp]
  00172	48 8d 94 24 b0
	00 00 00	 lea	 rdx, QWORD PTR $T10[rsp]
  0017a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Scary$[rsp]
  0017f	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node
  00184	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR $T9[rsp], rax
  0018c	c6 84 24 98 00
	00 00 01	 mov	 BYTE PTR $T8[rsp], 1
  00194	4c 8d 84 24 98
	00 00 00	 lea	 r8, QWORD PTR $T8[rsp]
  0019c	48 8d 94 24 a0
	00 00 00	 lea	 rdx, QWORD PTR $T9[rsp]
  001a4	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  001ac	e8 00 00 00 00	 call	 ??$?0PEAU?$_Tree_node@HPEAX@std@@_N$0A@@?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@std@@QEAA@$$QEAPEAU?$_Tree_node@HPEAX@1@$$QEA_N@Z ; std::pair<std::_Tree_node<int,void *> *,bool>::pair<std::_Tree_node<int,void *> *,bool><std::_Tree_node<int,void *> *,bool,0>
  001b1	48 8b 84 24 08
	01 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@Emplace:

; 1033 :     }

  001b9	48 8b f8	 mov	 rdi, rax
  001bc	48 8b cc	 mov	 rcx, rsp
  001bf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z$rtcFrameData
  001c6	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001cb	48 8b c7	 mov	 rax, rdi
  001ce	48 81 c4 e8 00
	00 00		 add	 rsp, 232		; 000000e8H
  001d5	5f		 pop	 rdi
  001d6	5e		 pop	 rsi
  001d7	c3		 ret	 0
??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
_Loc$ = 56
_Inserted$ = 88
_Keyval$4 = 96
$T5 = 104
$T6 = 128
$T7 = 136
$T8 = 152
$T9 = 160
$T10 = 176
tv88 = 192
tv142 = 200
tv141 = 208
this$ = 256
__$ReturnUdt$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
_Loc$ = 56
_Inserted$ = 88
_Keyval$4 = 96
$T5 = 104
$T6 = 128
$T7 = 136
$T8 = 152
$T9 = 160
$T10 = 176
tv88 = 192
tv142 = 200
tv141 = 208
this$ = 256
__$ReturnUdt$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tree_temp_node@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@QEAA@XZ ; std::_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >::~_Tree_temp_node<std::allocator<std::_Tree_node<int,void *> > >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\string
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
_TEXT	SEGMENT
_State$ = 32
_Changed$ = 36
_Ok$ = 56
_Metadelim$6 = 100
_Meta$7 = 132
$T8 = 148
$T9 = 152
tv163 = 160
_Istr$ = 192
_Str$ = 200
_Delim$ = 208
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 25   :     const _Elem _Delim) { // get characters into string, discard delimiter

$LN21:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 26   :     using _Myis = basic_istream<_Elem, _Traits>;
; 27   : 
; 28   :     typename _Myis::iostate _State = _Myis::goodbit;

  0002e	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 29   :     bool _Changed                  = false;

  00036	c6 44 24 24 00	 mov	 BYTE PTR _Changed$[rsp], 0

; 30   :     const typename _Myis::sentry _Ok(_Istr, true);

  0003b	41 b0 01	 mov	 r8b, 1
  0003e	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR _Istr$[rsp]
  00046	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Ok$[rsp]
  0004b	e8 00 00 00 00	 call	 ??0sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@_N@Z ; std::basic_istream<char,std::char_traits<char> >::sentry::sentry
  00050	90		 npad	 1

; 31   : 
; 32   :     if (_Ok) { // state okay, extract characters

  00051	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00056	e8 00 00 00 00	 call	 ??Bsentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_istream<char,std::char_traits<char> >::sentry::operator bool
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	85 c0		 test	 eax, eax
  00060	0f 84 83 01 00
	00		 je	 $LN5@getline

; 33   :         _TRY_IO_BEGIN
; 34   :         _Str.erase();

  00066	33 d2		 xor	 edx, edx
  00068	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _Str$[rsp]
  00070	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 35   :         const typename _Traits::int_type _Metadelim = _Traits::to_int_type(_Delim);

  00075	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR _Delim$[rsp]
  0007d	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00082	89 44 24 64	 mov	 DWORD PTR _Metadelim$6[rsp], eax

; 36   :         typename _Traits::int_type _Meta            = _Istr.rdbuf()->sgetc();

  00086	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Istr$[rsp]
  0008e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00091	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00095	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _Istr$[rsp]
  0009d	48 03 c8	 add	 rcx, rax
  000a0	48 8b c1	 mov	 rax, rcx
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000ac	48 8b c8	 mov	 rcx, rax
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
  000b5	89 84 24 84 00
	00 00		 mov	 DWORD PTR _Meta$7[rsp], eax

; 37   : 
; 38   :         for (;; _Meta = _Istr.rdbuf()->snextc()) {

  000bc	eb 36		 jmp	 SHORT $LN4@getline
$LN2@getline:
  000be	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Istr$[rsp]
  000c6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c9	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000cd	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _Istr$[rsp]
  000d5	48 03 c8	 add	 rcx, rax
  000d8	48 8b c1	 mov	 rax, rcx
  000db	48 8b c8	 mov	 rcx, rax
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  000e4	48 8b c8	 mov	 rcx, rax
  000e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
  000ed	89 84 24 84 00
	00 00		 mov	 DWORD PTR _Meta$7[rsp], eax
$LN4@getline:

; 39   :             if (_Traits::eq_int_type(_Traits::eof(), _Meta)) { // end of file, quit

  000f4	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000f9	89 84 24 94 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00100	48 8d 94 24 84
	00 00 00	 lea	 rdx, QWORD PTR _Meta$7[rsp]
  00108	48 8d 8c 24 94
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00110	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00115	0f b6 c0	 movzx	 eax, al
  00118	85 c0		 test	 eax, eax
  0011a	74 15		 je	 SHORT $LN7@getline

; 40   :                 _State |= _Myis::eofbit;

  0011c	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  00120	83 c8 01	 or	 eax, 1
  00123	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 41   :                 break;

  00127	e9 bb 00 00 00	 jmp	 $LN3@getline
  0012c	e9 b1 00 00 00	 jmp	 $LN8@getline
$LN7@getline:

; 42   :             } else if (_Traits::eq_int_type(_Meta, _Metadelim)) { // got a delimiter, discard it and quit

  00131	48 8d 54 24 64	 lea	 rdx, QWORD PTR _Metadelim$6[rsp]
  00136	48 8d 8c 24 84
	00 00 00	 lea	 rcx, QWORD PTR _Meta$7[rsp]
  0013e	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00143	0f b6 c0	 movzx	 eax, al
  00146	85 c0		 test	 eax, eax
  00148	74 38		 je	 SHORT $LN9@getline

; 43   :                 _Changed = true;

  0014a	c6 44 24 24 01	 mov	 BYTE PTR _Changed$[rsp], 1

; 44   :                 _Istr.rdbuf()->sbumpc();

  0014f	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Istr$[rsp]
  00157	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0015a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0015e	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _Istr$[rsp]
  00166	48 03 c8	 add	 rcx, rax
  00169	48 8b c1	 mov	 rax, rcx
  0016c	48 8b c8	 mov	 rcx, rax
  0016f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00175	48 8b c8	 mov	 rcx, rax
  00178	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ

; 45   :                 break;

  0017e	eb 67		 jmp	 SHORT $LN3@getline
  00180	eb 60		 jmp	 SHORT $LN8@getline
$LN9@getline:

; 46   :             } else if (_Str.max_size() <= _Str.size()) { // string too large, quit

  00182	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _Str$[rsp]
  0018a	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0018f	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv163[rsp], rax
  00197	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _Str$[rsp]
  0019f	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001a4	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv163[rsp]
  001ac	48 3b c8	 cmp	 rcx, rax
  001af	77 0f		 ja	 SHORT $LN11@getline

; 47   :                 _State |= _Myis::failbit;

  001b1	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001b5	83 c8 02	 or	 eax, 2
  001b8	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 48   :                 break;

  001bc	eb 29		 jmp	 SHORT $LN3@getline

; 49   :             } else { // got a character, add it to string

  001be	eb 22		 jmp	 SHORT $LN8@getline
$LN11@getline:

; 50   :                 _Str += _Traits::to_char_type(_Meta);

  001c0	48 8d 8c 24 84
	00 00 00	 lea	 rcx, QWORD PTR _Meta$7[rsp]
  001c8	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  001cd	0f b6 d0	 movzx	 edx, al
  001d0	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _Str$[rsp]
  001d8	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 51   :                 _Changed = true;

  001dd	c6 44 24 24 01	 mov	 BYTE PTR _Changed$[rsp], 1
$LN8@getline:

; 52   :             }
; 53   :         }

  001e2	e9 d7 fe ff ff	 jmp	 $LN2@getline
$LN3@getline:
  001e7	eb 00		 jmp	 SHORT $LN5@getline
$LN19@getline:
$LN5@getline:

; 54   :         _CATCH_IO_(_Myis, _Istr)
; 55   :     }
; 56   : 
; 57   :     if (!_Changed) {

  001e9	0f b6 44 24 24	 movzx	 eax, BYTE PTR _Changed$[rsp]
  001ee	85 c0		 test	 eax, eax
  001f0	75 0b		 jne	 SHORT $LN13@getline

; 58   :         _State |= _Myis::failbit;

  001f2	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001f6	83 c8 02	 or	 eax, 2
  001f9	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN13@getline:

; 59   :     }
; 60   : 
; 61   :     _Istr.setstate(_State);

  001fd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Istr$[rsp]
  00205	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00208	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0020c	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR _Istr$[rsp]
  00214	48 03 c8	 add	 rcx, rax
  00217	48 8b c1	 mov	 rax, rcx
  0021a	45 33 c0	 xor	 r8d, r8d
  0021d	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  00221	48 8b c8	 mov	 rcx, rax
  00224	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 62   :     return _Istr;

  0022a	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR _Istr$[rsp]
  00232	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR $T9[rsp], rax
  0023a	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Ok$[rsp]
  0023f	e8 00 00 00 00	 call	 ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  00244	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR $T9[rsp]

; 63   : }

  0024c	48 8b f8	 mov	 rdi, rax
  0024f	48 8b cc	 mov	 rcx, rsp
  00252	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$rtcFrameData
  00259	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0025e	48 8b c7	 mov	 rax, rdi
  00261	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00268	5f		 pop	 rdi
  00269	c3		 ret	 0
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Changed$ = 36
_Ok$ = 56
_Metadelim$6 = 100
_Meta$7 = 132
$T8 = 148
$T9 = 152
tv163 = 160
_Istr$ = 192
_Str$ = 200
_Delim$ = 208
?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA PROC ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00017	e8 00 00 00 00	 call	 ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA ENDP ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Changed$ = 36
_Ok$ = 56
_Metadelim$6 = 100
_Meta$7 = 132
$T8 = 148
$T9 = 152
tv163 = 160
_Istr$ = 192
_Str$ = 200
_Delim$ = 208
?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA PROC ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1

; 54   :         _CATCH_IO_(_Myis, _Istr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:
  00013	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR _Istr$[rbp]
  0001a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00021	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Istr$[rbp]
  00028	48 03 c8	 add	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx
  0002e	41 b0 01	 mov	 r8b, 1
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b c8	 mov	 rcx, rax
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0003f	90		 npad	 1
  00040	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
  0004e	cc		 int	 3
?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA ENDP ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Changed$ = 36
_Ok$ = 56
_Metadelim$6 = 100
_Meta$7 = 132
$T8 = 148
$T9 = 152
tv163 = 160
_Istr$ = 192
_Str$ = 200
_Delim$ = 208
?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA PROC ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00017	e8 00 00 00 00	 call	 ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA ENDP ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Changed$ = 36
_Ok$ = 56
_Metadelim$6 = 100
_Meta$7 = 132
$T8 = 148
$T9 = 152
tv163 = 160
_Istr$ = 192
_Str$ = 200
_Delim$ = 208
?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA PROC ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1

; 54   :         _CATCH_IO_(_Myis, _Istr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:
  00013	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR _Istr$[rbp]
  0001a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00021	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR _Istr$[rbp]
  00028	48 03 c8	 add	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx
  0002e	41 b0 01	 mov	 r8b, 1
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b c8	 mov	 rcx, rax
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0003f	90		 npad	 1
  00040	48 8d 05 00 00
	00 00		 lea	 rax, $LN19@catch$1
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
  0004e	cc		 int	 3
?catch$1@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA ENDP ; `std::getline<char,std::char_traits<char>,std::allocator<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::move<std::basic_istream<char,std::char_traits<char> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::move<std::basic_istream<char,std::char_traits<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QEA_NAEA_N@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@_N@std@@YA$$QEA_NAEA_N@Z PROC		; std::forward<bool>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@_N@std@@YA$$QEA_NAEA_N@Z ENDP		; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAH@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAH@std@@YA$$QEAHAEAH@Z PROC			; std::move<int &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAH@std@@YA$$QEAHAEAH@Z ENDP			; std::move<int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Ptr$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEAPEAV_Facet_base@std@@@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV_Facet_base@1@@Z ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1><std::_Facet_base * &>
  0003a	90		 npad	 1
  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00040	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00044	5f		 pop	 rdi
  00045	c3		 ret	 0
??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAV_Facet_base@std@@PEAV12@@std@@YAPEAV_Facet_base@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::_Facet_base *,std::_Facet_base *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V_Facet_base@std@@@std@@PEAV_Facet_base@2@$00@std@@QEAAAEAU?$default_delete@V_Facet_base@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::_Facet_base>,std::_Facet_base *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ; std::default_delete<std::_Facet_base>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z
_TEXT	SEGMENT
$T1 = 32
tv70 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z PROC ; std::default_delete<std::_Facet_base>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 1b		 je	 SHORT $LN3@operator
  00035	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  0003a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003d	ba 01 00 00 00	 mov	 edx, 1
  00042	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00047	ff 10		 call	 QWORD PTR [rax]
  00049	48 89 44 24 28	 mov	 QWORD PTR tv70[rsp], rax
  0004e	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00050	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv70[rsp], 0
$LN4@operator:

; 1768 :     }

  00059	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??R?$default_delete@V_Facet_base@std@@@std@@QEBAXPEAV_Facet_base@1@@Z ENDP ; std::default_delete<std::_Facet_base>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@D@std@@@std@@YAAEBV?$allocator@D@0@AEBV10@@Z ; std::forward<std::allocator<char> const &>
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z PROC ; std::swap<EncodeStatus *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVEncodeStatus@@@std@@YA$$QEAPEAVEncodeStatus@@AEAPEAV1@@Z ; std::move<EncodeStatus * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ENDP ; std::swap<EncodeStatus *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z PROC	; std::swap<RGYLog *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAVRGYLog@@@std@@YA$$QEAPEAVRGYLog@@AEAPEAV1@@Z ; std::move<RGYLog * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ENDP	; std::swap<RGYLog *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 40
_Left$ = 80
_Right$ = 88
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 59   :     _Ty _Tmp = _STD move(_Left);

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 89 44 24 28	 mov	 QWORD PTR _Tmp$[rsp], rax

; 60   :     _Left    = _STD move(_Right);

  00035	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0003a	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0003f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Left$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0004a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Tmp$[rsp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00054	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  0005f	48 8b cc	 mov	 rcx, rsp
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  00069	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0006e	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00072	5f		 pop	 rdi
  00073	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 28	 add	 rax, 40			; 00000028H
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PEAV10@@Z ; std::_Unfancy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$_Default_allocator_traits@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@SAXAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::destroy<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
_TEXT	SEGMENT
_Pnode$ = 40
_Al$ = 80
??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z PROC ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 343  :     static _Nodeptr _Buyheadnode(_Alloc& _Al) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 344  :         static_assert(is_same_v<typename _Alloc::value_type, _Tree_node>, "Bad _Buyheadnode call");
; 345  :         const auto _Pnode = _Al.allocate(1);

  0001e	ba 01 00 00 00	 mov	 edx, 1
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Al$[rsp]
  00028	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z ; std::allocator<std::_Tree_node<int,void *> >::allocate
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Pnode$[rsp], rax

; 346  :         _Construct_in_place(_Pnode->_Left, _Pnode);

  00032	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00037	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Pnode$[rsp]
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 347  :         _Construct_in_place(_Pnode->_Parent, _Pnode);

  00044	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00049	48 83 c0 08	 add	 rax, 8
  0004d	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Pnode$[rsp]
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 348  :         _Construct_in_place(_Pnode->_Right, _Pnode);

  0005a	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$[rsp]
  0005f	48 83 c0 10	 add	 rax, 16
  00063	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Pnode$[rsp]
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_Tree_node@HPEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_Tree_node@HPEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_Tree_node<int,void *> *,std::_Tree_node<int,void *> * const &>

; 349  :         _Pnode->_Color = _Black;

  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00075	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 350  :         _Pnode->_Isnil = true;

  00079	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$[rsp]
  0007e	c6 40 19 01	 mov	 BYTE PTR [rax+25], 1

; 351  :         return _Pnode;

  00082	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$[rsp]

; 352  :     }

  00087	48 8b f8	 mov	 rdi, rax
  0008a	48 8b cc	 mov	 rcx, rsp
  0008d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z$rtcFrameData
  00094	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00099	48 8b c7	 mov	 rax, rdi
  0009c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a0	5f		 pop	 rdi
  000a1	c3		 ret	 0
??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ENDP ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 32
_Max_possible$1 = 40
_Count$ = 64
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 44 24 20 01	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00023	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0002d	48 89 44 24 28	 mov	 QWORD PTR _Max_possible$1[rsp], rax

; 30   :             if (_Count > _Max_possible) {

  00032	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  0003c	48 39 44 24 40	 cmp	 QWORD PTR _Count$[rsp], rax
  00041	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  00043	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00048	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
$LN3@Get_size_o:

; 36   : }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 48
_Bytes$ = 56
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00023	48 81 7c 24 38
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  0002c	72 10		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0002e	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Bytes$[rsp]
  00033	48 8d 4c 24 30	 lea	 rcx, QWORD PTR _Ptr$[rsp]
  00038	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0003d	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0003e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Bytes$[rsp]
  00043	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00048	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0004d	90		 npad	 1

; 192  : }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0001e	48 81 7c 24 30
	00 10 00 00	 cmp	 QWORD PTR _Bytes$[rsp], 4096 ; 00001000H
  00027	72 0c		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  0002e	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00033	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00035	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Bytes$[rsp], 0
  0003b	74 0c		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00042	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00047	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00049	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 0
_Count$ = 32
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  0001e	c6 04 24 00	 mov	 BYTE PTR _Overflow_is_possible$[rsp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00022	48 8b 44 24 20	 mov	 rax, QWORD PTR _Count$[rsp]

; 36   : }

  00027	48 83 c4 10	 add	 rsp, 16
  0002b	5f		 pop	 rdi
  0002c	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
_Left$ = 48
_Right$ = 56
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 08 00 00 00	 mov	 ecx, 8
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7f		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  0013b	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00140	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00148	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014d	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00152	4c 8b c0	 mov	 r8, rax
  00155	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0015a	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00162	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00167	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016c	48 ff c0	 inc	 rax
  0016f	4c 8b c0	 mov	 r8, rax
  00172	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0017a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00184	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00189	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00192	eb 53		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00194	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00199	48 83 c0 08	 add	 rax, 8
  0019d	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR <_Args_1>$[rsp]
  001a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001aa	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b2	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b7	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001bc	4c 8b c0	 mov	 r8, rax
  001bf	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001cc	e8 00 00 00 00	 call	 ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ; <lambda_65e615be2a453ca0576c979606f46740>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001d1	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d6	48 83 c0 08	 add	 rax, 8
  001da	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001df	48 8b c8	 mov	 rcx, rax
  001e2	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e7	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ef	48 8b f8	 mov	 rdi, rax
  001f2	48 8b cc	 mov	 rcx, rsp
  001f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z$rtcFrameData
  001fc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00201	48 8b c7	 mov	 rax, rdi
  00204	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  0020b	5f		 pop	 rdi
  0020c	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ptr$ = 96
_Count$ = 104
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z PROC ; <lambda_65e615be2a453ca0576c979606f46740>::operator(), COMDAT

; 2748 :                 const size_type _Count) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Count$[rsp]
  00056	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00063	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00068	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  0006d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
??R<lambda_65e615be2a453ca0576c979606f46740>@@QEBAXQEADQEBD_K12@Z ENDP ; <lambda_65e615be2a453ca0576c979606f46740>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
<_Args_1>$ = 192
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 7e		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	0f b6 8c 24 c0
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_1>$[rsp]
  0013b	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  0013f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00147	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0014c	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00151	4c 8b c0	 mov	 r8, rax
  00154	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  00159	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00161	e8 00 00 00 00	 call	 ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00166	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0016b	48 ff c0	 inc	 rax
  0016e	4c 8b c0	 mov	 r8, rax
  00171	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  00179	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  0017e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00183	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00188	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0018d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00191	eb 52		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00193	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00198	48 83 c0 08	 add	 rax, 8
  0019c	0f b6 8c 24 c0
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_1>$[rsp]
  001a4	88 4c 24 28	 mov	 BYTE PTR [rsp+40], cl
  001a8	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  001b0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001b5	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001ba	4c 8b c0	 mov	 r8, rax
  001bd	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001c2	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001ca	e8 00 00 00 00	 call	 ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001d4	48 83 c0 08	 add	 rax, 8
  001d8	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001dd	48 8b c8	 mov	 rcx, rax
  001e0	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001e5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001ed	48 8b f8	 mov	 rdi, rax
  001f0	48 8b cc	 mov	 rcx, rsp
  001f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z$rtcFrameData
  001fa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ff	48 8b c7	 mov	 rax, rdi
  00202	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00209	5f		 pop	 rdi
  0020a	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Count$ = 96
_Ch$ = 104
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z PROC ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator(), COMDAT

; 2773 :                 const _Elem _Ch) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2774 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2775 :                 _Traits::assign(_New_ptr + _Old_size, _Count, _Ch);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	44 0f b6 44 24
	68		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00057	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Count$[rsp]
  0005c	48 8b c8	 mov	 rcx, rax
  0005f	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2776 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00064	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00069	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  0006e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00073	48 03 c8	 add	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0007e	48 03 c8	 add	 rcx, rax
  00081	48 8b c1	 mov	 rax, rcx
  00084	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2777 :             },

  00091	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
??R<lambda_e1befb086ad3257e3f042a63030725f7>@@QEBAXQEADQEBD_K2D@Z ENDP ; <lambda_e1befb086ad3257e3f042a63030725f7>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 32
_New_capacity$ = 40
_Al$ = 48
_New_ptr$ = 72
this$ = 112
_New_size$ = 120
_Fn$ = 128
<_Args_0>$ = 136
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00037	48 39 44 24 78	 cmp	 QWORD PTR _New_size$[rsp], rax
  0003c	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0003e	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00051	48 8b 54 24 78	 mov	 rdx, QWORD PTR _New_size$[rsp]
  00056	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00060	48 89 44 24 28	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4091 :         auto& _Al                     = _Getal();

  00065	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0006f	48 89 44 24 30	 mov	 QWORD PTR _Al$[rsp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  00079	48 ff c0	 inc	 rax
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  00084	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00089	48 89 44 24 48	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  0008e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  0009b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a0	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000a5	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000a9	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000ae	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000b3	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000b7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  000c1	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR <_Args_0>$[rsp]
  000c9	4c 8b 44 24 78	 mov	 r8, QWORD PTR _New_size$[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  000d9	e8 00 00 00 00	 call	 ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  000de	48 83 7c 24 20
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  000e4	72 2e		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  000e6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  000eb	48 ff c0	 inc	 rax
  000ee	4c 8b c0	 mov	 r8, rax
  000f1	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000fa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ff	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00104	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00109	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0010e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00112	eb 16		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00114	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00119	48 83 c0 08	 add	 rax, 8
  0011d	48 8d 54 24 48	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  00122	48 8b c8	 mov	 rcx, rax
  00125	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0012a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4105 :     }

  0012f	48 8b f8	 mov	 rdi, rax
  00132	48 8b cc	 mov	 rcx, rsp
  00135	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z$rtcFrameData
  0013c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00141	48 8b c7	 mov	 rax, rdi
  00144	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00148	5f		 pop	 rdi
  00149	c3		 ret	 0
??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Count$ = 80
_Ptr$ = 88
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z PROC ; <lambda_66f57f934f28d61049862f64df852ff0>::operator(), COMDAT

; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  00041	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00046	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00050	48 03 c8	 add	 rcx, rax
  00053	48 8b c1	 mov	 rax, rcx
  00056	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00063	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??R<lambda_66f57f934f28d61049862f64df852ff0>@@QEBAXQEAD_KQEBD@Z ENDP ; <lambda_66f57f934f28d61049862f64df852ff0>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 16
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 322  :     _Obj.~_Ty();
; 323  : }

  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z PROC ; std::_Destroy_range<std::allocator<sTrim> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<sTrim> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::thread> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 10	 add	 rax, 16
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@Vthread@std@@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::destroy<std::thread>
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z
_TEXT	SEGMENT
_First$ = 48
_Last$ = 56
_Al$ = 64
??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {

  00028	eb 0e		 jmp	 SHORT $LN4@Destroy_ra
$LN2@Destroy_ra:
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR _First$[rsp]
  0002f	48 83 c0 08	 add	 rax, 8
  00033	48 89 44 24 30	 mov	 QWORD PTR _First$[rsp], rax
$LN4@Destroy_ra:
  00038	48 8b 44 24 38	 mov	 rax, QWORD PTR _Last$[rsp]
  0003d	48 39 44 24 30	 cmp	 QWORD PTR _First$[rsp], rax
  00042	74 1b		 je	 SHORT $LN3@Destroy_ra

; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));

  00044	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >
  0004e	90		 npad	 1
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$destroy@V?$unique_ptr@XUhandle_deleter@@@std@@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::destroy<std::unique_ptr<void,handle_deleter> >
  0005c	90		 npad	 1

; 1039 :         }

  0005d	eb cb		 jmp	 SHORT $LN2@Destroy_ra
$LN3@Destroy_ra:

; 1040 :     }
; 1041 : }

  0005f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z
_TEXT	SEGMENT
_First$ = 16
_Last$ = 24
_Al$ = 32
??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z PROC ; std::_Destroy_range<std::allocator<void *> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z ENDP ; std::_Destroy_range<std::allocator<void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z PROC ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z ENDP ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
<_Val2_0>$ = 72
??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1><std::less<int> const &,std::_Zero_then_variadic_args_t>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  00031	e8 00 00 00 00	 call	 ??$forward@AEBU?$less@H@std@@@std@@YAAEBU?$less@H@0@AEBU10@@Z ; std::forward<std::less<int> const &>
  00036	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Val2_0>$[rsp]
  0003b	e8 00 00 00 00	 call	 ??$forward@U_Zero_then_variadic_args_t@std@@@std@@YA$$QEAU_Zero_then_variadic_args_t@0@AEAU10@@Z ; std::forward<std::_Zero_then_variadic_args_t>
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	0f b6 10	 movzx	 edx, BYTE PTR [rax]
  00048	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1><>
  0004d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1><std::less<int> const &,std::_Zero_then_variadic_args_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z PROC ; std::addressof<std::codecvt<char,char,_Mbstatet> const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ENDP ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@D@std@@YAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@D@std@@YAPEADAEAD@Z PROC			; std::addressof<char>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@D@std@@YAPEADAEAD@Z ENDP			; std::addressof<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 32
_Obj$ = 64
<_Args_0>$ = 72
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Obj$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	b9 10 00 00 00	 mov	 ecx, 16
  00035	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0003a	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00044	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00051	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00056	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 08 00 00 00	 mov	 ecx, 8
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00027	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Val1$[rsp]
  0002c	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0003e	90		 npad	 1
  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__formal$ = 56
_Val1$ = 64
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z
_TEXT	SEGMENT
_My_data$ = 48
_Old_size$ = 56
_New_size$ = 64
_Old_capacity$ = 72
_New_capacity$ = 80
_Al$ = 88
_New_ptr$ = 104
_Raw_new$ = 120
_Old_ptr$4 = 128
this$ = 160
_Size_increase$ = 168
_Fn$ = 176
<_Args_0>$ = 184
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00045	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00049	48 89 44 24 38	 mov	 QWORD PTR _Old_size$[rsp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0004e	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00056	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0005b	48 2b 44 24 38	 sub	 rax, QWORD PTR _Old_size$[rsp]
  00060	48 3b 84 24 a8
	00 00 00	 cmp	 rax, QWORD PTR _Size_increase$[rsp]
  00068	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  0006a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0006f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR _Size_increase$[rsp]
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0007c	48 03 c8	 add	 rcx, rax
  0007f	48 8b c1	 mov	 rax, rcx
  00082	48 89 44 24 40	 mov	 QWORD PTR _New_size$[rsp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0008c	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00090	48 89 44 24 48	 mov	 QWORD PTR _Old_capacity$[rsp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  00095	48 8b 54 24 40	 mov	 rdx, QWORD PTR _New_size$[rsp]
  0009a	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000a7	48 89 44 24 50	 mov	 QWORD PTR _New_capacity$[rsp], rax

; 4120 :         auto& _Al                     = _Getal();

  000ac	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b9	48 89 44 24 58	 mov	 QWORD PTR _Al$[rsp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000be	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_capacity$[rsp]
  000c3	48 ff c0	 inc	 rax
  000c6	48 8b d0	 mov	 rdx, rax
  000c9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  000ce	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000d3	48 89 44 24 68	 mov	 QWORD PTR _New_ptr$[rsp], rax

; 4122 :         _My_data._Orphan_all();

  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000dd	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000e7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000ec	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  000f0	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000f5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _New_capacity$[rsp]
  000fa	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  000fe	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00108	48 89 44 24 78	 mov	 QWORD PTR _Raw_new$[rsp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  0010d	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Old_capacity$[rsp], 16
  00113	72 71		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00115	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0011a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0011e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Old_ptr$4[rsp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  00126	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Old_ptr$4[rsp]
  0012e	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00133	0f b6 8c 24 b8
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_0>$[rsp]
  0013b	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  0013f	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  00144	4c 8b c0	 mov	 r8, rax
  00147	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  0014c	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  00154	e8 00 00 00 00	 call	 ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  00159	48 8b 44 24 48	 mov	 rax, QWORD PTR _Old_capacity$[rsp]
  0015e	48 ff c0	 inc	 rax
  00161	4c 8b c0	 mov	 r8, rax
  00164	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Old_ptr$4[rsp]
  0016c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Al$[rsp]
  00171	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  00176	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0017b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  00180	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  00184	eb 45		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  00186	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  0018b	48 83 c0 08	 add	 rax, 8
  0018f	0f b6 8c 24 b8
	00 00 00	 movzx	 ecx, BYTE PTR <_Args_0>$[rsp]
  00197	88 4c 24 20	 mov	 BYTE PTR [rsp+32], cl
  0019b	4c 8b 4c 24 38	 mov	 r9, QWORD PTR _Old_size$[rsp]
  001a0	4c 8b c0	 mov	 r8, rax
  001a3	48 8b 54 24 78	 mov	 rdx, QWORD PTR _Raw_new$[rsp]
  001a8	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR _Fn$[rsp]
  001b0	e8 00 00 00 00	 call	 ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001b5	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  001ba	48 83 c0 08	 add	 rax, 8
  001be	48 8d 54 24 68	 lea	 rdx, QWORD PTR _New_ptr$[rsp]
  001c3	48 8b c8	 mov	 rcx, rax
  001c6	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  001cb	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
$LN5@Reallocate:

; 4137 :     }

  001d3	48 8b f8	 mov	 rdi, rax
  001d6	48 8b cc	 mov	 rcx, rsp
  001d9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z$rtcFrameData
  001e0	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001e5	48 8b c7	 mov	 rax, rdi
  001e8	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  001ef	5f		 pop	 rdi
  001f0	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_New_ptr$ = 72
_Old_ptr$ = 80
_Old_size$ = 88
_Ch$ = 96
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z PROC ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator(), COMDAT

; 3500 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem _Ch) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3501 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  0002d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Old_size$[rsp]
  00032	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Old_ptr$[rsp]
  00037	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0003c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 3502 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);

  00041	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00046	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _New_ptr$[rsp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	48 8d 54 24 60	 lea	 rdx, QWORD PTR _Ch$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3503 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());

  0005e	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00063	48 8b 44 24 48	 mov	 rax, QWORD PTR _New_ptr$[rsp]
  00068	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0006d	48 8d 44 08 01	 lea	 rax, QWORD PTR [rax+rcx+1]
  00072	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3504 :             },

  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??R<lambda_319d5e083f45f90dcdce5dce53cbb275>@@QEBAXQEADQEBD_KD@Z ENDP ; <lambda_319d5e083f45f90dcdce5dce53cbb275>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1383 :         if (_Ptr) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 16		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  0003a	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Al_$ = 72
_Mycont$ = 80
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00032	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00036	ba 01 00 00 00	 mov	 edx, 1
  0003b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al_$[rsp]
  00040	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00045	48 8b c8	 mov	 rcx, rax
  00048	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00052	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00055	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Mycont$[rsp]
  0005a	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  0005f	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00064	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00069	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  00076	48 8b 44 24 50	 mov	 rax, QWORD PTR _Mycont$[rsp]
  0007b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00080	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00083	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  00086	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 16
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 130  :         explicit __CLR_OR_THIS_CALL operator bool() const { // test if stream state okay

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 131  :             return _Ok;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 132  :         }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 115  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 116  : #if _HAS_EXCEPTIONS
; 117  :             if (!_STD uncaught_exception()) { // TRANSITION, OS#15518458

  0001e	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  00023	90		 npad	 1
  00024	0f b6 c0	 movzx	 eax, al
  00027	85 c0		 test	 eax, eax
  00029	75 0f		 jne	 SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00039	90		 npad	 1
$LN2@sentry:

; 119  :             }
; 120  : #else // _HAS_EXCEPTIONS
; 121  :             this->_Myostr._Osfx();
; 122  : #endif // _HAS_EXCEPTIONS
; 123  :         }

  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00044	90		 npad	 1
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 90   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr)

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 91   :             : _Sentry_base(_Ostr) { // construct locking and testing stream

  00023	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  00032	90		 npad	 1

; 92   :             if (!_Ostr.good()) {

  00033	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00038	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00044	48 03 c8	 add	 rcx, rax
  00047	48 8b c1	 mov	 rax, rcx
  0004a	48 8b c8	 mov	 rcx, rax
  0004d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00053	0f b6 c0	 movzx	 eax, al
  00056	85 c0		 test	 eax, eax
  00058	75 0b		 jne	 SHORT $LN2@sentry

; 93   :                 _Ok = false;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005f	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 94   :                 return;

  00063	eb 77		 jmp	 SHORT $LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

  00065	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00071	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00076	48 03 c8	 add	 rcx, rax
  00079	48 8b c1	 mov	 rax, rcx
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  00085	48 89 44 24 20	 mov	 QWORD PTR _Tied$[rsp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

  0008a	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Tied$[rsp], 0
  00090	74 0c		 je	 SHORT $LN4@sentry
  00092	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00097	48 39 44 24 20	 cmp	 QWORD PTR _Tied$[rsp], rax
  0009c	75 0b		 jne	 SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

  0009e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a3	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 100  :                 return;

  000a7	eb 33		 jmp	 SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  : 
; 104  :             _Tied->flush();

  000a9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Tied$[rsp]
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

  000b4	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ostr$[rsp]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c0	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000c5	48 03 c8	 add	 rcx, rax
  000c8	48 8b c1	 mov	 rax, rcx
  000cb	48 8b c8	 mov	 rcx, rax
  000ce	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  000d4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d9	88 41 08	 mov	 BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

  000dc	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000e1	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e5	5f		 pop	 rdi
  000e6	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 32
this$ = 64
_Ostr$ = 72
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 32
tv72 = 40
this$ = 64
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 76   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 77   :             const auto _Rdbuf = _Myostr.rdbuf();

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00026	48 89 44 24 28	 mov	 QWORD PTR tv72[rsp], rax
  0002b	48 8b 44 24 28	 mov	 rax, QWORD PTR tv72[rsp]
  00030	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00033	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00037	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv72[rsp]
  0003c	48 03 c8	 add	 rcx, rax
  0003f	48 8b c1	 mov	 rax, rcx
  00042	48 8b c8	 mov	 rcx, rax
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0004b	90		 npad	 1
  0004c	48 89 44 24 20	 mov	 QWORD PTR _Rdbuf$[rsp], rax

; 78   :             if (_Rdbuf) {

  00051	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Rdbuf$[rsp], 0
  00057	74 11		 je	 SHORT $LN2@Sentry_bas

; 79   :                 _Rdbuf->_Unlock();

  00059	48 8b 44 24 20	 mov	 rax, QWORD PTR _Rdbuf$[rsp]
  0005e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rdbuf$[rsp]
  00066	ff 50 10	 call	 QWORD PTR [rax+16]
  00069	90		 npad	 1
$LN2@Sentry_bas:

; 80   :             }
; 81   :         }

  0006a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 32
tv73 = 40
this$ = 64
_Ostr$ = 72
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 69   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0002d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 70   :             const auto _Rdbuf = _Myostr.rdbuf();

  00030	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00038	48 89 44 24 28	 mov	 QWORD PTR tv73[rsp], rax
  0003d	48 8b 44 24 28	 mov	 rax, QWORD PTR tv73[rsp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00049	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv73[rsp]
  0004e	48 03 c8	 add	 rcx, rax
  00051	48 8b c1	 mov	 rax, rcx
  00054	48 8b c8	 mov	 rcx, rax
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0005d	48 89 44 24 20	 mov	 QWORD PTR _Rdbuf$[rsp], rax

; 71   :             if (_Rdbuf) {

  00062	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Rdbuf$[rsp], 0
  00068	74 10		 je	 SHORT $LN2@Sentry_bas

; 72   :                 _Rdbuf->_Lock();

  0006a	48 8b 44 24 20	 mov	 rax, QWORD PTR _Rdbuf$[rsp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Rdbuf$[rsp]
  00077	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 73   :             }
; 74   :         }

  0007a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@UsTrim@@@std@@QEAA@XZ ; std::allocator<sTrim>::allocator<sTrim>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<sTrim> >::_Vector_val<std::_Simple_types<sTrim> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><sTrim>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><sTrim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@Vthread@std@@@std@@QEAA@XZ ; std::allocator<std::thread>::allocator<std::thread>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 04	 sar	 rax, 4
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 04	 sar	 rax, 4
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ; std::allocator<std::thread>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  000fb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00100	48 8d 44 01 10	 lea	 rax, QWORD PTR [rcx+rax+16]
  00105	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  0010a	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010f	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00114	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011c	e8 00 00 00 00	 call	 ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
  00121	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00126	48 6b 4c 24 40
	10		 imul	 rcx, QWORD PTR _Whereoff$[rsp], 16
  0012c	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00131	48 03 d1	 add	 rdx, rcx
  00134	48 8b ca	 mov	 rcx, rdx
  00137	e8 00 00 00 00	 call	 ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
  0013c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  00141	4c 8b c1	 mov	 r8, rcx
  00144	48 8b d0	 mov	 rdx, rax
  00147	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  0014c	e8 00 00 00 00	 call	 ??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  00151	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  00157	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0015c	48 03 c8	 add	 rcx, rax
  0015f	48 8b c1	 mov	 rax, rcx
  00162	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00167	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0016c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0016f	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00177	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00179	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0017e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00183	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00186	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0018b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0018e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00196	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  0019b	eb 5d		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  0019d	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  001a2	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001aa	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001af	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001b2	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ba	e8 00 00 00 00	 call	 ?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001bf	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c4	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c9	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  001cf	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  001d4	48 8d 44 01 10	 lea	 rax, QWORD PTR [rcx+rax+16]
  001d9	4c 8b c8	 mov	 r9, rax
  001dc	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001e1	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001e4	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001ec	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001f4	e8 00 00 00 00	 call	 ?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove
  001f9	90		 npad	 1
$LN5@Emplace_re:
  001fa	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001fc	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  00201	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  00206	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  0020b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00213	e8 00 00 00 00	 call	 ?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00218	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Whereoff$[rsp], 16
  0021e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  00223	48 03 c8	 add	 rcx, rax
  00226	48 8b c1	 mov	 rax, rcx

; 718  :     }

  00229	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00230	5f		 pop	 rdi
  00231	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0thread@std@@QEAA@$$QEAV01@@Z ; std::thread::thread

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z PROC ; std::_Unfancy<std::thread>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ENDP ; std::_Unfancy<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_back_with_unused_capacity<std::thread>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@Vthread@std@@@std@@YAPEAVthread@0@PEAV10@@Z ; std::_Unfancy<std::thread>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@Vthread@std@@V12@@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SAXAEAV?$allocator@Vthread@std@@@1@QEAVthread@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::construct<std::thread,std::thread>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 10	 add	 rax, 16
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_back_with_unused_capacity<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z PROC ; std::forward<std::thread>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ENDP ; std::forward<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<std::thread>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAX$$QEAVthread@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_back_with_unused_capacity<std::thread>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@Vthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::forward<std::thread>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAPEAVthread@1@QEAV21@$$QEAV21@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Emplace_reallocate<std::thread>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z PROC ; std::move<std::thread &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ENDP ; std::move<std::thread &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocator<std::unique_ptr<void,handle_deleter> >
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<void,handle_deleter> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::construct<std::unique_ptr<void,handle_deleter>,std::unique_ptr<void,handle_deleter> >

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA PROC ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z@4HA ENDP ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::construct<std::unique_ptr<void,handle_deleter>,std::unique_ptr<void,handle_deleter> >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter>

; 759  :     }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::construct<std::unique_ptr<void,handle_deleter>,std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z PROC ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z ENDP ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back_with_unused_capacity<std::unique_ptr<void,handle_deleter> >, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@PEAV10@@Z ; std::_Unfancy<std::unique_ptr<void,handle_deleter> >
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@V?$unique_ptr@XUhandle_deleter@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SAXAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@QEAV?$unique_ptr@XUhandle_deleter@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::construct<std::unique_ptr<void,handle_deleter>,std::unique_ptr<void,handle_deleter> >

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back_with_unused_capacity<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z PROC ; std::forward<std::unique_ptr<void,handle_deleter> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ENDP ; std::forward<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::emplace_back<std::unique_ptr<void,handle_deleter> >, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_back_with_unused_capacity<std::unique_ptr<void,handle_deleter> >
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::forward<std::unique_ptr<void,handle_deleter> >
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@1@QEAV21@$$QEAV21@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Emplace_reallocate<std::unique_ptr<void,handle_deleter> >
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::emplace_back<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@PEAX@std@@QEAA@XZ ; std::allocator<void *>::allocator<void *>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<void *> >::_Vector_val<std::_Simple_types<void *> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><void *>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z
_TEXT	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z PROC ; std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

  0002e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  0003b	48 89 44 24 20	 mov	 QWORD PTR _Al$[rsp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

  00040	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 89 44 24 28	 mov	 QWORD PTR _My_data$[rsp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

  0004d	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 44 24 30	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

  0005b	48 8b 44 24 28	 mov	 rax, QWORD PTR _My_data$[rsp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 44 24 38	 mov	 QWORD PTR _Mylast$[rsp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Whereptr$[rsp]
  00079	48 2b c8	 sub	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 c1 f8 03	 sar	 rax, 3
  00083	48 89 44 24 40	 mov	 QWORD PTR _Whereoff$[rsp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

  00088	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00092	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00095	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00098	48 2b c1	 sub	 rax, rcx
  0009b	48 c1 f8 03	 sar	 rax, 3
  0009f	48 89 44 24 48	 mov	 QWORD PTR _Oldsize$[rsp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

  000a4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ac	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::max_size
  000b1	48 39 44 24 48	 cmp	 QWORD PTR _Oldsize$[rsp], rax
  000b6	75 05		 jne	 SHORT $LN2@Emplace_re

; 689  :             _Xlength();

  000b8	e8 00 00 00 00	 call	 ?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ ; std::vector<void *,std::allocator<void *> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

  000bd	48 8b 44 24 48	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 89 44 24 50	 mov	 QWORD PTR _Newsize$[rsp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  000ca	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  000cf	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z ; std::vector<void *,std::allocator<void *> >::_Calculate_growth
  000dc	48 89 44 24 58	 mov	 QWORD PTR _Newcapacity$[rsp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

  000e1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  000e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  000eb	e8 00 00 00 00	 call	 ?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z ; std::allocator<void *>::allocate
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Newvec$[rsp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  000f5	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  000ff	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  00104	48 89 44 24 68	 mov	 QWORD PTR _Constructed_last$[rsp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

  00109	48 8b 44 24 68	 mov	 rax, QWORD PTR _Constructed_last$[rsp]
  0010e	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  00113	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0011b	e8 00 00 00 00	 call	 ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::forward<void *>
  00120	48 89 44 24 78	 mov	 QWORD PTR tv90[rsp], rax
  00125	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0012a	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Whereoff$[rsp]
  0012f	48 8d 0c d1	 lea	 rcx, QWORD PTR [rcx+rdx*8]
  00133	e8 00 00 00 00	 call	 ??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z ; std::_Unfancy<void *>
  00138	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv90[rsp]
  0013d	4c 8b c1	 mov	 r8, rcx
  00140	48 8b d0	 mov	 rdx, rax
  00143	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Al$[rsp]
  00148	e8 00 00 00 00	 call	 ??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z ; std::_Default_allocator_traits<std::allocator<void *> >::construct<void *,void *>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

  0014d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00152	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  00157	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  0015b	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

  00160	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00165	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00168	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Whereptr$[rsp], rax
  00170	75 24		 jne	 SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00172	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  00177	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0017c	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0017f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00184	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00187	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0018f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

  00194	eb 5c		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

  00196	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Newvec$[rsp]
  0019b	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Whereptr$[rsp]
  001a3	48 8b 44 24 30	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  001a8	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  001ab	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove

; 707  :             _Constructed_first = _Newvec;

  001b8	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001bd	48 89 44 24 70	 mov	 QWORD PTR _Constructed_first$[rsp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

  001c2	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  001c7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  001cc	48 8d 44 c8 08	 lea	 rax, QWORD PTR [rax+rcx*8+8]
  001d1	4c 8b c8	 mov	 r9, rax
  001d4	48 8b 44 24 38	 mov	 rax, QWORD PTR _Mylast$[rsp]
  001d9	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  001dc	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Whereptr$[rsp]
  001e4	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001ec	e8 00 00 00 00	 call	 ?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z ; std::vector<void *,std::allocator<void *> >::_Umove
  001f1	90		 npad	 1
$LN5@Emplace_re:
  001f2	eb 00		 jmp	 SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  001f4	4c 8b 4c 24 58	 mov	 r9, QWORD PTR _Newcapacity$[rsp]
  001f9	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newsize$[rsp]
  001fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Newvec$[rsp]
  00203	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0020b	e8 00 00 00 00	 call	 ?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z ; std::vector<void *,std::allocator<void *> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

  00210	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00215	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Whereoff$[rsp]
  0021a	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 718  :     }

  0021e	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  00225	5f		 pop	 rdi
  00226	c3		 ret	 0
$LN11@Emplace_re:
??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA PROC ; `std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z ; std::allocator<void *>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA ENDP ; `std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 32
_My_data$ = 40
_Myfirst$ = 48
_Mylast$ = 56
_Whereoff$ = 64
_Oldsize$ = 72
_Newsize$ = 80
_Newcapacity$ = 88
_Newvec$ = 96
_Constructed_last$ = 104
_Constructed_first$ = 112
tv90 = 120
this$ = 144
_Whereptr$ = 152
<_Val_0>$ = 160
?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA PROC ; `std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>'::`1'::catch$0

; 710  :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

  00013	4c 8b 45 68	 mov	 r8, QWORD PTR _Constructed_last$[rbp]
  00017	48 8b 55 70	 mov	 rdx, QWORD PTR _Constructed_first$[rbp]
  0001b	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00022	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

  00027	4c 8b 45 58	 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  0002b	48 8b 55 60	 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0002f	48 8b 4d 20	 mov	 rcx, QWORD PTR _Al$[rbp]
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z ; std::allocator<void *>::deallocate

; 713  :         _RERAISE;

  00038	33 d2		 xor	 edx, edx
  0003a	33 c9		 xor	 ecx, ecx
  0003c	e8 00 00 00 00	 call	 _CxxThrowException
  00041	90		 npad	 1

; 714  :         _CATCH_END

  00042	48 8d 05 00 00
	00 00		 lea	 rax, $LN10@catch$0
  00049	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
  00050	cc		 int	 3
?catch$0@?0???$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z@4HA ENDP ; `std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z
_TEXT	SEGMENT
$T1 = 32
__formal$ = 64
_Ptr$ = 72
<_Args_0>$ = 80
??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z PROC ; std::_Default_allocator_traits<std::allocator<void *> >::construct<void *,void *>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

  00028	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	b9 08 00 00 00	 mov	 ecx, 8
  00032	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00037	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR <_Args_0>$[rsp]
  00041	e8 00 00 00 00	 call	 ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::forward<void *>
  00046	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 759  :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z ENDP ; std::_Default_allocator_traits<std::allocator<void *> >::construct<void *,void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z PROC		; std::_Unfancy<void *>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z ENDP		; std::_Unfancy<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
tv67 = 56
tv70 = 64
this$ = 96
<_Val_0>$ = 104
??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z PROC ; std::vector<void *,std::allocator<void *> >::_Emplace_back_with_unused_capacity<void *>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

  0003b	48 8b 4c 24 68	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00040	e8 00 00 00 00	 call	 ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::forward<void *>
  00045	48 89 44 24 38	 mov	 QWORD PTR tv67[rsp], rax
  0004a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  0004f	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00052	e8 00 00 00 00	 call	 ??$_Unfancy@PEAX@std@@YAPEAPEAXPEAPEAX@Z ; std::_Unfancy<void *>
  00057	48 89 44 24 40	 mov	 QWORD PTR tv70[rsp], rax
  0005c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  00066	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv67[rsp]
  0006b	4c 8b c1	 mov	 r8, rcx
  0006e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv70[rsp]
  00073	48 8b d1	 mov	 rdx, rcx
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??$construct@PEAXPEAX@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SAXAEAV?$allocator@PEAX@1@QEAPEAX$$QEAPEAX@Z ; std::_Default_allocator_traits<std::allocator<void *> >::construct<void *,void *>

; 639  :         _Orphan_range(_Mylast, _Mylast);

  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00083	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00086	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0008b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00093	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax

; 641  :         ++_Mylast;

  000a5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	48 83 c0 08	 add	 rax, 8
  000b1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000b6	48 89 01	 mov	 QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;
; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

  000b9	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000bd	5f		 pop	 rdi
  000be	c3		 ret	 0
??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Emplace_back_with_unused_capacity<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z
_TEXT	SEGMENT
_Arg$ = 16
??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z PROC		; std::forward<void *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1422 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ENDP		; std::forward<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z
_TEXT	SEGMENT
_My_data$ = 32
_Mylast$ = 40
_Result$ = 48
this$ = 80
<_Val_0>$ = 88
??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z PROC ; std::vector<void *,std::allocator<void *> >::emplace_back<void *>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 10	 add	 rax, 16
  00036	48 89 44 24 28	 mov	 QWORD PTR _Mylast$[rsp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

  0003b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00045	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00049	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004c	74 19		 je	 SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

  0004e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  00053	e8 00 00 00 00	 call	 ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::forward<void *>
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::_Emplace_back_with_unused_capacity<void *>
  00065	eb 24		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

  00067	48 8b 4c 24 58	 mov	 rcx, QWORD PTR <_Val_0>$[rsp]
  0006c	e8 00 00 00 00	 call	 ??$forward@PEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::forward<void *>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXQEAPEAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::_Emplace_reallocate<void *>
  00086	48 89 44 24 30	 mov	 QWORD PTR _Result$[rsp], rax
$LN1@emplace_ba:

; 660  : #if _HAS_CXX17
; 661  :         return _Result;
; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

  0008b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::emplace_back<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z PROC		; std::move<void * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z ENDP		; std::move<void * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z PROC ; std::_Unfancy_maybe_null<void *>, COMDAT

; 347  : _Ty* _Unfancy_maybe_null(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 348  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 349  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z ENDP ; std::_Unfancy_maybe_null<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 32
$T1 = 40
this$ = 64
_Al$ = 72
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  00023	ba 01 00 00 00	 mov	 edx, 1
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0003a	48 89 44 24 20	 mov	 QWORD PTR _New_proxy$[rsp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 89 44 24 28	 mov	 QWORD PTR $T1[rsp], rax
  00049	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _New_proxy$[rsp]
  00062	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _New_proxy$[rsp]
  0006a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@H@std@@QEAA@XZ ; std::allocator<int>::allocator<int>
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 0
_Val$ = 32
_New_val$ = 40
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Old_val$[rsp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR _Val$[rsp]
  00034	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _New_val$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Old_val$[rsp]

; 530  : }

  00043	48 83 c4 10	 add	 rsp, 16
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 48
_Ptr$ = 56
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Al$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >

; 1114 : }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<int,void *> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<int,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Al$ = 56
??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_head<std::allocator<std::_Tree_node<int,void *> > >, COMDAT

; 752  :     void _Erase_head(_Alnode& _Al) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 753  :         this->_Orphan_all();

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 754  :         _Erase_tree(_Al, _Myhead->_Parent);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00036	4c 8b 40 08	 mov	 r8, QWORD PTR [rax+8]
  0003a	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Al$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00044	e8 00 00 00 00	 call	 ??$_Erase_tree@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU?$_Tree_node@HPEAX@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_tree<std::allocator<std::_Tree_node<int,void *> > >

; 755  :         _Alnode::value_type::_Freenode0(_Al, _Myhead);

  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004e	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00052	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Al$[rsp]
  00057	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@PEAU01@@Z ; std::_Tree_node<int,void *>::_Freenode0<std::allocator<std::_Tree_node<int,void *> > >

; 756  :     }

  0005c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00060	5f		 pop	 rdi
  00061	c3		 ret	 0
??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_head<std::allocator<std::_Tree_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 26   :     return _Right < _Left ? _Right : _Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Min_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Min_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 27   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
_TEXT	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z PROC ; std::use_facet<std::codecvt<char,char,_Mbstatet> >, COMDAT

; 427  : const _Facet& __CRTDECL use_facet(const locale& _Loc) { // get facet reference from locale

$LN11:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 428  :     _BEGIN_LOCK(_LOCK_LOCALE) // the thread lock, make get atomic

  00024	33 d2		 xor	 edx, edx
  00026	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  0002b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00031	90		 npad	 1

; 429  :     const locale::facet* _Psave = _Facetptr<_Facet>::_Psave; // static pointer to lazy facet

  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave
  00039	48 89 44 24 48	 mov	 QWORD PTR _Psave$7[rsp], rax

; 430  : 
; 431  :     const size_t _Id         = _Facet::id;

  0003e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??Bid@locale@std@@QEAA_KXZ
  0004b	48 89 44 24 58	 mov	 QWORD PTR _Id$8[rsp], rax

; 432  :     const locale::facet* _Pf = _Loc._Getfacet(_Id);

  00050	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Id$8[rsp]
  00055	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Loc$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ; std::locale::_Getfacet
  00062	48 89 44 24 60	 mov	 QWORD PTR _Pf$9[rsp], rax

; 433  : 
; 434  :     if (!_Pf) {

  00067	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Pf$9[rsp], 0
  0006d	0f 85 97 00 00
	00		 jne	 $LN2@use_facet

; 435  :         if (_Psave) {

  00073	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Psave$7[rsp], 0
  00079	74 0f		 je	 SHORT $LN3@use_facet

; 436  :             _Pf = _Psave; // lazy facet already allocated

  0007b	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  00080	48 89 44 24 60	 mov	 QWORD PTR _Pf$9[rsp], rax
  00085	e9 80 00 00 00	 jmp	 $LN2@use_facet
$LN3@use_facet:

; 437  :         } else if (_Facet::_Getcat(&_Psave, &_Loc) == static_cast<size_t>(-1)) {

  0008a	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Loc$[rsp]
  00092	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Psave$7[rsp]
  00097	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  0009d	48 83 f8 ff	 cmp	 rax, -1
  000a1	75 08		 jne	 SHORT $LN5@use_facet

; 438  : #if _HAS_EXCEPTIONS
; 439  :             _Throw_bad_cast(); // lazy disallowed

  000a3	e8 00 00 00 00	 call	 ?_Throw_bad_cast@std@@YAXXZ ; std::_Throw_bad_cast
  000a8	90		 npad	 1

; 440  : #else // _HAS_EXCEPTIONS
; 441  :             abort(); // lazy disallowed
; 442  : #endif // _HAS_EXCEPTIONS
; 443  :         } else { // queue up lazy facet for destruction

  000a9	eb 5f		 jmp	 SHORT $LN2@use_facet
$LN5@use_facet:

; 444  :             auto _Pfmod = const_cast<locale::facet*>(_Psave);

  000ab	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  000b0	48 89 44 24 68	 mov	 QWORD PTR _Pfmod$10[rsp], rax

; 445  :             unique_ptr<_Facet_base> _Psave_guard(static_cast<_Facet_base*>(_Pfmod));

  000b5	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Pfmod$10[rsp]
  000ba	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rsp]
  000bf	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V_Facet_base@std@@@std@@$0A@@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@PEAV_Facet_base@1@@Z ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> ><std::default_delete<std::_Facet_base>,0>
  000c4	90		 npad	 1

; 446  : 
; 447  : #if defined(_M_CEE)
; 448  :             _Facet_Register_m(_Pfmod);
; 449  : #else // defined(_M_CEE)
; 450  :             _Facet_Register(_Pfmod);

  000c5	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Pfmod$10[rsp]
  000ca	e8 00 00 00 00	 call	 ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z ; std::_Facet_Register

; 451  : #endif // defined(_M_CEE)
; 452  : 
; 453  :             _Pfmod->_Incref();

  000cf	48 8b 44 24 68	 mov	 rax, QWORD PTR _Pfmod$10[rsp]
  000d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Pfmod$10[rsp]
  000dc	ff 50 08	 call	 QWORD PTR [rax+8]

; 454  :             _Facetptr<_Facet>::_Psave = _Psave;

  000df	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  000e4	48 89 05 00 00
	00 00		 mov	 QWORD PTR ?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB, rax ; std::_Facetptr<std::codecvt<char,char,_Mbstatet> >::_Psave

; 455  :             _Pf                       = _Psave;

  000eb	48 8b 44 24 48	 mov	 rax, QWORD PTR _Psave$7[rsp]
  000f0	48 89 44 24 60	 mov	 QWORD PTR _Pf$9[rsp], rax

; 456  : 
; 457  :             (void) _Psave_guard.release();

  000f5	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rsp]
  000fa	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAAPEAV_Facet_base@2@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::release
  000ff	90		 npad	 1

; 458  :         }

  00100	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rsp]
  00105	e8 00 00 00 00	 call	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
$LN2@use_facet:

; 459  :     }
; 460  : 
; 461  :     return static_cast<const _Facet&>(*_Pf); // should be dynamic_cast

  0010a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Pf$9[rsp]
  0010f	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR $T12[rsp], rax
  00117	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  0011c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00122	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR $T12[rsp]

; 462  :     _END_LOCK()
; 463  : } // end of use_facet body

  0012a	48 8b f8	 mov	 rdi, rax
  0012d	48 8b cc	 mov	 rcx, rsp
  00130	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z$rtcFrameData
  00137	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0013c	48 8b c7	 mov	 rax, rdi
  0013f	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00146	5f		 pop	 rdi
  00147	c3		 ret	 0
$LN10@use_facet:
??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ENDP ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$6 = 36
_Psave$7 = 72
_Id$8 = 88
_Pf$9 = 96
_Pfmod$10 = 104
_Psave_guard$11 = 120
$T12 = 136
_Loc$ = 160
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA PROC ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 78	 lea	 rcx, QWORD PTR _Psave_guard$11[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >::~unique_ptr<std::_Facet_base,std::default_delete<std::_Facet_base> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA ENDP ; `std::use_facet<std::codecvt<char,char,_Mbstatet> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 16
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z PROC ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 280  :     return __builtin_addressof(_Val);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 281  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ENDP ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z
_TEXT	SEGMENT
_Val$ = 48
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z PROC ; std::pointer_traits<char *>::pointer_to, COMDAT

; 299  :     _NODISCARD static pointer pointer_to(_Reftype _Val) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 300  :         return _STD addressof(_Val);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Val$[rsp]
  00023	e8 00 00 00 00	 call	 ??$addressof@D@std@@YAPEADAEAD@Z ; std::addressof<char>

; 301  :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ENDP ; std::pointer_traits<char *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 16
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 294  :     return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ptr$[rsp]

; 295  : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z
_TEXT	SEGMENT
$T1 = 0
tv65 = 8
_Left$ = 32
_Right$ = 40
??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z PROC	; std::_Max_value<char *>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 33   :     return _Left < _Right ? _Right : _Left;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	73 0c		 jae	 SHORT $LN3@Max_value
  00035	48 8b 44 24 28	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
  0003f	eb 0a		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00046	48 89 44 24 08	 mov	 QWORD PTR tv65[rsp], rax
$LN4@Max_value:
  0004b	48 8b 44 24 08	 mov	 rax, QWORD PTR tv65[rsp]
  00050	48 89 04 24	 mov	 QWORD PTR $T1[rsp], rax
  00054	48 8b 04 24	 mov	 rax, QWORD PTR $T1[rsp]

; 34   : }

  00058	48 83 c4 10	 add	 rsp, 16
  0005c	5f		 pop	 rdi
  0005d	c3		 ret	 0
??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ENDP	; std::_Max_value<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 16
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT

; 66   :     operator streamoff() const { // return offset

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 67   :                                  // TRANSITION, ABI: We currently always set _Fpos to 0 but older .objs containing old
; 68   :                                  // basic_filebuf would set _Fpos.
; 69   :         return _Myoff + _Fpos;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0000e	48 8b 4c 24 10	 mov	 rcx, QWORD PTR this$[rsp]
  00013	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 70   :     }

  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ
_TEXT	SEGMENT
this$ = 16
__$ReturnUdt$ = 24
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ PROC ; std::fpos<_Mbstatet>::state, COMDAT

; 58   :     _NODISCARD _Statetype state() const { // return conversion state

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 59   :         return _Mystate;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00014	48 8b 4c 24 18	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00019	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001c	48 8b 44 24 18	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 60   :     }

  00021	5f		 pop	 rdi
  00022	c3		 ret	 0
?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ENDP ; std::fpos<_Mbstatet>::state
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z
_TEXT	SEGMENT
this$ = 16
_State$ = 24
_Fileposition$ = 32
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z PROC	; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 55   :         : _Myoff(_Fileposition), _Fpos(0), _Mystate(_State) { // construct with conversion state and C file position

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Fileposition$[rsp]
  0001a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0001d	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00022	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0002a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _State$[rsp]
  00034	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 56   :     }

  00038	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ENDP	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\iosfwd
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z
_TEXT	SEGMENT
this$ = 16
_Off$ = 24
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT

; 51   :     /* implicit */ fpos(streamoff _Off = 0) : _Myoff(_Off), _Fpos(0), _Mystate() { // construct with stream offset

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Off$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	48 83 c0 10	 add	 rax, 16
  0002e	48 8b f8	 mov	 rdi, rax
  00031	33 c0		 xor	 eax, eax
  00033	b9 08 00 00 00	 mov	 ecx, 8
  00038	f3 aa		 rep stosb

; 52   :     }

  0003a	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv285 = 136
tv283 = 137
_Ostr$ = 160
_Val$ = 168
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 738  :     const char* _Val) { // insert NTBS into char stream

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]

; 739  :     using _Elem = char;
; 740  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 741  : 
; 742  :     ios_base::iostate _State = ios_base::goodbit;

  00029	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _State$[rsp], 0

; 743  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

  00031	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _Val$[rsp]
  00039	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0003e	48 89 44 24 28	 mov	 QWORD PTR _Count$[rsp], rax

; 744  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

  00043	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00052	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0005a	48 03 c8	 add	 rcx, rax
  0005d	48 8b c1	 mov	 rax, rcx
  00060	48 8b c8	 mov	 rcx, rax
  00063	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00069	48 85 c0	 test	 rax, rax
  0006c	7e 62		 jle	 SHORT $LN17@operator
  0006e	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00076	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00079	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0007d	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 8b c8	 mov	 rcx, rax
  0008e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00094	48 3b 44 24 28	 cmp	 rax, QWORD PTR _Count$[rsp]
  00099	7e 35		 jle	 SHORT $LN17@operator
  0009b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  000a3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a6	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000aa	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  000b2	48 03 c8	 add	 rcx, rax
  000b5	48 8b c1	 mov	 rax, rcx
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000c1	48 2b 44 24 28	 sub	 rax, QWORD PTR _Count$[rsp]
  000c6	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR tv137[rsp], rax
  000ce	eb 0c		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000d0	48 c7 84 24 80
	00 00 00 00 00
	00 00		 mov	 QWORD PTR tv137[rsp], 0
$LN18@operator:
  000dc	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR tv137[rsp]
  000e4	48 89 44 24 30	 mov	 QWORD PTR _Pad$[rsp], rax

; 745  :     const typename _Myos::sentry _Ok(_Ostr);

  000e9	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  000f1	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ok$[rsp]
  000f6	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  000fb	90		 npad	 1

; 746  : 
; 747  :     if (!_Ok) {

  000fc	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00101	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00106	0f b6 c0	 movzx	 eax, al
  00109	85 c0		 test	 eax, eax
  0010b	75 10		 jne	 SHORT $LN8@operator

; 748  :         _State |= ios_base::badbit;

  0010d	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  00111	83 c8 04	 or	 eax, 4
  00114	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 749  :     } else { // state okay, insert

  00118	e9 27 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 750  :         _TRY_IO_BEGIN
; 751  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

  0011d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00125	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00128	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0012c	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00134	48 03 c8	 add	 rcx, rax
  00137	48 8b c1	 mov	 rax, rcx
  0013a	48 8b c8	 mov	 rcx, rax
  0013d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  00143	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00148	83 f8 40	 cmp	 eax, 64			; 00000040H
  0014b	0f 84 b4 00 00
	00		 je	 $LN11@operator

; 752  :             for (; 0 < _Pad; --_Pad) { // pad on left

  00151	eb 0d		 jmp	 SHORT $LN4@operator
$LN2@operator:
  00153	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pad$[rsp]
  00158	48 ff c8	 dec	 rax
  0015b	48 89 44 24 30	 mov	 QWORD PTR _Pad$[rsp], rax
$LN4@operator:
  00160	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  00166	0f 8e 99 00 00
	00		 jle	 $LN11@operator

; 753  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  0016c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00174	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00177	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0017b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00183	48 03 c8	 add	 rcx, rax
  00186	48 8b c1	 mov	 rax, rcx
  00189	48 8b c8	 mov	 rcx, rax
  0018c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00192	88 84 24 88 00
	00 00		 mov	 BYTE PTR tv285[rsp], al
  00199	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  001a1	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  001a4	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  001a8	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  001b0	48 03 d1	 add	 rdx, rcx
  001b3	48 8b ca	 mov	 rcx, rdx
  001b6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001bc	0f b6 8c 24 88
	00 00 00	 movzx	 ecx, BYTE PTR tv285[rsp]
  001c4	0f b6 d1	 movzx	 edx, cl
  001c7	48 8b c8	 mov	 rcx, rax
  001ca	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  001d0	89 44 24 64	 mov	 DWORD PTR $T4[rsp], eax
  001d4	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  001d9	89 44 24 68	 mov	 DWORD PTR $T5[rsp], eax
  001dd	48 8d 54 24 64	 lea	 rdx, QWORD PTR $T4[rsp]
  001e2	48 8d 4c 24 68	 lea	 rcx, QWORD PTR $T5[rsp]
  001e7	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  001ec	0f b6 c0	 movzx	 eax, al
  001ef	85 c0		 test	 eax, eax
  001f1	74 0d		 je	 SHORT $LN12@operator

; 754  :                     _State |= ios_base::badbit; // insertion failed, quit

  001f3	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  001f7	83 c8 04	 or	 eax, 4
  001fa	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 755  :                     break;

  001fe	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 756  :                 }
; 757  :             }

  00200	e9 4e ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 758  :         }
; 759  : 
; 760  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

  00205	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  0020a	75 4e		 jne	 SHORT $LN13@operator
  0020c	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00214	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00217	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0021b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00223	48 03 c8	 add	 rcx, rax
  00226	48 8b c1	 mov	 rax, rcx
  00229	48 8b c8	 mov	 rcx, rax
  0022c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00232	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Count$[rsp]
  00237	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR _Val$[rsp]
  0023f	48 8b c8	 mov	 rcx, rax
  00242	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  00248	48 3b 44 24 28	 cmp	 rax, QWORD PTR _Count$[rsp]
  0024d	74 0b		 je	 SHORT $LN13@operator

; 761  :             _State |= ios_base::badbit;

  0024f	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  00253	83 c8 04	 or	 eax, 4
  00256	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax
$LN13@operator:

; 762  :         }
; 763  : 
; 764  :         if (_State == ios_base::goodbit) {

  0025a	83 7c 24 20 00	 cmp	 DWORD PTR _State$[rsp], 0
  0025f	0f 85 b4 00 00
	00		 jne	 $LN14@operator

; 765  :             for (; 0 < _Pad; --_Pad) { // pad on right

  00265	eb 0d		 jmp	 SHORT $LN7@operator
$LN5@operator:
  00267	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pad$[rsp]
  0026c	48 ff c8	 dec	 rax
  0026f	48 89 44 24 30	 mov	 QWORD PTR _Pad$[rsp], rax
$LN7@operator:
  00274	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pad$[rsp], 0
  0027a	0f 8e 99 00 00
	00		 jle	 $LN14@operator

; 766  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  00280	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00288	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0028b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0028f	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00297	48 03 c8	 add	 rcx, rax
  0029a	48 8b c1	 mov	 rax, rcx
  0029d	48 8b c8	 mov	 rcx, rax
  002a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  002a6	88 84 24 89 00
	00 00		 mov	 BYTE PTR tv283[rsp], al
  002ad	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  002b5	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  002b8	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  002bc	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Ostr$[rsp]
  002c4	48 03 d1	 add	 rdx, rcx
  002c7	48 8b ca	 mov	 rcx, rdx
  002ca	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  002d0	0f b6 8c 24 89
	00 00 00	 movzx	 ecx, BYTE PTR tv283[rsp]
  002d8	0f b6 d1	 movzx	 edx, cl
  002db	48 8b c8	 mov	 rcx, rax
  002de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  002e4	89 44 24 6c	 mov	 DWORD PTR $T6[rsp], eax
  002e8	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  002ed	89 44 24 70	 mov	 DWORD PTR $T7[rsp], eax
  002f1	48 8d 54 24 6c	 lea	 rdx, QWORD PTR $T6[rsp]
  002f6	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T7[rsp]
  002fb	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00300	0f b6 c0	 movzx	 eax, al
  00303	85 c0		 test	 eax, eax
  00305	74 0d		 je	 SHORT $LN15@operator

; 767  :                     _State |= ios_base::badbit; // insertion failed, quit

  00307	8b 44 24 20	 mov	 eax, DWORD PTR _State$[rsp]
  0030b	83 c8 04	 or	 eax, 4
  0030e	89 44 24 20	 mov	 DWORD PTR _State$[rsp], eax

; 768  :                     break;

  00312	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 769  :                 }
; 770  :             }

  00314	e9 4e ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 771  :         }
; 772  : 
; 773  :         _Ostr.width(0);

  00319	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00321	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00324	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00328	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  00330	48 03 c8	 add	 rcx, rax
  00333	48 8b c1	 mov	 rax, rcx
  00336	33 d2		 xor	 edx, edx
  00338	48 8b c8	 mov	 rcx, rax
  0033b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  00341	90		 npad	 1
  00342	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 774  :         _CATCH_IO_(ios_base, _Ostr)
; 775  :     }
; 776  : 
; 777  :     _Ostr.setstate(_State);

  00344	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  0034c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0034f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00353	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Ostr$[rsp]
  0035b	48 03 c8	 add	 rcx, rax
  0035e	48 8b c1	 mov	 rax, rcx
  00361	45 33 c0	 xor	 r8d, r8d
  00364	8b 54 24 20	 mov	 edx, DWORD PTR _State$[rsp]
  00368	48 8b c8	 mov	 rcx, rax
  0036b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 778  :     return _Ostr;

  00371	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR _Ostr$[rsp]
  00379	48 89 44 24 78	 mov	 QWORD PTR $T8[rsp], rax
  0037e	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Ok$[rsp]
  00383	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  00388	48 8b 44 24 78	 mov	 rax, QWORD PTR $T8[rsp]

; 779  : }

  0038d	48 8b f8	 mov	 rdi, rax
  00390	48 8b cc	 mov	 rcx, rsp
  00393	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
  0039a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0039f	48 8b c7	 mov	 rax, rdi
  003a2	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  003a9	5f		 pop	 rdi
  003aa	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv285 = 136
tv283 = 137
_Ostr$ = 160
_Val$ = 168
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00017	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv285 = 136
tv283 = 137
_Ostr$ = 160
_Val$ = 168
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00013	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00028	48 03 c8	 add	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx
  0002e	41 b0 01	 mov	 r8b, 1
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b c8	 mov	 rcx, rax
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0003f	90		 npad	 1
  00040	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
  0004e	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv285 = 136
tv283 = 137
_Ostr$ = 160
_Val$ = 168
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00017	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_State$ = 32
_Count$ = 40
_Pad$ = 48
_Ok$ = 72
$T4 = 100
$T5 = 104
$T6 = 108
$T7 = 112
$T8 = 120
tv137 = 128
tv285 = 136
tv283 = 137
_Ostr$ = 160
_Val$ = 168
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00013	48 8b 85 a0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00021	48 8b 8d a0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00028	48 03 c8	 add	 rcx, rax
  0002b	48 8b c1	 mov	 rax, rcx
  0002e	41 b0 01	 mov	 r8b, 1
  00031	ba 04 00 00 00	 mov	 edx, 4
  00036	48 8b c8	 mov	 rcx, rax
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0003f	90		 npad	 1
  00040	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
  0004e	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  00035	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 18		 je	 SHORT $LN2@scalar
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  0004b	ba f8 00 00 00	 mov	 edx, 248		; 000000f8H
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??_G?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 78 00 00 00	 mov	 edx, 120		; 00000078H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAAPEAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
_TEXT	SEGMENT
_State$ = 0
_Mode$ = 32
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT

; 343  :     static int _Getstate(ios_base::openmode _Mode) { // convert open mode to stream state bits

$LN7:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	57		 push	 rdi
  00005	48 83 ec 10	 sub	 rsp, 16
  00009	48 8b fc	 mov	 rdi, rsp
  0000c	b9 04 00 00 00	 mov	 ecx, 4
  00011	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00016	f3 ab		 rep stosd
  00018	8b 4c 24 20	 mov	 ecx, DWORD PTR [rsp+32]

; 344  :         int _State = 0;

  0001c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR _State$[rsp], 0

; 345  :         if (!(_Mode & ios_base::in)) {

  00023	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  00027	83 e0 01	 and	 eax, 1
  0002a	85 c0		 test	 eax, eax
  0002c	75 09		 jne	 SHORT $LN2@Getstate

; 346  :             _State |= _Noread;

  0002e	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  00031	83 c8 04	 or	 eax, 4
  00034	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN2@Getstate:

; 347  :         }
; 348  : 
; 349  :         if (!(_Mode & ios_base::out)) {

  00037	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  0003b	83 e0 02	 and	 eax, 2
  0003e	85 c0		 test	 eax, eax
  00040	75 09		 jne	 SHORT $LN3@Getstate

; 350  :             _State |= _Constant;

  00042	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  00045	83 c8 02	 or	 eax, 2
  00048	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN3@Getstate:

; 351  :         }
; 352  : 
; 353  :         if (_Mode & ios_base::app) {

  0004b	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  0004f	83 e0 08	 and	 eax, 8
  00052	85 c0		 test	 eax, eax
  00054	74 09		 je	 SHORT $LN4@Getstate

; 354  :             _State |= _Append;

  00056	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  00059	83 c8 08	 or	 eax, 8
  0005c	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN4@Getstate:

; 355  :         }
; 356  : 
; 357  :         if (_Mode & ios_base::ate) {

  0005f	8b 44 24 20	 mov	 eax, DWORD PTR _Mode$[rsp]
  00063	83 e0 04	 and	 eax, 4
  00066	85 c0		 test	 eax, eax
  00068	74 09		 je	 SHORT $LN5@Getstate

; 358  :             _State |= _Atend;

  0006a	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]
  0006d	83 c8 10	 or	 eax, 16
  00070	89 04 24	 mov	 DWORD PTR _State$[rsp], eax
$LN5@Getstate:

; 359  :         }
; 360  : 
; 361  :         return _State;

  00073	8b 04 24	 mov	 eax, DWORD PTR _State$[rsp]

; 362  :     }

  00076	48 83 c4 10	 add	 rsp, 16
  0007a	5f		 pop	 rdi
  0007b	c3		 ret	 0
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ
_TEXT	SEGMENT
tv88 = 32
tv95 = 40
this$ = 64
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT

; 323  :     void _Tidy() noexcept { // discard any allocated buffer and clear pointers

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 324  :         if (_Mystate & _Allocated) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00026	83 e0 01	 and	 eax, 1
  00029	85 c0		 test	 eax, eax
  0002b	0f 84 80 00 00
	00		 je	 $LN2@Tidy

; 325  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Mysb::eback()),

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0003c	90		 npad	 1
  0003d	48 85 c0	 test	 rax, rax
  00040	74 13		 je	 SHORT $LN4@Tidy
  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00047	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0004d	90		 npad	 1
  0004e	48 89 44 24 20	 mov	 QWORD PTR tv88[rsp], rax
  00053	eb 11		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00055	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00060	90		 npad	 1
  00061	48 89 44 24 20	 mov	 QWORD PTR tv88[rsp], rax
$LN5@Tidy:
  00066	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0006b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00071	90		 npad	 1
  00072	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv88[rsp]
  00077	48 2b c8	 sub	 rcx, rax
  0007a	48 8b c1	 mov	 rax, rcx
  0007d	48 89 44 24 28	 mov	 QWORD PTR tv95[rsp], rax
  00082	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00087	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0008d	90		 npad	 1
  0008e	48 8b c8	 mov	 rcx, rax
  00091	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
  00096	90		 npad	 1
  00097	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009c	48 83 c1 74	 add	 rcx, 116		; 00000074H
  000a0	48 8b 54 24 28	 mov	 rdx, QWORD PTR tv95[rsp]
  000a5	4c 8b c2	 mov	 r8, rdx
  000a8	48 8b d0	 mov	 rdx, rax
  000ab	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  000b0	90		 npad	 1
$LN2@Tidy:

; 326  :                 static_cast<typename allocator_traits<allocator_type>::size_type>(
; 327  :                     (_Mysb::pptr() ? _Mysb::epptr() : _Mysb::egptr()) - _Mysb::eback()));
; 328  :         }
; 329  : 
; 330  :         _Mysb::setg(nullptr, nullptr, nullptr);

  000b1	45 33 c9	 xor	 r9d, r9d
  000b4	45 33 c0	 xor	 r8d, r8d
  000b7	33 d2		 xor	 edx, edx
  000b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000be	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
  000c4	90		 npad	 1

; 331  :         _Mysb::setp(nullptr, nullptr);

  000c5	45 33 c0	 xor	 r8d, r8d
  000c8	33 d2		 xor	 edx, edx
  000ca	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD0@Z
  000d5	90		 npad	 1

; 332  :         _Seekhigh = nullptr;

  000d6	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000db	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0

; 333  :         _Mystate &= ~_Allocated;

  000e3	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000e8	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000eb	83 e0 fe	 and	 eax, -2
  000ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000f3	89 41 70	 mov	 DWORD PTR [rcx+112], eax

; 334  :     }

  000f6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fa	5f		 pop	 rdi
  000fb	c3		 ret	 0
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 32
_Gptr_old$ = 40
_Pptr_old$ = 48
_Seeklow$ = 56
_Seekdist$ = 64
_Newptr$ = 72
this$ = 96
__$ReturnUdt$ = 104
_Pos$ = 112
_Mode$ = 120
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT

; 260  :         ios_base::openmode _Mode = ios_base::in | ios_base::out) { // change position to _Pos, according to _Mode

$LN10:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 261  :         const auto _Off      = static_cast<streamoff>(_Pos);

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Pos$[rsp]
  00032	e8 00 00 00 00	 call	 ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ; std::fpos<_Mbstatet>::operator __int64
  00037	48 89 44 24 20	 mov	 QWORD PTR _Off$[rsp], rax

; 262  :         const auto _Gptr_old = _Mysb::gptr();

  0003c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00041	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00047	48 89 44 24 28	 mov	 QWORD PTR _Gptr_old$[rsp], rax

; 263  :         const auto _Pptr_old = _Mysb::pptr();

  0004c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00057	48 89 44 24 30	 mov	 QWORD PTR _Pptr_old$[rsp], rax

; 264  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

  0005c	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  00062	74 1e		 je	 SHORT $LN2@seekpos
  00064	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0006e	48 39 48 68	 cmp	 QWORD PTR [rax+104], rcx
  00072	73 0e		 jae	 SHORT $LN2@seekpos

; 265  :             _Seekhigh = _Pptr_old;

  00074	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0007e	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
$LN2@seekpos:

; 266  :         }
; 267  : 
; 268  :         const auto _Seeklow  = _Mysb::eback();

  00082	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00087	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0008d	48 89 44 24 38	 mov	 QWORD PTR _Seeklow$[rsp], rax

; 269  :         const auto _Seekdist = _Seekhigh - _Seeklow;

  00092	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  0009c	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 89 44 24 40	 mov	 QWORD PTR _Seekdist$[rsp], rax

; 270  :         if (static_cast<unsigned long long>(_Off) > static_cast<unsigned long long>(_Seekdist)) {

  000a8	48 8b 44 24 40	 mov	 rax, QWORD PTR _Seekdist$[rsp]
  000ad	48 39 44 24 20	 cmp	 QWORD PTR _Off$[rsp], rax
  000b2	76 1b		 jbe	 SHORT $LN3@seekpos

; 271  :             return pos_type(off_type(-1));

  000b4	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  000bb	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000c5	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000ca	e9 d9 00 00 00	 jmp	 $LN1@seekpos
$LN3@seekpos:

; 272  :         }
; 273  : 
; 274  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

  000cf	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  000d5	74 41		 je	 SHORT $LN4@seekpos
  000d7	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  000db	83 e0 01	 and	 eax, 1
  000de	85 c0		 test	 eax, eax
  000e0	74 08		 je	 SHORT $LN6@seekpos
  000e2	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  000e8	74 13		 je	 SHORT $LN5@seekpos
$LN6@seekpos:
  000ea	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  000ee	83 e0 02	 and	 eax, 2
  000f1	85 c0		 test	 eax, eax
  000f3	74 23		 je	 SHORT $LN4@seekpos
  000f5	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  000fb	75 1b		 jne	 SHORT $LN4@seekpos
$LN5@seekpos:

; 275  :             return pos_type(off_type(-1));

  000fd	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00104	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00109	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0010e	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00113	e9 90 00 00 00	 jmp	 $LN1@seekpos
$LN4@seekpos:

; 276  :         }
; 277  : 
; 278  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

  00118	48 8b 44 24 20	 mov	 rax, QWORD PTR _Off$[rsp]
  0011d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  00122	48 03 c8	 add	 rcx, rax
  00125	48 8b c1	 mov	 rax, rcx
  00128	48 89 44 24 48	 mov	 QWORD PTR _Newptr$[rsp], rax

; 279  :         if ((_Mode & ios_base::in) && _Gptr_old) {

  0012d	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  00131	83 e0 01	 and	 eax, 1
  00134	85 c0		 test	 eax, eax
  00136	74 26		 je	 SHORT $LN7@seekpos
  00138	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  0013e	74 1e		 je	 SHORT $LN7@seekpos

; 280  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

  00140	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00145	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  00149	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Newptr$[rsp]
  0014e	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  00153	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00158	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN7@seekpos:

; 281  :         }
; 282  : 
; 283  :         if ((_Mode & ios_base::out) && _Pptr_old) {

  0015e	8b 44 24 78	 mov	 eax, DWORD PTR _Mode$[rsp]
  00162	83 e0 02	 and	 eax, 2
  00165	85 c0		 test	 eax, eax
  00167	74 2b		 je	 SHORT $LN8@seekpos
  00169	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  0016f	74 23		 je	 SHORT $LN8@seekpos

; 284  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

  00171	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00176	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0017c	4c 8b c8	 mov	 r9, rax
  0017f	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Newptr$[rsp]
  00184	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  00189	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0018e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN8@seekpos:

; 285  :         }
; 286  : 
; 287  :         return pos_type(_Off);

  00194	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Off$[rsp]
  00199	48 8b 4c 24 68	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0019e	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  001a3	48 8b 44 24 68	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekpos:

; 288  :     }

  001a8	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001ac	5f		 pop	 rdi
  001ad	c3		 ret	 0
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Gptr_old$ = 32
_Pptr_old$ = 40
_Seeklow$ = 48
_Seekdist$ = 56
_Newoff$ = 64
_Both$1 = 72
_Newptr$ = 80
tv88 = 88
this$ = 112
__$ReturnUdt$ = 120
_Off$ = 128
_Way$ = 136
_Mode$ = 144
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT

; 201  :         ios_base::openmode _Mode = ios_base::in | ios_base::out) { // change position by _Off, according to _Way, _Mode

$LN23:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 18 00 00 00	 mov	 ecx, 24
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 202  :         const auto _Gptr_old = _Mysb::gptr();

  0002d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00038	48 89 44 24 20	 mov	 QWORD PTR _Gptr_old$[rsp], rax

; 203  :         const auto _Pptr_old = _Mysb::pptr();

  0003d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00048	48 89 44 24 28	 mov	 QWORD PTR _Pptr_old$[rsp], rax

; 204  :         if (_Pptr_old && _Seekhigh < _Pptr_old) { // update high-water pointer

  0004d	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  00053	74 1e		 je	 SHORT $LN4@seekoff
  00055	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0005f	48 39 48 68	 cmp	 QWORD PTR [rax+104], rcx
  00063	73 0e		 jae	 SHORT $LN4@seekoff

; 205  :             _Seekhigh = _Pptr_old;

  00065	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  0006f	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx
$LN4@seekoff:

; 206  :         }
; 207  : 
; 208  :         const auto _Seeklow  = _Mysb::eback();

  00073	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00078	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0007e	48 89 44 24 30	 mov	 QWORD PTR _Seeklow$[rsp], rax

; 209  :         const auto _Seekdist = _Seekhigh - _Seeklow;

  00083	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00088	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  0008d	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00091	48 2b c1	 sub	 rax, rcx
  00094	48 89 44 24 38	 mov	 QWORD PTR _Seekdist$[rsp], rax

; 210  :         off_type _Newoff;
; 211  :         switch (_Way) {

  00099	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _Way$[rsp]
  000a0	89 44 24 58	 mov	 DWORD PTR tv88[rsp], eax
  000a4	83 7c 24 58 00	 cmp	 DWORD PTR tv88[rsp], 0
  000a9	74 13		 je	 SHORT $LN5@seekoff
  000ab	83 7c 24 58 01	 cmp	 DWORD PTR tv88[rsp], 1
  000b0	74 29		 je	 SHORT $LN7@seekoff
  000b2	83 7c 24 58 02	 cmp	 DWORD PTR tv88[rsp], 2
  000b7	74 13		 je	 SHORT $LN6@seekoff
  000b9	e9 a0 00 00 00	 jmp	 $LN15@seekoff
$LN5@seekoff:

; 212  :         case ios_base::beg:
; 213  :             _Newoff = 0;

  000be	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR _Newoff$[rsp], 0

; 214  :             break;

  000c7	e9 ad 00 00 00	 jmp	 $LN2@seekoff
$LN6@seekoff:

; 215  :         case ios_base::end:
; 216  :             _Newoff = _Seekdist;

  000cc	48 8b 44 24 38	 mov	 rax, QWORD PTR _Seekdist$[rsp]
  000d1	48 89 44 24 40	 mov	 QWORD PTR _Newoff$[rsp], rax

; 217  :             break;

  000d6	e9 9e 00 00 00	 jmp	 $LN2@seekoff
$LN7@seekoff:

; 218  :         case ios_base::cur: {
; 219  :             constexpr auto _Both = ios_base::in | ios_base::out;

  000db	c7 44 24 48 03
	00 00 00	 mov	 DWORD PTR _Both$1[rsp], 3

; 220  :             if ((_Mode & _Both) != _Both) { // prohibited by N4727 [stringbuf.virtuals] Table 107 "seekoff positioning"

  000e3	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  000ea	83 e0 03	 and	 eax, 3
  000ed	83 f8 03	 cmp	 eax, 3
  000f0	74 6c		 je	 SHORT $LN8@seekoff

; 221  :                 if (_Mode & ios_base::in) {

  000f2	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  000f9	83 e0 01	 and	 eax, 1
  000fc	85 c0		 test	 eax, eax
  000fe	74 29		 je	 SHORT $LN9@seekoff

; 222  :                     if (_Gptr_old || !_Seeklow) {

  00100	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  00106	75 08		 jne	 SHORT $LN12@seekoff
  00108	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Seeklow$[rsp], 0
  0010e	75 17		 jne	 SHORT $LN11@seekoff
$LN12@seekoff:

; 223  :                         _Newoff = _Gptr_old - _Seeklow;

  00110	48 8b 44 24 30	 mov	 rax, QWORD PTR _Seeklow$[rsp]
  00115	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Gptr_old$[rsp]
  0011a	48 2b c8	 sub	 rcx, rax
  0011d	48 8b c1	 mov	 rax, rcx
  00120	48 89 44 24 40	 mov	 QWORD PTR _Newoff$[rsp], rax

; 224  :                         break;

  00125	eb 52		 jmp	 SHORT $LN2@seekoff
$LN11@seekoff:

; 225  :                     }

  00127	eb 35		 jmp	 SHORT $LN10@seekoff
$LN9@seekoff:

; 226  :                 } else if ((_Mode & ios_base::out) && (_Pptr_old || !_Seeklow)) {

  00129	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  00130	83 e0 02	 and	 eax, 2
  00133	85 c0		 test	 eax, eax
  00135	74 27		 je	 SHORT $LN13@seekoff
  00137	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  0013d	75 08		 jne	 SHORT $LN14@seekoff
  0013f	48 83 7c 24 30
	00		 cmp	 QWORD PTR _Seeklow$[rsp], 0
  00145	75 17		 jne	 SHORT $LN13@seekoff
$LN14@seekoff:

; 227  :                     _Newoff = _Pptr_old - _Seeklow;

  00147	48 8b 44 24 30	 mov	 rax, QWORD PTR _Seeklow$[rsp]
  0014c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pptr_old$[rsp]
  00151	48 2b c8	 sub	 rcx, rax
  00154	48 8b c1	 mov	 rax, rcx
  00157	48 89 44 24 40	 mov	 QWORD PTR _Newoff$[rsp], rax

; 228  :                     break;

  0015c	eb 1b		 jmp	 SHORT $LN2@seekoff
$LN13@seekoff:
$LN10@seekoff:
$LN8@seekoff:
$LN15@seekoff:

; 229  :                 }
; 230  :             }
; 231  :         }
; 232  : 
; 233  :             // fallthrough
; 234  :         default:
; 235  :             return pos_type(off_type(-1));

  0015e	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00165	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0016a	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0016f	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00174	e9 3e 01 00 00	 jmp	 $LN1@seekoff
$LN2@seekoff:

; 236  :         }
; 237  : 
; 238  :         if (static_cast<unsigned long long>(_Off) + _Newoff > static_cast<unsigned long long>(_Seekdist)) {

  00179	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newoff$[rsp]
  0017e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  00186	48 03 c8	 add	 rcx, rax
  00189	48 8b c1	 mov	 rax, rcx
  0018c	48 3b 44 24 38	 cmp	 rax, QWORD PTR _Seekdist$[rsp]
  00191	76 1b		 jbe	 SHORT $LN16@seekoff

; 239  :             return pos_type(off_type(-1));

  00193	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  0019a	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0019f	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  001a4	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  001a9	e9 09 01 00 00	 jmp	 $LN1@seekoff
$LN16@seekoff:

; 240  :         }
; 241  : 
; 242  :         _Off += _Newoff;

  001ae	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newoff$[rsp]
  001b3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _Off$[rsp]
  001bb	48 03 c8	 add	 rcx, rax
  001be	48 8b c1	 mov	 rax, rcx
  001c1	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _Off$[rsp], rax

; 243  :         if (_Off != 0 && (((_Mode & ios_base::in) && !_Gptr_old) || ((_Mode & ios_base::out) && !_Pptr_old))) {

  001c9	48 83 bc 24 80
	00 00 00 00	 cmp	 QWORD PTR _Off$[rsp], 0
  001d2	74 47		 je	 SHORT $LN17@seekoff
  001d4	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  001db	83 e0 01	 and	 eax, 1
  001de	85 c0		 test	 eax, eax
  001e0	74 08		 je	 SHORT $LN19@seekoff
  001e2	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  001e8	74 16		 je	 SHORT $LN18@seekoff
$LN19@seekoff:
  001ea	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  001f1	83 e0 02	 and	 eax, 2
  001f4	85 c0		 test	 eax, eax
  001f6	74 23		 je	 SHORT $LN17@seekoff
  001f8	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  001fe	75 1b		 jne	 SHORT $LN17@seekoff
$LN18@seekoff:

; 244  :             return pos_type(off_type(-1));

  00200	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00207	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0020c	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  00211	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00216	e9 9c 00 00 00	 jmp	 $LN1@seekoff
$LN17@seekoff:

; 245  :         }
; 246  : 
; 247  :         const auto _Newptr = _Seeklow + _Off; // may perform nullptr + 0

  0021b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR _Off$[rsp]
  00223	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Seeklow$[rsp]
  00228	48 03 c8	 add	 rcx, rax
  0022b	48 8b c1	 mov	 rax, rcx
  0022e	48 89 44 24 50	 mov	 QWORD PTR _Newptr$[rsp], rax

; 248  :         if ((_Mode & ios_base::in) && _Gptr_old) {

  00233	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  0023a	83 e0 01	 and	 eax, 1
  0023d	85 c0		 test	 eax, eax
  0023f	74 26		 je	 SHORT $LN20@seekoff
  00241	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr_old$[rsp], 0
  00247	74 1e		 je	 SHORT $LN20@seekoff

; 249  :             _Mysb::setg(_Seeklow, _Newptr, _Seekhigh);

  00249	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0024e	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  00252	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newptr$[rsp]
  00257	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  0025c	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00261	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN20@seekoff:

; 250  :         }
; 251  : 
; 252  :         if ((_Mode & ios_base::out) && _Pptr_old) {

  00267	8b 84 24 90 00
	00 00		 mov	 eax, DWORD PTR _Mode$[rsp]
  0026e	83 e0 02	 and	 eax, 2
  00271	85 c0		 test	 eax, eax
  00273	74 2b		 je	 SHORT $LN21@seekoff
  00275	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Pptr_old$[rsp], 0
  0027b	74 23		 je	 SHORT $LN21@seekoff

; 253  :             _Mysb::setp(_Seeklow, _Newptr, _Mysb::epptr());

  0027d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00282	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00288	4c 8b c8	 mov	 r9, rax
  0028b	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Newptr$[rsp]
  00290	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Seeklow$[rsp]
  00295	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0029a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN21@seekoff:

; 254  :         }
; 255  : 
; 256  :         return pos_type(_Off);

  002a0	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _Off$[rsp]
  002a8	48 8b 4c 24 78	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  002ad	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  002b2	48 8b 44 24 78	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekoff:

; 257  :     }

  002b7	48 83 c4 60	 add	 rsp, 96			; 00000060H
  002bb	5f		 pop	 rdi
  002bc	c3		 ret	 0
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ
_TEXT	SEGMENT
_Gptr$ = 32
_Pptr$ = 56
_Local_highwater$ = 72
tv142 = 80
this$ = 112
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT

; 174  :     virtual int_type underflow() { // get an element from stream, but don't point past it

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 175  :         const auto _Gptr = _Mysb::gptr();

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 89 44 24 20	 mov	 QWORD PTR _Gptr$[rsp], rax

; 176  :         if (!_Gptr) { // no character buffer, fail

  0002e	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr$[rsp], 0
  00034	75 0a		 jne	 SHORT $LN2@underflow

; 177  :             return _Traits::eof();

  00036	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0003b	e9 da 00 00 00	 jmp	 $LN1@underflow
$LN2@underflow:

; 178  :         }
; 179  : 
; 180  :         if (_Gptr < _Mysb::egptr()) { // return buffered

  00040	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0004b	48 39 44 24 20	 cmp	 QWORD PTR _Gptr$[rsp], rax
  00050	73 0f		 jae	 SHORT $LN3@underflow

; 181  :             return _Traits::to_int_type(*_Gptr);

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Gptr$[rsp]
  00057	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  0005c	e9 b9 00 00 00	 jmp	 $LN1@underflow
$LN3@underflow:

; 182  :         }
; 183  : 
; 184  :         // try to add initialized characters from the put area into the get area
; 185  :         const auto _Pptr = _Mysb::pptr();

  00061	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0006c	48 89 44 24 38	 mov	 QWORD PTR _Pptr$[rsp], rax

; 186  :         if (!_Pptr || (_Mystate & _Noread)) { // no put area or read disallowed

  00071	48 83 7c 24 38
	00		 cmp	 QWORD PTR _Pptr$[rsp], 0
  00077	74 0f		 je	 SHORT $LN5@underflow
  00079	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0007e	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00081	83 e0 04	 and	 eax, 4
  00084	85 c0		 test	 eax, eax
  00086	74 0a		 je	 SHORT $LN4@underflow
$LN5@underflow:

; 187  :             return _Traits::eof();

  00088	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0008d	e9 88 00 00 00	 jmp	 $LN1@underflow
$LN4@underflow:

; 188  :         }
; 189  : 
; 190  :         const auto _Local_highwater = _Max_value(_Seekhigh, _Pptr);

  00092	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 83 c0 68	 add	 rax, 104		; 00000068H
  0009b	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Pptr$[rsp]
  000a0	48 8b c8	 mov	 rcx, rax
  000a3	e8 00 00 00 00	 call	 ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
  000a8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ab	48 89 44 24 48	 mov	 QWORD PTR _Local_highwater$[rsp], rax

; 191  :         if (_Local_highwater <= _Gptr) { // nothing in the put area to take

  000b0	48 8b 44 24 20	 mov	 rax, QWORD PTR _Gptr$[rsp]
  000b5	48 39 44 24 48	 cmp	 QWORD PTR _Local_highwater$[rsp], rax
  000ba	77 07		 ja	 SHORT $LN6@underflow

; 192  :             return _Traits::eof();

  000bc	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000c1	eb 57		 jmp	 SHORT $LN1@underflow
$LN6@underflow:

; 193  :         }
; 194  : 
; 195  :         _Seekhigh = _Local_highwater;

  000c3	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000c8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Local_highwater$[rsp]
  000cd	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 196  :         _Mysb::setg(_Mysb::eback(), _Mysb::gptr(), _Local_highwater);

  000d1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000d6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000dc	48 89 44 24 50	 mov	 QWORD PTR tv142[rsp], rax
  000e1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000e6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000ec	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Local_highwater$[rsp]
  000f1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv142[rsp]
  000f6	4c 8b c1	 mov	 r8, rcx
  000f9	48 8b d0	 mov	 rdx, rax
  000fc	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00101	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 197  :         return _Traits::to_int_type(*_Mysb::gptr());

  00107	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00112	48 8b c8	 mov	 rcx, rax
  00115	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
$LN1@underflow:

; 198  :     }

  0011a	48 8b f8	 mov	 rdi, rax
  0011d	48 8b cc	 mov	 rcx, rsp
  00120	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ$rtcFrameData
  00127	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0012c	48 8b c7	 mov	 rax, rdi
  0012f	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00133	5f		 pop	 rdi
  00134	c3		 ret	 0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Gptr$ = 32
$T1 = 40
$T2 = 44
$T3 = 48
tv143 = 52
this$ = 80
_Meta$ = 88
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT

; 157  :     virtual int_type pbackfail(int_type _Meta = _Traits::eof()) { // put an element back to stream

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 158  :         const auto _Gptr = _Mysb::gptr();

  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Gptr$[rsp], rax

; 159  :         if (!_Gptr || _Gptr <= _Mysb::eback()
; 160  :             || (!_Traits::eq_int_type(_Traits::eof(), _Meta) && !_Traits::eq(_Traits::to_char_type(_Meta), _Gptr[-1])

  00032	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Gptr$[rsp], 0
  00038	74 76		 je	 SHORT $LN3@pbackfail
  0003a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00045	48 39 44 24 20	 cmp	 QWORD PTR _Gptr$[rsp], rax
  0004a	76 64		 jbe	 SHORT $LN3@pbackfail
  0004c	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00051	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00055	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  0005a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  0005f	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00064	0f b6 c0	 movzx	 eax, al
  00067	85 c0		 test	 eax, eax
  00069	75 4c		 jne	 SHORT $LN2@pbackfail
  0006b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00070	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00075	88 44 24 2c	 mov	 BYTE PTR $T2[rsp], al
  00079	b8 01 00 00 00	 mov	 eax, 1
  0007e	48 6b c0 ff	 imul	 rax, rax, -1
  00082	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Gptr$[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	48 8b d0	 mov	 rdx, rax
  00090	48 8d 4c 24 2c	 lea	 rcx, QWORD PTR $T2[rsp]
  00095	e8 00 00 00 00	 call	 ?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z ; std::_Narrow_char_traits<char,int>::eq
  0009a	0f b6 c0	 movzx	 eax, al
  0009d	85 c0		 test	 eax, eax
  0009f	75 16		 jne	 SHORT $LN2@pbackfail
  000a1	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a6	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000a9	83 e0 02	 and	 eax, 2
  000ac	85 c0		 test	 eax, eax
  000ae	74 07		 je	 SHORT $LN2@pbackfail
$LN3@pbackfail:

; 161  :                 && (_Mystate & _Constant))) { // can't put back, fail
; 162  :             return _Traits::eof();

  000b0	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000b5	eb 59		 jmp	 SHORT $LN1@pbackfail
$LN2@pbackfail:

; 163  :         }
; 164  : 
; 165  :         // back up one position and store put-back character
; 166  :         _Mysb::gbump(-1);

  000b7	ba ff ff ff ff	 mov	 edx, -1
  000bc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000c1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z

; 167  :         if (!_Traits::eq_int_type(_Traits::eof(), _Meta)) {

  000c7	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000cc	89 44 24 30	 mov	 DWORD PTR $T3[rsp], eax
  000d0	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  000d5	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T3[rsp]
  000da	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000df	0f b6 c0	 movzx	 eax, al
  000e2	85 c0		 test	 eax, eax
  000e4	75 20		 jne	 SHORT $LN4@pbackfail

; 168  :             *_Mysb::gptr() = _Traits::to_char_type(_Meta);

  000e6	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000eb	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  000f0	88 44 24 34	 mov	 BYTE PTR tv143[rsp], al
  000f4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000ff	0f b6 4c 24 34	 movzx	 ecx, BYTE PTR tv143[rsp]
  00104	88 08		 mov	 BYTE PTR [rax], cl
$LN4@pbackfail:

; 169  :         }
; 170  : 
; 171  :         return _Traits::not_eof(_Meta);

  00106	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0010b	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
$LN1@pbackfail:

; 172  :     }

  00110	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00114	5f		 pop	 rdi
  00115	c3		 ret	 0
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Pptr$ = 32
_Epptr$ = 40
_Oldsize$ = 48
_Oldptr$ = 56
_Newsize$ = 64
_Newptr$ = 72
_New_pnext$ = 80
$T1 = 88
tv212 = 92
tv210 = 93
this$ = 112
_Meta$ = 120
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT

; 100  :     virtual int_type overflow(int_type _Meta = _Traits::eof()) { // put an element to stream

$LN16:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 18 00 00 00	 mov	 ecx, 24
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 101  :         if (_Mystate & _Constant) {

  00022	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00027	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0002a	83 e0 02	 and	 eax, 2
  0002d	85 c0		 test	 eax, eax
  0002f	74 0a		 je	 SHORT $LN2@overflow

; 102  :             return _Traits::eof(); // array nonmutable, fail

  00031	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00036	e9 6a 02 00 00	 jmp	 $LN1@overflow
$LN2@overflow:

; 103  :         }
; 104  : 
; 105  :         if (_Traits::eq_int_type(_Traits::eof(), _Meta)) {

  0003b	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00040	89 44 24 58	 mov	 DWORD PTR $T1[rsp], eax
  00044	48 8d 54 24 78	 lea	 rdx, QWORD PTR _Meta$[rsp]
  00049	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T1[rsp]
  0004e	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00053	0f b6 c0	 movzx	 eax, al
  00056	85 c0		 test	 eax, eax
  00058	74 0f		 je	 SHORT $LN3@overflow

; 106  :             return _Traits::not_eof(_Meta); // EOF, return success code

  0005a	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0005f	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
  00064	e9 3c 02 00 00	 jmp	 $LN1@overflow
$LN3@overflow:

; 107  :         }
; 108  : 
; 109  :         const auto _Pptr  = _Mysb::pptr();

  00069	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00074	48 89 44 24 20	 mov	 QWORD PTR _Pptr$[rsp], rax

; 110  :         const auto _Epptr = _Mysb::epptr();

  00079	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00084	48 89 44 24 28	 mov	 QWORD PTR _Epptr$[rsp], rax

; 111  :         if (_Pptr && _Pptr < _Epptr) { // room in buffer, store it

  00089	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Pptr$[rsp], 0
  0008f	74 46		 je	 SHORT $LN4@overflow
  00091	48 8b 44 24 28	 mov	 rax, QWORD PTR _Epptr$[rsp]
  00096	48 39 44 24 20	 cmp	 QWORD PTR _Pptr$[rsp], rax
  0009b	73 3a		 jae	 SHORT $LN4@overflow

; 112  :             *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  0009d	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000a2	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  000a7	88 44 24 5c	 mov	 BYTE PTR tv212[rsp], al
  000ab	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000b0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  000b6	0f b6 4c 24 5c	 movzx	 ecx, BYTE PTR tv212[rsp]
  000bb	88 08		 mov	 BYTE PTR [rax], cl

; 113  :             _Seekhigh        = _Pptr + 1;

  000bd	48 8b 44 24 20	 mov	 rax, QWORD PTR _Pptr$[rsp]
  000c2	48 ff c0	 inc	 rax
  000c5	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000ca	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 114  :             return _Meta;

  000ce	8b 44 24 78	 mov	 eax, DWORD PTR _Meta$[rsp]
  000d2	e9 ce 01 00 00	 jmp	 $LN1@overflow
$LN4@overflow:

; 115  :         }
; 116  : 
; 117  :         // grow buffer and store element
; 118  :         size_t _Oldsize    = 0;

  000d7	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR _Oldsize$[rsp], 0

; 119  :         const auto _Oldptr = _Mysb::eback();

  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  000e5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000eb	48 89 44 24 38	 mov	 QWORD PTR _Oldptr$[rsp], rax

; 120  :         if (_Pptr) {

  000f0	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Pptr$[rsp], 0
  000f6	74 15		 je	 SHORT $LN5@overflow

; 121  :             _Oldsize = static_cast<size_t>(_Epptr - _Oldptr);

  000f8	48 8b 44 24 38	 mov	 rax, QWORD PTR _Oldptr$[rsp]
  000fd	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Epptr$[rsp]
  00102	48 2b c8	 sub	 rcx, rax
  00105	48 8b c1	 mov	 rax, rcx
  00108	48 89 44 24 30	 mov	 QWORD PTR _Oldsize$[rsp], rax
$LN5@overflow:

; 122  :         }
; 123  : 
; 124  :         size_t _Newsize;
; 125  :         if (_Oldsize < _MINSIZE) {

  0010d	48 83 7c 24 30
	20		 cmp	 QWORD PTR _Oldsize$[rsp], 32 ; 00000020H
  00113	73 0b		 jae	 SHORT $LN6@overflow

; 126  :             _Newsize = _MINSIZE;

  00115	48 c7 44 24 40
	20 00 00 00	 mov	 QWORD PTR _Newsize$[rsp], 32 ; 00000020H
  0011e	eb 3a		 jmp	 SHORT $LN7@overflow
$LN6@overflow:

; 127  :         } else if (_Oldsize < INT_MAX / 2) { // grow by 50 percent

  00120	48 81 7c 24 30
	ff ff ff 3f	 cmp	 QWORD PTR _Oldsize$[rsp], 1073741823 ; 3fffffffH
  00129	73 0f		 jae	 SHORT $LN8@overflow

; 128  :             _Newsize = _Oldsize << 1;

  0012b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  00130	48 d1 e0	 shl	 rax, 1
  00133	48 89 44 24 40	 mov	 QWORD PTR _Newsize$[rsp], rax
  00138	eb 20		 jmp	 SHORT $LN9@overflow
$LN8@overflow:

; 129  :         } else if (_Oldsize < INT_MAX) {

  0013a	48 81 7c 24 30
	ff ff ff 7f	 cmp	 QWORD PTR _Oldsize$[rsp], 2147483647 ; 7fffffffH
  00143	73 0b		 jae	 SHORT $LN10@overflow

; 130  :             _Newsize = INT_MAX;

  00145	48 c7 44 24 40
	ff ff ff 7f	 mov	 QWORD PTR _Newsize$[rsp], 2147483647 ; 7fffffffH

; 131  :         } else { // buffer can't grow, fail

  0014e	eb 0a		 jmp	 SHORT $LN11@overflow
$LN10@overflow:

; 132  :             return _Traits::eof();

  00150	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00155	e9 4b 01 00 00	 jmp	 $LN1@overflow
$LN11@overflow:
$LN9@overflow:
$LN7@overflow:

; 133  :         }
; 134  : 
; 135  :         const auto _Newptr = _Unfancy(_Al.allocate(_Newsize));

  0015a	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0015f	48 83 c0 74	 add	 rax, 116		; 00000074H
  00163	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00168	48 8b c8	 mov	 rcx, rax
  0016b	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00170	48 8b c8	 mov	 rcx, rax
  00173	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00178	48 89 44 24 48	 mov	 QWORD PTR _Newptr$[rsp], rax

; 136  :         _Traits::copy(_Newptr, _Oldptr, _Oldsize);

  0017d	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Oldsize$[rsp]
  00182	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Oldptr$[rsp]
  00187	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  0018c	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 137  : 
; 138  :         const auto _New_pnext = _Newptr + _Oldsize;

  00191	48 8b 44 24 30	 mov	 rax, QWORD PTR _Oldsize$[rsp]
  00196	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  0019b	48 03 c8	 add	 rcx, rax
  0019e	48 8b c1	 mov	 rax, rcx
  001a1	48 89 44 24 50	 mov	 QWORD PTR _New_pnext$[rsp], rax

; 139  :         _Seekhigh             = _New_pnext + 1; // to include _Meta

  001a6	48 8b 44 24 50	 mov	 rax, QWORD PTR _New_pnext$[rsp]
  001ab	48 ff c0	 inc	 rax
  001ae	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  001b3	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 140  : 
; 141  :         _Mysb::setp(_Newptr, _New_pnext, _Newptr + _Newsize);

  001b7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newsize$[rsp]
  001bc	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  001c1	48 03 c8	 add	 rcx, rax
  001c4	48 8b c1	 mov	 rax, rcx
  001c7	4c 8b c8	 mov	 r9, rax
  001ca	4c 8b 44 24 50	 mov	 r8, QWORD PTR _New_pnext$[rsp]
  001cf	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newptr$[rsp]
  001d4	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  001d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 142  :         if (_Mystate & _Noread) { // maintain eback() == allocated pointer invariant

  001df	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  001e4	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  001e7	83 e0 04	 and	 eax, 4
  001ea	85 c0		 test	 eax, eax
  001ec	74 1a		 je	 SHORT $LN12@overflow

; 143  :             _Mysb::setg(_Newptr, nullptr, _Newptr);

  001ee	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Newptr$[rsp]
  001f3	45 33 c0	 xor	 r8d, r8d
  001f6	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newptr$[rsp]
  001fb	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00200	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 144  :         } else { // if readable, set the get area to initialized region

  00206	eb 37		 jmp	 SHORT $LN13@overflow
$LN12@overflow:

; 145  :             _Mysb::setg(_Newptr, _Newptr + (_Mysb::gptr() - _Oldptr), _Seekhigh);

  00208	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0020d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00213	48 2b 44 24 38	 sub	 rax, QWORD PTR _Oldptr$[rsp]
  00218	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newptr$[rsp]
  0021d	48 03 c8	 add	 rcx, rax
  00220	48 8b c1	 mov	 rax, rcx
  00223	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00228	4c 8b 49 68	 mov	 r9, QWORD PTR [rcx+104]
  0022c	4c 8b c0	 mov	 r8, rax
  0022f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newptr$[rsp]
  00234	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00239	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN13@overflow:

; 146  :         }
; 147  : 
; 148  :         if (_Mystate & _Allocated) {

  0023f	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00244	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00247	83 e0 01	 and	 eax, 1
  0024a	85 c0		 test	 eax, eax
  0024c	74 20		 je	 SHORT $LN14@overflow

; 149  :             _Al.deallocate(_Ptr_traits::pointer_to(*_Oldptr), _Oldsize);

  0024e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Oldptr$[rsp]
  00253	e8 00 00 00 00	 call	 ?pointer_to@?$pointer_traits@PEAD@std@@SAPEADAEAD@Z ; std::pointer_traits<char *>::pointer_to
  00258	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0025d	48 83 c1 74	 add	 rcx, 116		; 00000074H
  00261	4c 8b 44 24 30	 mov	 r8, QWORD PTR _Oldsize$[rsp]
  00266	48 8b d0	 mov	 rdx, rax
  00269	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
$LN14@overflow:

; 150  :         }
; 151  : 
; 152  :         _Mystate |= _Allocated;

  0026e	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00273	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00276	83 c8 01	 or	 eax, 1
  00279	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  0027e	89 41 70	 mov	 DWORD PTR [rcx+112], eax

; 153  :         *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  00281	48 8d 4c 24 78	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00286	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  0028b	88 44 24 5d	 mov	 BYTE PTR tv210[rsp], al
  0028f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00294	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  0029a	0f b6 4c 24 5d	 movzx	 ecx, BYTE PTR tv210[rsp]
  0029f	88 08		 mov	 BYTE PTR [rax], cl

; 154  :         return _Meta;

  002a1	8b 44 24 78	 mov	 eax, DWORD PTR _Meta$[rsp]
$LN1@overflow:

; 155  :     }

  002a5	48 83 c4 60	 add	 rsp, 96			; 00000060H
  002a9	5f		 pop	 rdi
  002aa	c3		 ret	 0
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MEAAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 81   :     _NODISCARD _Mystr str() const { // return string copy of character array

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 44 24 78 00
	00 00 00	 mov	 DWORD PTR $T7[rsp], 0

; 82   :         _Mystr _Result(_Al);

  00043	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c0 74	 add	 rax, 116		; 00000074H
  0004f	48 8b d0	 mov	 rdx, rax
  00052	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  00057	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005c	90		 npad	 1

; 83   :         if (!(_Mystate & _Constant) && _Mysb::pptr()) { // writable, make string from write buffer

  0005d	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00065	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00068	83 e0 02	 and	 eax, 2
  0006b	85 c0		 test	 eax, eax
  0006d	75 71		 jne	 SHORT $LN2@str
  0006f	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0007d	48 85 c0	 test	 rax, rax
  00080	74 5e		 je	 SHORT $LN2@str

; 84   :             const auto _Base = _Mysb::pbase();

  00082	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00090	48 89 44 24 58	 mov	 QWORD PTR _Base$4[rsp], rax

; 85   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Max_value(_Mysb::pptr(), _Seekhigh) - _Base));

  00095	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000a3	48 89 44 24 70	 mov	 QWORD PTR $T6[rsp], rax
  000a8	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 83 c0 68	 add	 rax, 104		; 00000068H
  000b4	48 8b d0	 mov	 rdx, rax
  000b7	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T6[rsp]
  000bc	e8 00 00 00 00	 call	 ??$_Max_value@PEAD@std@@YAAEBQEADAEBQEAD0@Z ; std::_Max_value<char *>
  000c1	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Base$4[rsp]
  000c6	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c9	48 2b c1	 sub	 rax, rcx
  000cc	4c 8b c0	 mov	 r8, rax
  000cf	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Base$4[rsp]
  000d4	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  000d9	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000de	eb 5d		 jmp	 SHORT $LN3@str
$LN2@str:

; 86   :         } else if (!(_Mystate & _Noread) && _Mysb::gptr()) { // readable, make string from read buffer

  000e0	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000e8	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000eb	83 e0 04	 and	 eax, 4
  000ee	85 c0		 test	 eax, eax
  000f0	75 4b		 jne	 SHORT $LN3@str
  000f2	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00100	48 85 c0	 test	 rax, rax
  00103	74 38		 je	 SHORT $LN3@str

; 87   :             const auto _Base = _Mysb::eback();

  00105	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0010d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00113	48 89 44 24 60	 mov	 QWORD PTR _Base$5[rsp], rax

; 88   :             _Result.assign(_Base, static_cast<_Mysize_type>(_Mysb::egptr() - _Base));

  00118	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00120	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00126	48 2b 44 24 60	 sub	 rax, QWORD PTR _Base$5[rsp]
  0012b	4c 8b c0	 mov	 r8, rax
  0012e	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Base$5[rsp]
  00133	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  00138	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@str:

; 89   :         }
; 90   : 
; 91   :         return _Result;

  0013d	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Result$[rsp]
  00142	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0014a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014f	8b 44 24 78	 mov	 eax, DWORD PTR $T7[rsp]
  00153	83 c8 01	 or	 eax, 1
  00156	89 44 24 78	 mov	 DWORD PTR $T7[rsp], eax
  0015a	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Result$[rsp]
  0015f	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00164	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 92   :     }

  0016c	48 8b f8	 mov	 rdi, rax
  0016f	48 8b cc	 mov	 rcx, rsp
  00172	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$rtcFrameData
  00179	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0017e	48 8b c7	 mov	 rax, rdi
  00181	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00189	48 33 cc	 xor	 rcx, rsp
  0018c	e8 00 00 00 00	 call	 __security_check_cookie
  00191	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00198	5f		 pop	 rdi
  00199	c3		 ret	 0
  0019a	cc		 int	 3
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T7[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN8@dtor$1
  0001d	83 65 78 fe	 and	 DWORD PTR $T7[rbp], -2
  00021	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Result$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
_Base$4 = 88
_Base$5 = 96
$T6 = 112
$T7 = 120
__$ArrayPad$ = 128
this$ = 160
__$ReturnUdt$ = 168
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 78	 mov	 eax, DWORD PTR $T7[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN8@dtor$1
  0001d	83 65 78 fe	 and	 DWORD PTR $T7[rbp], -2
  00021	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN8@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0??str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 65   :     virtual ~basic_stringbuf() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 66   :         _Tidy();

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
  00037	90		 npad	 1

; 67   :     }

  00038	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00043	90		 npad	 1
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 48
_Mode$ = 56
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 29   :         : _Seekhigh(nullptr), _Mystate(_Getstate(_Mode)), _Al() { // construct empty character buffer from mode

$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
  0002d	90		 npad	 1
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0003a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0
  0004a	8b 4c 24 38	 mov	 ecx, DWORD PTR _Mode$[rsp]
  0004e	e8 00 00 00 00	 call	 ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
  00053	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00058	89 41 70	 mov	 DWORD PTR [rcx+112], eax
  0005b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00060	48 83 c0 74	 add	 rax, 116		; 00000074H
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  0006c	90		 npad	 1

; 30   :     }

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Mode$ = 56
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT

; 571  :     _NODISCARD _Mystr str() const { // return string copy of character array

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 572  :         return _Stringbuffer.str();

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c0 18	 add	 rax, 24
  00034	48 8b 54 24 48	 mov	 rdx, QWORD PTR __$ReturnUdt$[rsp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
  00041	90		 npad	 1
  00042	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00046	83 c8 01	 or	 eax, 1
  00049	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  0004d	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 573  :     }

  00052	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00056	5f		 pop	 rdi
  00057	c3		 ret	 0
  00058	cc		 int	 3
?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 565  :     virtual ~basic_stringstream() noexcept {}

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 80 68 ff
	ff ff		 mov	 rax, QWORD PTR [rax-152]
  0002a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  0003a	48 89 94 01 68
	ff ff ff	 mov	 QWORD PTR [rcx+rax-152], rdx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 8b 80 68 ff
	ff ff		 mov	 rax, QWORD PTR [rax-152]
  0004e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00052	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  00058	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	48 8b 89 68 ff
	ff ff		 mov	 rcx, QWORD PTR [rcx-152]
  00064	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00068	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0006d	89 84 0a 64 ff
	ff ff		 mov	 DWORD PTR [rdx+rcx-156], eax
  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 2d 80 00 00
	00		 sub	 rax, 128		; 00000080H
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00087	90		 npad	 1
  00088	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 83 e8 78	 sub	 rax, 120		; 00000078H
  00091	48 8b c8	 mov	 rcx, rax
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0009a	90		 npad	 1
  0009b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
??1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 18	 add	 rcx, 24
  00022	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 20	 add	 rcx, 32			; 00000020H
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 98 00
	00 00		 sub	 rcx, 152		; 00000098H
  0001e	48 83 c1 18	 add	 rcx, 24
  00022	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\sstream
;	COMDAT ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z PROC ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 531  :         : _Mybase(_STD addressof(_Stringbuffer)), _Stringbuffer(_Mode) { // construct empty character buffer

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0c 00 00 00	 mov	 ecx, 12
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00027	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0
  0002f	83 7c 24 50 00	 cmp	 DWORD PTR $initVBases$[rsp], 0
  00034	74 3f		 je	 SHORT $LN2@basic_stri
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_istream@DU?$char_traits@D@std@@@1@@
  00042	48 89 08	 mov	 QWORD PTR [rax], rcx
  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_8?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B?$basic_ostream@DU?$char_traits@D@std@@@1@@
  00051	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00055	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  00060	48 8b c8	 mov	 rcx, rax
  00063	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
  00069	90		 npad	 1
  0006a	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  0006e	83 c8 01	 or	 eax, 1
  00071	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
$LN2@basic_stri:
  00075	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 83 c0 18	 add	 rax, 24
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
  00086	45 33 c0	 xor	 r8d, r8d
  00089	48 8b d0	 mov	 rdx, rax
  0008c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
  00097	90		 npad	 1
  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000a4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
  000b0	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx
  000b4	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bc	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c0	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  000c6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000cb	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ce	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000d2	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  000d7	89 44 0a fc	 mov	 DWORD PTR [rdx+rcx-4], eax
  000db	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000e0	48 83 c0 18	 add	 rax, 24
  000e4	8b 54 24 48	 mov	 edx, DWORD PTR _Mode$[rsp]
  000e8	48 8b c8	 mov	 rcx, rax
  000eb	e8 00 00 00 00	 call	 ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  000f0	90		 npad	 1

; 532  :     }

  000f1	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000f6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fa	5f		 pop	 rdi
  000fb	c3		 ret	 0
??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ENDP ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN5@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN5@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN5@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 20	 add	 rcx, 32			; 00000020H
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Mode$ = 72
$initVBases$ = 80
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA PROC ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UEAA@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z@4HA ENDP ; `std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
__formal$ = 72
??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>, COMDAT

; 1812 :     constexpr unique_ptr(nullptr_t) noexcept : _Mypair(_Zero_then_variadic_args_t()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1><>
  00035	90		 npad	 1
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 16
??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z PROC ; std::move<std::unique_ptr<void,handle_deleter> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Arg$[rsp]

; 1434 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ENDP ; std::move<std::unique_ptr<void,handle_deleter> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z
_TEXT	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv74 = 80
this$ = 112
_Fx$ = 120
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z PROC ; std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>, COMDAT

; 53   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) { // construct with _Fx(_Ax...)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 18 00 00 00	 mov	 ecx, 24
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 54   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 55   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

  00023	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Fx$[rsp]
  00028	e8 00 00 00 00	 call	 ??$forward@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@YA$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@AEAV1@@Z ; std::forward<<lambda_7d02ae0d862af7151d39e7a5bd162218> >
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  00035	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@0@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::make_unique<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,<lambda_7d02ae0d862af7151d39e7a5bd162218>,0>
  0003a	90		 npad	 1

; 56   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

  0003b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??$_Invoke@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@$0A@@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,0>
  00042	48 89 44 24 48	 mov	 QWORD PTR _Invoker_proc$[rsp], rax

; 57   : 
; 58   : #pragma warning(push)
; 59   : #pragma warning(disable : 5039) // pointer or reference to potentially throwing function passed to
; 60   :                                 // extern C function under -EHc. Undefined behavior may occur
; 61   :                                 // if this function throws an exception. (/Wall)
; 62   :         _Thr._Hnd =

  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 89 44 24 50	 mov	 QWORD PTR tv74[rsp], rax
  00055	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  0005a	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEBAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::get
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv74[rsp]
  00064	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00069	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  00071	4c 8b c8	 mov	 r9, rax
  00074	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Invoker_proc$[rsp]
  00079	33 d2		 xor	 edx, edx
  0007b	33 c9		 xor	 ecx, ecx
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__beginthreadex
  00083	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00088	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 64   : #pragma warning(pop)
; 65   : 
; 66   :         if (_Thr._Hnd) { // ownership transferred to the thread

  0008b	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00090	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00094	74 0c		 je	 SHORT $LN2@thread

; 67   :             (void) _Decay_copied.release();

  00096	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  0009b	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAAPEAV?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@2@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::release

; 68   :         } else { // failed to start thread

  000a0	eb 17		 jmp	 SHORT $LN3@thread
$LN2@thread:

; 69   :             _Thr._Id = 0;

  000a2	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000a7	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 70   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

  000ae	b9 06 00 00 00	 mov	 ecx, 6
  000b3	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
  000b8	90		 npad	 1
$LN3@thread:

; 71   :         }
; 72   :     }

  000b9	48 8d 4c 24 38	 lea	 rcx, QWORD PTR _Decay_copied$[rsp]
  000be	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
  000c3	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  000c8	48 8b f8	 mov	 rdi, rax
  000cb	48 8b cc	 mov	 rcx, rsp
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z$rtcFrameData
  000d5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000da	48 8b c7	 mov	 rax, rdi
  000dd	48 83 c4 60	 add	 rsp, 96			; 00000060H
  000e1	5f		 pop	 rdi
  000e2	c3		 ret	 0
$LN6@thread:
??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ENDP ; std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv74 = 80
this$ = 112
_Fx$ = 120
?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA PROC ; `std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA ENDP ; `std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 56
_Invoker_proc$ = 72
tv74 = 80
this$ = 112
_Fx$ = 120
?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA PROC ; `std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 38	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@U?$default_delete@V?$tuple@V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >::~unique_ptr<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> >,std::default_delete<std::tuple<<lambda_7d02ae0d862af7151d39e7a5bd162218> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z@4HA ENDP ; `std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
;	COMDAT ??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z
_TEXT	SEGMENT
this$ = 16
<heStart>$ = 24
<heFin>$ = 32
<ithId>$ = 40
<threadN>$ = 48
<prm>$ = 56
<cspfunc>$ = 64
??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z PROC ; <lambda_7d02ae0d862af7151d39e7a5bd162218>::<lambda_7d02ae0d862af7151d39e7a5bd162218>, COMDAT

; 127  :             }));

  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001a	48 8b 4c 24 18	 mov	 rcx, QWORD PTR <heStart>$[rsp]
  0001f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00022	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8b 4c 24 20	 mov	 rcx, QWORD PTR <heFin>$[rsp]
  0002c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00030	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00035	8b 4c 24 28	 mov	 ecx, DWORD PTR <ithId>$[rsp]
  00039	89 48 10	 mov	 DWORD PTR [rax+16], ecx
  0003c	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00041	8b 4c 24 30	 mov	 ecx, DWORD PTR <threadN>$[rsp]
  00045	89 48 14	 mov	 DWORD PTR [rax+20], ecx
  00048	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR <prm>$[rsp]
  00052	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00056	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR <cspfunc>$[rsp]
  00060	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
  00064	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z ENDP ; <lambda_7d02ae0d862af7151d39e7a5bd162218>::<lambda_7d02ae0d862af7151d39e7a5bd162218>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
;	COMDAT ??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ
_TEXT	SEGMENT
this$ = 144
??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ PROC ; <lambda_7d02ae0d862af7151d39e7a5bd162218>::operator(), COMDAT

; 118  :             m_th.push_back(std::thread([heStart = heStart.get(), heFin = heFin.get(), ithId = ith, threadN = m_threads, prm = &m_prm, cspfunc = &m_csp]() {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	53		 push	 rbx
  00006	55		 push	 rbp
  00007	56		 push	 rsi
  00008	57		 push	 rdi
  00009	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 1a 00 00 00	 mov	 ecx, 26
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 119  :                 WaitForSingleObject((HANDLE)heStart, INFINITE);

  00024	ba ff ff ff ff	 mov	 edx, -1			; ffffffffH
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00034	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WaitForSingleObject
$LN2@operator:

; 120  :                 while (!prm->abort) {

  0003a	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00046	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00049	85 c0		 test	 eax, eax
  0004b	0f 85 11 01 00
	00		 jne	 $LN3@operator

; 121  :                     (*cspfunc)->func[prm->interlaced](prm->dst, prm->src,

  00051	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0005d	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00065	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  00069	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  00071	48 8b 52 18	 mov	 rdx, QWORD PTR [rdx+24]
  00075	4c 8b 84 24 90
	00 00 00	 mov	 r8, QWORD PTR this$[rsp]
  0007d	4d 8b 40 18	 mov	 r8, QWORD PTR [r8+24]
  00081	4c 8b 8c 24 90
	00 00 00	 mov	 r9, QWORD PTR this$[rsp]
  00089	4d 8b 49 18	 mov	 r9, QWORD PTR [r9+24]
  0008d	4c 8b 94 24 90
	00 00 00	 mov	 r10, QWORD PTR this$[rsp]
  00095	4d 8b 52 18	 mov	 r10, QWORD PTR [r10+24]
  00099	4c 8b 9c 24 90
	00 00 00	 mov	 r11, QWORD PTR this$[rsp]
  000a1	4d 8b 5b 18	 mov	 r11, QWORD PTR [r11+24]
  000a5	48 8b 9c 24 90
	00 00 00	 mov	 rbx, QWORD PTR this$[rsp]
  000ad	48 8b 5b 18	 mov	 rbx, QWORD PTR [rbx+24]
  000b1	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR this$[rsp]
  000b9	48 8b 7f 18	 mov	 rdi, QWORD PTR [rdi+24]
  000bd	48 8b b4 24 90
	00 00 00	 mov	 rsi, QWORD PTR this$[rsp]
  000c5	48 8b 76 20	 mov	 rsi, QWORD PTR [rsi+32]
  000c9	48 8b 36	 mov	 rsi, QWORD PTR [rsi]
  000cc	48 8b ac 24 90
	00 00 00	 mov	 rbp, QWORD PTR this$[rsp]
  000d4	48 8b 6d 18	 mov	 rbp, QWORD PTR [rbp+24]
  000d8	48 63 6d 18	 movsxd	 rbp, DWORD PTR [rbp+24]
  000dc	48 8b 40 38	 mov	 rax, QWORD PTR [rax+56]
  000e0	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000e5	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000ed	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  000f0	89 44 24 48	 mov	 DWORD PTR [rsp+72], eax
  000f4	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000fc	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000ff	89 44 24 40	 mov	 DWORD PTR [rsp+64], eax
  00103	8b 41 30	 mov	 eax, DWORD PTR [rcx+48]
  00106	89 44 24 38	 mov	 DWORD PTR [rsp+56], eax
  0010a	8b 42 2c	 mov	 eax, DWORD PTR [rdx+44]
  0010d	89 44 24 30	 mov	 DWORD PTR [rsp+48], eax
  00111	41 8b 40 28	 mov	 eax, DWORD PTR [r8+40]
  00115	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00119	41 8b 41 24	 mov	 eax, DWORD PTR [r9+36]
  0011d	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  00121	45 8b 4a 20	 mov	 r9d, DWORD PTR [r10+32]
  00125	45 8b 43 1c	 mov	 r8d, DWORD PTR [r11+28]
  00129	48 8b 53 10	 mov	 rdx, QWORD PTR [rbx+16]
  0012d	48 8b 4f 08	 mov	 rcx, QWORD PTR [rdi+8]
  00131	ff 54 ee 10	 call	 QWORD PTR [rsi+rbp*8+16]

; 122  :                         prm->width, prm->src_y_pitch_byte, prm->src_uv_pitch_byte, prm->dst_y_pitch_byte,
; 123  :                         prm->height, prm->dst_height, ithId, threadN, prm->crop);
; 124  :                     SetEvent((HANDLE)heFin);

  00135	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0013d	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00141	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent

; 125  :                     WaitForSingleObject((HANDLE)heStart, INFINITE);

  00147	ba ff ff ff ff	 mov	 edx, -1			; ffffffffH
  0014c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00154	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00157	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WaitForSingleObject

; 126  :                 }

  0015d	e9 d8 fe ff ff	 jmp	 $LN2@operator
$LN3@operator:

; 127  :             }));

  00162	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00166	5f		 pop	 rdi
  00167	5e		 pop	 rsi
  00168	5d		 pop	 rbp
  00169	5b		 pop	 rbx
  0016a	c3		 ret	 0
??R<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEBAXXZ ENDP ; <lambda_7d02ae0d862af7151d39e7a5bd162218>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Ptr$ = 72
_Dt$ = 80
??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z PROC ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>, COMDAT

; 1827 :     unique_ptr(pointer _Ptr, _Dx&& _Dt) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Dt), _Ptr) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Dt$[rsp]
  0002d	e8 00 00 00 00	 call	 ??$move@AEAUhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::move<handle_deleter &>
  00032	90		 npad	 1
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00038	4c 8d 4c 24 48	 lea	 r9, QWORD PTR _Ptr$[rsp]
  0003d	4c 8b c0	 mov	 r8, rax
  00040	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00045	e8 00 00 00 00	 call	 ??$?0Uhandle_deleter@@AEAPEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@AEAPEAX@Z ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void * &>
  0004a	90		 npad	 1
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z ENDP ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$min@H@std@@YAAEBHAEBH0@Z
_TEXT	SEGMENT
_Left$ = 64
_Right$ = 72
??$min@H@std@@YAAEBHAEBH0@Z PROC			; std::min<int>, COMDAT

; 4490 :     const _Ty& _Left, const _Ty& _Right) _NOEXCEPT_COND(noexcept(_Right < _Left)) { // strengthened

$LN13:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4491 :     // return smaller of _Left and _Right
; 4492 :     if (_Right < _Left) {

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	0f 8d 90 00 00
	00		 jge	 $LN8@min
$LN4@min:

; 4493 :         _STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00037	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
  0003c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00041	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00043	39 08		 cmp	 DWORD PTR [rax], ecx
  00045	7c 02		 jl	 SHORT $LN7@min
  00047	eb 6d		 jmp	 SHORT $LN10@min
$LN7@min:
  00049	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00050	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00055	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005c	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00061	45 33 c9	 xor	 r9d, r9d
  00064	41 b8 8d 11 00
	00		 mov	 r8d, 4493		; 0000118dH
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@EEDLHHLD@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00071	b9 02 00 00 00	 mov	 ecx, 2
  00076	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007c	90		 npad	 1
  0007d	83 f8 01	 cmp	 eax, 1
  00080	75 03		 jne	 SHORT $LN12@min
  00082	cc		 int	 3
  00083	33 c0		 xor	 eax, eax
$LN12@min:
  00085	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008e	41 b9 8d 11 00
	00		 mov	 r9d, 4493		; 0000118dH
  00094	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@BOCHNKFM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000a9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000af	90		 npad	 1
  000b0	33 c0		 xor	 eax, eax
  000b2	85 c0		 test	 eax, eax
  000b4	75 93		 jne	 SHORT $LN7@min
$LN10@min:
  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 77 ff ff
	ff		 jne	 $LN4@min

; 4494 :         return _Right;

  000c0	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  000c5	eb 05		 jmp	 SHORT $LN1@min
$LN8@min:

; 4495 :     }
; 4496 : 
; 4497 :     return _Left;

  000c7	48 8b 44 24 40	 mov	 rax, QWORD PTR _Left$[rsp]
$LN1@min:

; 4498 : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	c3		 ret	 0
??$min@H@std@@YAAEBHAEBH0@Z ENDP			; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z PROC ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>, COMDAT

; 450  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from [_First, _Last) with optional allocator

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 90 00
	00 00		 sub	 rsp, 144		; 00000090H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+160]
  00033	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003b	4c 8b 84 24 b8
	00 00 00	 mov	 r8, QWORD PTR _Al$[rsp]
  00043	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>

; 451  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00050	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00058	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  0005d	48 8b d0	 mov	 rdx, rax
  00060	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S22$[rsp]
  00065	e8 00 00 00 00	 call	 ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
  0006a	48 8d 44 24 34	 lea	 rax, QWORD PTR $S22$[rsp]
  0006f	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 452  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00074	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007c	4c 8b c0	 mov	 r8, rax
  0007f	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00084	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00089	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008e	90		 npad	 1

; 453  :         _Adl_verify_range(_First, _Last);

  0008f	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  00097	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  0009f	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > > >

; 454  :         _Range_construct_or_tidy(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Iter_cat_t<_Iter>{});

  000a4	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _Last$[rsp]
  000ac	48 8d 4c 24 78	 lea	 rcx, QWORD PTR $T7[rsp]
  000b1	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,0>
  000b6	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv93[rsp], rax
  000be	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR _First$[rsp]
  000c6	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  000ce	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@$0A@@std@@YA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@0@AEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,0>
  000d3	44 0f b6 4c 24
	76		 movzx	 r9d, BYTE PTR $T6[rsp]
  000d9	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv93[rsp]
  000e1	4c 8b 01	 mov	 r8, QWORD PTR [rcx]
  000e4	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  000e7	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000ef	e8 00 00 00 00	 call	 ??$_Range_construct_or_tidy@V?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAXV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@0Uforward_iterator_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Range_construct_or_tidy<std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0> >

; 455  :         _Proxy._Release();

  000f4	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000f9	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000fe	90		 npad	 1

; 456  :     }

  000ff	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00104	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00109	90		 npad	 1
  0010a	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _First$[rsp]
  00112	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  00117	90		 npad	 1
  00118	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _Last$[rsp]
  00120	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  00125	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012d	48 8b f8	 mov	 rdi, rax
  00130	48 8b cc	 mov	 rcx, rsp
  00133	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z$rtcFrameData
  0013a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0013f	48 8b c7	 mov	 rax, rdi
  00142	48 81 c4 90 00
	00 00		 add	 rsp, 144		; 00000090H
  00149	5f		 pop	 rdi
  0014a	c3		 ret	 0
??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z ENDP ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d b0 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$1@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S22$ = 52
_Proxy$ = 88
$T5 = 116
$T6 = 118
$T7 = 120
$T8 = 128
tv93 = 136
this$ = 160
_First$ = 168
_Last$ = 176
_Al$ = 184
?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$2@?0???$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ PROC ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ ENDP ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA PROC ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA ENDP ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA PROC ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ@4HA ENDP ; `std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::~pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::~_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
this$ = 48
__$ReturnUdt$ = 56
?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Unwrapped, COMDAT

; 247  :     _NODISCARD _Tree_unchecked_const_iterator<_Mytree> _Unwrapped() const {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 248  :         return _Tree_unchecked_const_iterator<_Mytree>(this->_Ptr, static_cast<const _Mytree*>(this->_Getcont()));

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 10	 mov	 rdx, QWORD PTR [rax+16]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0003e	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base0>
  00043	48 8b 44 24 38	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 249  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Unwrapped@?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEBA?AV?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 48
_First$ = 80
_Last$ = 88
?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 240  :     friend void _Verify_range(const _Tree_const_iterator& _First, const _Tree_const_iterator& _Last) {

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]
$LN4@Verify_ran:

; 241  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "map/set iterators in range are from different containers");

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _First$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0002d	48 89 44 24 30	 mov	 QWORD PTR tv69[rsp], rax
  00032	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Last$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv69[rsp]
  00041	48 3b c8	 cmp	 rcx, rax
  00044	75 02		 jne	 SHORT $LN8@Verify_ran
  00046	eb 6b		 jmp	 SHORT $LN9@Verify_ran
$LN8@Verify_ran:
$LN7@Verify_ran:
  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DJ@PBHPKNPD@map?1set?5iterators?5in?5range?5are?5@
  0004f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00054	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0005b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00060	45 33 c9	 xor	 r9d, r9d
  00063	41 b8 f1 00 00
	00		 mov	 r8d, 241		; 000000f1H
  00069	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GG@OCININGN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0007b	83 f8 01	 cmp	 eax, 1
  0007e	75 03		 jne	 SHORT $LN11@Verify_ran
  00080	cc		 int	 3
  00081	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  00083	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0008c	41 b9 f1 00 00
	00		 mov	 r9d, 241		; 000000f1H
  00092	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MM@HFHBGPEE@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HG@KNBJPECF@?$AA?$CC?$AAm?$AAa?$AAp?$AA?1?$AAs?$AAe?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  000b3	33 c0		 xor	 eax, eax
  000b5	85 c0		 test	 eax, eax
  000b7	0f 85 66 ff ff
	ff		 jne	 $LN4@Verify_ran

; 242  :     }

  000bd	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000c1	5f		 pop	 rdi
  000c2	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z PROC ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >, COMDAT

; 176  :     _Tree_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) : _Mybase(_Pnode, _Plist) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Plist$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Pnode$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
  0003c	90		 npad	 1
  0003d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00046	5f		 pop	 rdi
  00047	c3		 ret	 0
??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ENDP ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA PROC ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA ENDP ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA PROC ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA ENDP ; `std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __that$[rsp]
  0003d	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00041	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA PROC ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@XZ@4HA ENDP ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::~_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z PROC ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>, COMDAT

; 35   :     _Tree_unchecked_const_iterator(_Nodeptr _Pnode, const _Mytree* _Plist) : _Ptr(_Pnode) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  0003d	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 36   :         this->_Adopt(_Plist);

  00041	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Plist$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00050	90		 npad	 1

; 37   :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ENDP ; std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA PROC ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA ENDP ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Pnode$ = 56
_Plist$ = 64
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA PROC ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$_Tree_unchecked_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@U_Iterator_base12@2@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z@4HA ENDP ; `std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> >,std::_Iterator_base12>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z
_TEXT	SEGMENT
_Result$ = 40
$T4 = 72
$T5 = 96
tv88 = 104
tv83 = 112
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>, COMDAT

; 1343 :     pair<iterator, bool> insert(value_type&& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T5[rsp], 0

; 1344 :         const auto _Result = _Emplace(_STD move(_Val));

  00036	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Val$[rsp]
  0003e	e8 00 00 00 00	 call	 ??$move@AEAH@std@@YA$$QEAHAEAH@Z ; std::move<int &>
  00043	4c 8b c0	 mov	 r8, rax
  00046	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Result$[rsp]
  0004b	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00053	e8 00 00 00 00	 call	 ??$_Emplace@H@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@HPEAX@std@@_N@1@$$QEAH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Emplace<int>

; 1345 :         return {iterator(_Result.first, _Get_scary()), _Result.second};

  00058	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00060	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00065	4c 8b c0	 mov	 r8, rax
  00068	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Result$[rsp]
  0006d	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T4[rsp]
  00072	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
  00077	48 89 44 24 68	 mov	 QWORD PTR tv88[rsp], rax
  0007c	48 8b 44 24 68	 mov	 rax, QWORD PTR tv88[rsp]
  00081	48 89 44 24 70	 mov	 QWORD PTR tv83[rsp], rax
  00086	4c 8d 44 24 30	 lea	 r8, QWORD PTR _Result$[rsp+8]
  0008b	48 8b 54 24 70	 mov	 rdx, QWORD PTR tv83[rsp]
  00090	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00098	e8 00 00 00 00	 call	 ??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@AEB_N$0A@@?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@$$QEAV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@AEB_N@Z ; std::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool>::pair<std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,bool const &,0>
  0009d	8b 44 24 60	 mov	 eax, DWORD PTR $T5[rsp]
  000a1	83 c8 01	 or	 eax, 1
  000a4	89 44 24 60	 mov	 DWORD PTR $T5[rsp], eax
  000a8	48 8d 4c 24 48	 lea	 rcx, QWORD PTR $T4[rsp]
  000ad	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  000b2	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1346 :     }

  000ba	48 8b f8	 mov	 rdi, rax
  000bd	48 8b cc	 mov	 rcx, rsp
  000c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z$rtcFrameData
  000c7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cc	48 8b c7	 mov	 rax, rdi
  000cf	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000d6	5f		 pop	 rdi
  000d7	c3		 ret	 0
  000d8	cc		 int	 3
??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
$T4 = 72
$T5 = 96
tv88 = 104
tv83 = 112
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
$T4 = 72
$T5 = 96
tv88 = 104
tv83 = 112
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
$T4 = 72
$T5 = 96
tv88 = 104
tv83 = 112
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 40
$T4 = 72
$T5 = 96
tv88 = 104
tv83 = 112
this$ = 144
__$ReturnUdt$ = 152
_Val$ = 160
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T5[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T5[rbp], -2
  00021	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\string
;	COMDAT ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv72 = 32
_Istr$ = 64
_Str$ = 72
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::getline<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 79   :     basic_string<_Elem, _Traits, _Alloc>& _Str) { // get characters into string, discard newline

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 80   :     return getline(_STD move(_Istr), _Str, _Istr.widen('\n'));

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Istr$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Istr$[rsp]
  00034	48 03 c8	 add	 rcx, rax
  00037	48 8b c1	 mov	 rax, rcx
  0003a	b2 0a		 mov	 dl, 10
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00045	88 44 24 20	 mov	 BYTE PTR tv72[rsp], al
  00049	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Istr$[rsp]
  0004e	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_istream@DU?$char_traits@D@std@@@std@@@std@@YA$$QEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::move<std::basic_istream<char,std::char_traits<char> > &>
  00053	0f b6 4c 24 20	 movzx	 ecx, BYTE PTR tv72[rsp]
  00058	44 0f b6 c1	 movzx	 r8d, cl
  0005c	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Str$[rsp]
  00061	48 8b c8	 mov	 rcx, rax
  00064	e8 00 00 00 00	 call	 ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >

; 81   : }

  00069	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::getline<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor', COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00029	48 8b c8	 mov	 rcx, rax
  0002c	e8 00 00 00 00	 call	 ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00036	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  0003c	48 8b c8	 mov	 rcx, rax
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00045	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00049	5f		 pop	 rdi
  0004a	c3		 ret	 0
??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 2d b0 00 00
	00		 sub	 rax, 176		; 000000b0H
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00035	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00039	83 e0 01	 and	 eax, 1
  0003c	85 c0		 test	 eax, eax
  0003e	74 18		 je	 SHORT $LN2@scalar
  00040	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 2d b0 00 00
	00		 sub	 rax, 176		; 000000b0H
  0004b	ba 10 01 00 00	 mov	 edx, 272		; 00000110H
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 2d b0 00 00
	00		 sub	 rax, 176		; 000000b0H
  00063	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00067	5f		 pop	 rdi
  00068	c3		 ret	 0
??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 98 00 00 00	 mov	 edx, 152		; 00000098H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back, COMDAT

; 775  :     void _Set_back() { // set up putback area

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 776  :         if (_Mysb::eback() != &_Mychar) { // save current get buffer

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00032	48 3b c1	 cmp	 rax, rcx
  00035	74 2e		 je	 SHORT $LN2@Set_back

; 777  :             _Set_eback = _Mysb::eback();

  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	48 89 81 88 00
	00 00		 mov	 QWORD PTR [rcx+136], rax

; 778  :             _Set_egptr = _Mysb::egptr();

  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00059	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005e	48 89 81 90 00
	00 00		 mov	 QWORD PTR [rcx+144], rax
$LN2@Set_back:

; 779  :         }
; 780  :         _Mysb::setg(&_Mychar, &_Mychar, &_Mychar + 1);

  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006a	48 83 c0 71	 add	 rax, 113		; 00000071H
  0006e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00073	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00077	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0007c	48 83 c2 70	 add	 rdx, 112		; 00000070H
  00080	4c 8b c8	 mov	 r9, rax
  00083	4c 8b c1	 mov	 r8, rcx
  00086	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z

; 781  :     }

  00091	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back, COMDAT

; 769  :     void _Reset_back() { // restore buffer after putback

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 770  :         if (_Mysb::eback() == &_Mychar) {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00032	48 3b c1	 cmp	 rax, rcx
  00035	75 2f		 jne	 SHORT $LN2@Reset_back

; 771  :             _Mysb::setg(_Set_eback, _Set_eback, _Set_egptr);

  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003c	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00043	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00048	4c 8b 80 88 00
	00 00		 mov	 r8, QWORD PTR [rax+136]
  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 8b 90 88 00
	00 00		 mov	 rdx, QWORD PTR [rax+136]
  0005b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00060	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAD00@Z
$LN2@Reset_back:

; 772  :         }
; 773  :     }

  00066	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006a	5f		 pop	 rdi
  0006b	c3		 ret	 0
?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Newcvt$ = 56
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt, COMDAT

; 752  :     void _Initcvt(const _Cvt& _Newcvt) { // initialize codecvt pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 753  :         if (_Newcvt.always_noconv()) {

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Newcvt$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?always_noconv@codecvt_base@std@@QEBA_NXZ
  0002e	0f b6 c0	 movzx	 eax, al
  00031	85 c0		 test	 eax, eax
  00033	74 0f		 je	 SHORT $LN2@Initcvt

; 754  :             _Pcvt = nullptr; // nothing to do

  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0

; 755  :         } else { // set up for nontrivial codecvt facet

  00042	eb 1e		 jmp	 SHORT $LN3@Initcvt
$LN2@Initcvt:

; 756  :             _Pcvt = _STD addressof(_Newcvt);

  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Newcvt$[rsp]
  00049	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$codecvt@DDU_Mbstatet@@@std@@@std@@YAPEBV?$codecvt@DDU_Mbstatet@@@0@AEBV10@@Z ; std::addressof<std::codecvt<char,char,_Mbstatet> const >
  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 757  :             _Mysb::_Init(); // reset any buffering

  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ
$LN3@Initcvt:

; 758  :         }
; 759  :     }

  00062	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00066	5f		 pop	 rdi
  00067	c3		 ret	 0
?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
_TEXT	SEGMENT
_Codecvt_temp_buf$ = 48
_Str$ = 72
_Dest$ = 136
_Count$5 = 152
$T6 = 168
$T7 = 172
tv146 = 176
tv94 = 184
tv140 = 188
__$ArrayPad$ = 192
this$ = 224
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite, COMDAT

; 716  :     bool _Endwrite() { // put shift to initial conversion state, as needed

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec d0 00
	00 00		 sub	 rsp, 208		; 000000d0H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+224]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 717  :         if (!_Pcvt || !_Wrotesome) {

  00036	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00043	74 10		 je	 SHORT $LN5@Endwrite
  00045	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	0f b6 40 71	 movzx	 eax, BYTE PTR [rax+113]
  00051	85 c0		 test	 eax, eax
  00053	75 07		 jne	 SHORT $LN4@Endwrite
$LN5@Endwrite:

; 718  :             return true;

  00055	b0 01		 mov	 al, 1
  00057	e9 80 01 00 00	 jmp	 $LN1@Endwrite
$LN4@Endwrite:

; 719  :         }
; 720  : 
; 721  :         // may have to put
; 722  :         if (_Traits::eq_int_type(_Traits::eof(), overflow())) {

  0005c	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00061	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00069	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0006c	48 89 8c 24 b0
	00 00 00	 mov	 QWORD PTR tv146[rsp], rcx
  00074	8b d0		 mov	 edx, eax
  00076	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007e	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR tv146[rsp]
  00086	ff 50 18	 call	 QWORD PTR [rax+24]
  00089	89 84 24 a8 00
	00 00		 mov	 DWORD PTR $T6[rsp], eax
  00090	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00095	89 84 24 ac 00
	00 00		 mov	 DWORD PTR $T7[rsp], eax
  0009c	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR $T6[rsp]
  000a4	48 8d 8c 24 ac
	00 00 00	 lea	 rcx, QWORD PTR $T7[rsp]
  000ac	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000b1	0f b6 c0	 movzx	 eax, al
  000b4	85 c0		 test	 eax, eax
  000b6	74 07		 je	 SHORT $LN6@Endwrite

; 723  :             return false;

  000b8	32 c0		 xor	 al, al
  000ba	e9 1d 01 00 00	 jmp	 $LN1@Endwrite
$LN6@Endwrite:

; 724  :         }
; 725  : 
; 726  :         constexpr size_t _Codecvt_temp_buf = 32;

  000bf	48 c7 44 24 30
	20 00 00 00	 mov	 QWORD PTR _Codecvt_temp_buf$[rsp], 32 ; 00000020H

; 727  :         char _Str[_Codecvt_temp_buf];
; 728  :         char* _Dest;
; 729  :         switch (_Pcvt->unshift(_State, _Str, _Str + _Codecvt_temp_buf, _Dest)) { // test result of homing conversion

  000c8	48 8d 44 24 68	 lea	 rax, QWORD PTR _Str$[rsp+32]
  000cd	48 8b 8c 24 e0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d5	48 83 c1 74	 add	 rcx, 116		; 00000074H
  000d9	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR _Dest$[rsp]
  000e1	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  000e6	4c 8b c8	 mov	 r9, rax
  000e9	4c 8d 44 24 48	 lea	 r8, QWORD PTR _Str$[rsp]
  000ee	48 8b d1	 mov	 rdx, rcx
  000f1	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f9	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  000fd	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
  00103	89 84 24 b8 00
	00 00		 mov	 DWORD PTR tv94[rsp], eax
  0010a	83 bc 24 b8 00
	00 00 00	 cmp	 DWORD PTR tv94[rsp], 0
  00112	74 1d		 je	 SHORT $LN7@Endwrite
  00114	83 bc 24 b8 00
	00 00 01	 cmp	 DWORD PTR tv94[rsp], 1
  0011c	74 1f		 je	 SHORT $LN8@Endwrite
  0011e	83 bc 24 b8 00
	00 00 03	 cmp	 DWORD PTR tv94[rsp], 3
  00126	0f 84 9e 00 00
	00		 je	 $LN10@Endwrite
  0012c	e9 a9 00 00 00	 jmp	 $LN11@Endwrite
$LN7@Endwrite:

; 730  :         case codecvt_base::ok:
; 731  :             _Wrotesome = false; // homed successfully

  00131	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00139	c6 40 71 00	 mov	 BYTE PTR [rax+113], 0
$LN8@Endwrite:

; 732  : 
; 733  :         case codecvt_base::partial: // fall through
; 734  :         { // put any generated bytes
; 735  :             const auto _Count = static_cast<size_t>(_Dest - _Str);

  0013d	48 8d 44 24 48	 lea	 rax, QWORD PTR _Str$[rsp]
  00142	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Dest$[rsp]
  0014a	48 2b c8	 sub	 rcx, rax
  0014d	48 8b c1	 mov	 rax, rcx
  00150	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _Count$5[rsp], rax

; 736  :             if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile))) {

  00158	48 83 bc 24 98
	00 00 00 00	 cmp	 QWORD PTR _Count$5[rsp], 0
  00161	76 35		 jbe	 SHORT $LN9@Endwrite
  00163	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0016b	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  00172	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR _Count$5[rsp]
  0017a	ba 01 00 00 00	 mov	 edx, 1
  0017f	48 8d 4c 24 48	 lea	 rcx, QWORD PTR _Str$[rsp]
  00184	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  0018a	48 39 84 24 98
	00 00 00	 cmp	 QWORD PTR _Count$5[rsp], rax
  00192	74 04		 je	 SHORT $LN9@Endwrite

; 737  :                 return false; // write failed

  00194	32 c0		 xor	 al, al
  00196	eb 44		 jmp	 SHORT $LN1@Endwrite
$LN9@Endwrite:

; 738  :             }
; 739  : 
; 740  :             return !_Wrotesome;

  00198	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001a0	0f b6 40 71	 movzx	 eax, BYTE PTR [rax+113]
  001a4	85 c0		 test	 eax, eax
  001a6	75 0d		 jne	 SHORT $LN13@Endwrite
  001a8	c7 84 24 bc 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv140[rsp], 1
  001b3	eb 0b		 jmp	 SHORT $LN14@Endwrite
$LN13@Endwrite:
  001b5	c7 84 24 bc 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv140[rsp], 0
$LN14@Endwrite:
  001c0	0f b6 84 24 bc
	00 00 00	 movzx	 eax, BYTE PTR tv140[rsp]
  001c8	eb 12		 jmp	 SHORT $LN1@Endwrite
$LN10@Endwrite:

; 741  :         }
; 742  : 
; 743  :         case codecvt_base::noconv:
; 744  :             _Wrotesome = false; // homed successfully

  001ca	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001d2	c6 40 71 00	 mov	 BYTE PTR [rax+113], 0

; 745  :             return true; // nothing else to do

  001d6	b0 01		 mov	 al, 1
  001d8	eb 02		 jmp	 SHORT $LN1@Endwrite
$LN11@Endwrite:

; 746  : 
; 747  :         default:
; 748  :             return false; // conversion failed

  001da	32 c0		 xor	 al, al
$LN1@Endwrite:

; 749  :         }
; 750  :     }

  001dc	48 8b f8	 mov	 rdi, rax
  001df	48 8b cc	 mov	 rcx, rsp
  001e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ$rtcFrameData
  001e9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001ee	48 8b c7	 mov	 rax, rdi
  001f1	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001f9	48 33 cc	 xor	 rcx, rsp
  001fc	e8 00 00 00 00	 call	 __security_check_cookie
  00201	48 81 c4 d0 00
	00 00		 add	 rsp, 208		; 000000d0H
  00208	5f		 pop	 rdi
  00209	c3		 ret	 0
?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
_TEXT	SEGMENT
_Pb$6 = 72
_Pn$7 = 104
_Nr$8 = 136
_Nw$9 = 152
tv66 = 160
this$ = 192
_File$ = 200
_Which$ = 208
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Init, COMDAT

; 689  :     void _Init(FILE* _File, _Initfl _Which) { // initialize to C stream _File after {new, open, close}

$LN6:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 2c 00 00 00	 mov	 ecx, 44			; 0000002cH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+192]

; 690  :         using _State_type = typename _Traits::state_type;
; 691  : 
; 692  :         __PURE_APPDOMAIN_GLOBAL static _State_type _Stinit; // initial state
; 693  : 
; 694  :         _Closef    = _Which == _Openfl;

  0002e	83 bc 24 d0 00
	00 00 01	 cmp	 DWORD PTR _Which$[rsp], 1
  00036	75 0d		 jne	 SHORT $LN4@Init
  00038	c7 84 24 a0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR tv66[rsp], 1
  00043	eb 0b		 jmp	 SHORT $LN5@Init
$LN4@Init:
  00045	c7 84 24 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR tv66[rsp], 0
$LN5@Init:
  00050	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00058	0f b6 8c 24 a0
	00 00 00	 movzx	 ecx, BYTE PTR tv66[rsp]
  00060	88 48 7c	 mov	 BYTE PTR [rax+124], cl

; 695  :         _Wrotesome = false;

  00063	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	c6 40 71 00	 mov	 BYTE PTR [rax+113], 0

; 696  : 
; 697  :         _Mysb::_Init(); // initialize stream buffer base object

  0006f	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00077	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ

; 698  : 
; 699  :         if (_File && sizeof(_Elem) == 1) { // point inside C stream with [first, first + count) buffer

  0007d	48 83 bc 24 c8
	00 00 00 00	 cmp	 QWORD PTR _File$[rsp], 0
  00086	0f 84 9a 00 00
	00		 je	 $LN2@Init
  0008c	33 c0		 xor	 eax, eax
  0008e	83 f8 01	 cmp	 eax, 1
  00091	0f 84 8f 00 00
	00		 je	 $LN2@Init

; 700  :             _Elem** _Pb = nullptr;

  00097	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR _Pb$6[rsp], 0

; 701  :             _Elem** _Pn = nullptr;

  000a0	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR _Pn$7[rsp], 0

; 702  :             int* _Nr    = nullptr;

  000a9	48 c7 84 24 88
	00 00 00 00 00
	00 00		 mov	 QWORD PTR _Nr$8[rsp], 0

; 703  : 
; 704  :             ::_get_stream_buffer_pointers(

  000b5	4c 8d 8c 24 88
	00 00 00	 lea	 r9, QWORD PTR _Nr$8[rsp]
  000bd	4c 8d 44 24 68	 lea	 r8, QWORD PTR _Pn$7[rsp]
  000c2	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Pb$6[rsp]
  000c7	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _File$[rsp]
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__get_stream_buffer_pointers

; 705  :                 _File, reinterpret_cast<char***>(&_Pb), reinterpret_cast<char***>(&_Pn), &_Nr);
; 706  :             int* _Nw = _Nr;

  000d5	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Nr$8[rsp]
  000dd	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _Nw$9[rsp], rax

; 707  : 
; 708  :             _Mysb::_Init(_Pb, _Pn, _Nr, _Pb, _Pn, _Nw);

  000e5	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR _Nw$9[rsp]
  000ed	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  000f2	48 8b 44 24 68	 mov	 rax, QWORD PTR _Pn$7[rsp]
  000f7	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000fc	48 8b 44 24 48	 mov	 rax, QWORD PTR _Pb$6[rsp]
  00101	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00106	4c 8b 8c 24 88
	00 00 00	 mov	 r9, QWORD PTR _Nr$8[rsp]
  0010e	4c 8b 44 24 68	 mov	 r8, QWORD PTR _Pn$7[rsp]
  00113	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Pb$6[rsp]
  00118	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00120	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXPEAPEAD0PEAH001@Z
$LN2@Init:

; 709  :         }
; 710  : 
; 711  :         _Myfile = _File;

  00126	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012e	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR _File$[rsp]
  00136	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 712  :         _State  = _Stinit;

  0013d	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00145	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR ?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A ; `std::basic_filebuf<char,std::char_traits<char> >::_Init'::`2'::_Stinit
  0014c	48 89 48 74	 mov	 QWORD PTR [rax+116], rcx

; 713  :         _Pcvt   = nullptr; // pointer to codecvt facet

  00150	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00158	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0

; 714  :     }

  00160	48 8b cc	 mov	 rcx, rsp
  00163	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z$rtcFrameData
  0016a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0016f	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  00176	5f		 pop	 rdi
  00177	c3		 ret	 0
?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
_TEXT	SEGMENT
this$ = 48
_Loc$ = 56
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::imbue, COMDAT

; 684  :     virtual void __CLR_OR_THIS_CALL imbue(const locale& _Loc) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 685  :         // set locale to argument (capture nontrivial codecvt facet)
; 686  :         _Initcvt(_STD use_facet<_Cvt>(_Loc));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Loc$[rsp]
  00028	e8 00 00 00 00	 call	 ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt

; 687  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::imbue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
tv86 = 40
this$ = 64
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::sync, COMDAT

; 676  :     virtual int __CLR_OR_THIS_CALL sync() { // synchronize C stream with external file

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 677  :         if (!_Myfile || _Traits::eq_int_type(_Traits::eof(), overflow()) || 0 <= _CSTD fflush(_Myfile)) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 5a		 je	 SHORT $LN3@sync
  0002d	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00032	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00037	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003a	48 89 4c 24 28	 mov	 QWORD PTR tv86[rsp], rcx
  0003f	8b d0		 mov	 edx, eax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	48 8b 44 24 28	 mov	 rax, QWORD PTR tv86[rsp]
  0004b	ff 50 18	 call	 QWORD PTR [rax+24]
  0004e	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00052	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00057	89 44 24 24	 mov	 DWORD PTR $T2[rsp], eax
  0005b	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00060	48 8d 4c 24 24	 lea	 rcx, QWORD PTR $T2[rsp]
  00065	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  0006a	0f b6 c0	 movzx	 eax, al
  0006d	85 c0		 test	 eax, eax
  0006f	75 16		 jne	 SHORT $LN3@sync
  00071	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fflush
  00083	85 c0		 test	 eax, eax
  00085	7c 04		 jl	 SHORT $LN2@sync
$LN3@sync:

; 678  :             return 0;

  00087	33 c0		 xor	 eax, eax
  00089	eb 05		 jmp	 SHORT $LN1@sync
$LN2@sync:

; 679  :         }
; 680  : 
; 681  :         return -1;

  0008b	b8 ff ff ff ff	 mov	 eax, -1
$LN1@sync:

; 682  :     }

  00090	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00094	5f		 pop	 rdi
  00095	c3		 ret	 0
?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::sync
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z
_TEXT	SEGMENT
_Mode$ = 32
_Size$ = 40
this$ = 64
_Buffer$ = 72
_Count$ = 80
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::setbuf, COMDAT

; 657  :     virtual _Mysb* __CLR_OR_THIS_CALL setbuf(_Elem* _Buffer, streamsize _Count) { // offer _Buffer to C stream

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 658  :         int _Mode;
; 659  :         if (!_Buffer && _Count == 0) {

  00028	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Buffer$[rsp], 0
  0002e	75 12		 jne	 SHORT $LN2@setbuf
  00030	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  00036	75 0a		 jne	 SHORT $LN2@setbuf

; 660  :             _Mode = _IONBF;

  00038	c7 44 24 20 04
	00 00 00	 mov	 DWORD PTR _Mode$[rsp], 4

; 661  :         } else {

  00040	eb 08		 jmp	 SHORT $LN3@setbuf
$LN2@setbuf:

; 662  :             _Mode = _IOFBF;

  00042	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _Mode$[rsp], 0
$LN3@setbuf:

; 663  :         }
; 664  : 
; 665  :         const size_t _Size = static_cast<size_t>(_Count) * sizeof(_Elem);

  0004a	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  0004f	48 89 44 24 28	 mov	 QWORD PTR _Size$[rsp], rax

; 666  : 
; 667  :         if (!_Myfile || _CSTD setvbuf(_Myfile, reinterpret_cast<char*>(_Buffer), _Mode, _Size) != 0) {

  00054	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00061	74 25		 je	 SHORT $LN5@setbuf
  00063	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _Size$[rsp]
  00068	44 8b 44 24 20	 mov	 r8d, DWORD PTR _Mode$[rsp]
  0006d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00077	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_setvbuf
  00084	85 c0		 test	 eax, eax
  00086	74 04		 je	 SHORT $LN4@setbuf
$LN5@setbuf:

; 668  :             return nullptr; // failed

  00088	33 c0		 xor	 eax, eax
  0008a	eb 21		 jmp	 SHORT $LN1@setbuf
$LN4@setbuf:

; 669  :         }
; 670  : 
; 671  :         // new buffer, reinitialize pointers
; 672  :         _Init(_Myfile, _Openfl);

  0008c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00092	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00097	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  0009e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a3	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 673  :         return this;

  000a8	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
$LN1@setbuf:

; 674  :     }

  000ad	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b1	5f		 pop	 rdi
  000b2	c3		 ret	 0
?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::setbuf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
_Off$ = 40
$T4 = 52
this$ = 80
__$ReturnUdt$ = 88
_Pos$ = 96
__formal$ = 104
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekpos, COMDAT

; 644  :     virtual pos_type __CLR_OR_THIS_CALL seekpos(pos_type _Pos, ios_base::openmode = ios_base::in | ios_base::out) {

$LN5:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 645  :         // change position to _Pos
; 646  :         off_type _Off = static_cast<off_type>(_Pos);

  0002d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Pos$[rsp]
  00032	e8 00 00 00 00	 call	 ??B?$fpos@U_Mbstatet@@@std@@QEBA_JXZ ; std::fpos<_Mbstatet>::operator __int64
  00037	48 89 44 24 28	 mov	 QWORD PTR _Off$[rsp], rax

; 647  : 
; 648  :         if (!_Myfile || !_Endwrite() || _CSTD fsetpos(_Myfile, &_Off) != 0) {

  0003c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00049	74 2c		 je	 SHORT $LN3@seekpos
  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  00055	0f b6 c0	 movzx	 eax, al
  00058	85 c0		 test	 eax, eax
  0005a	74 1b		 je	 SHORT $LN3@seekpos
  0005c	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Off$[rsp]
  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fsetpos
  00073	85 c0		 test	 eax, eax
  00075	74 18		 je	 SHORT $LN2@seekpos
$LN3@seekpos:

; 649  :             return pos_type(-1); // report failure

  00077	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  0007e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00083	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  0008d	eb 42		 jmp	 SHORT $LN1@seekpos
$LN2@seekpos:

; 650  :         }
; 651  : 
; 652  :         _State = _Pos.state();

  0008f	48 8d 54 24 34	 lea	 rdx, QWORD PTR $T4[rsp]
  00094	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Pos$[rsp]
  00099	e8 00 00 00 00	 call	 ?state@?$fpos@U_Mbstatet@@@std@@QEBA?AU_Mbstatet@@XZ ; std::fpos<_Mbstatet>::state
  0009e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000a6	48 89 41 74	 mov	 QWORD PTR [rcx+116], rax

; 653  :         _Reset_back(); // revert from _Mychar buffer, discarding any putback

  000aa	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000af	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 654  :         return pos_type(_State, _Off); // return new position

  000b4	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Off$[rsp]
  000b9	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b 50 74	 mov	 rdx, QWORD PTR [rax+116]
  000c2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c7	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000cc	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekpos:

; 655  :     }

  000d1	48 8b f8	 mov	 rdi, rax
  000d4	48 8b cc	 mov	 rcx, rsp
  000d7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z$rtcFrameData
  000de	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e3	48 8b c7	 mov	 rax, rdi
  000e6	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
_Fileposition$ = 40
this$ = 80
__$ReturnUdt$ = 88
_Off$ = 96
_Way$ = 104
__formal$ = 112
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::seekoff, COMDAT

; 625  :         ios_base::openmode = ios_base::in | ios_base::out) { // change position by _Off

$LN8:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 626  :         fpos_t _Fileposition;
; 627  : 
; 628  :         if (_Mysb::gptr() == &_Mychar // something putback
; 629  :             && _Way == ios_base::cur // a relative seek
; 630  :             && !_Pcvt) { // not converting

  0002d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00038	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003d	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00041	48 3b c1	 cmp	 rax, rcx
  00044	75 20		 jne	 SHORT $LN2@seekoff
  00046	83 7c 24 68 01	 cmp	 DWORD PTR _Way$[rsp], 1
  0004b	75 19		 jne	 SHORT $LN2@seekoff
  0004d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00057	75 0d		 jne	 SHORT $LN2@seekoff

; 631  :             _Off -= static_cast<off_type>(sizeof(_Elem)); // back up over _Elem bytes

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR _Off$[rsp]
  0005e	48 ff c8	 dec	 rax
  00061	48 89 44 24 60	 mov	 QWORD PTR _Off$[rsp], rax
$LN2@seekoff:

; 632  :         }
; 633  : 
; 634  :         if (!_Myfile || !_Endwrite()
; 635  :             || ((_Off != 0 || _Way != ios_base::cur) && _CSTD _fseeki64(_Myfile, _Off, _Way) != 0)
; 636  :             || _CSTD fgetpos(_Myfile, &_Fileposition) != 0) {

  00066	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00073	74 5b		 je	 SHORT $LN4@seekoff
  00075	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0007a	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  0007f	0f b6 c0	 movzx	 eax, al
  00082	85 c0		 test	 eax, eax
  00084	74 4a		 je	 SHORT $LN4@seekoff
  00086	48 83 7c 24 60
	00		 cmp	 QWORD PTR _Off$[rsp], 0
  0008c	75 07		 jne	 SHORT $LN6@seekoff
  0008e	83 7c 24 68 01	 cmp	 DWORD PTR _Way$[rsp], 1
  00093	74 20		 je	 SHORT $LN5@seekoff
$LN6@seekoff:
  00095	44 8b 44 24 68	 mov	 r8d, DWORD PTR _Way$[rsp]
  0009a	48 8b 54 24 60	 mov	 rdx, QWORD PTR _Off$[rsp]
  0009f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__fseeki64
  000b1	85 c0		 test	 eax, eax
  000b3	75 1b		 jne	 SHORT $LN4@seekoff
$LN5@seekoff:
  000b5	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Fileposition$[rsp]
  000ba	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000bf	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  000c6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fgetpos
  000cc	85 c0		 test	 eax, eax
  000ce	74 18		 je	 SHORT $LN3@seekoff
$LN4@seekoff:

; 637  :             return pos_type(-1); // report failure

  000d0	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  000d7	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000dc	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  000e1	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  000e6	eb 27		 jmp	 SHORT $LN1@seekoff
$LN3@seekoff:

; 638  :         }
; 639  : 
; 640  :         _Reset_back(); // revert from _Mychar buffer, discarding any putback

  000e8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000ed	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 641  :         return pos_type(_State, _Fileposition); // return new position

  000f2	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Fileposition$[rsp]
  000f7	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000fc	48 8b 50 74	 mov	 rdx, QWORD PTR [rax+116]
  00100	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00105	e8 00 00 00 00	 call	 ??0?$fpos@U_Mbstatet@@@std@@QEAA@U_Mbstatet@@_J@Z ; std::fpos<_Mbstatet>::fpos<_Mbstatet>
  0010a	48 8b 44 24 58	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@seekoff:

; 642  :     }

  0010f	48 8b f8	 mov	 rdi, rax
  00112	48 8b cc	 mov	 rcx, rsp
  00115	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z$rtcFrameData
  0011c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00121	48 8b c7	 mov	 rax, rdi
  00124	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00128	5f		 pop	 rdi
  00129	c3		 ret	 0
?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
_TEXT	SEGMENT
_Start_count$1 = 32
_Size$2 = 40
this$ = 64
_Ptr$ = 72
_Count$ = 80
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsputn, COMDAT

; 591  :     virtual streamsize __CLR_OR_THIS_CALL xsputn(const _Elem* _Ptr, streamsize _Count) override {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 592  :         // put _Count characters to stream
; 593  :         if
; 594  :             _CONSTEXPR_IF(sizeof(_Elem) == 1) {
; 595  :                 if (_Pcvt) { // if we need a nontrivial codecvt transform, do the default expensive thing

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00032	74 1a		 je	 SHORT $LN2@xsputn

; 596  :                     return _Mysb::xsputn(_Ptr, _Count);

  00034	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  00039	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00043	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
  00049	e9 ee 00 00 00	 jmp	 $LN1@xsputn
$LN2@xsputn:

; 597  :                 }
; 598  : 
; 599  :                 const streamsize _Start_count = _Count;

  0004e	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00053	48 89 44 24 20	 mov	 QWORD PTR _Start_count$1[rsp], rax

; 600  :                 streamsize _Size              = _Mysb::_Pnavail();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
  00063	48 89 44 24 28	 mov	 QWORD PTR _Size$2[rsp], rax

; 601  :                 if (0 < _Count && 0 < _Size) { // copy to write buffer

  00068	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  0006e	7e 74		 jle	 SHORT $LN3@xsputn
  00070	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Size$2[rsp], 0
  00076	7e 6c		 jle	 SHORT $LN3@xsputn

; 602  :                     if (_Count < _Size) {

  00078	48 8b 44 24 28	 mov	 rax, QWORD PTR _Size$2[rsp]
  0007d	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00082	7d 0a		 jge	 SHORT $LN4@xsputn

; 603  :                         _Size = _Count;

  00084	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00089	48 89 44 24 28	 mov	 QWORD PTR _Size$2[rsp], rax
$LN4@xsputn:

; 604  :                     }
; 605  : 
; 606  :                     _Traits::copy(_Mysb::pptr(), _Ptr, static_cast<size_t>(_Size));

  0008e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00093	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00099	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Size$2[rsp]
  0009e	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000a3	48 8b c8	 mov	 rcx, rax
  000a6	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 607  :                     _Ptr += _Size;

  000ab	48 8b 44 24 28	 mov	 rax, QWORD PTR _Size$2[rsp]
  000b0	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000b5	48 03 c8	 add	 rcx, rax
  000b8	48 8b c1	 mov	 rax, rcx
  000bb	48 89 44 24 48	 mov	 QWORD PTR _Ptr$[rsp], rax

; 608  :                     _Count -= _Size;

  000c0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Size$2[rsp]
  000c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  000ca	48 2b c8	 sub	 rcx, rax
  000cd	48 8b c1	 mov	 rax, rcx
  000d0	48 89 44 24 50	 mov	 QWORD PTR _Count$[rsp], rax

; 609  :                     _Mysb::pbump(static_cast<int>(_Size));

  000d5	8b 54 24 28	 mov	 edx, DWORD PTR _Size$2[rsp]
  000d9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z
$LN3@xsputn:

; 610  :                 }
; 611  : 
; 612  :                 if (0 < _Count && _Myfile) { // open C stream, attempt write

  000e4	48 83 7c 24 50
	00		 cmp	 QWORD PTR _Count$[rsp], 0
  000ea	7e 40		 jle	 SHORT $LN5@xsputn
  000ec	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000f1	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  000f9	74 31		 je	 SHORT $LN5@xsputn

; 613  :                     _Count -= _CSTD fwrite(_Ptr, sizeof(_Elem), static_cast<size_t>(_Count), _Myfile);

  000fb	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00100	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  00107	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0010c	ba 01 00 00 00	 mov	 edx, 1
  00111	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00116	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  0011c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00121	48 2b c8	 sub	 rcx, rax
  00124	48 8b c1	 mov	 rax, rcx
  00127	48 89 44 24 50	 mov	 QWORD PTR _Count$[rsp], rax
$LN5@xsputn:

; 614  :                 }
; 615  : 
; 616  :                 return _Start_count - _Count;

  0012c	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00131	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Start_count$1[rsp]
  00136	48 2b c8	 sub	 rcx, rax
  00139	48 8b c1	 mov	 rax, rcx
$LN1@xsputn:

; 617  :             }
; 618  :         else { // non-chars always get element-by-element processing
; 619  :             return _Mysb::xsputn(_Ptr, _Count);
; 620  :         }
; 621  :     }

  0013c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00140	5f		 pop	 rdi
  00141	c3		 ret	 0
?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsputn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
_TEXT	SEGMENT
_Count_s$5 = 40
_Start_count$6 = 56
_Available$7 = 72
_Read_size$8 = 88
_Read_size$9 = 96
_Actual_read$10 = 104
this$ = 128
_Ptr$ = 136
_Count$ = 144
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn, COMDAT

; 541  :     virtual streamsize __CLR_OR_THIS_CALL xsgetn(_Elem* _Ptr, streamsize _Count) override {

$LN11:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 1c 00 00 00	 mov	 ecx, 28
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 542  :         // get _Count characters from stream
; 543  :         if
; 544  :             _CONSTEXPR_IF(sizeof(_Elem) == 1) {
; 545  :                 if (_Count <= 0) {

  0002b	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR _Count$[rsp], 0
  00034	7f 07		 jg	 SHORT $LN4@xsgetn

; 546  :                     return 0;

  00036	33 c0		 xor	 eax, eax
  00038	e9 e8 01 00 00	 jmp	 $LN1@xsgetn
$LN4@xsgetn:

; 547  :                 }
; 548  : 
; 549  :                 if (_Pcvt) { // if we need a nontrivial codecvt transform, do the default expensive thing

  0003d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00045	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  0004a	74 23		 je	 SHORT $LN5@xsgetn

; 550  :                     return _Mysb::xsgetn(_Ptr, _Count);

  0004c	4c 8b 84 24 90
	00 00 00	 mov	 r8, QWORD PTR _Count$[rsp]
  00054	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0005c	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
  0006a	e9 b6 01 00 00	 jmp	 $LN1@xsgetn
$LN5@xsgetn:

; 551  :                 }
; 552  : 
; 553  :                 // assuming this is OK because _Ptr + _Count must be valid
; 554  :                 auto _Count_s           = static_cast<size_t>(_Count);

  0006f	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00077	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax

; 555  :                 const auto _Start_count = _Count;

  0007c	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR _Count$[rsp]
  00084	48 89 44 24 38	 mov	 QWORD PTR _Start_count$6[rsp], rax

; 556  :                 const auto _Available   = static_cast<size_t>(_Mysb::_Gnavail());

  00089	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00091	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Gnavail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBA_JXZ
  00097	48 89 44 24 48	 mov	 QWORD PTR _Available$7[rsp], rax

; 557  :                 if (0 < _Available) { // copy from get area

  0009c	48 83 7c 24 48
	00		 cmp	 QWORD PTR _Available$7[rsp], 0
  000a2	76 7c		 jbe	 SHORT $LN6@xsgetn

; 558  :                     const auto _Read_size = _Min_value(_Count_s, _Available);

  000a4	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Available$7[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Count_s$5[rsp]
  000ae	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000b3	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b6	48 89 44 24 58	 mov	 QWORD PTR _Read_size$8[rsp], rax

; 559  :                     _Traits::copy(_Ptr, _Mysb::gptr(), _Read_size);

  000bb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000c3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000c9	4c 8b 44 24 58	 mov	 r8, QWORD PTR _Read_size$8[rsp]
  000ce	48 8b d0	 mov	 rdx, rax
  000d1	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000d9	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 560  :                     _Ptr += _Read_size;

  000de	48 8b 44 24 58	 mov	 rax, QWORD PTR _Read_size$8[rsp]
  000e3	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  000eb	48 03 c8	 add	 rcx, rax
  000ee	48 8b c1	 mov	 rax, rcx
  000f1	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Ptr$[rsp], rax

; 561  :                     _Count_s -= _Read_size;

  000f9	48 8b 44 24 58	 mov	 rax, QWORD PTR _Read_size$8[rsp]
  000fe	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Count_s$5[rsp]
  00103	48 2b c8	 sub	 rcx, rax
  00106	48 8b c1	 mov	 rax, rcx
  00109	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax

; 562  :                     _Mysb::gbump(static_cast<int>(_Read_size));

  0010e	8b 54 24 58	 mov	 edx, DWORD PTR _Read_size$8[rsp]
  00112	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0011a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXH@Z
$LN6@xsgetn:

; 563  :                 }
; 564  : 
; 565  :                 if (_Myfile) { // open C stream, attempt read

  00120	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00128	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00130	0f 84 df 00 00
	00		 je	 $LN7@xsgetn

; 566  :                     _Reset_back(); // revert from _Mychar buffer

  00136	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013e	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 567  :                     // process in 4k - 1 chunks to avoid tripping over fread's clobber-the-end behavior when
; 568  :                     // doing \r\n -> \n translation
; 569  :                     constexpr size_t _Read_size = 4095; // _INTERNAL_BUFSIZ - 1

  00143	48 c7 44 24 60
	ff 0f 00 00	 mov	 QWORD PTR _Read_size$9[rsp], 4095 ; 00000fffH
$LN2@xsgetn:

; 570  :                     while (_Read_size < _Count_s) {

  0014c	48 81 7c 24 28
	ff 0f 00 00	 cmp	 QWORD PTR _Count_s$5[rsp], 4095 ; 00000fffH
  00155	76 7f		 jbe	 SHORT $LN3@xsgetn

; 571  :                         const auto _Actual_read = _CSTD fread(_Ptr, sizeof(_Elem), _Read_size, _Myfile);

  00157	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0015f	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  00166	41 b8 ff 0f 00
	00		 mov	 r8d, 4095		; 00000fffH
  0016c	ba 01 00 00 00	 mov	 edx, 1
  00171	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00179	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fread
  0017f	48 89 44 24 68	 mov	 QWORD PTR _Actual_read$10[rsp], rax

; 572  :                         _Ptr += _Actual_read;

  00184	48 8b 44 24 68	 mov	 rax, QWORD PTR _Actual_read$10[rsp]
  00189	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00191	48 03 c8	 add	 rcx, rax
  00194	48 8b c1	 mov	 rax, rcx
  00197	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _Ptr$[rsp], rax

; 573  :                         _Count_s -= _Actual_read;

  0019f	48 8b 44 24 68	 mov	 rax, QWORD PTR _Actual_read$10[rsp]
  001a4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Count_s$5[rsp]
  001a9	48 2b c8	 sub	 rcx, rax
  001ac	48 8b c1	 mov	 rax, rcx
  001af	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax

; 574  :                         if (_Actual_read != _Read_size) {

  001b4	48 81 7c 24 68
	ff 0f 00 00	 cmp	 QWORD PTR _Actual_read$10[rsp], 4095 ; 00000fffH
  001bd	74 12		 je	 SHORT $LN8@xsgetn

; 575  :                             return static_cast<streamsize>(_Start_count - _Count_s);

  001bf	48 8b 44 24 28	 mov	 rax, QWORD PTR _Count_s$5[rsp]
  001c4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Start_count$6[rsp]
  001c9	48 2b c8	 sub	 rcx, rax
  001cc	48 8b c1	 mov	 rax, rcx
  001cf	eb 54		 jmp	 SHORT $LN1@xsgetn
$LN8@xsgetn:

; 576  :                         }
; 577  :                     }

  001d1	e9 76 ff ff ff	 jmp	 $LN2@xsgetn
$LN3@xsgetn:

; 578  : 
; 579  :                     if (0 < _Count_s) {

  001d6	48 83 7c 24 28
	00		 cmp	 QWORD PTR _Count_s$5[rsp], 0
  001dc	76 37		 jbe	 SHORT $LN9@xsgetn

; 580  :                         _Count_s -= _CSTD fread(_Ptr, sizeof(_Elem), _Count_s, _Myfile);

  001de	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001e6	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  001ed	4c 8b 44 24 28	 mov	 r8, QWORD PTR _Count_s$5[rsp]
  001f2	ba 01 00 00 00	 mov	 edx, 1
  001f7	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  001ff	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fread
  00205	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Count_s$5[rsp]
  0020a	48 2b c8	 sub	 rcx, rax
  0020d	48 8b c1	 mov	 rax, rcx
  00210	48 89 44 24 28	 mov	 QWORD PTR _Count_s$5[rsp], rax
$LN9@xsgetn:
$LN7@xsgetn:

; 581  :                     }
; 582  :                 }
; 583  : 
; 584  :                 return static_cast<streamsize>(_Start_count - _Count_s);

  00215	48 8b 44 24 28	 mov	 rax, QWORD PTR _Count_s$5[rsp]
  0021a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Start_count$6[rsp]
  0021f	48 2b c8	 sub	 rcx, rax
  00222	48 8b c1	 mov	 rax, rcx
$LN1@xsgetn:

; 585  :             }
; 586  :         else { // non-chars always get element-by-element processing
; 587  :             return _Mysb::xsgetn(_Ptr, _Count);
; 588  :         }
; 589  :     }

  00225	48 8b f8	 mov	 rdi, rax
  00228	48 8b cc	 mov	 rcx, rsp
  0022b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z$rtcFrameData
  00232	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00237	48 8b c7	 mov	 rax, rdi
  0023a	48 83 c4 70	 add	 rsp, 112		; 00000070H
  0023e	5f		 pop	 rdi
  0023f	c3		 ret	 0
?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::xsgetn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
_Ch$8 = 68
_Str$ = 104
_Src$9 = 168
_Meta$10 = 180
_Ch$11 = 196
_Dest$12 = 232
_Nleft$13 = 248
$T14 = 264
$T15 = 268
$T16 = 272
$T17 = 276
tv76 = 280
tv139 = 288
tv154 = 296
tv159 = 304
tv162 = 312
tv169 = 320
tv172 = 328
__$ArrayPad$ = 336
this$ = 368
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::uflow, COMDAT

; 483  :     virtual int_type __CLR_OR_THIS_CALL uflow() { // get an element from stream, point past it

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 60 01
	00 00		 sub	 rsp, 352		; 00000160H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 58 00 00 00	 mov	 ecx, 88			; 00000058H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR [rsp+368]
  00024	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002b	48 33 c4	 xor	 rax, rsp
  0002e	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 484  :         if (_Mysb::gptr() && _Mysb::gptr() < _Mysb::egptr()) {

  00036	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00044	48 85 c0	 test	 rax, rax
  00047	74 4c		 je	 SHORT $LN9@uflow
  00049	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00057	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR tv76[rsp], rax
  0005f	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00067	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0006d	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  00075	48 3b c8	 cmp	 rcx, rax
  00078	73 1b		 jae	 SHORT $LN9@uflow

; 485  :             return _Traits::to_int_type(*_Mysb::_Gninc()); // return buffered

  0007a	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Gninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00090	e9 0f 03 00 00	 jmp	 $LN1@uflow
$LN9@uflow:

; 486  :         }
; 487  : 
; 488  :         if (!_Myfile) {

  00095	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  000a5	75 0a		 jne	 SHORT $LN10@uflow

; 489  :             return _Traits::eof(); // no open C stream, fail

  000a7	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000ac	e9 f3 02 00 00	 jmp	 $LN1@uflow
$LN10@uflow:

; 490  :         }
; 491  : 
; 492  :         _Reset_back(); // revert from _Mychar buffer

  000b1	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000b9	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 493  :         if (!_Pcvt) { // no codecvt facet, just get it

  000be	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000c6	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  000cb	75 4b		 jne	 SHORT $LN11@uflow

; 494  :             _Elem _Ch;
; 495  :             return _Fgetc(_Ch, _Myfile) ? _Traits::to_int_type(_Ch) : _Traits::eof();

  000cd	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000d5	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  000dc	48 8d 4c 24 44	 lea	 rcx, QWORD PTR _Ch$8[rsp]
  000e1	e8 00 00 00 00	 call	 ??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z ; std::_Fgetc<char>
  000e6	0f b6 c0	 movzx	 eax, al
  000e9	85 c0		 test	 eax, eax
  000eb	74 13		 je	 SHORT $LN18@uflow
  000ed	48 8d 4c 24 44	 lea	 rcx, QWORD PTR _Ch$8[rsp]
  000f2	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  000f7	89 84 24 20 01
	00 00		 mov	 DWORD PTR tv139[rsp], eax
  000fe	eb 0c		 jmp	 SHORT $LN19@uflow
$LN18@uflow:
  00100	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00105	89 84 24 20 01
	00 00		 mov	 DWORD PTR tv139[rsp], eax
$LN19@uflow:
  0010c	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR tv139[rsp]
  00113	e9 8c 02 00 00	 jmp	 $LN1@uflow
$LN11@uflow:

; 496  :         }
; 497  : 
; 498  :         // build string until codecvt succeeds
; 499  :         string _Str;

  00118	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0011d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00122	90		 npad	 1
$LN2@uflow:

; 500  : 
; 501  :         for (;;) { // get using codecvt facet
; 502  :             const char* _Src;
; 503  :             int _Meta = _CSTD fgetc(_Myfile);

  00123	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0012b	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00132	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fgetc
  00138	89 84 24 b4 00
	00 00		 mov	 DWORD PTR _Meta$10[rsp], eax

; 504  : 
; 505  :             if (_Meta == EOF) {

  0013f	83 bc 24 b4 00
	00 00 ff	 cmp	 DWORD PTR _Meta$10[rsp], -1
  00147	75 22		 jne	 SHORT $LN12@uflow

; 506  :                 return _Traits::eof(); // partial char?

  00149	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0014e	89 84 24 08 01
	00 00		 mov	 DWORD PTR $T14[rsp], eax
  00155	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0015a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0015f	8b 84 24 08 01
	00 00		 mov	 eax, DWORD PTR $T14[rsp]
  00166	e9 39 02 00 00	 jmp	 $LN1@uflow
$LN12@uflow:

; 507  :             }
; 508  : 
; 509  :             _Str.push_back(static_cast<char>(_Meta)); // append byte and convert

  0016b	0f b6 94 24 b4
	00 00 00	 movzx	 edx, BYTE PTR _Meta$10[rsp]
  00173	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00178	e8 00 00 00 00	 call	 ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back

; 510  : 
; 511  :             _Elem _Ch;
; 512  :             _Elem* _Dest;
; 513  :             switch (_Pcvt->in(_State, _Str.data(), _Str.data() + _Str.size(), _Src, &_Ch, &_Ch + 1,

  0017d	48 8d 84 24 c5
	00 00 00	 lea	 rax, QWORD PTR _Ch$11[rsp+1]
  00185	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv154[rsp], rax
  0018d	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00192	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  00197	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv159[rsp], rax
  0019f	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  001a4	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  001a9	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR tv159[rsp]
  001b1	48 03 c8	 add	 rcx, rax
  001b4	48 8b c1	 mov	 rax, rcx
  001b7	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv162[rsp], rax
  001bf	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  001c4	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  001c9	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  001d1	48 83 c1 74	 add	 rcx, 116		; 00000074H
  001d5	48 8d 94 24 e8
	00 00 00	 lea	 rdx, QWORD PTR _Dest$12[rsp]
  001dd	48 89 54 24 38	 mov	 QWORD PTR [rsp+56], rdx
  001e2	48 8b 94 24 28
	01 00 00	 mov	 rdx, QWORD PTR tv154[rsp]
  001ea	48 89 54 24 30	 mov	 QWORD PTR [rsp+48], rdx
  001ef	48 8d 94 24 c4
	00 00 00	 lea	 rdx, QWORD PTR _Ch$11[rsp]
  001f7	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  001fc	48 8d 94 24 a8
	00 00 00	 lea	 rdx, QWORD PTR _Src$9[rsp]
  00204	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  00209	48 8b 94 24 38
	01 00 00	 mov	 rdx, QWORD PTR tv162[rsp]
  00211	4c 8b ca	 mov	 r9, rdx
  00214	4c 8b c0	 mov	 r8, rax
  00217	48 8b d1	 mov	 rdx, rcx
  0021a	48 8b 84 24 70
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00222	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  00226	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
  0022c	89 84 24 40 01
	00 00		 mov	 DWORD PTR tv169[rsp], eax
  00233	83 bc 24 40 01
	00 00 00	 cmp	 DWORD PTR tv169[rsp], 0
  0023b	0f 8c 34 01 00
	00		 jl	 $LN16@uflow
  00241	83 bc 24 40 01
	00 00 01	 cmp	 DWORD PTR tv169[rsp], 1
  00249	7e 13		 jle	 SHORT $LN13@uflow
  0024b	83 bc 24 40 01
	00 00 03	 cmp	 DWORD PTR tv169[rsp], 3
  00253	0f 84 f5 00 00
	00		 je	 $LN15@uflow
  00259	e9 17 01 00 00	 jmp	 $LN16@uflow
$LN13@uflow:

; 514  :                 _Dest)) { // test result of converting one element
; 515  :             case codecvt_base::partial:
; 516  :             case codecvt_base::ok:
; 517  :                 if (_Dest != &_Ch) { // got an element, put back excess and deliver it

  0025e	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR _Ch$11[rsp]
  00266	48 39 84 24 e8
	00 00 00	 cmp	 QWORD PTR _Dest$12[rsp], rax
  0026e	0f 84 b1 00 00
	00		 je	 $LN14@uflow

; 518  :                     auto _Nleft = _Str.data() + _Str.size() - _Src;

  00274	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00279	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  0027e	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv172[rsp], rax
  00286	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0028b	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00290	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR tv172[rsp]
  00298	48 03 c8	 add	 rcx, rax
  0029b	48 8b c1	 mov	 rax, rcx
  0029e	48 2b 84 24 a8
	00 00 00	 sub	 rax, QWORD PTR _Src$9[rsp]
  002a6	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR _Nleft$13[rsp], rax
$LN7@uflow:

; 519  :                     while (0 < _Nleft) {

  002ae	48 83 bc 24 f8
	00 00 00 00	 cmp	 QWORD PTR _Nleft$13[rsp], 0
  002b7	7e 45		 jle	 SHORT $LN8@uflow

; 520  :                         _CSTD ungetc(_Src[--_Nleft], _Myfile);

  002b9	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR _Nleft$13[rsp]
  002c1	48 ff c8	 dec	 rax
  002c4	48 89 84 24 f8
	00 00 00	 mov	 QWORD PTR _Nleft$13[rsp], rax
  002cc	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR _Nleft$13[rsp]
  002d4	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _Src$9[rsp]
  002dc	48 03 c8	 add	 rcx, rax
  002df	48 8b c1	 mov	 rax, rcx
  002e2	0f be 00	 movsx	 eax, BYTE PTR [rax]
  002e5	48 8b 8c 24 70
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002ed	48 8b 91 80 00
	00 00		 mov	 rdx, QWORD PTR [rcx+128]
  002f4	8b c8		 mov	 ecx, eax
  002f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ungetc

; 521  :                     }

  002fc	eb b0		 jmp	 SHORT $LN7@uflow
$LN8@uflow:

; 522  : 
; 523  :                     return _Traits::to_int_type(_Ch);

  002fe	48 8d 8c 24 c4
	00 00 00	 lea	 rcx, QWORD PTR _Ch$11[rsp]
  00306	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  0030b	89 84 24 0c 01
	00 00		 mov	 DWORD PTR $T15[rsp], eax
  00312	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00317	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0031c	8b 84 24 0c 01
	00 00		 mov	 eax, DWORD PTR $T15[rsp]
  00323	eb 7f		 jmp	 SHORT $LN1@uflow
$LN14@uflow:

; 524  :                 }
; 525  : 
; 526  :                 _Str.erase(0, static_cast<size_t>(_Src - _Str.data())); // partial, discard used input

  00325	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0032a	e8 00 00 00 00	 call	 ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
  0032f	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _Src$9[rsp]
  00337	48 2b c8	 sub	 rcx, rax
  0033a	48 8b c1	 mov	 rax, rcx
  0033d	4c 8b c0	 mov	 r8, rax
  00340	33 d2		 xor	 edx, edx
  00342	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00347	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase

; 527  :                 break;

  0034c	eb 46		 jmp	 SHORT $LN5@uflow
$LN15@uflow:

; 528  : 
; 529  :             case codecvt_base::noconv:
; 530  :                 // noconv is only possible if _Elem is char, so we can use it directly
; 531  :                 return static_cast<int_type>(_Str.front());

  0034e	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00353	e8 00 00 00 00	 call	 ?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
  00358	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0035b	89 84 24 10 01
	00 00		 mov	 DWORD PTR $T16[rsp], eax
  00362	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00367	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0036c	8b 84 24 10 01
	00 00		 mov	 eax, DWORD PTR $T16[rsp]
  00373	eb 2f		 jmp	 SHORT $LN1@uflow
$LN16@uflow:

; 532  : 
; 533  :             default:
; 534  :                 return _Traits::eof(); // conversion failed

  00375	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0037a	89 84 24 14 01
	00 00		 mov	 DWORD PTR $T17[rsp], eax
  00381	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  00386	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0038b	8b 84 24 14 01
	00 00		 mov	 eax, DWORD PTR $T17[rsp]
  00392	eb 10		 jmp	 SHORT $LN1@uflow
$LN5@uflow:

; 535  :             }
; 536  :         }

  00394	e9 8a fd ff ff	 jmp	 $LN2@uflow

; 537  :     }

  00399	48 8d 4c 24 68	 lea	 rcx, QWORD PTR _Str$[rsp]
  0039e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  003a3	90		 npad	 1
$LN1@uflow:
  003a4	48 8b f8	 mov	 rdi, rax
  003a7	48 8b cc	 mov	 rcx, rsp
  003aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData
  003b1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  003b6	48 8b c7	 mov	 rax, rdi
  003b9	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  003c1	48 33 cc	 xor	 rcx, rsp
  003c4	e8 00 00 00 00	 call	 __security_check_cookie
  003c9	48 81 c4 60 01
	00 00		 add	 rsp, 352		; 00000160H
  003d0	5f		 pop	 rdi
  003d1	c3		 ret	 0
?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::uflow
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ch$8 = 68
_Str$ = 104
_Src$9 = 168
_Meta$10 = 180
_Ch$11 = 196
_Dest$12 = 232
_Nleft$13 = 248
$T14 = 264
$T15 = 268
$T16 = 272
$T17 = 276
tv76 = 280
tv139 = 288
tv154 = 296
tv159 = 304
tv162 = 312
tv169 = 320
tv172 = 328
__$ArrayPad$ = 336
this$ = 368
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR _Str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ch$8 = 68
_Str$ = 104
_Src$9 = 168
_Meta$10 = 180
_Ch$11 = 196
_Dest$12 = 232
_Nleft$13 = 248
$T14 = 264
$T15 = 268
$T16 = 272
$T17 = 276
tv76 = 280
tv139 = 288
tv154 = 296
tv159 = 304
tv162 = 312
tv169 = 320
tv172 = 328
__$ArrayPad$ = 336
this$ = 368
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 68	 lea	 rcx, QWORD PTR _Str$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::uflow'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
_TEXT	SEGMENT
_Meta$ = 36
$T4 = 52
tv76 = 56
this$ = 80
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::underflow, COMDAT

; 471  :     virtual int_type __CLR_OR_THIS_CALL underflow() { // get an element from stream, but don't point past it

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 472  :         int_type _Meta;
; 473  :         if (_Mysb::gptr() && _Mysb::gptr() < _Mysb::egptr()) {

  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00023	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00029	48 85 c0	 test	 rax, rax
  0002c	74 3c		 je	 SHORT $LN2@underflow
  0002e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00039	48 89 44 24 38	 mov	 QWORD PTR tv76[rsp], rax
  0003e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00043	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00049	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv76[rsp]
  0004e	48 3b c8	 cmp	 rcx, rax
  00051	73 17		 jae	 SHORT $LN2@underflow

; 474  :             return _Traits::to_int_type(*_Mysb::gptr()); // return buffered

  00053	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0005e	48 8b c8	 mov	 rcx, rax
  00061	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00066	eb 55		 jmp	 SHORT $LN1@underflow
  00068	eb 53		 jmp	 SHORT $LN3@underflow
$LN2@underflow:

; 475  :         } else if (_Traits::eq_int_type(_Traits::eof(), _Meta = uflow())) {

  0006a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00077	ff 50 38	 call	 QWORD PTR [rax+56]
  0007a	89 44 24 24	 mov	 DWORD PTR _Meta$[rsp], eax
  0007e	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00083	89 44 24 34	 mov	 DWORD PTR $T4[rsp], eax
  00087	48 8d 54 24 24	 lea	 rdx, QWORD PTR _Meta$[rsp]
  0008c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $T4[rsp]
  00091	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00096	0f b6 c0	 movzx	 eax, al
  00099	85 c0		 test	 eax, eax
  0009b	74 08		 je	 SHORT $LN4@underflow

; 476  :             return _Meta; // uflow failed, return EOF

  0009d	8b 44 24 24	 mov	 eax, DWORD PTR _Meta$[rsp]
  000a1	eb 1a		 jmp	 SHORT $LN1@underflow

; 477  :         } else { // get a char, don't point past it

  000a3	eb 18		 jmp	 SHORT $LN5@underflow
$LN4@underflow:

; 478  :             pbackfail(_Meta);

  000a5	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000aa	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ad	8b 54 24 24	 mov	 edx, DWORD PTR _Meta$[rsp]
  000b1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b6	ff 50 20	 call	 QWORD PTR [rax+32]

; 479  :             return _Meta;

  000b9	8b 44 24 24	 mov	 eax, DWORD PTR _Meta$[rsp]
$LN5@underflow:
$LN3@underflow:
$LN1@underflow:

; 480  :         }
; 481  :     }

  000bd	48 8b f8	 mov	 rdi, rax
  000c0	48 8b cc	 mov	 rcx, rsp
  000c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ$rtcFrameData
  000ca	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000cf	48 8b c7	 mov	 rax, rdi
  000d2	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d6	5f		 pop	 rdi
  000d7	c3		 ret	 0
?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 36
$T3 = 40
$T4 = 44
tv76 = 48
this$ = 80
_Meta$ = 88
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail, COMDAT

; 451  :     virtual int_type __CLR_OR_THIS_CALL pbackfail(int_type _Meta = _Traits::eof()) { // put an element back to stream

$LN13:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 452  :         if (_Mysb::gptr() && _Mysb::eback() < _Mysb::gptr()
; 453  :             && (_Traits::eq_int_type(_Traits::eof(), _Meta)

  00022	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00027	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  0002d	48 85 c0	 test	 rax, rax
  00030	0f 84 9c 00 00
	00		 je	 $LN2@pbackfail
  00036	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00041	48 89 44 24 30	 mov	 QWORD PTR tv76[rsp], rax
  00046	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv76[rsp]
  00056	48 3b c8	 cmp	 rcx, rax
  00059	73 77		 jae	 SHORT $LN2@pbackfail
  0005b	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00060	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00064	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  00069	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0006e	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00073	0f b6 c0	 movzx	 eax, al
  00076	85 c0		 test	 eax, eax
  00078	75 39		 jne	 SHORT $LN4@pbackfail
  0007a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0007f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00085	b9 01 00 00 00	 mov	 ecx, 1
  0008a	48 6b c9 ff	 imul	 rcx, rcx, -1
  0008e	48 03 c1	 add	 rax, rcx
  00091	48 8b c8	 mov	 rcx, rax
  00094	e8 00 00 00 00	 call	 ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
  00099	89 44 24 24	 mov	 DWORD PTR $T2[rsp], eax
  0009d	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  000a2	48 8d 4c 24 24	 lea	 rcx, QWORD PTR $T2[rsp]
  000a7	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000ac	0f b6 c0	 movzx	 eax, al
  000af	85 c0		 test	 eax, eax
  000b1	74 1f		 je	 SHORT $LN2@pbackfail
$LN4@pbackfail:

; 454  :                 || _Traits::eq_int_type(_Traits::to_int_type(_Mysb::gptr()[-1]),
; 455  :                     _Meta))) { // just back up position
; 456  :             _Mysb::_Gndec();

  000b3	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000b8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Gndec@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ

; 457  :             return _Traits::not_eof(_Meta);

  000be	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000c3	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
  000c8	e9 c3 00 00 00	 jmp	 $LN1@pbackfail
  000cd	e9 be 00 00 00	 jmp	 $LN3@pbackfail
$LN2@pbackfail:

; 458  :         } else if (!_Myfile || _Traits::eq_int_type(_Traits::eof(), _Meta)) {

  000d2	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000d7	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  000df	74 1f		 je	 SHORT $LN7@pbackfail
  000e1	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  000e6	89 44 24 28	 mov	 DWORD PTR $T3[rsp], eax
  000ea	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Meta$[rsp]
  000ef	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T3[rsp]
  000f4	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  000f9	0f b6 c0	 movzx	 eax, al
  000fc	85 c0		 test	 eax, eax
  000fe	74 0f		 je	 SHORT $LN5@pbackfail
$LN7@pbackfail:

; 459  :             return _Traits::eof(); // no open C stream or EOF, fail

  00100	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00105	e9 86 00 00 00	 jmp	 $LN1@pbackfail
  0010a	e9 81 00 00 00	 jmp	 $LN6@pbackfail
$LN5@pbackfail:

; 460  :         } else if (!_Pcvt && _Ungetc(_Traits::to_char_type(_Meta), _Myfile)) {

  0010f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00114	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00119	75 33		 jne	 SHORT $LN8@pbackfail
  0011b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00120	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00125	88 44 24 2c	 mov	 BYTE PTR $T4[rsp], al
  00129	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0012e	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  00135	48 8d 4c 24 2c	 lea	 rcx, QWORD PTR $T4[rsp]
  0013a	e8 00 00 00 00	 call	 ??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z ; std::_Ungetc<char>
  0013f	0f b6 c0	 movzx	 eax, al
  00142	85 c0		 test	 eax, eax
  00144	74 08		 je	 SHORT $LN8@pbackfail

; 461  :             return _Meta; // no facet and unget succeeded, return

  00146	8b 44 24 58	 mov	 eax, DWORD PTR _Meta$[rsp]
  0014a	eb 44		 jmp	 SHORT $LN1@pbackfail
  0014c	eb 42		 jmp	 SHORT $LN9@pbackfail
$LN8@pbackfail:

; 462  :         } else if (_Mysb::gptr() != &_Mychar) { // putback to _Mychar

  0014e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00153	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00159	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0015e	48 83 c1 70	 add	 rcx, 112		; 00000070H
  00162	48 3b c1	 cmp	 rax, rcx
  00165	74 24		 je	 SHORT $LN10@pbackfail

; 463  :             _Mychar = _Traits::to_char_type(_Meta);

  00167	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0016c	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00171	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00176	88 41 70	 mov	 BYTE PTR [rcx+112], al

; 464  :             _Set_back(); // switch to _Mychar buffer

  00179	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0017e	e8 00 00 00 00	 call	 ?_Set_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Set_back

; 465  :             return _Meta;

  00183	8b 44 24 58	 mov	 eax, DWORD PTR _Meta$[rsp]
  00187	eb 07		 jmp	 SHORT $LN1@pbackfail

; 466  :         } else {

  00189	eb 05		 jmp	 SHORT $LN11@pbackfail
$LN10@pbackfail:

; 467  :             return _Traits::eof(); // nowhere to put back

  0018b	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
$LN11@pbackfail:
$LN9@pbackfail:
$LN6@pbackfail:
$LN3@pbackfail:
$LN1@pbackfail:

; 468  :         }
; 469  :     }

  00190	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00194	5f		 pop	 rdi
  00195	c3		 ret	 0
?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z
_TEXT	SEGMENT
_Codecvt_temp_buf$ = 64
_Str$ = 88
_Ch$ = 148
_Src$ = 184
_Dest$ = 216
_Count$7 = 232
$T8 = 248
tv84 = 256
tv178 = 264
tv147 = 268
tv163 = 272
tv184 = 276
__$ArrayPad$ = 280
this$ = 304
_Meta$ = 312
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::overflow, COMDAT

; 400  :     virtual int_type __CLR_OR_THIS_CALL overflow(int_type _Meta = _Traits::eof()) { // put an element to stream

$LN18:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 81 ec 20 01
	00 00		 sub	 rsp, 288		; 00000120H
  00011	48 8b fc	 mov	 rdi, rsp
  00014	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  00019	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001e	f3 ab		 rep stosd
  00020	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR [rsp+304]
  00028	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0002f	48 33 c4	 xor	 rax, rsp
  00032	48 89 84 24 18
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 401  :         if (_Traits::eq_int_type(_Traits::eof(), _Meta)) {

  0003a	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0003f	89 84 24 f8 00
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00046	48 8d 94 24 38
	01 00 00	 lea	 rdx, QWORD PTR _Meta$[rsp]
  0004e	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  00056	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	85 c0		 test	 eax, eax
  00060	74 12		 je	 SHORT $LN4@overflow

; 402  :             return _Traits::not_eof(_Meta); // EOF, return success code

  00062	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0006a	e8 00 00 00 00	 call	 ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ; std::_Narrow_char_traits<char,int>::not_eof
  0006f	e9 8e 02 00 00	 jmp	 $LN1@overflow
$LN4@overflow:

; 403  :         }
; 404  : 
; 405  :         if (_Mysb::pptr() && _Mysb::pptr() < _Mysb::epptr()) { // room in buffer, store it

  00074	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00082	48 85 c0	 test	 rax, rax
  00085	74 69		 je	 SHORT $LN5@overflow
  00087	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0008f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  00095	48 89 84 24 00
	01 00 00	 mov	 QWORD PTR tv84[rsp], rax
  0009d	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEBAPEADXZ
  000ab	48 8b 8c 24 00
	01 00 00	 mov	 rcx, QWORD PTR tv84[rsp]
  000b3	48 3b c8	 cmp	 rcx, rax
  000b6	73 38		 jae	 SHORT $LN5@overflow

; 406  :             *_Mysb::_Pninc() = _Traits::to_char_type(_Meta);

  000b8	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  000c0	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  000c5	88 84 24 08 01
	00 00		 mov	 BYTE PTR tv178[rsp], al
  000cc	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
  000da	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR tv178[rsp]
  000e2	88 08		 mov	 BYTE PTR [rax], cl

; 407  :             return _Meta;

  000e4	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  000eb	e9 12 02 00 00	 jmp	 $LN1@overflow
$LN5@overflow:

; 408  :         }
; 409  : 
; 410  :         if (!_Myfile) {

  000f0	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000f8	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00100	75 0a		 jne	 SHORT $LN6@overflow

; 411  :             return _Traits::eof(); // no open C stream, fail

  00102	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00107	e9 f6 01 00 00	 jmp	 $LN1@overflow
$LN6@overflow:

; 412  :         }
; 413  : 
; 414  :         _Reset_back(); // revert from _Mychar buffer

  0010c	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00114	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back

; 415  :         if (!_Pcvt) { // no codecvt facet, put as is

  00119	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00121	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00126	75 53		 jne	 SHORT $LN7@overflow

; 416  :             return _Fputc(_Traits::to_char_type(_Meta), _Myfile) ? _Meta : _Traits::eof();

  00128	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  00130	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00135	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0013d	48 8b 91 80 00
	00 00		 mov	 rdx, QWORD PTR [rcx+128]
  00144	0f b6 c8	 movzx	 ecx, al
  00147	e8 00 00 00 00	 call	 ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ; std::_Fputc<char>
  0014c	0f b6 c0	 movzx	 eax, al
  0014f	85 c0		 test	 eax, eax
  00151	74 10		 je	 SHORT $LN14@overflow
  00153	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  0015a	89 84 24 0c 01
	00 00		 mov	 DWORD PTR tv147[rsp], eax
  00161	eb 0c		 jmp	 SHORT $LN15@overflow
$LN14@overflow:
  00163	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00168	89 84 24 0c 01
	00 00		 mov	 DWORD PTR tv147[rsp], eax
$LN15@overflow:
  0016f	8b 84 24 0c 01
	00 00		 mov	 eax, DWORD PTR tv147[rsp]
  00176	e9 87 01 00 00	 jmp	 $LN1@overflow
$LN7@overflow:

; 417  :         }
; 418  : 
; 419  :         // put using codecvt facet
; 420  :         constexpr size_t _Codecvt_temp_buf = 32;

  0017b	48 c7 44 24 40
	20 00 00 00	 mov	 QWORD PTR _Codecvt_temp_buf$[rsp], 32 ; 00000020H

; 421  :         char _Str[_Codecvt_temp_buf];
; 422  :         const _Elem _Ch = _Traits::to_char_type(_Meta);

  00184	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR _Meta$[rsp]
  0018c	e8 00 00 00 00	 call	 ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
  00191	88 84 24 94 00
	00 00		 mov	 BYTE PTR _Ch$[rsp], al

; 423  :         const _Elem* _Src;
; 424  :         char* _Dest;
; 425  :         switch (_Pcvt->out(_State, &_Ch, &_Ch + 1, _Src, _Str, _Str + _Codecvt_temp_buf,

  00198	48 8d 44 24 78	 lea	 rax, QWORD PTR _Str$[rsp+32]
  0019d	48 8d 8c 24 95
	00 00 00	 lea	 rcx, QWORD PTR _Ch$[rsp+1]
  001a5	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR this$[rsp]
  001ad	48 83 c2 74	 add	 rdx, 116		; 00000074H
  001b1	4c 8d 84 24 d8
	00 00 00	 lea	 r8, QWORD PTR _Dest$[rsp]
  001b9	4c 89 44 24 38	 mov	 QWORD PTR [rsp+56], r8
  001be	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  001c3	48 8d 44 24 58	 lea	 rax, QWORD PTR _Str$[rsp]
  001c8	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001cd	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR _Src$[rsp]
  001d5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001da	4c 8b c9	 mov	 r9, rcx
  001dd	4c 8d 84 24 94
	00 00 00	 lea	 r8, QWORD PTR _Ch$[rsp]
  001e5	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ed	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  001f1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
  001f7	89 84 24 10 01
	00 00		 mov	 DWORD PTR tv163[rsp], eax
  001fe	83 bc 24 10 01
	00 00 00	 cmp	 DWORD PTR tv163[rsp], 0
  00206	0f 8c f1 00 00
	00		 jl	 $LN12@overflow
  0020c	83 bc 24 10 01
	00 00 01	 cmp	 DWORD PTR tv163[rsp], 1
  00214	7e 13		 jle	 SHORT $LN8@overflow
  00216	83 bc 24 10 01
	00 00 03	 cmp	 DWORD PTR tv163[rsp], 3
  0021e	0f 84 91 00 00
	00		 je	 $LN11@overflow
  00224	e9 d4 00 00 00	 jmp	 $LN12@overflow
$LN8@overflow:

; 426  :             _Dest)) { // test result of converting one element
; 427  :         case codecvt_base::partial:
; 428  :         case codecvt_base::ok: { // converted something, try to put it out
; 429  :             const auto _Count = static_cast<size_t>(_Dest - _Str);

  00229	48 8d 44 24 58	 lea	 rax, QWORD PTR _Str$[rsp]
  0022e	48 8b 8c 24 d8
	00 00 00	 mov	 rcx, QWORD PTR _Dest$[rsp]
  00236	48 2b c8	 sub	 rcx, rax
  00239	48 8b c1	 mov	 rax, rcx
  0023c	48 89 84 24 e8
	00 00 00	 mov	 QWORD PTR _Count$7[rsp], rax

; 430  :             if (0 < _Count && _Count != static_cast<size_t>(_CSTD fwrite(_Str, 1, _Count, _Myfile))) {

  00244	48 83 bc 24 e8
	00 00 00 00	 cmp	 QWORD PTR _Count$7[rsp], 0
  0024d	76 38		 jbe	 SHORT $LN9@overflow
  0024f	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00257	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  0025e	4c 8b 84 24 e8
	00 00 00	 mov	 r8, QWORD PTR _Count$7[rsp]
  00266	ba 01 00 00 00	 mov	 edx, 1
  0026b	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Str$[rsp]
  00270	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fwrite
  00276	48 39 84 24 e8
	00 00 00	 cmp	 QWORD PTR _Count$7[rsp], rax
  0027e	74 07		 je	 SHORT $LN9@overflow

; 431  :                 return _Traits::eof(); // write failed

  00280	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00285	eb 7b		 jmp	 SHORT $LN1@overflow
$LN9@overflow:

; 432  :             }
; 433  : 
; 434  :             _Wrotesome = true; // write succeeded

  00287	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0028f	c6 40 71 01	 mov	 BYTE PTR [rax+113], 1

; 435  :             if (_Src != &_Ch) {

  00293	48 8d 84 24 94
	00 00 00	 lea	 rax, QWORD PTR _Ch$[rsp]
  0029b	48 39 84 24 b8
	00 00 00	 cmp	 QWORD PTR _Src$[rsp], rax
  002a3	74 09		 je	 SHORT $LN10@overflow

; 436  :                 return _Meta; // converted whole element

  002a5	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  002ac	eb 54		 jmp	 SHORT $LN1@overflow
$LN10@overflow:

; 437  :             }
; 438  : 
; 439  :             return _Traits::eof(); // conversion failed

  002ae	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  002b3	eb 4d		 jmp	 SHORT $LN1@overflow
$LN11@overflow:

; 440  :         }
; 441  : 
; 442  :         case codecvt_base::noconv:
; 443  :             // no conversion, put as is
; 444  :             return _Fputc(_Ch, _Myfile) ? _Meta : _Traits::eof();

  002b5	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  002bd	48 8b 90 80 00
	00 00		 mov	 rdx, QWORD PTR [rax+128]
  002c4	0f b6 8c 24 94
	00 00 00	 movzx	 ecx, BYTE PTR _Ch$[rsp]
  002cc	e8 00 00 00 00	 call	 ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ; std::_Fputc<char>
  002d1	0f b6 c0	 movzx	 eax, al
  002d4	85 c0		 test	 eax, eax
  002d6	74 10		 je	 SHORT $LN16@overflow
  002d8	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR _Meta$[rsp]
  002df	89 84 24 14 01
	00 00		 mov	 DWORD PTR tv184[rsp], eax
  002e6	eb 0c		 jmp	 SHORT $LN17@overflow
$LN16@overflow:
  002e8	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  002ed	89 84 24 14 01
	00 00		 mov	 DWORD PTR tv184[rsp], eax
$LN17@overflow:
  002f4	8b 84 24 14 01
	00 00		 mov	 eax, DWORD PTR tv184[rsp]
  002fb	eb 05		 jmp	 SHORT $LN1@overflow
$LN12@overflow:

; 445  : 
; 446  :         default:
; 447  :             return _Traits::eof(); // conversion failed

  002fd	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
$LN1@overflow:

; 448  :         }
; 449  :     }

  00302	48 8b f8	 mov	 rdi, rax
  00305	48 8b cc	 mov	 rcx, rsp
  00308	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z$rtcFrameData
  0030f	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00314	48 8b c7	 mov	 rax, rdi
  00317	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0031f	48 33 cc	 xor	 rcx, rsp
  00322	e8 00 00 00 00	 call	 __security_check_cookie
  00327	48 81 c4 20 01
	00 00		 add	 rsp, 288		; 00000120H
  0032e	5f		 pop	 rdi
  0032f	c3		 ret	 0
?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock, COMDAT

; 393  :     virtual void __CLR_OR_THIS_CALL _Unlock() { // unlock file instead of stream buffer

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 394  :         if (_Myfile) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 12		 je	 SHORT $LN2@Unlock

; 395  :             _CSTD _unlock_file(_Myfile);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__unlock_file
$LN2@Unlock:

; 396  :         }
; 397  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::_Lock, COMDAT

; 387  :     virtual void __CLR_OR_THIS_CALL _Lock() { // lock file instead of stream buffer

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 388  :         if (_Myfile) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 12		 je	 SHORT $LN2@Lock

; 389  :             _CSTD _lock_file(_Myfile);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__lock_file
$LN2@Lock:

; 390  :         }
; 391  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::_Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
_TEXT	SEGMENT
_Ans$ = 32
this$ = 64
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::close, COMDAT

; 368  :     basic_filebuf* close() { // close the C stream

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 369  :         basic_filebuf* _Ans;
; 370  :         if (_Myfile) { // put any homing sequence and close file

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 45		 je	 SHORT $LN2@close

; 371  :             _Ans = this;

  0002d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _Ans$[rsp], rax

; 372  :             if (!_Endwrite()) {

  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	e8 00 00 00 00	 call	 ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Endwrite
  00041	0f b6 c0	 movzx	 eax, al
  00044	85 c0		 test	 eax, eax
  00046	75 09		 jne	 SHORT $LN4@close

; 373  :                 _Ans = nullptr;

  00048	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ans$[rsp], 0
$LN4@close:

; 374  :             }
; 375  : 
; 376  :             if (_CSTD fclose(_Myfile) != 0) {

  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0005d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fclose
  00063	85 c0		 test	 eax, eax
  00065	74 09		 je	 SHORT $LN5@close

; 377  :                 _Ans = nullptr;

  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ans$[rsp], 0
$LN5@close:

; 378  :             }
; 379  :         } else {

  00070	eb 09		 jmp	 SHORT $LN3@close
$LN2@close:

; 380  :             _Ans = nullptr;

  00072	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR _Ans$[rsp], 0
$LN3@close:

; 381  :         }
; 382  : 
; 383  :         _Init(nullptr, _Closefl);

  0007b	41 b8 02 00 00
	00		 mov	 r8d, 2
  00081	33 d2		 xor	 edx, edx
  00083	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00088	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 384  :         return _Ans;

  0008d	48 8b 44 24 20	 mov	 rax, QWORD PTR _Ans$[rsp]

; 385  :     }

  00092	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00096	5f		 pop	 rdi
  00097	c3		 ret	 0
?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
_TEXT	SEGMENT
_File$ = 32
$T1 = 40
tv89 = 56
tv88 = 64
this$ = 96
_Filename$ = 104
_Mode$ = 112
_Prot$ = 120
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::open, COMDAT

; 268  :     basic_filebuf* open(const char* _Filename, ios_base::openmode _Mode, int _Prot = ios_base::_Default_open_prot) {

$LN6:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 269  :         // open a C stream with specified mode
; 270  :         if (_Myfile) {

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0003a	74 04		 je	 SHORT $LN2@open

; 271  :             return nullptr;

  0003c	33 c0		 xor	 eax, eax
  0003e	eb 7f		 jmp	 SHORT $LN1@open
$LN2@open:

; 272  :         }
; 273  : 
; 274  :         const auto _File = _Fiopen(_Filename, _Mode, _Prot);

  00040	44 8b 44 24 78	 mov	 r8d, DWORD PTR _Prot$[rsp]
  00045	8b 54 24 70	 mov	 edx, DWORD PTR _Mode$[rsp]
  00049	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Filename$[rsp]
  0004e	e8 00 00 00 00	 call	 ?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z ; std::_Fiopen
  00053	48 89 44 24 20	 mov	 QWORD PTR _File$[rsp], rax

; 275  :         if (!_File) {

  00058	48 83 7c 24 20
	00		 cmp	 QWORD PTR _File$[rsp], 0
  0005e	75 04		 jne	 SHORT $LN3@open

; 276  :             return nullptr; // open failed

  00060	33 c0		 xor	 eax, eax
  00062	eb 5b		 jmp	 SHORT $LN1@open
$LN3@open:

; 277  :         }
; 278  : 
; 279  :         _Init(_File, _Openfl);

  00064	41 b8 01 00 00
	00		 mov	 r8d, 1
  0006a	48 8b 54 24 20	 mov	 rdx, QWORD PTR _File$[rsp]
  0006f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00074	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init

; 280  :         _Initcvt(_STD use_facet<_Cvt>(_Mysb::getloc()));

  00079	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T1[rsp]
  0007e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ
  00089	48 89 44 24 38	 mov	 QWORD PTR tv89[rsp], rax
  0008e	48 8b 44 24 38	 mov	 rax, QWORD PTR tv89[rsp]
  00093	48 89 44 24 40	 mov	 QWORD PTR tv88[rsp], rax
  00098	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv88[rsp]
  0009d	e8 00 00 00 00	 call	 ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z ; std::use_facet<std::codecvt<char,char,_Mbstatet> >
  000a2	48 8b d0	 mov	 rdx, rax
  000a5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000aa	e8 00 00 00 00	 call	 ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Initcvt
  000af	90		 npad	 1
  000b0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T1[rsp]
  000b5	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale

; 281  :         return this; // open succeeded

  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
$LN1@open:

; 282  :     }

  000bf	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::open
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_File$ = 32
$T1 = 40
tv89 = 56
tv88 = 64
this$ = 96
_Filename$ = 104
_Mode$ = 112
_Prot$ = 120
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_File$ = 32
$T1 = 40
tv89 = 56
tv88 = 64
this$ = 96
_Filename$ = 104
_Mode$ = 112
_Prot$ = 120
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1locale@std@@QEAA@XZ	; std::locale::~locale
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::open'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::is_open, COMDAT

; 264  :     _NODISCARD bool is_open() const { // test if C stream has been opened

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 265  :         return static_cast<bool>(_Myfile);

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0002b	74 06		 je	 SHORT $LN3@is_open
  0002d	c6 04 24 01	 mov	 BYTE PTR tv66[rsp], 1
  00031	eb 04		 jmp	 SHORT $LN4@is_open
$LN3@is_open:
  00033	c6 04 24 00	 mov	 BYTE PTR tv66[rsp], 0
$LN4@is_open:
  00037	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 266  :     }

  0003b	48 83 c4 10	 add	 rsp, 16
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::is_open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >, COMDAT

; 162  :     virtual __CLR_OR_THIS_CALL ~basic_filebuf() noexcept {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 163  :         if (_Myfile) {

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0003a	74 0b		 je	 SHORT $LN2@basic_file

; 164  :             _Reset_back(); // revert from _Mychar buffer

  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ ; std::basic_filebuf<char,std::char_traits<char> >::_Reset_back
  00046	90		 npad	 1
$LN2@basic_file:

; 165  :         }
; 166  : 
; 167  :         if (_Closef) {

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	0f b6 40 7c	 movzx	 eax, BYTE PTR [rax+124]
  00050	85 c0		 test	 eax, eax
  00052	74 0b		 je	 SHORT $LN3@basic_file

; 168  :             close();

  00054	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00059	e8 00 00 00 00	 call	 ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ ; std::basic_filebuf<char,std::char_traits<char> >::close
  0005e	90		 npad	 1
$LN3@basic_file:

; 169  :         }
; 170  :     }

  0005f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0006a	90		 npad	 1
  0006b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006f	5f		 pop	 rdi
  00070	c3		 ret	 0
??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z
_TEXT	SEGMENT
this$ = 48
_File$ = 56
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z PROC ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >, COMDAT

; 158  :     basic_filebuf(FILE* _File = nullptr) : _Mysb() { // construct from pointer to C stream

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
  0002e	90		 npad	 1
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@
  0003b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 159  :         _Init(_File, _Newfl);

  0003e	45 33 c0	 xor	 r8d, r8d
  00041	48 8b 54 24 38	 mov	 rdx, QWORD PTR _File$[rsp]
  00046	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	e8 00 00 00 00	 call	 ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z ; std::basic_filebuf<char,std::char_traits<char> >::_Init
  00050	90		 npad	 1

; 160  :     }

  00051	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ENDP ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_File$ = 56
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_File$ = 56
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA PROC ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z@4HA ENDP ; `std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 48
?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::is_open, COMDAT

; 947  :     _NODISCARD bool is_open() const { // test if C stream has been opened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 948  :         return _Filebuffer.is_open();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 10	 add	 rax, 16
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ?is_open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_filebuf<char,std::char_traits<char> >::is_open

; 949  :     }

  0002f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::is_open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ PROC ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >, COMDAT

; 941  :     virtual __CLR_OR_THIS_CALL ~basic_ifstream() noexcept {}

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 80 50 ff
	ff ff		 mov	 rax, QWORD PTR [rax-176]
  0002a	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
  0003a	48 89 94 01 50
	ff ff ff	 mov	 QWORD PTR [rcx+rax-176], rdx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 8b 80 50 ff
	ff ff		 mov	 rax, QWORD PTR [rax-176]
  0004e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00052	48 2d b0 00 00
	00		 sub	 rax, 176		; 000000b0H
  00058	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	48 8b 89 50 ff
	ff ff		 mov	 rcx, QWORD PTR [rcx-176]
  00064	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00068	48 8b 54 24 30	 mov	 rdx, QWORD PTR this$[rsp]
  0006d	89 84 0a 4c ff
	ff ff		 mov	 DWORD PTR [rdx+rcx-180], eax
  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 2d a0 00 00
	00		 sub	 rax, 160		; 000000a0H
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00087	90		 npad	 1
  00088	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 2d 98 00 00
	00		 sub	 rax, 152		; 00000098H
  00093	48 8b c8	 mov	 rcx, rax
  00096	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0009c	90		 npad	 1
  0009d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ ENDP ; std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 b0 00
	00 00		 sub	 rcx, 176		; 000000b0H
  0001e	48 83 c1 18	 add	 rcx, 24
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 b0 00
	00 00		 sub	 rcx, 176		; 000000b0H
  0001e	48 83 c1 10	 add	 rcx, 16
  00022	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 b0 00
	00 00		 sub	 rcx, 176		; 000000b0H
  0001e	48 83 c1 18	 add	 rcx, 24
  00022	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00028	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?dtor$0@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 81 e9 b0 00
	00 00		 sub	 rcx, 176		; 000000b0H
  0001e	48 83 c1 10	 add	 rcx, 16
  00022	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00027	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?dtor$1@?0???1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::~basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z
_TEXT	SEGMENT
this$ = 64
_Str$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT

; 811  :     explicit basic_ifstream(

$LN4:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 812  :         const string& _Str, ios_base::openmode _Mode = ios_base::in, int _Prot = ios_base::_Default_open_prot)
; 813  :         : basic_ifstream(_Str.c_str(), _Mode, _Prot) {} // construct with named file and specified mode

  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Str$[rsp]
  00032	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00037	8b 4c 24 60	 mov	 ecx, DWORD PTR $initVBases$[rsp]
  0003b	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  0003f	44 8b 4c 24 58	 mov	 r9d, DWORD PTR _Prot$[rsp]
  00044	44 8b 44 24 50	 mov	 r8d, DWORD PTR _Mode$[rsp]
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
  00056	90		 npad	 1
  00057	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005f	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
  0006f	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx
  00073	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0007f	48 2d b0 00 00
	00		 sub	 rax, 176		; 000000b0H
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0008d	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  00091	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  00096	89 44 0a fc	 mov	 DWORD PTR [rdx+rcx-4], eax
  0009a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a3	5f		 pop	 rdi
  000a4	c3		 ret	 0
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
_Str$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 64
_Str$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z PROC ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >, COMDAT

; 803  :     explicit basic_ifstream(const char* _Filename, ios_base::openmode _Mode = ios_base::in,

$LN9:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0002d	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 804  :         int _Prot = ios_base::_Default_open_prot)
; 805  :         : _Mybase(_STD addressof(_Filebuffer)) { // construct with named file and specified mode

  00035	83 7c 24 60 00	 cmp	 DWORD PTR $initVBases$[rsp], 0
  0003a	74 2f		 je	 SHORT $LN2@basic_ifst
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00041	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@
  00048	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00056	48 8b c8	 mov	 rcx, rax
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
  0005f	90		 npad	 1
  00060	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00064	83 c8 01	 or	 eax, 1
  00067	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
$LN2@basic_ifst:
  0006b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 83 c0 10	 add	 rax, 16
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ??$addressof@V?$basic_filebuf@DU?$char_traits@D@std@@@std@@@std@@YAPEAV?$basic_filebuf@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::addressof<std::basic_filebuf<char,std::char_traits<char> > >
  0007c	45 33 c9	 xor	 r9d, r9d
  0007f	45 33 c0	 xor	 r8d, r8d
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0008a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
  00090	90		 npad	 1
  00091	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@
  000a9	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx
  000ad	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b5	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000b9	48 2d b0 00 00
	00		 sub	 rax, 176		; 000000b0H
  000bf	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000c4	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000c7	48 63 49 04	 movsxd	 rcx, DWORD PTR [rcx+4]
  000cb	48 8b 54 24 40	 mov	 rdx, QWORD PTR this$[rsp]
  000d0	89 44 0a fc	 mov	 DWORD PTR [rdx+rcx-4], eax
  000d4	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000d9	48 83 c0 10	 add	 rax, 16
  000dd	33 d2		 xor	 edx, edx
  000df	48 8b c8	 mov	 rcx, rax
  000e2	e8 00 00 00 00	 call	 ??0?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAA@PEAU_iobuf@@@Z ; std::basic_filebuf<char,std::char_traits<char> >::basic_filebuf<char,std::char_traits<char> >
  000e7	90		 npad	 1

; 806  :         if (!_Filebuffer.open(_Filename, _Mode | ios_base::in, _Prot)) {

  000e8	8b 44 24 50	 mov	 eax, DWORD PTR _Mode$[rsp]
  000ec	83 c8 01	 or	 eax, 1
  000ef	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000f4	48 83 c1 10	 add	 rcx, 16
  000f8	44 8b 4c 24 58	 mov	 r9d, DWORD PTR _Prot$[rsp]
  000fd	44 8b c0	 mov	 r8d, eax
  00100	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Filename$[rsp]
  00105	e8 00 00 00 00	 call	 ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z ; std::basic_filebuf<char,std::char_traits<char> >::open
  0010a	48 85 c0	 test	 rax, rax
  0010d	75 29		 jne	 SHORT $LN3@basic_ifst

; 807  :             _Myios::setstate(ios_base::failbit);

  0010f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00114	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00117	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0011b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00120	48 03 c8	 add	 rcx, rax
  00123	48 8b c1	 mov	 rax, rcx
  00126	45 33 c0	 xor	 r8d, r8d
  00129	ba 02 00 00 00	 mov	 edx, 2
  0012e	48 8b c8	 mov	 rcx, rax
  00131	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  00137	90		 npad	 1
$LN3@basic_ifst:

; 808  :         }
; 809  :     }

  00138	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0013d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00141	5f		 pop	 rdi
  00142	c3		 ret	 0
??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z ENDP ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN6@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN6@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 10	 add	 rcx, 16
  0001b	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 15		 je	 SHORT $LN6@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00025	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  0002c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
$LN6@dtor$0:
  00032	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00036	5f		 pop	 rdi
  00037	5d		 pop	 rbp
  00038	c3		 ret	 0
?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	5f		 pop	 rdi
  00026	5d		 pop	 rbp
  00027	c3		 ret	 0
?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
_Filename$ = 72
_Mode$ = 80
_Prot$ = 88
$initVBases$ = 96
?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA PROC ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 10	 add	 rcx, 16
  0001b	e8 00 00 00 00	 call	 ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ ; std::basic_filebuf<char,std::char_traits<char> >::~basic_filebuf<char,std::char_traits<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA ENDP ; `std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ PROC ; std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ ENDP ; std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA PROC ; `std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA ENDP ; `std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA PROC ; `std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA ENDP ; `std::set<int,std::less<int>,std::allocator<int> >::~set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\set
;	COMDAT ??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ PROC ; std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >, COMDAT

; 80   :     set() : _Mybase(key_compare()) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0002d	90		 npad	 1
  0002e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00033	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ ENDP ; std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA PROC ; `std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA ENDP ; `std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
this$ = 64
?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA PROC ; `std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ@4HA ENDP ; `std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_Tree_node<int,void *> >::allocator<std::_Tree_node<int,void *> >
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ ; std::_Tree_val<std::_Tree_simple_types<int> >::_Tree_val<std::_Tree_simple_types<int> >
  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ PROC ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ ENDP ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z
_TEXT	SEGMENT
_Head$ = 32
_Pnode$1 = 40
_Parent_sibling$2 = 48
_Parent_sibling$3 = 56
this$ = 80
_Loc$ = 88
_Newnode$ = 96
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node, COMDAT

; 646  :     _Nodeptr _Insert_node(const _Tree_id<_Nodeptr> _Loc, const _Nodeptr _Newnode) noexcept {

$LN19:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 647  :         ++_Mysize;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00031	48 ff c0	 inc	 rax
  00034	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00039	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 648  :         const auto _Head  = _Myhead;

  0003d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	48 89 44 24 20	 mov	 QWORD PTR _Head$[rsp], rax

; 649  :         _Newnode->_Parent = _Loc._Parent;

  0004b	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newnode$[rsp]
  00050	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Loc$[rsp]
  00055	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00058	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 650  :         if (_Loc._Parent == _Head) { // first node in tree, just set head values

  0005c	48 8b 44 24 58	 mov	 rax, QWORD PTR _Loc$[rsp]
  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Head$[rsp]
  00066	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00069	75 3c		 jne	 SHORT $LN5@Insert_nod

; 651  :             _Head->_Left     = _Newnode;

  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Head$[rsp]
  00070	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  00075	48 89 08	 mov	 QWORD PTR [rax], rcx

; 652  :             _Head->_Parent   = _Newnode;

  00078	48 8b 44 24 20	 mov	 rax, QWORD PTR _Head$[rsp]
  0007d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  00082	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 653  :             _Head->_Right    = _Newnode;

  00086	48 8b 44 24 20	 mov	 rax, QWORD PTR _Head$[rsp]
  0008b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  00090	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 654  :             _Newnode->_Color = _Black; // the root is black

  00094	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newnode$[rsp]
  00099	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 655  :             return _Newnode;

  0009d	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newnode$[rsp]
  000a2	e9 52 02 00 00	 jmp	 $LN1@Insert_nod
$LN5@Insert_nod:

; 656  :         }
; 657  : 
; 658  :         _STL_INTERNAL_CHECK(_Loc._Child != _Tree_child::_Unused);
; 659  :         if (_Loc._Child == _Tree_child::_Right) { // add to right of _Loc._Parent

  000a7	48 8b 44 24 58	 mov	 rax, QWORD PTR _Loc$[rsp]
  000ac	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  000b0	75 34		 jne	 SHORT $LN6@Insert_nod

; 660  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Right->_Isnil);
; 661  :             _Loc._Parent->_Right = _Newnode;

  000b2	48 8b 44 24 58	 mov	 rax, QWORD PTR _Loc$[rsp]
  000b7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ba	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  000bf	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 662  :             if (_Loc._Parent == _Head->_Right) { // remember rightmost node

  000c3	48 8b 44 24 58	 mov	 rax, QWORD PTR _Loc$[rsp]
  000c8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Head$[rsp]
  000cd	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000d1	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000d4	75 0e		 jne	 SHORT $LN8@Insert_nod

; 663  :                 _Head->_Right = _Newnode;

  000d6	48 8b 44 24 20	 mov	 rax, QWORD PTR _Head$[rsp]
  000db	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  000e0	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
$LN8@Insert_nod:

; 664  :             }
; 665  :         } else { // add to left of _Loc._Parent

  000e4	eb 2f		 jmp	 SHORT $LN7@Insert_nod
$LN6@Insert_nod:

; 666  :             _STL_INTERNAL_CHECK(_Loc._Parent->_Left->_Isnil);
; 667  :             _Loc._Parent->_Left = _Newnode;

  000e6	48 8b 44 24 58	 mov	 rax, QWORD PTR _Loc$[rsp]
  000eb	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ee	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  000f3	48 89 08	 mov	 QWORD PTR [rax], rcx

; 668  :             if (_Loc._Parent == _Head->_Left) { // remember leftmost node

  000f6	48 8b 44 24 58	 mov	 rax, QWORD PTR _Loc$[rsp]
  000fb	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Head$[rsp]
  00100	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00103	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00106	75 0d		 jne	 SHORT $LN7@Insert_nod

; 669  :                 _Head->_Left = _Newnode;

  00108	48 8b 44 24 20	 mov	 rax, QWORD PTR _Head$[rsp]
  0010d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Newnode$[rsp]
  00112	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN7@Insert_nod:

; 670  :             }
; 671  :         }
; 672  : 
; 673  :         for (_Nodeptr _Pnode = _Newnode; _Pnode->_Parent->_Color == _Red;) {

  00115	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newnode$[rsp]
  0011a	48 89 44 24 28	 mov	 QWORD PTR _Pnode$1[rsp], rax
$LN2@Insert_nod:
  0011f	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00124	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00128	0f be 40 18	 movsx	 eax, BYTE PTR [rax+24]
  0012c	85 c0		 test	 eax, eax
  0012e	0f 85 b3 01 00
	00		 jne	 $LN3@Insert_nod

; 674  :             if (_Pnode->_Parent == _Pnode->_Parent->_Parent->_Left) { // fixup red-red in left subtree

  00134	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00139	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0013d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00141	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Pnode$1[rsp]
  00146	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00149	48 39 41 08	 cmp	 QWORD PTR [rcx+8], rax
  0014d	0f 85 cb 00 00
	00		 jne	 $LN10@Insert_nod

; 675  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Right;

  00153	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00158	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0015c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00160	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00164	48 89 44 24 30	 mov	 QWORD PTR _Parent_sibling$2[rsp], rax

; 676  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00169	48 8b 44 24 30	 mov	 rax, QWORD PTR _Parent_sibling$2[rsp]
  0016e	0f be 40 18	 movsx	 eax, BYTE PTR [rax+24]
  00172	85 c0		 test	 eax, eax
  00174	75 3b		 jne	 SHORT $LN12@Insert_nod

; 677  :                     _Pnode->_Parent->_Color          = _Black;

  00176	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  0017b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0017f	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 678  :                     _Parent_sibling->_Color          = _Black;

  00183	48 8b 44 24 30	 mov	 rax, QWORD PTR _Parent_sibling$2[rsp]
  00188	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 679  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  0018c	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00191	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00195	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00199	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0

; 680  :                     _Pnode                           = _Pnode->_Parent->_Parent;

  0019d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  001a2	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001a6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001aa	48 89 44 24 28	 mov	 QWORD PTR _Pnode$1[rsp], rax

; 681  :                 } else { // parent's sibling has red and black children

  001af	eb 68		 jmp	 SHORT $LN13@Insert_nod
$LN12@Insert_nod:

; 682  :                     if (_Pnode == _Pnode->_Parent->_Right) { // rotate right child to left

  001b1	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  001b6	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001ba	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  001be	48 39 44 24 28	 cmp	 QWORD PTR _Pnode$1[rsp], rax
  001c3	75 1e		 jne	 SHORT $LN14@Insert_nod

; 683  :                         _Pnode = _Pnode->_Parent;

  001c5	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  001ca	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001ce	48 89 44 24 28	 mov	 QWORD PTR _Pnode$1[rsp], rax

; 684  :                         _Lrotate(_Pnode);

  001d3	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Pnode$1[rsp]
  001d8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  001dd	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Lrotate
  001e2	90		 npad	 1
$LN14@Insert_nod:

; 685  :                     }
; 686  : 
; 687  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  001e3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  001e8	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001ec	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 688  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  001f0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  001f5	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001f9	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  001fd	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0

; 689  :                     _Rrotate(_Pnode->_Parent->_Parent);

  00201	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00206	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0020a	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0020e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00213	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Rrotate
  00218	90		 npad	 1
$LN13@Insert_nod:

; 690  :                 }
; 691  :             } else { // fixup red-red in right subtree

  00219	e9 c4 00 00 00	 jmp	 $LN11@Insert_nod
$LN10@Insert_nod:

; 692  :                 const auto _Parent_sibling = _Pnode->_Parent->_Parent->_Left;

  0021e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00223	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00227	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0022b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0022e	48 89 44 24 38	 mov	 QWORD PTR _Parent_sibling$3[rsp], rax

; 693  :                 if (_Parent_sibling->_Color == _Red) { // parent's sibling has two red children, blacken both

  00233	48 8b 44 24 38	 mov	 rax, QWORD PTR _Parent_sibling$3[rsp]
  00238	0f be 40 18	 movsx	 eax, BYTE PTR [rax+24]
  0023c	85 c0		 test	 eax, eax
  0023e	75 3b		 jne	 SHORT $LN15@Insert_nod

; 694  :                     _Pnode->_Parent->_Color          = _Black;

  00240	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00245	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00249	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 695  :                     _Parent_sibling->_Color          = _Black;

  0024d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Parent_sibling$3[rsp]
  00252	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 696  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  00256	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  0025b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0025f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00263	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0

; 697  :                     _Pnode                           = _Pnode->_Parent->_Parent;

  00267	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  0026c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00270	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00274	48 89 44 24 28	 mov	 QWORD PTR _Pnode$1[rsp], rax

; 698  :                 } else { // parent's sibling has red and black children

  00279	eb 67		 jmp	 SHORT $LN11@Insert_nod
$LN15@Insert_nod:

; 699  :                     if (_Pnode == _Pnode->_Parent->_Left) { // rotate left child to right

  0027b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00280	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00284	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00287	48 39 44 24 28	 cmp	 QWORD PTR _Pnode$1[rsp], rax
  0028c	75 1e		 jne	 SHORT $LN17@Insert_nod

; 700  :                         _Pnode = _Pnode->_Parent;

  0028e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  00293	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00297	48 89 44 24 28	 mov	 QWORD PTR _Pnode$1[rsp], rax

; 701  :                         _Rrotate(_Pnode);

  0029c	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Pnode$1[rsp]
  002a1	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  002a6	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Rrotate
  002ab	90		 npad	 1
$LN17@Insert_nod:

; 702  :                     }
; 703  : 
; 704  :                     _Pnode->_Parent->_Color          = _Black; // propagate red up

  002ac	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  002b1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002b5	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 705  :                     _Pnode->_Parent->_Parent->_Color = _Red;

  002b9	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  002be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002c2	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002c6	c6 40 18 00	 mov	 BYTE PTR [rax+24], 0

; 706  :                     _Lrotate(_Pnode->_Parent->_Parent);

  002ca	48 8b 44 24 28	 mov	 rax, QWORD PTR _Pnode$1[rsp]
  002cf	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002d3	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  002d7	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  002dc	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Lrotate
  002e1	90		 npad	 1
$LN11@Insert_nod:

; 707  :                 }
; 708  :             }
; 709  :         }

  002e2	e9 38 fe ff ff	 jmp	 $LN2@Insert_nod
$LN3@Insert_nod:

; 710  : 
; 711  :         _Head->_Parent->_Color = _Black; // root is always black

  002e7	48 8b 44 24 20	 mov	 rax, QWORD PTR _Head$[rsp]
  002ec	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  002f0	c6 40 18 01	 mov	 BYTE PTR [rax+24], 1

; 712  :         return _Newnode;

  002f4	48 8b 44 24 60	 mov	 rax, QWORD PTR _Newnode$[rsp]
$LN1@Insert_nod:

; 713  :     }

  002f9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  002fd	5f		 pop	 rdi
  002fe	c3		 ret	 0
?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@U?$_Tree_id@PEAU?$_Tree_node@HPEAX@std@@@2@QEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Insert_node
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z
_TEXT	SEGMENT
_Pnode$ = 0
this$ = 32
_Wherenode$ = 40
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Rrotate, COMDAT

; 482  :     void _Rrotate(_Nodeptr _Wherenode) { // promote left node to root of subtree

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 483  :         _Nodeptr _Pnode   = _Wherenode->_Left;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 89 04 24	 mov	 QWORD PTR _Pnode$[rsp], rax

; 484  :         _Wherenode->_Left = _Pnode->_Right;

  0002f	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  00034	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  00038	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 485  : 
; 486  :         if (!_Pnode->_Right->_Isnil) {

  0003f	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00043	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00047	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  0004b	85 c0		 test	 eax, eax
  0004d	75 11		 jne	 SHORT $LN2@Rrotate

; 487  :             _Pnode->_Right->_Parent = _Wherenode;

  0004f	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00053	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00057	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Wherenode$[rsp]
  0005c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN2@Rrotate:

; 488  :         }
; 489  : 
; 490  :         _Pnode->_Parent = _Wherenode->_Parent;

  00060	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00064	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Wherenode$[rsp]
  00069	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0006d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 491  : 
; 492  :         if (_Wherenode == _Myhead->_Parent) {

  00071	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007e	48 39 44 24 28	 cmp	 QWORD PTR _Wherenode$[rsp], rax
  00083	75 13		 jne	 SHORT $LN3@Rrotate

; 493  :             _Myhead->_Parent = _Pnode;

  00085	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0008a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008e	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  00092	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00096	eb 37		 jmp	 SHORT $LN4@Rrotate
$LN3@Rrotate:

; 494  :         } else if (_Wherenode == _Wherenode->_Parent->_Right) {

  00098	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  0009d	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a1	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000a5	48 39 44 24 28	 cmp	 QWORD PTR _Wherenode$[rsp], rax
  000aa	75 13		 jne	 SHORT $LN5@Rrotate

; 495  :             _Wherenode->_Parent->_Right = _Pnode;

  000ac	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  000b1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b5	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  000b9	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 496  :         } else {

  000bd	eb 10		 jmp	 SHORT $LN6@Rrotate
$LN5@Rrotate:

; 497  :             _Wherenode->_Parent->_Left = _Pnode;

  000bf	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  000c4	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c8	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  000cc	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN6@Rrotate:
$LN4@Rrotate:

; 498  :         }
; 499  : 
; 500  :         _Pnode->_Right      = _Wherenode;

  000cf	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  000d3	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Wherenode$[rsp]
  000d8	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 501  :         _Wherenode->_Parent = _Pnode;

  000dc	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  000e1	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  000e5	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 502  :     }

  000e9	48 83 c4 10	 add	 rsp, 16
  000ed	5f		 pop	 rdi
  000ee	c3		 ret	 0
?_Rrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Rrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z
_TEXT	SEGMENT
_Pnode$ = 0
this$ = 32
_Wherenode$ = 40
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Lrotate, COMDAT

; 460  :     void _Lrotate(_Nodeptr _Wherenode) { // promote right node to root of subtree

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 461  :         _Nodeptr _Pnode    = _Wherenode->_Right;

  00023	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  00028	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0002c	48 89 04 24	 mov	 QWORD PTR _Pnode$[rsp], rax

; 462  :         _Wherenode->_Right = _Pnode->_Left;

  00030	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  00035	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  00039	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0003c	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 463  : 
; 464  :         if (!_Pnode->_Left->_Isnil) {

  00040	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00044	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00047	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  0004b	85 c0		 test	 eax, eax
  0004d	75 10		 jne	 SHORT $LN2@Lrotate

; 465  :             _Pnode->_Left->_Parent = _Wherenode;

  0004f	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Wherenode$[rsp]
  0005b	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
$LN2@Lrotate:

; 466  :         }
; 467  : 
; 468  :         _Pnode->_Parent = _Wherenode->_Parent;

  0005f	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  00063	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Wherenode$[rsp]
  00068	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0006c	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 469  : 
; 470  :         if (_Wherenode == _Myhead->_Parent) {

  00070	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00075	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00079	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007d	48 39 44 24 28	 cmp	 QWORD PTR _Wherenode$[rsp], rax
  00082	75 13		 jne	 SHORT $LN3@Lrotate

; 471  :             _Myhead->_Parent = _Pnode;

  00084	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00089	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008d	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  00091	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00095	eb 36		 jmp	 SHORT $LN4@Lrotate
$LN3@Lrotate:

; 472  :         } else if (_Wherenode == _Wherenode->_Parent->_Left) {

  00097	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  0009c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000a0	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a3	48 39 44 24 28	 cmp	 QWORD PTR _Wherenode$[rsp], rax
  000a8	75 12		 jne	 SHORT $LN5@Lrotate

; 473  :             _Wherenode->_Parent->_Left = _Pnode;

  000aa	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  000af	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b3	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  000b7	48 89 08	 mov	 QWORD PTR [rax], rcx

; 474  :         } else {

  000ba	eb 11		 jmp	 SHORT $LN6@Lrotate
$LN5@Lrotate:

; 475  :             _Wherenode->_Parent->_Right = _Pnode;

  000bc	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  000c1	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c5	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  000c9	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
$LN6@Lrotate:
$LN4@Lrotate:

; 476  :         }
; 477  : 
; 478  :         _Pnode->_Left       = _Wherenode;

  000cd	48 8b 04 24	 mov	 rax, QWORD PTR _Pnode$[rsp]
  000d1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Wherenode$[rsp]
  000d6	48 89 08	 mov	 QWORD PTR [rax], rcx

; 479  :         _Wherenode->_Parent = _Pnode;

  000d9	48 8b 44 24 28	 mov	 rax, QWORD PTR _Wherenode$[rsp]
  000de	48 8b 0c 24	 mov	 rcx, QWORD PTR _Pnode$[rsp]
  000e2	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 480  :     }

  000e6	48 83 c4 10	 add	 rsp, 16
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
?_Lrotate@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXPEAU?$_Tree_node@HPEAX@2@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Lrotate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z
_TEXT	SEGMENT
_Pnode$ = 16
?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Min, COMDAT

; 452  :     static _Nodeptr _Min(_Nodeptr _Pnode) { // return leftmost node in subtree at _Pnode

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
$LN2@Min:

; 453  :         while (!_Pnode->_Left->_Isnil) {

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Pnode$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0000e	0f be 40 19	 movsx	 eax, BYTE PTR [rax+25]
  00012	85 c0		 test	 eax, eax
  00014	75 0f		 jne	 SHORT $LN3@Min

; 454  :             _Pnode = _Pnode->_Left;

  00016	48 8b 44 24 10	 mov	 rax, QWORD PTR _Pnode$[rsp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 89 44 24 10	 mov	 QWORD PTR _Pnode$[rsp], rax

; 455  :         }

  00023	eb e1		 jmp	 SHORT $LN2@Min
$LN3@Min:

; 456  : 
; 457  :         return _Pnode;

  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR _Pnode$[rsp]

; 458  :     }

  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
?_Min@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@SAPEAU?$_Tree_node@HPEAX@2@PEAU32@@Z ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ PROC ; std::_Tree_val<std::_Tree_simple_types<int> >::_Tree_val<std::_Tree_simple_types<int> >, COMDAT

; 437  :     _Tree_val() : _Myhead(), _Mysize(0) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAA@XZ ENDP ; std::_Tree_val<std::_Tree_simple_types<int> >::_Tree_val<std::_Tree_simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??R?$less@H@std@@QEBA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 0
this$ = 32
_Left$ = 40
_Right$ = 48
??R?$less@H@std@@QEBA_NAEBH0@Z PROC			; std::less<int>::operator(), COMDAT

; 122  :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const { // apply operator< to operands

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 10	 sub	 rsp, 16
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 04 00 00 00	 mov	 ecx, 4
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 123  :         return _Left < _Right;

  00028	48 8b 44 24 28	 mov	 rax, QWORD PTR _Left$[rsp]
  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Right$[rsp]
  00032	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00034	39 08		 cmp	 DWORD PTR [rax], ecx
  00036	7d 09		 jge	 SHORT $LN3@operator
  00038	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  0003f	eb 07		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00041	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@operator:
  00048	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 124  :     }

  0004c	48 83 c4 10	 add	 rsp, 16
  00050	5f		 pop	 rdi
  00051	c3		 ret	 0
??R?$less@H@std@@QEBA_NAEBH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary, COMDAT

; 2053 :     const _Scary_val* _Get_scary() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2054 :         return _STD addressof(_Mypair._Myval2._Myval2);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEBV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > const >

; 2055 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAPEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary, COMDAT

; 2049 :     _Scary_val* _Get_scary() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2050 :         return _STD addressof(_Mypair._Myval2._Myval2);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??$addressof@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@YAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Tree_val<std::_Tree_simple_types<int> > >

; 2051 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal, COMDAT

; 2045 :     const _Alnode& _Getal() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2046 :         return _Mypair._Myval2._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first

; 2047 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal, COMDAT

; 2041 :     _Alnode& _Getal() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2042 :         return _Mypair._Myval2._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>::_Get_first

; 2043 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getcomp, COMDAT

; 2037 :     const key_compare& _Getcomp() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2038 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEBAAEBU?$less@H@2@XZ ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Get_first

; 2039 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getcomp@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBU?$less@H@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getcomp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
_Scary$ = 32
_Alproxy$ = 40
$S21$ = 52
_Proxy$ = 88
this$ = 144
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy, COMDAT

; 2020 :     void _Alloc_sentinel_and_proxy() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  0000d	48 8b fc	 mov	 rdi, rsp
  00010	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00015	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001a	f3 ab		 rep stosd
  0001c	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]

; 2021 :         const auto _Scary = _Get_scary();

  00024	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00031	48 89 44 24 20	 mov	 QWORD PTR _Scary$[rsp], rax

; 2022 :         auto&& _Alproxy   = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00036	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
  00043	48 8b d0	 mov	 rdx, rax
  00046	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S21$[rsp]
  0004b	e8 00 00 00 00	 call	 ??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<int,void *> >
  00050	48 8d 44 24 34	 lea	 rax, QWORD PTR $S21$[rsp]
  00055	48 89 44 24 28	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2023 :         _Container_proxy_ptr<_Alnode> _Proxy(_Alproxy, *_Scary);

  0005a	4c 8b 44 24 20	 mov	 r8, QWORD PTR _Scary$[rsp]
  0005f	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00064	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00069	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0006e	90		 npad	 1

; 2024 :         _Scary->_Myhead = _Node::_Buyheadnode(_Getal());

  0006f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00077	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ??$_Buyheadnode@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_node@HPEAX@std@@SAPEAU01@AEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Tree_node<int,void *>::_Buyheadnode<std::allocator<std::_Tree_node<int,void *> > >
  00084	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Scary$[rsp]
  00089	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 2025 :         _Proxy._Release();

  0008d	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  00097	90		 npad	 1

; 2026 :     }

  00098	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  0009d	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000a2	48 8b cc	 mov	 rcx, rsp
  000a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ$rtcFrameData
  000ac	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b1	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000b8	5f		 pop	 rdi
  000b9	c3		 ret	 0
?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
_Alproxy$ = 40
$S21$ = 52
_Proxy$ = 88
this$ = 144
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
_Alproxy$ = 40
$S21$ = 52
_Proxy$ = 88
this$ = 144
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv65 = 32
this$ = 64
?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Check_grow_by_1, COMDAT

; 1723 :     void _Check_grow_by_1() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1724 :         if (max_size() == _Get_scary()->_Mysize) {

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::max_size
  00028	48 89 44 24 20	 mov	 QWORD PTR tv65[rsp], rax
  0002d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00037	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tv65[rsp]
  0003c	48 3b 48 10	 cmp	 rcx, QWORD PTR [rax+16]
  00040	75 05		 jne	 SHORT $LN2@Check_grow

; 1725 :             _Throw_tree_length_error();

  00042	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN2@Check_grow:
$LN3@Check_grow:

; 1726 :         }
; 1727 :     }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?_Check_grow_by_1@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Check_grow_by_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::max_size, COMDAT

; 1310 :     _NODISCARD size_type max_size() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1311 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEBAAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1312 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1313 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEBA_KXZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_Scary$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end, COMDAT

; 1248 :     _NODISCARD iterator end() noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1249 :         const auto _Scary = _Get_scary();

  0002b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Scary$[rsp], rax

; 1250 :         return iterator(_Scary->_Myhead, _Scary);

  0003b	4c 8b 44 24 20	 mov	 r8, QWORD PTR _Scary$[rsp]
  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR _Scary$[rsp]
  00045	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00049	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
  00053	90		 npad	 1
  00054	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  00058	83 c8 01	 or	 eax, 1
  0005b	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  0005f	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1251 :     }

  00064	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
  0006a	cc		 int	 3
?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_Scary$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin, COMDAT

; 1238 :     _NODISCARD iterator begin() noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 1239 :         const auto _Scary = _Get_scary();

  0002b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Scary$[rsp], rax

; 1240 :         return iterator(_Scary->_Myhead->_Left, _Scary);

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Scary$[rsp]
  00040	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00044	4c 8b 44 24 20	 mov	 r8, QWORD PTR _Scary$[rsp]
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  00051	e8 00 00 00 00	 call	 ??0?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@PEAU?$_Tree_node@HPEAX@1@PEBV?$_Tree_val@U?$_Tree_simple_types@H@std@@@1@@Z ; std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >
  00056	90		 npad	 1
  00057	8b 44 24 28	 mov	 eax, DWORD PTR $T1[rsp]
  0005b	83 c8 01	 or	 eax, 1
  0005e	89 44 24 28	 mov	 DWORD PTR $T1[rsp], eax
  00062	48 8b 44 24 48	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 1241 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
  0006d	cc		 int	 3
?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Scary$ = 32
$T1 = 40
this$ = 64
__$ReturnUdt$ = 72
?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA PROC ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 28	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 28 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 48	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0??begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ@4HA ENDP ; `std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Scary$ = 32
_Alproxy$ = 40
$S1$ = 52
this$ = 96
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >, COMDAT

; 1189 :     ~_Tree() noexcept { // destroy tree

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1190 :         const auto _Scary = _Get_scary();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Get_scary@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAPEAV?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Get_scary
  00028	48 89 44 24 20	 mov	 QWORD PTR _Scary$[rsp], rax

; 1191 :         _Scary->_Erase_head(_Getal());

  0002d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
  00037	48 8b d0	 mov	 rdx, rax
  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Scary$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Erase_head@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@QEAAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::_Tree_val<std::_Tree_simple_types<int> >::_Erase_head<std::allocator<std::_Tree_node<int,void *> > >

; 1192 : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 1193 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00044	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Getal@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Getal
  0004e	48 8b d0	 mov	 rdx, rax
  00051	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S1$[rsp]
  00056	e8 00 00 00 00	 call	 ??$?0U?$_Tree_node@HPEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_Tree_node@HPEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_Tree_node<int,void *> >
  0005b	48 8d 44 24 34	 lea	 rax, QWORD PTR $S1$[rsp]
  00060	48 89 44 24 28	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 1194 :         _Delete_plain_internal(_Alproxy, _Scary->_Myproxy);

  00065	48 8b 44 24 20	 mov	 rax, QWORD PTR _Scary$[rsp]
  0006a	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0006d	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00072	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >

; 1195 : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1196 :     }

  00077	48 8b cc	 mov	 rcx, rsp
  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ$rtcFrameData
  00081	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@XZ ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::~_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Parg$ = 72
??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z PROC ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >, COMDAT

; 882  :     _Tree(const key_compare& _Parg) : _Mypair(_One_then_variadic_args_t(), _Parg, _Zero_then_variadic_args_t()) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8d 4c 24 20	 lea	 r9, QWORD PTR $T1[rsp]
  0002d	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Parg$[rsp]
  00032	0f b6 54 24 21	 movzx	 edx, BYTE PTR $T2[rsp]
  00037	48 8b c8	 mov	 rcx, rax
  0003a	e8 00 00 00 00	 call	 ??$?0AEBU?$less@H@std@@U_Zero_then_variadic_args_t@1@@?$_Compressed_pair@U?$less@H@std@@V?$_Compressed_pair@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@2@$00@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBU?$less@H@1@$$QEAU_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1>::_Compressed_pair<std::less<int>,std::_Compressed_pair<std::allocator<std::_Tree_node<int,void *> >,std::_Tree_val<std::_Tree_simple_types<int> >,1>,1><std::less<int> const &,std::_Zero_then_variadic_args_t>

; 883  :         _Alloc_sentinel_and_proxy();

  0003f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00044	e8 00 00 00 00	 call	 ?_Alloc_sentinel_and_proxy@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@IEAAXXZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Alloc_sentinel_and_proxy

; 884  :     }

  00049	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
??0?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA@AEBU?$less@H@1@@Z ENDP ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_Tree_node@HPEAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z
_TEXT	SEGMENT
__formal$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00028	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Count$[rsp], 32 ; 00000020H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@HPEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_Tree_node@HPEAX@std@@@2@QEAU?$_Tree_node@HPEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<int,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<int,void *> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ; std::_Get_size_of_n<32>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAPEAU?$_Tree_node@HPEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<int,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z PROC ; std::allocator<std::_Tree_node<int,void *> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	20		 imul	 rax, QWORD PTR _Count$[rsp], 32 ; 00000020H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAAXQEAU?$_Tree_node@HPEAX@2@_K@Z ENDP ; std::allocator<std::_Tree_node<int,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_Tree_node<int,void *> >::allocator<std::_Tree_node<int,void *> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@U?$_Tree_node@HPEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_Tree_node<int,void *> >::allocator<std::_Tree_node<int,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\set
;	COMDAT ?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z
_TEXT	SEGMENT
_Val$ = 16
?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z PROC ; std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>::_Kfn, COMDAT

; 43   :     static const _Kty& _Kfn(const value_type& _Val) { // extract key from element value

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 44   :         return _Val;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Val$[rsp]

; 45   :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Kfn@?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@SAAEBHAEBH@Z ENDP ; std::_Tset_traits<int,std::less<int>,std::allocator<int>,0>::_Kfn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 02	 sar	 rax, 2
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Newcapacity$ = 56
?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
  0002d	48 39 44 24 38	 cmp	 QWORD PTR _Newcapacity$[rsp], rax
  00032	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00034	e8 00 00 00 00	 call	 ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00039	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
_Newvec$ = 64
this$ = 96
_Newcapacity$ = 104
?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  00023	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  0002d	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  0003b	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00040	48 83 c0 10	 add	 rax, 16
  00044	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  00049	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  00057	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00061	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Newcapacity$[rsp]
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ; std::allocator<int>::allocate
  0006e	48 89 44 24 40	 mov	 QWORD PTR _Newvec$[rsp], rax

; 1600 :         _Myfirst           = _Newvec;

  00073	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00078	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0007d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00085	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  0008d	48 8b 44 24 40	 mov	 rax, QWORD PTR _Newvec$[rsp]
  00092	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  00097	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  0009b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  000a0	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000a3	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000a7	5f		 pop	 rdi
  000a8	c3		 ret	 0
?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S2$ = 52
$T4 = 68
this$ = 96
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S2$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S2$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z PROC		; std::allocator<int>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$03@std@@YA_K_K@Z ; std::_Get_size_of_n<4>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z PROC	; std::allocator<int>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 02	 shl	 rax, 2
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ENDP	; std::allocator<int>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@H@std@@QEAA@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@H@std@@QEAA@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z
_TEXT	SEGMENT
tv71 = 32
_Left$ = 64
__formal$ = 72
??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z PROC ; std::operator==<RGYLog>, COMDAT

; 1327 : _NODISCARD bool operator==(const shared_ptr<_Ty>& _Left, nullptr_t) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1328 :     return _Left.get() == nullptr;

  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Left$[rsp]
  00028	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get
  0002d	48 85 c0	 test	 rax, rax
  00030	75 0a		 jne	 SHORT $LN3@operator
  00032	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv71[rsp], 1
  0003a	eb 08		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0003c	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv71[rsp], 0
$LN4@operator:
  00044	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv71[rsp]

; 1329 : }

  00049	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ENDP ; std::operator==<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRGYInput@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GRGYInput@@UEAAPEAXI@Z PROC				; RGYInput::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1RGYInput@@UEAA@XZ	; RGYInput::~RGYInput
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 40 01 00 00	 mov	 edx, 320		; 00000140H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GRGYInput@@UEAAPEAXI@Z ENDP				; RGYInput::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z
_TEXT	SEGMENT
_Old$ = 32
this$ = 64
_Ptr$ = 72
?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset, COMDAT

; 1907 :     void reset(pointer _Ptr = pointer()) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1908 :         pointer _Old = _STD exchange(_Mypair._Myval2, _Ptr);

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 54 24 48	 lea	 rdx, QWORD PTR _Ptr$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$exchange@PEAVRGYConvertCSP@@AEAPEAV1@@std@@YAPEAVRGYConvertCSP@@AEAPEAV1@0@Z ; std::exchange<RGYConvertCSP *,RGYConvertCSP * &>
  00035	90		 npad	 1
  00036	48 89 44 24 20	 mov	 QWORD PTR _Old$[rsp], rax

; 1909 :         if (_Old) {

  0003b	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Old$[rsp], 0
  00041	74 1c		 je	 SHORT $LN2@reset

; 1910 :             _Mypair._Get_first()(_Old);

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
  00050	90		 npad	 1
  00051	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Old$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ; std::default_delete<RGYConvertCSP>::operator()
  0005e	90		 npad	 1
$LN2@reset:

; 1911 :         }
; 1912 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1d		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@VRGYConvertCSP@@@std@@PEAVRGYConvertCSP@@$00@std@@QEAAAEAU?$default_delete@VRGYConvertCSP@@@2@XZ ; std::_Compressed_pair<std::default_delete<RGYConvertCSP>,RGYConvertCSP *,1>::_Get_first
  00036	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003b	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ; std::default_delete<RGYConvertCSP>::operator()
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z
_TEXT	SEGMENT
this$ = 48
__formal$ = 56
??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z PROC ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=, COMDAT

; 1814 :     unique_ptr& operator=(nullptr_t) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1815 :         reset();

  00023	33 d2		 xor	 edx, edx
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ?reset@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAXPEAVRGYConvertCSP@@@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::reset

; 1816 :         return *this;

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 1817 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z ENDP ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z
_TEXT	SEGMENT
$T1 = 32
tv68 = 40
this$ = 64
_Ptr$ = 72
??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z PROC ; std::default_delete<RGYConvertCSP>::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  00023	48 8b 44 24 48	 mov	 rax, QWORD PTR _Ptr$[rsp]
  00028	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0002d	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  00033	74 16		 je	 SHORT $LN3@operator
  00035	ba 01 00 00 00	 mov	 edx, 1
  0003a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  0003f	e8 00 00 00 00	 call	 ??_GRGYConvertCSP@@QEAAPEAXI@Z
  00044	48 89 44 24 28	 mov	 QWORD PTR tv68[rsp], rax
  00049	eb 09		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0004b	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@operator:

; 1768 :     }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??R?$default_delete@VRGYConvertCSP@@@std@@QEBAXPEAVRGYConvertCSP@@@Z ENDP ; std::default_delete<RGYConvertCSP>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
ss$ = 48
$T4 = 312
tv65 = 360
tv194 = 368
__$ArrayPad$ = 376
this$ = 400
inputTypeName$ = 408
inputCSpName$ = 416
outputCSpName$ = 424
convSIMD$ = 432
inputPrm$ = 440
?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z PROC ; RGYInput::CreateInputInfo

; 188  : void RGYInput::CreateInputInfo(const TCHAR *inputTypeName, const TCHAR *inputCSpName, const TCHAR *outputCSpName, const TCHAR *convSIMD, const VideoInfo *inputPrm) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	01 00 00	 mov	 rcx, QWORD PTR [rsp+400]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 78
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 189  :     std::basic_stringstream<TCHAR> ss;

  00045	41 b8 01 00 00
	00		 mov	 r8d, 1
  0004b	ba 03 00 00 00	 mov	 edx, 3
  00050	48 8d 4c 24 30	 lea	 rcx, QWORD PTR ss$[rsp]
  00055	e8 00 00 00 00	 call	 ??0?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@H@Z ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
  0005a	90		 npad	 1

; 190  : 
; 191  :     ss << inputTypeName;

  0005b	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  00060	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR inputTypeName$[rsp]
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 192  :     ss << _T("(") << inputCSpName << _T(")");

  00070	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  00075	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132596
  0007c	48 8b c8	 mov	 rcx, rax
  0007f	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00084	48 8b 94 24 a0
	01 00 00	 mov	 rdx, QWORD PTR inputCSpName$[rsp]
  0008c	48 8b c8	 mov	 rcx, rax
  0008f	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00094	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132595
  0009b	48 8b c8	 mov	 rcx, rax
  0009e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 193  :     ss << _T("->") << outputCSpName;

  000a3	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132597
  000af	48 8b c8	 mov	 rcx, rax
  000b2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  000b7	48 8b 94 24 a8
	01 00 00	 mov	 rdx, QWORD PTR outputCSpName$[rsp]
  000bf	48 8b c8	 mov	 rcx, rax
  000c2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 194  :     if (convSIMD && _tcslen(convSIMD)) {

  000c7	48 83 bc 24 b0
	01 00 00 00	 cmp	 QWORD PTR convSIMD$[rsp], 0
  000d0	74 45		 je	 SHORT $LN2@CreateInpu
  000d2	48 8b 8c 24 b0
	01 00 00	 mov	 rcx, QWORD PTR convSIMD$[rsp]
  000da	e8 00 00 00 00	 call	 strlen
  000df	48 85 c0	 test	 rax, rax
  000e2	74 33		 je	 SHORT $LN2@CreateInpu

; 195  :         ss << _T(" [") << convSIMD << _T("]");

  000e4	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  000e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132600
  000f0	48 8b c8	 mov	 rcx, rax
  000f3	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  000f8	48 8b 94 24 b0
	01 00 00	 mov	 rdx, QWORD PTR convSIMD$[rsp]
  00100	48 8b c8	 mov	 rcx, rax
  00103	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00108	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132599
  0010f	48 8b c8	 mov	 rcx, rax
  00112	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
$LN2@CreateInpu:

; 196  :     }
; 197  :     ss << _T(", ");

  00117	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  0011c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132601
  00123	48 8b c8	 mov	 rcx, rax
  00126	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 198  :     ss << inputPrm->srcWidth << _T("x") << inputPrm->srcHeight << _T(", ");

  0012b	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  00130	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR inputPrm$[rsp]
  00138	8b 51 04	 mov	 edx, DWORD PTR [rcx+4]
  0013b	48 8b c8	 mov	 rcx, rax
  0013e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
  00144	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132603
  0014b	48 8b c8	 mov	 rcx, rax
  0014e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00153	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR inputPrm$[rsp]
  0015b	8b 51 08	 mov	 edx, DWORD PTR [rcx+8]
  0015e	48 8b c8	 mov	 rcx, rax
  00161	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
  00167	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132602
  0016e	48 8b c8	 mov	 rcx, rax
  00171	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 199  :     ss << inputPrm->fpsN << _T("/") << inputPrm->fpsD << _T(" fps");

  00176	48 8d 44 24 40	 lea	 rax, QWORD PTR ss$[rsp+16]
  0017b	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR inputPrm$[rsp]
  00183	8b 51 2c	 mov	 edx, DWORD PTR [rcx+44]
  00186	48 8b c8	 mov	 rcx, rax
  00189	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  0018f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132605
  00196	48 8b c8	 mov	 rcx, rax
  00199	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0019e	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR inputPrm$[rsp]
  001a6	8b 51 30	 mov	 edx, DWORD PTR [rcx+48]
  001a9	48 8b c8	 mov	 rcx, rax
  001ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  001b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132604
  001b9	48 8b c8	 mov	 rcx, rax
  001bc	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 200  : 
; 201  :     m_strInputInfo = ss.str();

  001c1	48 8d 94 24 38
	01 00 00	 lea	 rdx, QWORD PTR $T4[rsp]
  001c9	48 8d 4c 24 30	 lea	 rcx, QWORD PTR ss$[rsp]
  001ce	e8 00 00 00 00	 call	 ?str@?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> >::str
  001d3	48 89 84 24 68
	01 00 00	 mov	 QWORD PTR tv65[rsp], rax
  001db	48 8b 84 24 68
	01 00 00	 mov	 rax, QWORD PTR tv65[rsp]
  001e3	48 89 84 24 70
	01 00 00	 mov	 QWORD PTR tv194[rsp], rax
  001eb	48 8b 84 24 90
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001f3	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  001f9	48 8b 94 24 70
	01 00 00	 mov	 rdx, QWORD PTR tv194[rsp]
  00201	48 8b c8	 mov	 rcx, rax
  00204	e8 00 00 00 00	 call	 ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
  00209	90		 npad	 1
  0020a	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR $T4[rsp]
  00212	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00217	90		 npad	 1

; 202  : }

  00218	48 8d 4c 24 30	 lea	 rcx, QWORD PTR ss$[rsp]
  0021d	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  00222	48 8b cc	 mov	 rcx, rsp
  00225	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z$rtcFrameData
  0022c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00231	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00239	48 33 cc	 xor	 rcx, rsp
  0023c	e8 00 00 00 00	 call	 __security_check_cookie
  00241	48 81 c4 80 01
	00 00		 add	 rsp, 384		; 00000180H
  00248	5f		 pop	 rdi
  00249	c3		 ret	 0
?CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z ENDP ; RGYInput::CreateInputInfo
_TEXT	ENDS
text$x	SEGMENT
ss$ = 48
$T4 = 312
tv65 = 360
tv194 = 368
__$ArrayPad$ = 376
this$ = 400
inputTypeName$ = 408
inputCSpName$ = 416
outputCSpName$ = 424
convSIMD$ = 432
inputPrm$ = 440
?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA PROC ; `RGYInput::CreateInputInfo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 30	 lea	 rcx, QWORD PTR ss$[rbp]
  00017	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA ENDP ; `RGYInput::CreateInputInfo'::`1'::dtor$0
ss$ = 48
$T4 = 312
tv65 = 360
tv194 = 368
__$ArrayPad$ = 376
this$ = 400
inputTypeName$ = 408
inputCSpName$ = 416
outputCSpName$ = 424
convSIMD$ = 432
inputPrm$ = 440
?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA PROC ; `RGYInput::CreateInputInfo'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA ENDP ; `RGYInput::CreateInputInfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ss$ = 48
$T4 = 312
tv65 = 360
tv194 = 368
__$ArrayPad$ = 376
this$ = 400
inputTypeName$ = 408
inputCSpName$ = 416
outputCSpName$ = 424
convSIMD$ = 432
inputPrm$ = 440
?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA PROC ; `RGYInput::CreateInputInfo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 30	 lea	 rcx, QWORD PTR ss$[rbp]
  00017	e8 00 00 00 00	 call	 ??_D?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXXZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA ENDP ; `RGYInput::CreateInputInfo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
ss$ = 48
$T4 = 312
tv65 = 360
tv194 = 368
__$ArrayPad$ = 376
this$ = 400
inputTypeName$ = 408
inputCSpName$ = 416
outputCSpName$ = 424
convSIMD$ = 432
inputPrm$ = 440
?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA PROC ; `RGYInput::CreateInputInfo'::`1'::dtor$1
  00023	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00028	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002d	55		 push	 rbp
  0002e	57		 push	 rdi
  0002f	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00033	48 8b ea	 mov	 rbp, rdx
  00036	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??CreateInputInfo@RGYInput@@MEAAXPEBD000PEBUVideoInfo@@@Z@4HA ENDP ; `RGYInput::CreateInputInfo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?AddMessage@RGYInput@@QEAAXHPEBDZZ
_TEXT	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?AddMessage@RGYInput@@QEAAXHPEBDZZ PROC			; RGYInput::AddMessage, COMDAT

; 171  :     void AddMessage(int log_level, const TCHAR *format, ... ) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00013	57		 push	 rdi
  00014	48 81 ec a0 00
	00 00		 sub	 rsp, 160		; 000000a0H
  0001b	48 8b fc	 mov	 rdi, rsp
  0001e	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  00023	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00028	f3 ab		 rep stosd
  0002a	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR [rsp+176]
  00032	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00039	48 33 c4	 xor	 rax, rsp
  0003c	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 172  :         if (m_pPrintMes == nullptr || log_level < m_pPrintMes->getLogLevel()) {

  00044	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00052	33 d2		 xor	 edx, edx
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
  0005c	0f b6 c0	 movzx	 eax, al
  0005f	85 c0		 test	 eax, eax
  00061	75 27		 jne	 SHORT $LN3@AddMessage
  00063	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00071	48 8b c8	 mov	 rcx, rax
  00074	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00079	48 8b c8	 mov	 rcx, rax
  0007c	e8 00 00 00 00	 call	 ?getLogLevel@RGYLog@@QEAAHXZ ; RGYLog::getLogLevel
  00081	39 84 24 b8 00
	00 00		 cmp	 DWORD PTR log_level$[rsp], eax
  00088	7d 05		 jge	 SHORT $LN2@AddMessage
$LN3@AddMessage:

; 173  :             return;

  0008a	e9 ab 00 00 00	 jmp	 $LN1@AddMessage
$LN2@AddMessage:

; 174  :         }
; 175  : 
; 176  :         va_list args;
; 177  :         va_start(args, format);

  0008f	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR format$[rsp+8]
  00097	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 178  :         int len = _vsctprintf(format, args) + 1; // _vscprintf doesn't count terminating '\0'

  0009c	48 8b 54 24 28	 mov	 rdx, QWORD PTR args$[rsp]
  000a1	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR format$[rsp]
  000a9	e8 00 00 00 00	 call	 _vscprintf
  000ae	ff c0		 inc	 eax
  000b0	89 44 24 34	 mov	 DWORD PTR len$[rsp], eax

; 179  :         tstring buffer;

  000b4	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000b9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000be	90		 npad	 1

; 180  :         buffer.resize(len, _T('\0'));

  000bf	48 63 44 24 34	 movsxd	 rax, DWORD PTR len$[rsp]
  000c4	45 33 c0	 xor	 r8d, r8d
  000c7	48 8b d0	 mov	 rdx, rax
  000ca	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000cf	e8 00 00 00 00	 call	 ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize

; 181  :         _vstprintf_s(&buffer[0], len, format, args);

  000d4	48 63 44 24 34	 movsxd	 rax, DWORD PTR len$[rsp]
  000d9	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR tv93[rsp], rax
  000e1	33 d2		 xor	 edx, edx
  000e3	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  000e8	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  000ed	4c 8b 4c 24 28	 mov	 r9, QWORD PTR args$[rsp]
  000f2	4c 8b 84 24 c0
	00 00 00	 mov	 r8, QWORD PTR format$[rsp]
  000fa	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR tv93[rsp]
  00102	48 8b d1	 mov	 rdx, rcx
  00105	48 8b c8	 mov	 rcx, rax
  00108	e8 00 00 00 00	 call	 vsprintf_s

; 182  :         va_end(args);

  0010d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR args$[rsp], 0

; 183  :         AddMessage(log_level, buffer);

  00116	4c 8d 44 24 48	 lea	 r8, QWORD PTR buffer$[rsp]
  0011b	8b 94 24 b8 00
	00 00		 mov	 edx, DWORD PTR log_level$[rsp]
  00122	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0012a	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; RGYInput::AddMessage
  0012f	90		 npad	 1

; 184  :     }

  00130	48 8d 4c 24 48	 lea	 rcx, QWORD PTR buffer$[rsp]
  00135	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN1@AddMessage:
  0013a	48 8b cc	 mov	 rcx, rsp
  0013d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddMessage@RGYInput@@QEAAXHPEBDZZ$rtcFrameData
  00144	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00149	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00151	48 33 cc	 xor	 rcx, rsp
  00154	e8 00 00 00 00	 call	 __security_check_cookie
  00159	48 81 c4 a0 00
	00 00		 add	 rsp, 160		; 000000a0H
  00160	5f		 pop	 rdi
  00161	c3		 ret	 0
?AddMessage@RGYInput@@QEAAXHPEBDZZ ENDP			; RGYInput::AddMessage
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA PROC	; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA ENDP	; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
args$ = 40
len$ = 52
buffer$ = 72
tv93 = 136
__$ArrayPad$ = 144
this$ = 176
log_level$ = 184
format$ = 192
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA PROC	; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 48	 lea	 rcx, QWORD PTR buffer$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHPEBDZZ@4HA ENDP	; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; RGYInput::AddMessage, COMDAT

; 160  :     void AddMessage(int log_level, const tstring& str) {

$LN14:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	57		 push	 rdi
  0000f	48 81 ec 70 01
	00 00		 sub	 rsp, 368		; 00000170H
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 5c 00 00 00	 mov	 ecx, 92			; 0000005cH
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 80
	01 00 00	 mov	 rcx, QWORD PTR [rsp+384]
  0002d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00034	48 33 c4	 xor	 rax, rsp
  00037	48 89 84 24 60
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 161  :         if (m_pPrintMes == nullptr || log_level < m_pPrintMes->getLogLevel()) {

  0003f	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0004d	33 d2		 xor	 edx, edx
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$?8VRGYLog@@@std@@YA_NAEBV?$shared_ptr@VRGYLog@@@0@$$T@Z ; std::operator==<RGYLog>
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	75 27		 jne	 SHORT $LN6@AddMessage
  0005e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00066	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00074	48 8b c8	 mov	 rcx, rax
  00077	e8 00 00 00 00	 call	 ?getLogLevel@RGYLog@@QEAAHXZ ; RGYLog::getLogLevel
  0007c	39 84 24 88 01
	00 00		 cmp	 DWORD PTR log_level$[rsp], eax
  00083	7d 05		 jge	 SHORT $LN5@AddMessage
$LN6@AddMessage:

; 162  :             return;

  00085	e9 fe 01 00 00	 jmp	 $LN1@AddMessage
$LN5@AddMessage:

; 163  :         }
; 164  :         auto lines = split(str, _T("\n"));

  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  00091	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T4[rsp]
  00096	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009b	90		 npad	 1
  0009c	45 33 c9	 xor	 r9d, r9d
  0009f	4c 8d 44 24 58	 lea	 r8, QWORD PTR $T4[rsp]
  000a4	48 8b 94 24 90
	01 00 00	 mov	 rdx, QWORD PTR str$[rsp]
  000ac	48 8d 4c 24 28	 lea	 rcx, QWORD PTR lines$[rsp]
  000b1	e8 00 00 00 00	 call	 ?split@@YA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0_N@Z ; split
  000b6	90		 npad	 1
  000b7	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T4[rsp]
  000bc	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 165  :         for (const auto& line : lines) {

  000c1	48 8d 44 24 28	 lea	 rax, QWORD PTR lines$[rsp]
  000c6	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR <range>$L0$5[rsp], rax
  000ce	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$5[rsp]
  000d6	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
  000db	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR <begin>$L0$6[rsp], rax
  000e3	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR <range>$L0$5[rsp]
  000eb	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
  000f0	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR <end>$L0$7[rsp], rax
  000f8	eb 14		 jmp	 SHORT $LN4@AddMessage
$LN2@AddMessage:
  000fa	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$6[rsp]
  00102	48 83 c0 28	 add	 rax, 40			; 00000028H
  00106	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR <begin>$L0$6[rsp], rax
$LN4@AddMessage:
  0010e	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <end>$L0$7[rsp]
  00116	48 39 84 24 88
	00 00 00	 cmp	 QWORD PTR <begin>$L0$6[rsp], rax
  0011e	0f 84 5a 01 00
	00		 je	 $LN3@AddMessage
  00124	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <begin>$L0$6[rsp]
  0012c	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR line$8[rsp], rax

; 166  :             if (line[0] != _T('\0')) {

  00134	33 d2		 xor	 edx, edx
  00136	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR line$8[rsp]
  0013e	e8 00 00 00 00	 call	 ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
  00143	0f be 00	 movsx	 eax, BYTE PTR [rax]
  00146	85 c0		 test	 eax, eax
  00148	0f 84 2b 01 00
	00		 je	 $LN7@AddMessage

; 167  :                 m_pPrintMes->write(log_level, (m_strReaderName + _T(": ") + line + _T("\n")).c_str());

  0014e	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00156	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0015c	48 8b c8	 mov	 rcx, rax
  0015f	e8 00 00 00 00	 call	 ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
  00164	48 89 84 24 20
	01 00 00	 mov	 QWORD PTR tv133[rsp], rax
  0016c	48 8b 84 24 80
	01 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00174	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  0017a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
  00181	48 8b d0	 mov	 rdx, rax
  00184	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  0018c	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  00191	48 89 84 24 28
	01 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00199	48 8b 84 24 28
	01 00 00	 mov	 rax, QWORD PTR tv76[rsp]
  001a1	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR tv162[rsp], rax
  001a9	4c 8b 84 24 98
	00 00 00	 mov	 r8, QWORD PTR line$8[rsp]
  001b1	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR tv162[rsp]
  001b9	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  001c1	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001c6	48 89 84 24 38
	01 00 00	 mov	 QWORD PTR tv79[rsp], rax
  001ce	48 8b 84 24 38
	01 00 00	 mov	 rax, QWORD PTR tv79[rsp]
  001d6	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv164[rsp], rax
  001de	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  001e5	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR tv164[rsp]
  001ed	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  001f5	e8 00 00 00 00	 call	 ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
  001fa	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv167[rsp], rax
  00202	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR tv167[rsp]
  0020a	48 89 84 24 50
	01 00 00	 mov	 QWORD PTR tv166[rsp], rax
  00212	48 8b 8c 24 50
	01 00 00	 mov	 rcx, QWORD PTR tv166[rsp]
  0021a	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0021f	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00227	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0022a	48 89 8c 24 58
	01 00 00	 mov	 QWORD PTR tv168[rsp], rcx
  00232	4c 8b c0	 mov	 r8, rax
  00235	8b 94 24 88 01
	00 00		 mov	 edx, DWORD PTR log_level$[rsp]
  0023c	48 8b 8c 24 20
	01 00 00	 mov	 rcx, QWORD PTR tv133[rsp]
  00244	48 8b 84 24 58
	01 00 00	 mov	 rax, QWORD PTR tv168[rsp]
  0024c	ff 50 20	 call	 QWORD PTR [rax+32]
  0024f	90		 npad	 1
  00250	48 8d 8c 24 f0
	00 00 00	 lea	 rcx, QWORD PTR $T11[rsp]
  00258	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0025d	90		 npad	 1
  0025e	48 8d 8c 24 c8
	00 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  00266	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0026b	90		 npad	 1
  0026c	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00274	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN7@AddMessage:

; 168  :             }
; 169  :         }

  00279	e9 7c fe ff ff	 jmp	 $LN2@AddMessage
$LN3@AddMessage:

; 170  :     }

  0027e	48 8d 4c 24 28	 lea	 rcx, QWORD PTR lines$[rsp]
  00283	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
$LN1@AddMessage:
  00288	48 8b cc	 mov	 rcx, rsp
  0028b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z$rtcFrameData
  00292	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00297	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0029f	48 33 cc	 xor	 rcx, rsp
  002a2	e8 00 00 00 00	 call	 __security_check_cookie
  002a7	48 81 c4 70 01
	00 00		 add	 rsp, 368		; 00000170H
  002ae	5f		 pop	 rdi
  002af	c3		 ret	 0
?AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; RGYInput::AddMessage
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR lines$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$3
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR $T4[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR lines$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$2@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$3@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
lines$ = 40
$T4 = 88
<range>$L0$5 = 128
<begin>$L0$6 = 136
<end>$L0$7 = 144
line$8 = 152
$T9 = 160
$T10 = 200
$T11 = 240
tv133 = 288
tv76 = 296
tv162 = 304
tv79 = 312
tv164 = 320
tv167 = 328
tv166 = 336
tv168 = 344
__$ArrayPad$ = 352
this$ = 384
log_level$ = 392
str$ = 400
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA PROC ; `RGYInput::AddMessage'::`1'::dtor$4
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR $T11[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$4@?0??AddMessage@RGYInput@@QEAAXHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@4HA ENDP ; `RGYInput::AddMessage'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetDataTrackCount@RGYInput@@UEAAHXZ
_TEXT	SEGMENT
this$ = 16
?GetDataTrackCount@RGYInput@@UEAAHXZ PROC		; RGYInput::GetDataTrackCount, COMDAT

; 153  :     virtual int GetDataTrackCount() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 154  :         return 0;

  00006	33 c0		 xor	 eax, eax

; 155  :     }

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?GetDataTrackCount@RGYInput@@UEAAHXZ ENDP		; RGYInput::GetDataTrackCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetSubtitleTrackCount@RGYInput@@UEAAHXZ
_TEXT	SEGMENT
this$ = 16
?GetSubtitleTrackCount@RGYInput@@UEAAHXZ PROC		; RGYInput::GetSubtitleTrackCount, COMDAT

; 149  :     virtual int GetSubtitleTrackCount() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 150  :         return 0;

  00006	33 c0		 xor	 eax, eax

; 151  :     }

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?GetSubtitleTrackCount@RGYInput@@UEAAHXZ ENDP		; RGYInput::GetSubtitleTrackCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetAudioTrackCount@RGYInput@@UEAAHXZ
_TEXT	SEGMENT
this$ = 16
?GetAudioTrackCount@RGYInput@@UEAAHXZ PROC		; RGYInput::GetAudioTrackCount, COMDAT

; 145  :     virtual int GetAudioTrackCount() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 146  :         return 0;

  00006	33 c0		 xor	 eax, eax

; 147  :     }

  00008	5f		 pop	 rdi
  00009	c3		 ret	 0
?GetAudioTrackCount@RGYInput@@UEAAHXZ ENDP		; RGYInput::GetAudioTrackCount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 48
?Close@RGYInput@@UEAAXXZ PROC				; RGYInput::Close

; 174  : void RGYInput::Close() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 175  :     AddMessage(RGY_LOG_DEBUG, _T("Closing...\n"));

  0001e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG132283
  00025	ba fe ff ff ff	 mov	 edx, -2
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002f	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 176  : 
; 177  :     m_pEncSatusInfo.reset();

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 83 c0 08	 add	 rax, 8
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ; std::shared_ptr<EncodeStatus>::reset

; 178  :     m_sConvert = nullptr;

  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??4?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAAAEAV01@$$T@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::operator=

; 179  : 
; 180  :     m_strInputInfo.empty();

  0005a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  00065	48 8b c8	 mov	 rcx, rax
  00068	e8 00 00 00 00	 call	 ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty

; 181  : 
; 182  :     m_sTrimParam.list.clear();

  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ ; std::vector<sTrim,std::allocator<sTrim> >::clear

; 183  :     m_sTrimParam.offset = 0;

  00080	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00085	c7 80 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+312], 0

; 184  :     AddMessage(RGY_LOG_DEBUG, _T("Close...\n"));

  0008f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG132284
  00096	ba fe ff ff ff	 mov	 edx, -2
  0009b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000a0	e8 00 00 00 00	 call	 ?AddMessage@RGYInput@@QEAAXHPEBDZZ ; RGYInput::AddMessage

; 185  :     m_pPrintMes.reset();

  000a5	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000aa	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  000b0	48 8b c8	 mov	 rcx, rax
  000b3	e8 00 00 00 00	 call	 ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ; std::shared_ptr<RGYLog>::reset

; 186  : }

  000b8	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
?Close@RGYInput@@UEAAXXZ ENDP				; RGYInput::Close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYInput::GetHeader, COMDAT

; 119  :     virtual RGY_ERR GetHeader(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 120  :         return RGY_ERR_NONE;

  0000b	33 c0		 xor	 eax, eax

; 121  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetHeader@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYInput::GetHeader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYInput::GetNextBitstreamNoDelete, COMDAT

; 114  :     virtual RGY_ERR GetNextBitstreamNoDelete(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 115  :         return RGY_ERR_NONE;

  0000b	33 c0		 xor	 eax, eax

; 116  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetNextBitstreamNoDelete@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYInput::GetNextBitstreamNoDelete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.h
;	COMDAT ?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z
_TEXT	SEGMENT
this$ = 16
pBitstream$ = 24
?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z PROC ; RGYInput::GetNextBitstream, COMDAT

; 109  :     virtual RGY_ERR GetNextBitstream(RGYBitstream *pBitstream) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 110  :         return RGY_ERR_NONE;

  0000b	33 c0		 xor	 eax, eax

; 111  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?GetNextBitstream@RGYInput@@UEAA?AW4RGY_ERR@@PEAURGYBitstream@@@Z ENDP ; RGYInput::GetNextBitstream
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 48
??1RGYInput@@UEAA@XZ PROC				; RGYInput::~RGYInput

; 170  : RGYInput::~RGYInput() {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYInput@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 171  :     Close();

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?Close@RGYInput@@UEAAXXZ ; RGYInput::Close
  00037	90		 npad	 1

; 172  : }

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??1sTrimParam@@QEAA@XZ
  0004b	90		 npad	 1
  0004c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0005f	90		 npad	 1
  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00065	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  0006b	48 8b c8	 mov	 rcx, rax
  0006e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00073	90		 npad	 1
  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  0007f	48 8b c8	 mov	 rcx, rax
  00082	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00087	90		 npad	 1
  00088	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008d	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00093	48 8b c8	 mov	 rcx, rax
  00096	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0009b	90		 npad	 1
  0009c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a1	48 83 c0 08	 add	 rax, 8
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  000ad	90		 npad	 1
  000ae	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b2	5f		 pop	 rdi
  000b3	c3		 ret	 0
??1RGYInput@@UEAA@XZ ENDP				; RGYInput::~RGYInput
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$0
this$ = 48
?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  00045	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0004a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$1
this$ = 48
?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$2
  00051	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00056	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005b	55		 push	 rbp
  0005c	57		 push	 rdi
  0005d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00061	48 8b ea	 mov	 rbp, rdx
  00064	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00068	48 81 c1 b8 00
	00 00		 add	 rcx, 184		; 000000b8H
  0006f	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$2
this$ = 48
?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$3
  0007b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00080	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00085	55		 push	 rbp
  00086	57		 push	 rdi
  00087	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0008b	48 8b ea	 mov	 rbp, rdx
  0008e	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00092	48 81 c1 c8 00
	00 00		 add	 rcx, 200		; 000000c8H
  00099	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$3
this$ = 48
?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$4
  000a5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000aa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000af	55		 push	 rbp
  000b0	57		 push	 rdi
  000b1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b5	48 8b ea	 mov	 rbp, rdx
  000b8	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000bc	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  000c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$4
this$ = 48
?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 81 c1 18 01
	00 00		 add	 rcx, 280		; 00000118H
  000ed	e8 00 00 00 00	 call	 ??1sTrimParam@@QEAA@XZ
  000f2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f6	5f		 pop	 rdi
  000f7	5d		 pop	 rbp
  000f8	c3		 ret	 0
?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  00045	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0004a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$1@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$2
  00051	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00056	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005b	55		 push	 rbp
  0005c	57		 push	 rdi
  0005d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00061	48 8b ea	 mov	 rbp, rdx
  00064	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00068	48 81 c1 b8 00
	00 00		 add	 rcx, 184		; 000000b8H
  0006f	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
?dtor$2@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$3
  0007b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00080	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00085	55		 push	 rbp
  00086	57		 push	 rdi
  00087	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0008b	48 8b ea	 mov	 rbp, rdx
  0008e	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00092	48 81 c1 c8 00
	00 00		 add	 rcx, 200		; 000000c8H
  00099	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?dtor$3@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$4
  000a5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000aa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000af	55		 push	 rbp
  000b0	57		 push	 rdi
  000b1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b5	48 8b ea	 mov	 rbp, rdx
  000b8	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000bc	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  000c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA PROC		; `RGYInput::~RGYInput'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 81 c1 18 01
	00 00		 add	 rcx, 280		; 00000118H
  000ed	e8 00 00 00 00	 call	 ??1sTrimParam@@QEAA@XZ
  000f2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f6	5f		 pop	 rdi
  000f7	5d		 pop	 rbp
  000f8	c3		 ret	 0
?dtor$5@?0???1RGYInput@@UEAA@XZ@4HA ENDP		; `RGYInput::~RGYInput'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 48
??0RGYInput@@QEAA@XZ PROC				; RGYInput::RGYInput

; 164  :     m_sTrimParam() {

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7RGYInput@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 157  :     m_pEncSatusInfo(),

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  0003e	90		 npad	 1

; 158  :     m_inputVideoInfo(),

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c0 18	 add	 rax, 24
  00048	48 8b f8	 mov	 rdi, rax
  0004b	33 c0		 xor	 eax, eax
  0004d	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00052	f3 aa		 rep stosb
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c0 18	 add	 rax, 24
  0005d	48 8b c8	 mov	 rcx, rax
  00060	e8 00 00 00 00	 call	 ??0VideoInfo@@QEAA@XZ

; 159  :     m_InputCsp(RGY_CSP_NA),

  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006a	c7 80 a8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+168], 0

; 160  :     m_sConvert(nullptr),

  00074	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00079	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  0007f	33 d2		 xor	 edx, edx
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ??$?0U?$default_delete@VRGYConvertCSP@@@std@@$0A@@?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@$$T@Z ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> ><std::default_delete<RGYConvertCSP>,0>
  00089	90		 npad	 1

; 161  :     m_pPrintMes(),

  0008a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0008f	48 05 b8 00 00
	00		 add	 rax, 184		; 000000b8H
  00095	48 8b c8	 mov	 rcx, rax
  00098	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  0009d	90		 npad	 1

; 162  :     m_strInputInfo(),

  0009e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a3	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  000a9	48 8b c8	 mov	 rcx, rax
  000ac	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b1	90		 npad	 1

; 163  :     m_strReaderName(_T("unknown")),

  000b2	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b7	48 05 f0 00 00
	00		 add	 rax, 240		; 000000f0H
  000bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG132264
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000cc	90		 npad	 1

; 164  :     m_sTrimParam() {

  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000d2	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000e9	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  000ef	48 8b c8	 mov	 rcx, rax
  000f2	e8 00 00 00 00	 call	 ??0sTrimParam@@QEAA@XZ
  000f7	90		 npad	 1

; 165  :     m_sTrimParam.list.clear();

  000f8	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000fd	48 05 18 01 00
	00		 add	 rax, 280		; 00000118H
  00103	48 8b c8	 mov	 rcx, rax
  00106	e8 00 00 00 00	 call	 ?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ ; std::vector<sTrim,std::allocator<sTrim> >::clear

; 166  :     m_sTrimParam.offset = 0;

  0010b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00110	c7 80 38 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+312], 0

; 167  :     memset(&m_inputVideoInfo, 0, sizeof(m_inputVideoInfo));

  0011a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0011f	48 83 c0 18	 add	 rax, 24
  00123	41 b8 90 00 00
	00		 mov	 r8d, 144		; 00000090H
  00129	33 d2		 xor	 edx, edx
  0012b	48 8b c8	 mov	 rcx, rax
  0012e	e8 00 00 00 00	 call	 memset
  00133	90		 npad	 1

; 168  : }

  00134	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00139	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0013d	5f		 pop	 rdi
  0013e	c3		 ret	 0
??0RGYInput@@QEAA@XZ ENDP				; RGYInput::RGYInput
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$0
this$ = 48
?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  00045	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0004a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$1
this$ = 48
?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$2
  00051	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00056	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005b	55		 push	 rbp
  0005c	57		 push	 rdi
  0005d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00061	48 8b ea	 mov	 rbp, rdx
  00064	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00068	48 81 c1 b8 00
	00 00		 add	 rcx, 184		; 000000b8H
  0006f	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$2
this$ = 48
?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$3
  0007b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00080	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00085	55		 push	 rbp
  00086	57		 push	 rdi
  00087	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0008b	48 8b ea	 mov	 rbp, rdx
  0008e	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00092	48 81 c1 c8 00
	00 00		 add	 rcx, 200		; 000000c8H
  00099	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$3
this$ = 48
?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$4
  000a5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000aa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000af	55		 push	 rbp
  000b0	57		 push	 rdi
  000b1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b5	48 8b ea	 mov	 rbp, rdx
  000b8	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000bc	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  000c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$4
this$ = 48
?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 81 c1 18 01
	00 00		 add	 rcx, 280		; 00000118H
  000ed	e8 00 00 00 00	 call	 ??1sTrimParam@@QEAA@XZ
  000f2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f6	5f		 pop	 rdi
  000f7	5d		 pop	 rbp
  000f8	c3		 ret	 0
?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H
  00045	e8 00 00 00 00	 call	 ??1?$unique_ptr@VRGYConvertCSP@@U?$default_delete@VRGYConvertCSP@@@std@@@std@@QEAA@XZ ; std::unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >::~unique_ptr<RGYConvertCSP,std::default_delete<RGYConvertCSP> >
  0004a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?dtor$1@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$2
  00051	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00056	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005b	55		 push	 rbp
  0005c	57		 push	 rdi
  0005d	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00061	48 8b ea	 mov	 rbp, rdx
  00064	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00068	48 81 c1 b8 00
	00 00		 add	 rcx, 184		; 000000b8H
  0006f	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00074	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
?dtor$2@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$3
  0007b	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00080	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00085	55		 push	 rbp
  00086	57		 push	 rdi
  00087	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0008b	48 8b ea	 mov	 rbp, rdx
  0008e	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00092	48 81 c1 c8 00
	00 00		 add	 rcx, 200		; 000000c8H
  00099	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?dtor$3@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$4
  000a5	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000aa	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000af	55		 push	 rbp
  000b0	57		 push	 rdi
  000b1	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000b5	48 8b ea	 mov	 rbp, rdx
  000b8	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000bc	48 81 c1 f0 00
	00 00		 add	 rcx, 240		; 000000f0H
  000c3	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c8	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
?dtor$4@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$4
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA PROC		; `RGYInput::RGYInput'::`1'::dtor$5
  000cf	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000d4	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000d9	55		 push	 rbp
  000da	57		 push	 rdi
  000db	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000df	48 8b ea	 mov	 rbp, rdx
  000e2	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 81 c1 18 01
	00 00		 add	 rcx, 280		; 00000118H
  000ed	e8 00 00 00 00	 call	 ??1sTrimParam@@QEAA@XZ
  000f2	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000f6	5f		 pop	 rdi
  000f7	5d		 pop	 rbp
  000f8	c3		 ret	 0
?dtor$5@?0???0RGYInput@@QEAA@XZ@4HA ENDP		; `RGYInput::RGYInput'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GRGYConvertCSP@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GRGYConvertCSP@@QEAAPEAXI@Z PROC			; RGYConvertCSP::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1RGYConvertCSP@@QEAA@XZ ; RGYConvertCSP::~RGYConvertCSP
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba d8 00 00 00	 mov	 edx, 216		; 000000d8H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_GRGYConvertCSP@@QEAAPEAXI@Z ENDP			; RGYConvertCSP::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z PROC ; RGYConvertCSP::run

; 105  : int RGYConvertCSP::run(int interlaced, void **dst, const void **src, int width, int src_y_pitch_byte, int src_uv_pitch_byte, int dst_y_pitch_byte, int height, int dst_height, int *crop) {

$LN21:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	56		 push	 rsi
  00014	57		 push	 rdi
  00015	48 81 ec 78 02
	00 00		 sub	 rsp, 632		; 00000278H
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 9e 00 00 00	 mov	 ecx, 158		; 0000009eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR [rsp+656]
  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003a	48 33 c4	 xor	 rax, rsp
  0003d	48 89 84 24 68
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 106  :     if (m_threads == 0) {

  00045	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	83 78 14 00	 cmp	 DWORD PTR [rax+20], 0
  00051	0f 85 f5 00 00
	00		 jne	 $LN8@run

; 107  :         const int div = (m_csp->simd == 0) ? 2 : 4;

  00057	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0005f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00062	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  00066	75 0d		 jne	 SHORT $LN12@run
  00068	c7 84 24 18 02
	00 00 02 00 00
	00		 mov	 DWORD PTR tv69[rsp], 2
  00073	eb 0b		 jmp	 SHORT $LN13@run
$LN12@run:
  00075	c7 84 24 18 02
	00 00 04 00 00
	00		 mov	 DWORD PTR tv69[rsp], 4
$LN13@run:
  00080	8b 84 24 18 02
	00 00		 mov	 eax, DWORD PTR tv69[rsp]
  00087	89 44 24 60	 mov	 DWORD PTR div$6[rsp], eax

; 108  :         const int max = (m_csp->simd == 0) ? 8 : 4;

  0008b	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00093	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00096	83 78 20 00	 cmp	 DWORD PTR [rax+32], 0
  0009a	75 0d		 jne	 SHORT $LN14@run
  0009c	c7 84 24 1c 02
	00 00 08 00 00
	00		 mov	 DWORD PTR tv73[rsp], 8
  000a7	eb 0b		 jmp	 SHORT $LN15@run
$LN14@run:
  000a9	c7 84 24 1c 02
	00 00 04 00 00
	00		 mov	 DWORD PTR tv73[rsp], 4
$LN15@run:
  000b4	8b 84 24 1c 02
	00 00		 mov	 eax, DWORD PTR tv73[rsp]
  000bb	89 44 24 74	 mov	 DWORD PTR max$7[rsp], eax

; 109  :         m_threads = (dst_y_pitch_byte % 128 != 0) ? 1 : std::min(max, ((int)get_cpu_info().physical_cores + div) / div);

  000bf	8b 84 24 c8 02
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  000c6	99		 cdq
  000c7	83 e2 7f	 and	 edx, 127		; 0000007fH
  000ca	03 c2		 add	 eax, edx
  000cc	83 e0 7f	 and	 eax, 127		; 0000007fH
  000cf	2b c2		 sub	 eax, edx
  000d1	85 c0		 test	 eax, eax
  000d3	74 0d		 je	 SHORT $LN16@run
  000d5	c7 84 24 20 02
	00 00 01 00 00
	00		 mov	 DWORD PTR tv85[rsp], 1
  000e0	eb 58		 jmp	 SHORT $LN17@run
$LN16@run:
  000e2	48 8d 8c 24 60
	01 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  000ea	e8 00 00 00 00	 call	 ?get_cpu_info@@YA?AUcpu_info_t@@XZ ; get_cpu_info
  000ef	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T8[rsp]
  000f7	48 8b f9	 mov	 rdi, rcx
  000fa	48 8b f0	 mov	 rsi, rax
  000fd	b9 70 00 00 00	 mov	 ecx, 112		; 00000070H
  00102	f3 a4		 rep movsb
  00104	8b 44 24 60	 mov	 eax, DWORD PTR div$6[rsp]
  00108	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR $T8[rsp+4]
  0010f	03 c8		 add	 ecx, eax
  00111	8b c1		 mov	 eax, ecx
  00113	99		 cdq
  00114	f7 7c 24 60	 idiv	 DWORD PTR div$6[rsp]
  00118	89 84 24 58 01
	00 00		 mov	 DWORD PTR $T13[rsp], eax
  0011f	48 8d 94 24 58
	01 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  00127	48 8d 4c 24 74	 lea	 rcx, QWORD PTR max$7[rsp]
  0012c	e8 00 00 00 00	 call	 ??$min@H@std@@YAAEBHAEBH0@Z ; std::min<int>
  00131	8b 00		 mov	 eax, DWORD PTR [rax]
  00133	89 84 24 20 02
	00 00		 mov	 DWORD PTR tv85[rsp], eax
$LN17@run:
  0013a	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00142	8b 8c 24 20 02
	00 00		 mov	 ecx, DWORD PTR tv85[rsp]
  00149	89 48 14	 mov	 DWORD PTR [rax+20], ecx
$LN8@run:

; 110  :     }
; 111  :     if (m_threads > 1 && m_th.size() == 0) {

  0014c	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00154	83 78 14 01	 cmp	 DWORD PTR [rax+20], 1
  00158	0f 8e 5b 02 00
	00		 jle	 $LN9@run
  0015e	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00166	48 83 c0 18	 add	 rax, 24
  0016a	48 8b c8	 mov	 rcx, rax
  0016d	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  00172	48 85 c0	 test	 rax, rax
  00175	0f 85 3e 02 00
	00		 jne	 $LN9@run

; 112  :         m_heFinCopy.clear();

  0017b	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00183	48 83 c0 78	 add	 rax, 120		; 00000078H
  00187	48 8b c8	 mov	 rcx, rax
  0018a	e8 00 00 00 00	 call	 ?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ ; std::vector<void *,std::allocator<void *> >::clear

; 113  :         m_heStart.clear();

  0018f	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00197	48 83 c0 38	 add	 rax, 56			; 00000038H
  0019b	48 8b c8	 mov	 rcx, rax
  0019e	e8 00 00 00 00	 call	 ?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear

; 114  :         m_heFin.clear();

  001a3	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001ab	48 83 c0 58	 add	 rax, 88			; 00000058H
  001af	48 8b c8	 mov	 rcx, rax
  001b2	e8 00 00 00 00	 call	 ?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear

; 115  :         for (int ith = 1; ith < m_threads; ith++) {

  001b7	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR ith$9[rsp], 1
  001c2	eb 10		 jmp	 SHORT $LN4@run
$LN2@run:
  001c4	8b 84 24 00 01
	00 00		 mov	 eax, DWORD PTR ith$9[rsp]
  001cb	ff c0		 inc	 eax
  001cd	89 84 24 00 01
	00 00		 mov	 DWORD PTR ith$9[rsp], eax
$LN4@run:
  001d4	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  001dc	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  001df	39 84 24 00 01
	00 00		 cmp	 DWORD PTR ith$9[rsp], eax
  001e6	0f 8d cd 01 00
	00		 jge	 $LN9@run

; 116  :             auto heStart = std::unique_ptr<void, handle_deleter>(CreateEvent(nullptr, false, false, nullptr), handle_deleter());

  001ec	45 33 c9	 xor	 r9d, r9d
  001ef	45 33 c0	 xor	 r8d, r8d
  001f2	33 d2		 xor	 edx, edx
  001f4	33 c9		 xor	 ecx, ecx
  001f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateEventA
  001fc	4c 8d 84 24 d0
	01 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  00204	48 8b d0	 mov	 rdx, rax
  00207	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR heStart$10[rsp]
  0020f	e8 00 00 00 00	 call	 ??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
  00214	90		 npad	 1

; 117  :             auto heFin = std::unique_ptr<void, handle_deleter>(CreateEvent(nullptr, false, false, nullptr), handle_deleter());

  00215	45 33 c9	 xor	 r9d, r9d
  00218	45 33 c0	 xor	 r8d, r8d
  0021b	33 d2		 xor	 edx, edx
  0021d	33 c9		 xor	 ecx, ecx
  0021f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateEventA
  00225	4c 8d 84 24 d1
	01 00 00	 lea	 r8, QWORD PTR $T16[rsp]
  0022d	48 8b d0	 mov	 rdx, rax
  00230	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR heFin$11[rsp]
  00238	e8 00 00 00 00	 call	 ??$?0Uhandle_deleter@@$0A@@?$unique_ptr@XUhandle_deleter@@@std@@QEAA@PEAX$$QEAUhandle_deleter@@@Z ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter><handle_deleter,0>
  0023d	90		 npad	 1

; 118  :             m_th.push_back(std::thread([heStart = heStart.get(), heFin = heFin.get(), ithId = ith, threadN = m_threads, prm = &m_prm, cspfunc = &m_csp]() {

  0023e	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00246	48 89 84 24 28
	02 00 00	 mov	 QWORD PTR tv159[rsp], rax
  0024e	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00256	48 81 c1 98 00
	00 00		 add	 rcx, 152		; 00000098H
  0025d	48 89 8c 24 30
	02 00 00	 mov	 QWORD PTR tv161[rsp], rcx
  00265	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR heFin$11[rsp]
  0026d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
  00272	48 89 84 24 38
	02 00 00	 mov	 QWORD PTR tv167[rsp], rax
  0027a	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR heStart$10[rsp]
  00282	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
  00287	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR tv159[rsp]
  0028f	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00294	48 8b 8c 24 30
	02 00 00	 mov	 rcx, QWORD PTR tv161[rsp]
  0029c	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  002a1	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  002a9	8b 49 14	 mov	 ecx, DWORD PTR [rcx+20]
  002ac	89 4c 24 20	 mov	 DWORD PTR [rsp+32], ecx
  002b0	44 8b 8c 24 00
	01 00 00	 mov	 r9d, DWORD PTR ith$9[rsp]
  002b8	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR tv167[rsp]
  002c0	4c 8b c1	 mov	 r8, rcx
  002c3	48 8b d0	 mov	 rdx, rax
  002c6	48 8d 8c 24 e8
	01 00 00	 lea	 rcx, QWORD PTR $T18[rsp]
  002ce	e8 00 00 00 00	 call	 ??0<lambda_7d02ae0d862af7151d39e7a5bd162218>@@QEAA@PEAX0HHPEAURGYConvertCSPPrm@@PEAPEBUConvertCSP@@@Z ; <lambda_7d02ae0d862af7151d39e7a5bd162218>::<lambda_7d02ae0d862af7151d39e7a5bd162218>
  002d3	48 8b d0	 mov	 rdx, rax
  002d6	48 8d 8c 24 d8
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  002de	e8 00 00 00 00	 call	 ??$?0V<lambda_7d02ae0d862af7151d39e7a5bd162218>@@$$VX@thread@std@@QEAA@$$QEAV<lambda_7d02ae0d862af7151d39e7a5bd162218>@@@Z ; std::thread::thread<<lambda_7d02ae0d862af7151d39e7a5bd162218>,void>
  002e3	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR tv144[rsp], rax
  002eb	48 8b 84 24 40
	02 00 00	 mov	 rax, QWORD PTR tv144[rsp]
  002f3	48 89 84 24 48
	02 00 00	 mov	 QWORD PTR tv264[rsp], rax
  002fb	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00303	48 83 c0 18	 add	 rax, 24
  00307	48 8b 94 24 48
	02 00 00	 mov	 rdx, QWORD PTR tv264[rsp]
  0030f	48 8b c8	 mov	 rcx, rax
  00312	e8 00 00 00 00	 call	 ?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z ; std::vector<std::thread,std::allocator<std::thread> >::push_back
  00317	90		 npad	 1
  00318	48 8d 8c 24 d8
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  00320	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread

; 119  :                 WaitForSingleObject((HANDLE)heStart, INFINITE);
; 120  :                 while (!prm->abort) {
; 121  :                     (*cspfunc)->func[prm->interlaced](prm->dst, prm->src,
; 122  :                         prm->width, prm->src_y_pitch_byte, prm->src_uv_pitch_byte, prm->dst_y_pitch_byte,
; 123  :                         prm->height, prm->dst_height, ithId, threadN, prm->crop);
; 124  :                     SetEvent((HANDLE)heFin);
; 125  :                     WaitForSingleObject((HANDLE)heStart, INFINITE);
; 126  :                 }
; 127  :             }));
; 128  :             m_heFinCopy.push_back(heFin.get());

  00325	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR heFin$11[rsp]
  0032d	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
  00332	48 89 84 24 10
	02 00 00	 mov	 QWORD PTR $T19[rsp], rax
  0033a	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00342	48 83 c0 78	 add	 rax, 120		; 00000078H
  00346	48 8d 94 24 10
	02 00 00	 lea	 rdx, QWORD PTR $T19[rsp]
  0034e	48 8b c8	 mov	 rcx, rax
  00351	e8 00 00 00 00	 call	 ?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::push_back

; 129  :             m_heStart.push_back(std::move(heStart));

  00356	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR heStart$10[rsp]
  0035e	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
  00363	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0036b	48 83 c1 38	 add	 rcx, 56			; 00000038H
  0036f	48 8b d0	 mov	 rdx, rax
  00372	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::push_back

; 130  :             m_heFin.push_back(std::move(heFin));

  00377	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR heFin$11[rsp]
  0037f	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
  00384	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0038c	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00390	48 8b d0	 mov	 rdx, rax
  00393	e8 00 00 00 00	 call	 ?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::push_back
  00398	90		 npad	 1

; 131  :         }

  00399	48 8d 8c 24 38
	01 00 00	 lea	 rcx, QWORD PTR heFin$11[rsp]
  003a1	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  003a6	90		 npad	 1
  003a7	48 8d 8c 24 18
	01 00 00	 lea	 rcx, QWORD PTR heStart$10[rsp]
  003af	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  003b4	e9 0b fe ff ff	 jmp	 $LN2@run
$LN9@run:

; 132  :     }
; 133  :     m_prm.abort = false;

  003b9	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003c1	c6 80 98 00 00
	00 00		 mov	 BYTE PTR [rax+152], 0

; 134  :     m_prm.interlaced = interlaced;

  003c8	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003d0	8b 8c 24 98 02
	00 00		 mov	 ecx, DWORD PTR interlaced$[rsp]
  003d7	89 88 b0 00 00
	00		 mov	 DWORD PTR [rax+176], ecx

; 135  :     m_prm.dst = dst;

  003dd	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003e5	48 8b 8c 24 a0
	02 00 00	 mov	 rcx, QWORD PTR dst$[rsp]
  003ed	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 136  :     m_prm.src = src;

  003f4	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  003fc	48 8b 8c 24 a8
	02 00 00	 mov	 rcx, QWORD PTR src$[rsp]
  00404	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx

; 137  :     m_prm.width = width;

  0040b	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00413	8b 8c 24 b0 02
	00 00		 mov	 ecx, DWORD PTR width$[rsp]
  0041a	89 88 b4 00 00
	00		 mov	 DWORD PTR [rax+180], ecx

; 138  :     m_prm.src_y_pitch_byte = src_y_pitch_byte;

  00420	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00428	8b 8c 24 b8 02
	00 00		 mov	 ecx, DWORD PTR src_y_pitch_byte$[rsp]
  0042f	89 88 b8 00 00
	00		 mov	 DWORD PTR [rax+184], ecx

; 139  :     m_prm.src_uv_pitch_byte = src_uv_pitch_byte;

  00435	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0043d	8b 8c 24 c0 02
	00 00		 mov	 ecx, DWORD PTR src_uv_pitch_byte$[rsp]
  00444	89 88 bc 00 00
	00		 mov	 DWORD PTR [rax+188], ecx

; 140  :     m_prm.dst_y_pitch_byte = dst_y_pitch_byte;

  0044a	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00452	8b 8c 24 c8 02
	00 00		 mov	 ecx, DWORD PTR dst_y_pitch_byte$[rsp]
  00459	89 88 c0 00 00
	00		 mov	 DWORD PTR [rax+192], ecx

; 141  :     m_prm.height = height;

  0045f	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00467	8b 8c 24 d0 02
	00 00		 mov	 ecx, DWORD PTR height$[rsp]
  0046e	89 88 c4 00 00
	00		 mov	 DWORD PTR [rax+196], ecx

; 142  :     m_prm.dst_height = dst_height;

  00474	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0047c	8b 8c 24 d8 02
	00 00		 mov	 ecx, DWORD PTR dst_height$[rsp]
  00483	89 88 c8 00 00
	00		 mov	 DWORD PTR [rax+200], ecx

; 143  :     m_prm.crop = crop;

  00489	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00491	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR crop$[rsp]
  00499	48 89 88 d0 00
	00 00		 mov	 QWORD PTR [rax+208], rcx

; 144  :     for (size_t i = 0; i < m_heStart.size(); i++) {

  004a0	48 c7 84 24 48
	01 00 00 00 00
	00 00		 mov	 QWORD PTR i$12[rsp], 0
  004ac	eb 13		 jmp	 SHORT $LN7@run
$LN5@run:
  004ae	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR i$12[rsp]
  004b6	48 ff c0	 inc	 rax
  004b9	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR i$12[rsp], rax
$LN7@run:
  004c1	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004c9	48 83 c0 38	 add	 rax, 56			; 00000038H
  004cd	48 8b c8	 mov	 rcx, rax
  004d0	e8 00 00 00 00	 call	 ?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::size
  004d5	48 39 84 24 48
	01 00 00	 cmp	 QWORD PTR i$12[rsp], rax
  004dd	73 2f		 jae	 SHORT $LN6@run

; 145  :         SetEvent(m_heStart[i].get());

  004df	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  004e7	48 83 c0 38	 add	 rax, 56			; 00000038H
  004eb	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR i$12[rsp]
  004f3	48 8b c8	 mov	 rcx, rax
  004f6	e8 00 00 00 00	 call	 ??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::operator[]
  004fb	48 8b c8	 mov	 rcx, rax
  004fe	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
  00503	48 8b c8	 mov	 rcx, rax
  00506	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent

; 146  :     }

  0050c	eb a0		 jmp	 SHORT $LN5@run
$LN6@run:

; 147  :     m_csp->func[interlaced](dst, src,

  0050e	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00516	48 83 c0 18	 add	 rax, 24
  0051a	48 8b c8	 mov	 rcx, rax
  0051d	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  00522	ff c0		 inc	 eax
  00524	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0052c	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0052f	48 89 8c 24 50
	02 00 00	 mov	 QWORD PTR tv134[rsp], rcx
  00537	48 63 94 24 98
	02 00 00	 movsxd	 rdx, DWORD PTR interlaced$[rsp]
  0053f	48 89 94 24 58
	02 00 00	 mov	 QWORD PTR tv227[rsp], rdx
  00547	48 8b bc 24 e0
	02 00 00	 mov	 rdi, QWORD PTR crop$[rsp]
  0054f	48 89 7c 24 50	 mov	 QWORD PTR [rsp+80], rdi
  00554	89 44 24 48	 mov	 DWORD PTR [rsp+72], eax
  00558	c7 44 24 40 00
	00 00 00	 mov	 DWORD PTR [rsp+64], 0
  00560	8b 84 24 d8 02
	00 00		 mov	 eax, DWORD PTR dst_height$[rsp]
  00567	89 44 24 38	 mov	 DWORD PTR [rsp+56], eax
  0056b	8b 84 24 d0 02
	00 00		 mov	 eax, DWORD PTR height$[rsp]
  00572	89 44 24 30	 mov	 DWORD PTR [rsp+48], eax
  00576	8b 84 24 c8 02
	00 00		 mov	 eax, DWORD PTR dst_y_pitch_byte$[rsp]
  0057d	89 44 24 28	 mov	 DWORD PTR [rsp+40], eax
  00581	8b 84 24 c0 02
	00 00		 mov	 eax, DWORD PTR src_uv_pitch_byte$[rsp]
  00588	89 44 24 20	 mov	 DWORD PTR [rsp+32], eax
  0058c	44 8b 8c 24 b8
	02 00 00	 mov	 r9d, DWORD PTR src_y_pitch_byte$[rsp]
  00594	44 8b 84 24 b0
	02 00 00	 mov	 r8d, DWORD PTR width$[rsp]
  0059c	48 8b 94 24 a8
	02 00 00	 mov	 rdx, QWORD PTR src$[rsp]
  005a4	48 8b 8c 24 a0
	02 00 00	 mov	 rcx, QWORD PTR dst$[rsp]
  005ac	48 8b bc 24 58
	02 00 00	 mov	 rdi, QWORD PTR tv227[rsp]
  005b4	48 8b 84 24 50
	02 00 00	 mov	 rax, QWORD PTR tv134[rsp]
  005bc	ff 54 f8 10	 call	 QWORD PTR [rax+rdi*8+16]

; 148  :         width, src_y_pitch_byte, src_uv_pitch_byte, dst_y_pitch_byte,
; 149  :         height, dst_height, 0, (int)m_th.size()+1, crop);
; 150  :     if (m_th.size() > 0) {

  005c0	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005c8	48 83 c0 18	 add	 rax, 24
  005cc	48 8b c8	 mov	 rcx, rax
  005cf	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  005d4	48 85 c0	 test	 rax, rax
  005d7	76 4c		 jbe	 SHORT $LN10@run

; 151  :         WaitForMultipleObjects((uint32_t)m_heFinCopy.size(), m_heFinCopy.data(), TRUE, INFINITE);

  005d9	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR this$[rsp]
  005e1	48 83 c0 78	 add	 rax, 120		; 00000078H
  005e5	48 8b c8	 mov	 rcx, rax
  005e8	e8 00 00 00 00	 call	 ?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ ; std::vector<void *,std::allocator<void *> >::data
  005ed	48 89 84 24 60
	02 00 00	 mov	 QWORD PTR tv255[rsp], rax
  005f5	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  005fd	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00601	e8 00 00 00 00	 call	 ?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::size
  00606	41 b9 ff ff ff
	ff		 mov	 r9d, -1			; ffffffffH
  0060c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00612	48 8b 8c 24 60
	02 00 00	 mov	 rcx, QWORD PTR tv255[rsp]
  0061a	48 8b d1	 mov	 rdx, rcx
  0061d	8b c8		 mov	 ecx, eax
  0061f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WaitForMultipleObjects
$LN10@run:

; 152  :     }
; 153  :     return 0;

  00625	33 c0		 xor	 eax, eax

; 154  : }

  00627	8b f8		 mov	 edi, eax
  00629	48 8b cc	 mov	 rcx, rsp
  0062c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z$rtcFrameData
  00633	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00638	8b c7		 mov	 eax, edi
  0063a	48 8b 8c 24 68
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00642	48 33 cc	 xor	 rcx, rsp
  00645	e8 00 00 00 00	 call	 __security_check_cookie
  0064a	48 81 c4 78 02
	00 00		 add	 rsp, 632		; 00000278H
  00651	5f		 pop	 rdi
  00652	5e		 pop	 rsi
  00653	c3		 ret	 0
?run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z ENDP ; RGYConvertCSP::run
_TEXT	ENDS
text$x	SEGMENT
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA PROC ; `RGYConvertCSP::run'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR heStart$10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA ENDP ; `RGYConvertCSP::run'::`1'::dtor$0
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA PROC ; `RGYConvertCSP::run'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR heFin$11[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA ENDP ; `RGYConvertCSP::run'::`1'::dtor$1
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA PROC ; `RGYConvertCSP::run'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8d 8d d8 01
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00066	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA ENDP ; `RGYConvertCSP::run'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA PROC ; `RGYConvertCSP::run'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR heStart$10[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA ENDP ; `RGYConvertCSP::run'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA PROC ; `RGYConvertCSP::run'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR heFin$11[rbp]
  00040	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?dtor$1@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA ENDP ; `RGYConvertCSP::run'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
div$6 = 96
max$7 = 116
$T8 = 144
ith$9 = 256
heStart$10 = 280
heFin$11 = 312
i$12 = 328
$T13 = 344
$T14 = 352
$T15 = 464
$T16 = 465
$T17 = 472
$T18 = 488
$T19 = 528
tv69 = 536
tv73 = 540
tv85 = 544
tv159 = 552
tv161 = 560
tv167 = 568
tv144 = 576
tv264 = 584
tv134 = 592
tv227 = 600
tv255 = 608
__$ArrayPad$ = 616
this$ = 656
interlaced$ = 664
dst$ = 672
src$ = 680
width$ = 688
src_y_pitch_byte$ = 696
src_uv_pitch_byte$ = 704
dst_y_pitch_byte$ = 712
height$ = 720
dst_height$ = 728
crop$ = 736
?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA PROC ; `RGYConvertCSP::run'::`1'::dtor$2
  0004c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00051	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00056	55		 push	 rbp
  00057	57		 push	 rdi
  00058	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005c	48 8b ea	 mov	 rbp, rdx
  0005f	48 8d 8d d8 01
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00066	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0006b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?dtor$2@?0??run@RGYConvertCSP@@QEAAHHPEAPEAXPEAPEBXHHHHHHPEAH@Z@4HA ENDP ; `RGYConvertCSP::run'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 48
csp_from$ = 56
csp_to$ = 64
uv_only$ = 72
simd$ = 80
?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z PROC ; RGYConvertCSP::getFunc

; 94   : const ConvertCSP *RGYConvertCSP::getFunc(RGY_CSP csp_from, RGY_CSP csp_to, bool uv_only, uint32_t simd) {

$LN6:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	57		 push	 rdi
  00014	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 08 00 00 00	 mov	 ecx, 8
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 95   :     if (m_csp == nullptr
; 96   :         || (m_csp_from != csp_from || m_csp_to != csp_to || m_uv_only != uv_only)) {

  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00035	74 2e		 je	 SHORT $LN3@getFunc
  00037	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003c	8b 4c 24 38	 mov	 ecx, DWORD PTR csp_from$[rsp]
  00040	39 48 08	 cmp	 DWORD PTR [rax+8], ecx
  00043	75 20		 jne	 SHORT $LN4@getFunc
  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	8b 4c 24 40	 mov	 ecx, DWORD PTR csp_to$[rsp]
  0004e	39 48 0c	 cmp	 DWORD PTR [rax+12], ecx
  00051	75 12		 jne	 SHORT $LN4@getFunc
  00053	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00058	0f b6 40 10	 movzx	 eax, BYTE PTR [rax+16]
  0005c	0f b6 4c 24 48	 movzx	 ecx, BYTE PTR uv_only$[rsp]
  00061	3b c1		 cmp	 eax, ecx
  00063	74 45		 je	 SHORT $LN2@getFunc
$LN4@getFunc:
$LN3@getFunc:

; 97   :         m_csp_from = csp_from;

  00065	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0006a	8b 4c 24 38	 mov	 ecx, DWORD PTR csp_from$[rsp]
  0006e	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 98   :         m_csp_to = csp_to;

  00071	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00076	8b 4c 24 40	 mov	 ecx, DWORD PTR csp_to$[rsp]
  0007a	89 48 0c	 mov	 DWORD PTR [rax+12], ecx

; 99   :         m_uv_only = uv_only;

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00082	0f b6 4c 24 48	 movzx	 ecx, BYTE PTR uv_only$[rsp]
  00087	88 48 10	 mov	 BYTE PTR [rax+16], cl

; 100  :         m_csp = get_convert_csp_func(csp_from, csp_to, uv_only, simd);

  0008a	44 8b 4c 24 50	 mov	 r9d, DWORD PTR simd$[rsp]
  0008f	44 0f b6 44 24
	48		 movzx	 r8d, BYTE PTR uv_only$[rsp]
  00095	8b 54 24 40	 mov	 edx, DWORD PTR csp_to$[rsp]
  00099	8b 4c 24 38	 mov	 ecx, DWORD PTR csp_from$[rsp]
  0009d	e8 00 00 00 00	 call	 ?get_convert_csp_func@@YAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z ; get_convert_csp_func
  000a2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  000a7	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN2@getFunc:

; 101  :     }
; 102  :     return m_csp;

  000aa	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000af	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 103  : }

  000b2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
?getFunc@RGYConvertCSP@@QEAAPEBUConvertCSP@@W4RGY_CSP@@0_NI@Z ENDP ; RGYConvertCSP::getFunc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
i$1 = 32
i$2 = 40
this$ = 64
??1RGYConvertCSP@@QEAA@XZ PROC				; RGYConvertCSP::~RGYConvertCSP

; 81   : RGYConvertCSP::~RGYConvertCSP() {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 82   :     m_prm.abort = true;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	c6 80 98 00 00
	00 01		 mov	 BYTE PTR [rax+152], 1

; 83   :     for (size_t i = 0; i < m_heStart.size(); i++) {

  0002a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR i$1[rsp], 0
  00033	eb 0d		 jmp	 SHORT $LN4@RGYConvert
$LN2@RGYConvert:
  00035	48 8b 44 24 20	 mov	 rax, QWORD PTR i$1[rsp]
  0003a	48 ff c0	 inc	 rax
  0003d	48 89 44 24 20	 mov	 QWORD PTR i$1[rsp], rax
$LN4@RGYConvert:
  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c0 38	 add	 rax, 56			; 00000038H
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::size
  00053	90		 npad	 1
  00054	48 39 44 24 20	 cmp	 QWORD PTR i$1[rsp], rax
  00059	73 2c		 jae	 SHORT $LN3@RGYConvert

; 84   :         SetEvent(m_heStart[i].get());

  0005b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00060	48 83 c0 38	 add	 rax, 56			; 00000038H
  00064	48 8b 54 24 20	 mov	 rdx, QWORD PTR i$1[rsp]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::operator[]
  00071	90		 npad	 1
  00072	48 8b c8	 mov	 rcx, rax
  00075	e8 00 00 00 00	 call	 ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ; std::unique_ptr<void,handle_deleter>::get
  0007a	90		 npad	 1
  0007b	48 8b c8	 mov	 rcx, rax
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetEvent
  00084	90		 npad	 1

; 85   :     }

  00085	eb ae		 jmp	 SHORT $LN2@RGYConvert
$LN3@RGYConvert:

; 86   :     for (size_t i = 0; i < m_th.size(); i++) {

  00087	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR i$2[rsp], 0
  00090	eb 0d		 jmp	 SHORT $LN7@RGYConvert
$LN5@RGYConvert:
  00092	48 8b 44 24 28	 mov	 rax, QWORD PTR i$2[rsp]
  00097	48 ff c0	 inc	 rax
  0009a	48 89 44 24 28	 mov	 QWORD PTR i$2[rsp], rax
$LN7@RGYConvert:
  0009f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 83 c0 18	 add	 rax, 24
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::size
  000b0	90		 npad	 1
  000b1	48 39 44 24 28	 cmp	 QWORD PTR i$2[rsp], rax
  000b6	73 22		 jae	 SHORT $LN6@RGYConvert

; 87   :         m_th[i].join();

  000b8	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000bd	48 83 c0 18	 add	 rax, 24
  000c1	48 8b 54 24 28	 mov	 rdx, QWORD PTR i$2[rsp]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
  000ce	90		 npad	 1
  000cf	48 8b c8	 mov	 rcx, rax
  000d2	e8 00 00 00 00	 call	 ?join@thread@std@@QEAAXXZ ; std::thread::join
  000d7	90		 npad	 1

; 88   :     }

  000d8	eb b8		 jmp	 SHORT $LN5@RGYConvert
$LN6@RGYConvert:

; 89   :     m_heFinCopy.clear();

  000da	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000df	48 83 c0 78	 add	 rax, 120		; 00000078H
  000e3	48 8b c8	 mov	 rcx, rax
  000e6	e8 00 00 00 00	 call	 ?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ ; std::vector<void *,std::allocator<void *> >::clear
  000eb	90		 npad	 1

; 90   :     m_heStart.clear();

  000ec	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000f1	48 83 c0 38	 add	 rax, 56			; 00000038H
  000f5	48 8b c8	 mov	 rcx, rax
  000f8	e8 00 00 00 00	 call	 ?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear
  000fd	90		 npad	 1

; 91   :     m_heFin.clear();

  000fe	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00103	48 83 c0 58	 add	 rax, 88			; 00000058H
  00107	48 8b c8	 mov	 rcx, rax
  0010a	e8 00 00 00 00	 call	 ?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear
  0010f	90		 npad	 1

; 92   :     m_th.clear();

  00110	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00115	48 83 c0 18	 add	 rax, 24
  00119	48 8b c8	 mov	 rcx, rax
  0011c	e8 00 00 00 00	 call	 ?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::clear
  00121	90		 npad	 1

; 93   : };

  00122	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00127	48 83 c0 78	 add	 rax, 120		; 00000078H
  0012b	48 8b c8	 mov	 rcx, rax
  0012e	e8 00 00 00 00	 call	 ??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
  00133	90		 npad	 1
  00134	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00139	48 83 c0 58	 add	 rax, 88			; 00000058H
  0013d	48 8b c8	 mov	 rcx, rax
  00140	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00145	90		 npad	 1
  00146	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0014b	48 83 c0 38	 add	 rax, 56			; 00000038H
  0014f	48 8b c8	 mov	 rcx, rax
  00152	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00157	90		 npad	 1
  00158	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0015d	48 83 c0 18	 add	 rax, 24
  00161	48 8b c8	 mov	 rcx, rax
  00164	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  00169	90		 npad	 1
  0016a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0016e	5f		 pop	 rdi
  0016f	c3		 ret	 0
??1RGYConvertCSP@@QEAA@XZ ENDP				; RGYConvertCSP::~RGYConvertCSP
_TEXT	ENDS
text$x	SEGMENT
i$1 = 32
i$2 = 40
this$ = 64
?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$0
i$1 = 32
i$2 = 40
this$ = 64
?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00042	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$1
i$1 = 32
i$2 = 40
this$ = 64
?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$2
i$1 = 32
i$2 = 40
this$ = 64
?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00090	e8 00 00 00 00	 call	 ??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
i$1 = 32
i$2 = 40
this$ = 64
?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
i$1 = 32
i$2 = 40
this$ = 64
?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00042	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
i$1 = 32
i$2 = 40
this$ = 64
?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
i$1 = 32
i$2 = 40
this$ = 64
?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00090	e8 00 00 00 00	 call	 ??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???1RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::~RGYConvertCSP'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 48
threads$ = 56
??0RGYConvertCSP@@QEAA@H@Z PROC				; RGYConvertCSP::RGYConvertCSP

; 78   :     m_prm() {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 72   :     m_csp(nullptr),

  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 73   :     m_csp_from(RGY_CSP_NA),

  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00033	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 74   :     m_csp_to(RGY_CSP_NA),

  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [rax+12], 0

; 75   :     m_uv_only(false),

  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	c6 40 10 00	 mov	 BYTE PTR [rax+16], 0

; 76   :     m_threads(threads),

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	8b 4c 24 38	 mov	 ecx, DWORD PTR threads$[rsp]
  00058	89 48 14	 mov	 DWORD PTR [rax+20], ecx

; 77   :     m_th(), m_heStart(), m_heFin(), m_heFinCopy(),

  0005b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00060	48 83 c0 18	 add	 rax, 24
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
  0006c	90		 npad	 1
  0006d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 83 c0 38	 add	 rax, 56			; 00000038H
  00076	48 8b c8	 mov	 rcx, rax
  00079	e8 00 00 00 00	 call	 ??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  0007e	90		 npad	 1
  0007f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00084	48 83 c0 58	 add	 rax, 88			; 00000058H
  00088	48 8b c8	 mov	 rcx, rax
  0008b	e8 00 00 00 00	 call	 ??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00090	90		 npad	 1
  00091	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00096	48 83 c0 78	 add	 rax, 120		; 00000078H
  0009a	48 8b c8	 mov	 rcx, rax
  0009d	e8 00 00 00 00	 call	 ??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >
  000a2	90		 npad	 1

; 78   :     m_prm() {

  000a3	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a8	48 05 98 00 00
	00		 add	 rax, 152		; 00000098H
  000ae	48 8b c8	 mov	 rcx, rax
  000b1	e8 00 00 00 00	 call	 ??0RGYConvertCSPPrm@@QEAA@XZ ; RGYConvertCSPPrm::RGYConvertCSPPrm
  000b6	90		 npad	 1

; 79   : };

  000b7	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000bc	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000c0	5f		 pop	 rdi
  000c1	c3		 ret	 0
??0RGYConvertCSP@@QEAA@H@Z ENDP				; RGYConvertCSP::RGYConvertCSP
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
threads$ = 56
?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
this$ = 48
threads$ = 56
?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00042	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$1
this$ = 48
threads$ = 56
?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$2
this$ = 48
threads$ = 56
?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00090	e8 00 00 00 00	 call	 ??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
threads$ = 56
?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 18	 add	 rcx, 24
  0001b	e8 00 00 00 00	 call	 ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
threads$ = 56
?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$1
  00027	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002c	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00031	55		 push	 rbp
  00032	57		 push	 rdi
  00033	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00037	48 8b ea	 mov	 rbp, rdx
  0003a	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0003e	48 83 c1 38	 add	 rcx, 56			; 00000038H
  00042	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  00047	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
?dtor$1@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
threads$ = 56
?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$2
  0004e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00053	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00058	55		 push	 rbp
  00059	57		 push	 rdi
  0005a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0005e	48 8b ea	 mov	 rbp, rdx
  00061	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 58	 add	 rcx, 88			; 00000058H
  00069	e8 00 00 00 00	 call	 ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
  0006e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
?dtor$2@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
threads$ = 56
?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$3
  00075	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0007a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0007f	55		 push	 rbp
  00080	57		 push	 rdi
  00081	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00085	48 8b ea	 mov	 rbp, rdx
  00088	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  0008c	48 83 c1 78	 add	 rcx, 120		; 00000078H
  00090	e8 00 00 00 00	 call	 ??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
  00095	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?dtor$3@?0???0RGYConvertCSP@@QEAA@H@Z@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 48
??0RGYConvertCSP@@QEAA@XZ PROC				; RGYConvertCSP::RGYConvertCSP

; 68   : RGYConvertCSP::RGYConvertCSP() : RGYConvertCSP(0) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	33 d2		 xor	 edx, edx
  00020	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00025	e8 00 00 00 00	 call	 ??0RGYConvertCSP@@QEAA@H@Z ; RGYConvertCSP::RGYConvertCSP
  0002a	90		 npad	 1

; 69   : }

  0002b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??0RGYConvertCSP@@QEAA@XZ ENDP				; RGYConvertCSP::RGYConvertCSP
_TEXT	ENDS
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYConvertCSP@@QEAA@XZ ; RGYConvertCSP::~RGYConvertCSP
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA PROC		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1RGYConvertCSP@@QEAA@XZ ; RGYConvertCSP::~RGYConvertCSP
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0RGYConvertCSP@@QEAA@XZ@4HA ENDP		; `RGYConvertCSP::RGYConvertCSP'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ PROC ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ ENDP ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ PROC ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ ENDP ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<void *> >::_Vector_val<std::_Simple_types<void *> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@PEAX@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<void *> >::_Vector_val<std::_Simple_types<void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ PROC ; std::vector<void *,std::allocator<void *> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAX@2@XZ ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ ENDP ; std::vector<void *,std::allocator<void *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ PROC ; std::vector<void *,std::allocator<void *> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAX@2@XZ ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ENDP ; std::vector<void *,std::allocator<void *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z PROC ; std::vector<void *,std::allocator<void *> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA PROC ; `std::vector<void *,std::allocator<void *> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA ENDP ; `std::vector<void *,std::allocator<void *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA PROC ; `std::vector<void *,std::allocator<void *> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAXPEAPEAX0@Z@4HA ENDP ; `std::vector<void *,std::allocator<void *> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ PROC ; std::vector<void *,std::allocator<void *> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@PEAXV?$allocator@PEAX@std@@@std@@CAXXZ ENDP ; std::vector<void *,std::allocator<void *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ PROC ; std::vector<void *,std::allocator<void *> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z ; std::allocator<void *>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ ENDP ; std::vector<void *,std::allocator<void *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z PROC ; std::vector<void *,std::allocator<void *> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 03	 sar	 rax, 3
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z ; std::allocator<void *>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e5	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000e9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000f6	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  000fb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00107	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
?_Change_array@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXQEAPEAX_K1@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z PROC ; std::vector<void *,std::allocator<void *> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ; std::vector<void *,std::allocator<void *> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z PROC ; std::vector<void *,std::allocator<void *> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@PEAX@std@@@std@@YAXPEAPEAXQEAPEAXAEAV?$allocator@PEAX@0@@Z ; std::_Destroy_range<std::allocator<void *> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z PROC ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z ; std::_Uninitialized_move<void * *,std::allocator<void *> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z PROC ; std::vector<void *,std::allocator<void *> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAPEAXV?$allocator@PEAX@std@@@std@@YAPEAPEAXQEAPEAX0PEAPEAXAEAV?$allocator@PEAX@0@@Z ; std::_Uninitialized_move<void * *,std::allocator<void *> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAPEAPEAXPEAPEAX00@Z ENDP ; std::vector<void *,std::allocator<void *> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ PROC ; std::vector<void *,std::allocator<void *> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ENDP ; std::vector<void *,std::allocator<void *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ PROC ; std::vector<void *,std::allocator<void *> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEBAAEBV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z ; std::_Default_allocator_traits<std::allocator<void *> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ENDP ; std::vector<void *,std::allocator<void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ PROC ; std::vector<void *,std::allocator<void *> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEBA_KXZ ENDP ; std::vector<void *,std::allocator<void *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ
_TEXT	SEGMENT
this$ = 48
?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ PROC ; std::vector<void *,std::allocator<void *> >::data, COMDAT

; 1352 :     _NODISCARD _Ty* data() noexcept { // return address of first element

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1353 :         return _Unfancy_maybe_null(_Mypair._Myval2._Myfirst);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00027	e8 00 00 00 00	 call	 ??$_Unfancy_maybe_null@PEAX@std@@YAPEAPEAXPEAPEAX@Z ; std::_Unfancy_maybe_null<void *>
  0002c	90		 npad	 1

; 1354 :     }

  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
?data@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAPEAPEAXXZ ENDP ; std::vector<void *,std::allocator<void *> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ PROC ; std::vector<void *,std::allocator<void *> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXPEAPEAX0@Z ; std::vector<void *,std::allocator<void *> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAXXZ ENDP ; std::vector<void *,std::allocator<void *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z PROC ; std::vector<void *,std::allocator<void *> >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAPEAX@std@@YA$$QEAPEAXAEAPEAX@Z ; std::move<void * &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@PEAX@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z ; std::vector<void *,std::allocator<void *> >::emplace_back<void *>

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAAX$$QEAPEAX@Z ENDP ; std::vector<void *,std::allocator<void *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S3$ = 52
$T4 = 68
this$ = 96
??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ PROC ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAXXZ ; std::vector<void *,std::allocator<void *> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S3$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><void *>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S3$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ENDP ; std::vector<void *,std::allocator<void *> >::~vector<void *,std::allocator<void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ PROC ; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAX@std@@V?$_Vector_val@U?$_Simple_types@PEAX@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1>::_Compressed_pair<std::allocator<void *>,std::_Vector_val<std::_Simple_types<void *> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@PEAXV?$allocator@PEAX@std@@@std@@AEAAAEAV?$allocator@PEAX@2@XZ ; std::vector<void *,std::allocator<void *> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0PEAX@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAX@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><void *>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@PEAXV?$allocator@PEAX@std@@@std@@QEAA@XZ ENDP ; std::vector<void *,std::allocator<void *> >::vector<void *,std::allocator<void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<void *> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAX@std@@@std@@SA_KAEBV?$allocator@PEAX@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z PROC	; std::allocator<void *>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@PEAX@std@@QEAAPEAPEAX_K@Z ENDP	; std::allocator<void *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z PROC	; std::allocator<void *>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@PEAX@std@@QEAAXQEAPEAX_K@Z ENDP	; std::allocator<void *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@PEAX@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@PEAX@std@@QEAA@XZ PROC			; std::allocator<void *>::allocator<void *>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@PEAX@std@@QEAA@XZ ENDP			; std::allocator<void *>::allocator<void *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA PROC ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA ENDP ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA PROC ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z@4HA ENDP ; `std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 03	 sar	 rax, 3
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000e0	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  000e5	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000e9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000ee	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f1	48 8b 44 24 68	 mov	 rax, QWORD PTR _Newvec$[rsp]
  000f6	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _Newcapacity$[rsp]
  000fb	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]
  000ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  00104	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00107	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
?_Change_array@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K1@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBA_K_K@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@YAXPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::unique_ptr<void,handle_deleter> > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAV?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@YAPEAV?$unique_ptr@XUhandle_deleter@@@0@QEAV10@0PEAV10@AEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@0@@Z ; std::_Uninitialized_move<std::unique_ptr<void,handle_deleter> *,std::allocator<std::unique_ptr<void,handle_deleter> > >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@PEAV32@00@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 c1 f8 03	 sar	 rax, 3
  00046	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  0004b	73 02		 jae	 SHORT $LN7@operator
  0004d	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	90		 npad	 1
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BCM@NMHCBNAK@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	0f 85 67 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000c6	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  000cb	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000cf	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Pos$[rsp]
  000d4	48 8d 04 c8	 lea	 rax, QWORD PTR [rax+rcx*8]

; 1459 :     }

  000d8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000dc	5f		 pop	 rdi
  000dd	c3		 ret	 0
??A?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAAEAV?$unique_ptr@XUhandle_deleter@@@1@_K@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEBAAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 03	 sar	 rax, 3

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXPEAV?$unique_ptr@XUhandle_deleter@@@2@0@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAXXZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAV?$unique_ptr@XUhandle_deleter@@@std@@@std@@YA$$QEAV?$unique_ptr@XUhandle_deleter@@@0@AEAV10@@Z ; std::move<std::unique_ptr<void,handle_deleter> &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@V?$unique_ptr@XUhandle_deleter@@@std@@@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@1@@Z ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::emplace_back<std::unique_ptr<void,handle_deleter> >

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAAX$$QEAV?$unique_ptr@XUhandle_deleter@@@2@@Z ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S4$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAXXZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S4$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<void,handle_deleter> >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S4$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::~vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1>::_Compressed_pair<std::allocator<std::unique_ptr<void,handle_deleter> >,std::_Vector_val<std::_Simple_types<std::unique_ptr<void,handle_deleter> > >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@AEAAAEAV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@XZ ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$unique_ptr@XUhandle_deleter@@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::unique_ptr<void,handle_deleter> >
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@V?$unique_ptr@XUhandle_deleter@@@std@@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >::vector<std::unique_ptr<void,handle_deleter>,std::allocator<std::unique_ptr<void,handle_deleter> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 1f	 mov	 rax, 2305843009213693951 ; 1fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@@std@@SA_KAEBV?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::unique_ptr<void,handle_deleter> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z PROC ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$07@std@@YA_K_K@Z ; std::_Get_size_of_n<8>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAPEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ENDP ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z PROC ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAAXQEAV?$unique_ptr@XUhandle_deleter@@@2@_K@Z ENDP ; std::allocator<std::unique_ptr<void,handle_deleter> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ PROC ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocator<std::unique_ptr<void,handle_deleter> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@V?$unique_ptr@XUhandle_deleter@@@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::unique_ptr<void,handle_deleter> >::allocator<std::unique_ptr<void,handle_deleter> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<std::thread> >::_Vector_val<std::_Simple_types<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1693 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first

; 1694 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z
_TEXT	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00028	ba 03 00 00 00	 mov	 edx, 3
  0002d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00038	90		 npad	 1

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00039	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 83 c0 08	 add	 rax, 8
  00045	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  0004a	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 61		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00061	48 89 44 24 40	 mov	 QWORD PTR _Pnextptr$4[rsp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  00066	48 8b 44 24 68	 mov	 rax, QWORD PTR _First$[rsp]
  0006b	48 39 44 24 40	 cmp	 QWORD PTR _Pnextptr$4[rsp], rax
  00070	72 0c		 jb	 SHORT $LN6@Orphan_ran
  00072	48 8b 44 24 40	 mov	 rax, QWORD PTR _Pnextptr$4[rsp]
  00077	48 39 44 24 70	 cmp	 QWORD PTR _Last$[rsp], rax
  0007c	73 13		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  0007e	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	48 89 44 24 38	 mov	 QWORD PTR _Pnext$[rsp], rax

; 1677 :             } else { // orphan the iterator

  0008f	eb 23		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  00091	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000a0	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$[rsp]
  000a5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a8	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$[rsp]
  000ad	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000b1	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000b4	eb 94		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000b6	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Pnext$ = 56
_Pnextptr$4 = 64
this$ = 96
_First$ = 104
_Last$ = 112
?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA PROC ; `std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_range@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAXPEAVthread@2@0@Z@4HA ENDP ; `std::vector<std::thread,std::allocator<std::thread> >::_Orphan_range'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 1661 :         _Xlength_error("vector<T> too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlength@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@CAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 04	 sar	 rax, 4
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
_Newvec$ = 104
_Newsize$ = 112
_Newcapacity$ = 120
?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 14 00 00 00	 mov	 ecx, 20
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  0002d	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003c	48 83 c0 08	 add	 rax, 8
  00040	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  00045	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0004a	48 83 c0 10	 add	 rax, 16
  0004e	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00058	48 83 c0 18	 add	 rax, 24
  0005c	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00061	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00066	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0006b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 58		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00076	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0007b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0007e	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00083	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00086	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0008b	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00090	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00095	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0009a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0009d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a0	48 2b c1	 sub	 rax, rcx
  000a3	48 c1 f8 04	 sar	 rax, 4
  000a7	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000ac	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000b1	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000bb	4c 8b c1	 mov	 r8, rcx
  000be	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c3	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c6	48 8b c8	 mov	 rcx, rax
  000c9	e8 00 00 00 00	 call	 ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ; std::allocator<std::thread>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000ce	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d3	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000d8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  000db	48 6b 44 24 70
	10		 imul	 rax, QWORD PTR _Newsize$[rsp], 16
  000e1	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000e6	48 03 c8	 add	 rcx, rax
  000e9	48 8b c1	 mov	 rax, rcx
  000ec	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Mylast$[rsp]
  000f1	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  000f4	48 6b 44 24 78
	10		 imul	 rax, QWORD PTR _Newcapacity$[rsp], 16
  000fa	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Newvec$[rsp]
  000ff	48 03 c8	 add	 rcx, rax
  00102	48 8b c1	 mov	 rax, rcx
  00105	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Myend$[rsp]
  0010a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  0010d	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00111	5f		 pop	 rdi
  00112	c3		 ret	 0
?_Change_array@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXQEAVthread@2@_K1@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 32
_Geometric$ = 40
tv67 = 48
this$ = 80
_Newsize$ = 88
?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::capacity
  0002d	48 89 44 24 20	 mov	 QWORD PTR _Oldcapacity$[rsp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  00032	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00037	e8 00 00 00 00	 call	 ?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ; std::vector<std::thread,std::allocator<std::thread> >::max_size
  0003c	48 89 44 24 30	 mov	 QWORD PTR tv67[rsp], rax
  00041	33 d2		 xor	 edx, edx
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00048	b9 02 00 00 00	 mov	 ecx, 2
  0004d	48 f7 f1	 div	 rcx
  00050	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv67[rsp]
  00055	48 2b c8	 sub	 rcx, rax
  00058	48 8b c1	 mov	 rax, rcx
  0005b	48 39 44 24 20	 cmp	 QWORD PTR _Oldcapacity$[rsp], rax
  00060	76 07		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  00062	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00067	eb 37		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00069	33 d2		 xor	 edx, edx
  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Oldcapacity$[rsp]
  00070	b9 02 00 00 00	 mov	 ecx, 2
  00075	48 f7 f1	 div	 rcx
  00078	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Oldcapacity$[rsp]
  0007d	48 03 c8	 add	 rcx, rax
  00080	48 8b c1	 mov	 rax, rcx
  00083	48 89 44 24 28	 mov	 QWORD PTR _Geometric$[rsp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  00088	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  0008d	48 39 44 24 28	 cmp	 QWORD PTR _Geometric$[rsp], rax
  00092	73 07		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  00094	48 8b 44 24 58	 mov	 rax, QWORD PTR _Newsize$[rsp]
  00099	eb 05		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  0009b	48 8b 44 24 28	 mov	 rax, QWORD PTR _Geometric$[rsp]
$LN1@Calculate_:

; 1586 :     }

  000a0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000a4	5f		 pop	 rdi
  000a5	c3		 ret	 0
?_Calculate_growth@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBA_K_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@Vthread@std@@@std@@@std@@YAXPEAVthread@0@QEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::thread> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z
_TEXT	SEGMENT
$T1 = 48
this$ = 80
_First$ = 88
_Last$ = 96
_Dest$ = 104
?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  0002d	48 8d 44 24 30	 lea	 rax, QWORD PTR $T1[rsp]
  00032	48 8b f8	 mov	 rdi, rax
  00035	33 c0		 xor	 eax, eax
  00037	b9 01 00 00 00	 mov	 ecx, 1
  0003c	f3 aa		 rep stosb
  0003e	0f b6 44 24 30	 movzx	 eax, BYTE PTR $T1[rsp]
  00043	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00047	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Dest$[rsp]
  0004c	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Last$[rsp]
  00051	48 8b 54 24 58	 mov	 rdx, QWORD PTR _First$[rsp]
  00056	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0005b	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00060	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?_Umove_if_noexcept@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
__formal$ = 80
?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >

; 1554 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
_Dest$ = 72
?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 08 00 00 00	 mov	 ecx, 8
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00032	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00037	4c 8b c8	 mov	 r9, rax
  0003a	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Dest$[rsp]
  0003f	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  00044	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAVthread@std@@V?$allocator@Vthread@std@@@2@@std@@YAPEAVthread@0@QEAV10@0PEAV10@AEAV?$allocator@Vthread@std@@@0@@Z ; std::_Uninitialized_move<std::thread *,std::allocator<std::thread> >

; 1549 :     }

  0004e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
?_Umove@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAPEAVthread@2@PEAV32@00@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z
_TEXT	SEGMENT
_My_data$ = 48
this$ = 80
_Pos$ = 88
??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::operator[], COMDAT

; 1451 :     _NODISCARD _Ty& operator[](const size_type _Pos) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1452 :         auto& _My_data = _Mypair._Myval2;

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 89 44 24 30	 mov	 QWORD PTR _My_data$[rsp], rax
$LN4@operator:

; 1453 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1454 :         _STL_VERIFY(

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR _My_data$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00037	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0003f	48 2b c1	 sub	 rax, rcx
  00042	48 c1 f8 04	 sar	 rax, 4
  00046	48 39 44 24 58	 cmp	 QWORD PTR _Pos$[rsp], rax
  0004b	73 02		 jae	 SHORT $LN7@operator
  0004d	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  0004f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@PFKOHNJC@vector?5subscript?5out?5of?5range@
  00056	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00062	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00067	45 33 c9	 xor	 r9d, r9d
  0006a	41 b8 af 05 00
	00		 mov	 r8d, 1455		; 000005afH
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00082	90		 npad	 1
  00083	83 f8 01	 cmp	 eax, 1
  00086	75 03		 jne	 SHORT $LN11@operator
  00088	cc		 int	 3
  00089	33 c0		 xor	 eax, eax
$LN11@operator:
  0008b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00094	41 b9 af 05 00
	00		 mov	 r9d, 1455		; 000005afH
  0009a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1KK@IDMLHJIJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAc?$AAl?$AAa@
  000a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@LEKOKFNB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b5	90		 npad	 1

; 1455 :             _Pos < static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst), "vector subscript out of range");

  000b6	33 c0		 xor	 eax, eax
  000b8	85 c0		 test	 eax, eax
  000ba	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000bc	33 c0		 xor	 eax, eax
  000be	85 c0		 test	 eax, eax
  000c0	0f 85 67 ff ff
	ff		 jne	 $LN4@operator

; 1456 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1457 : 
; 1458 :         return _My_data._Myfirst[_Pos];

  000c6	48 6b 44 24 58
	10		 imul	 rax, QWORD PTR _Pos$[rsp], 16
  000cc	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _My_data$[rsp]
  000d1	48 03 41 08	 add	 rax, QWORD PTR [rcx+8]

; 1459 :     }

  000d5	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
??A?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAAEAVthread@1@_K@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1447 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 04	 sar	 rax, 4

; 1449 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?capacity@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1442 :         return _Min_value(

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEBAAEBV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size
  00030	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00035	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  0003a	48 89 44 24 28	 mov	 QWORD PTR $T2[rsp], rax
  0003f	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00044	48 8d 4c 24 28	 lea	 rcx, QWORD PTR $T2[rsp]
  00049	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00051	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?max_size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 0
this$ = 32
?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1437 :         auto& _My_data = _Mypair._Myval2;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 04 24	 mov	 QWORD PTR _My_data$[rsp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00027	48 8b 04 24	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002b	48 8b 0c 24	 mov	 rcx, QWORD PTR _My_data$[rsp]
  0002f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00033	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00037	48 2b c1	 sub	 rax, rcx
  0003a	48 c1 f8 04	 sar	 rax, 4

; 1439 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?size@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEBA_KXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXPEAVthread@2@0@Z ; std::vector<std::thread,std::allocator<std::thread> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAXXZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z
_TEXT	SEGMENT
this$ = 48
_Val$ = 56
?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z PROC ; std::vector<std::thread,std::allocator<std::thread> >::push_back, COMDAT

; 671  :     void push_back(_Ty&& _Val) { // insert by moving into element at end, provide strong guarantee

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 672  :         emplace_back(_STD move(_Val));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Val$[rsp]
  00028	e8 00 00 00 00	 call	 ??$move@AEAVthread@std@@@std@@YA$$QEAVthread@0@AEAV10@@Z ; std::move<std::thread &>
  0002d	48 8b d0	 mov	 rdx, rax
  00030	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00035	e8 00 00 00 00	 call	 ??$emplace_back@Vthread@std@@@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@1@@Z ; std::vector<std::thread,std::allocator<std::thread> >::emplace_back<std::thread>

; 673  :     }

  0003a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?push_back@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAAX$$QEAVthread@2@@Z ENDP ; std::vector<std::thread,std::allocator<std::thread> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S5$ = 52
$T4 = 68
this$ = 96
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAXXZ ; std::vector<std::thread,std::allocator<std::thread> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S5$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S5$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::~vector<std::thread,std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@Vthread@std@@@std@@V?$_Vector_val@U?$_Simple_types@Vthread@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1>::_Compressed_pair<std::allocator<std::thread>,std::_Vector_val<std::_Simple_types<std::thread> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@AEAAAEAV?$allocator@Vthread@std@@@2@XZ ; std::vector<std::thread,std::allocator<std::thread> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0Vthread@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@Vthread@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::thread>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@Vthread@std@@V?$allocator@Vthread@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::thread,std::allocator<std::thread> >::vector<std::thread,std::allocator<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH

; 768  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@Vthread@std@@@std@@@std@@SA_KAEBV?$allocator@Vthread@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::thread> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z PROC ; std::allocator<std::thread>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@Vthread@std@@@std@@QEAAPEAVthread@2@_K@Z ENDP ; std::allocator<std::thread>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z PROC ; std::allocator<std::thread>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	10		 imul	 rax, QWORD PTR _Count$[rsp], 16
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@Vthread@std@@@std@@QEAAXQEAVthread@2@_K@Z ENDP ; std::allocator<std::thread>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@Vthread@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@Vthread@std@@@std@@QEAA@XZ PROC		; std::allocator<std::thread>::allocator<std::thread>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@Vthread@std@@@std@@QEAA@XZ ENDP		; std::allocator<std::thread>::allocator<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
this$ = 16
??0RGYConvertCSPPrm@@QEAA@XZ PROC			; RGYConvertCSPPrm::RGYConvertCSPPrm

; 63   :     crop(nullptr) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 53   :     abort(false),

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	c6 00 00	 mov	 BYTE PTR [rax], 0

; 54   :     dst(nullptr),

  0000e	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00013	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 55   :     src(nullptr),

  0001b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00020	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 56   :     interlaced(false),

  00028	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002d	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [rax+24], 0

; 57   :     width(0),

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [rax+28], 0

; 58   :     src_y_pitch_byte(0),

  00040	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00045	c7 40 20 00 00
	00 00		 mov	 DWORD PTR [rax+32], 0

; 59   :     src_uv_pitch_byte(0),

  0004c	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00051	c7 40 24 00 00
	00 00		 mov	 DWORD PTR [rax+36], 0

; 60   :     dst_y_pitch_byte(0),

  00058	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0005d	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [rax+40], 0

; 61   :     height(0),

  00064	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00069	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [rax+44], 0

; 62   :     dst_height(0),

  00070	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00075	c7 40 30 00 00
	00 00		 mov	 DWORD PTR [rax+48], 0

; 63   :     crop(nullptr) {

  0007c	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00081	48 c7 40 38 00
	00 00 00	 mov	 QWORD PTR [rax+56], 0

; 64   : 
; 65   : }

  00089	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0008e	5f		 pop	 rdi
  0008f	c3		 ret	 0
??0RGYConvertCSPPrm@@QEAA@XZ ENDP			; RGYConvertCSPPrm::RGYConvertCSPPrm
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
_TEXT	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z PROC ; read_keyfile

; 34   : std::vector<int> read_keyfile(tstring keyfile) {

$LN22:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 02
	00 00		 sub	 rsp, 640		; 00000280H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 a0 00 00 00	 mov	 ecx, 160		; 000000a0H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR [rsp+656]
  00029	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00030	48 33 c4	 xor	 rax, rsp
  00033	48 89 84 24 78
	02 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003b	c7 84 24 48 02
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0

; 35   :     std::set<int> s; //重複回避のため

  00046	48 8d 4c 24 38	 lea	 rcx, QWORD PTR s$[rsp]
  0004b	e8 00 00 00 00	 call	 ??0?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ ; std::set<int,std::less<int>,std::allocator<int> >::set<int,std::less<int>,std::allocator<int> >
  00050	90		 npad	 1

; 36   :     std::ifstream ifs(keyfile);

  00051	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  00059	41 b9 40 00 00
	00		 mov	 r9d, 64			; 00000040H
  0005f	41 b8 01 00 00
	00		 mov	 r8d, 1
  00065	48 8b 94 24 98
	02 00 00	 mov	 rdx, QWORD PTR keyfile$[rsp]
  0006d	48 8d 4c 24 70	 lea	 rcx, QWORD PTR ifs$[rsp]
  00072	e8 00 00 00 00	 call	 ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@HH@Z ; std::basic_ifstream<char,std::char_traits<char> >::basic_ifstream<char,std::char_traits<char> >
  00077	90		 npad	 1

; 37   :     if (ifs.is_open()) {

  00078	48 8d 4c 24 70	 lea	 rcx, QWORD PTR ifs$[rsp]
  0007d	e8 00 00 00 00	 call	 ?is_open@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ifstream<char,std::char_traits<char> >::is_open
  00082	0f b6 c0	 movzx	 eax, al
  00085	85 c0		 test	 eax, eax
  00087	0f 84 01 01 00
	00		 je	 $LN4@read_keyfi

; 38   :         std::string buff;

  0008d	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR buff$6[rsp]
  00095	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0009a	90		 npad	 1
$LN2@read_keyfi:

; 39   :         while (std::getline(ifs, buff)) {

  0009b	48 8d 94 24 98
	01 00 00	 lea	 rdx, QWORD PTR buff$6[rsp]
  000a3	48 8d 4c 24 70	 lea	 rcx, QWORD PTR ifs$[rsp]
  000a8	e8 00 00 00 00	 call	 ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::getline<char,std::char_traits<char>,std::allocator<char> >
  000ad	48 89 84 24 d0
	01 00 00	 mov	 QWORD PTR $T7[rsp], rax
  000b5	48 8b 84 24 d0
	01 00 00	 mov	 rax, QWORD PTR $T7[rsp]
  000bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c4	48 8b 8c 24 d0
	01 00 00	 mov	 rcx, QWORD PTR $T7[rsp]
  000cc	48 03 c8	 add	 rcx, rax
  000cf	48 8b c1	 mov	 rax, rcx
  000d2	48 8b c8	 mov	 rcx, rax
  000d5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??Bios_base@std@@QEBA_NXZ
  000db	0f b6 c0	 movzx	 eax, al
  000de	85 c0		 test	 eax, eax
  000e0	0f 84 9b 00 00
	00		 je	 $LN3@read_keyfi

; 40   :             if (buff.length() > 0) {

  000e6	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR buff$6[rsp]
  000ee	e8 00 00 00 00	 call	 ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
  000f3	48 85 c0	 test	 rax, rax
  000f6	76 44		 jbe	 SHORT __tryend$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1

; 41   :                 try {
; 42   :                     s.insert(std::stoi(buff));

  000f8	41 b8 0a 00 00
	00		 mov	 r8d, 10
  000fe	33 d2		 xor	 edx, edx
  00100	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR buff$6[rsp]
  00108	e8 00 00 00 00	 call	 ?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z ; std::stoi
  0010d	89 84 24 d8 01
	00 00		 mov	 DWORD PTR $T8[rsp], eax
  00114	4c 8d 84 24 d8
	01 00 00	 lea	 r8, QWORD PTR $T8[rsp]
  0011c	48 8d 94 24 e0
	01 00 00	 lea	 rdx, QWORD PTR $T9[rsp]
  00124	48 8d 4c 24 38	 lea	 rcx, QWORD PTR s$[rsp]
  00129	e8 00 00 00 00	 call	 ??$insert@$0A@$0A@@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AU?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@1@$$QEAH@Z ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::insert<0,0>
  0012e	48 8d 8c 24 e0
	01 00 00	 lea	 rcx, QWORD PTR $T9[rsp]
  00136	e8 00 00 00 00	 call	 ??1?$pair@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@_N@std@@QEAA@XZ
  0013b	90		 npad	 1
__tryend$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1:
  0013c	eb 3e		 jmp	 SHORT $LN19@read_keyfi
$LN20@read_keyfi:

; 43   :                 } catch (...) {
; 44   :                     return vector<int>();

  0013e	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR buff$6[rsp]
  00146	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0014b	90		 npad	 1
  0014c	48 8d 4c 24 70	 lea	 rcx, QWORD PTR ifs$[rsp]
  00151	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00156	90		 npad	 1
  00157	48 8d 4c 24 38	 lea	 rcx, QWORD PTR s$[rsp]
  0015c	e8 00 00 00 00	 call	 ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
  00161	90		 npad	 1
  00162	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR keyfile$[rsp]
  0016a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0016f	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
  00177	e9 ff 00 00 00	 jmp	 $LN1@read_keyfi
$LN19@read_keyfi:

; 45   :                 }
; 46   :             }
; 47   :         }

  0017c	e9 1a ff ff ff	 jmp	 $LN2@read_keyfi
$LN3@read_keyfi:

; 48   :     }

  00181	48 8d 8c 24 98
	01 00 00	 lea	 rcx, QWORD PTR buff$6[rsp]
  00189	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@read_keyfi:

; 49   :     return vector<int>(s.begin(), s.end());

  0018e	48 8d 84 24 08
	02 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00196	48 89 84 24 20
	02 00 00	 mov	 QWORD PTR $T12[rsp], rax
  0019e	48 8d 84 24 28
	02 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  001a6	48 89 84 24 40
	02 00 00	 mov	 QWORD PTR $T14[rsp], rax
  001ae	48 8d 8c 24 00
	02 00 00	 lea	 rcx, QWORD PTR $T10[rsp]
  001b6	e8 00 00 00 00	 call	 ??0?$allocator@H@std@@QEAA@XZ ; std::allocator<int>::allocator<int>
  001bb	48 89 84 24 50
	02 00 00	 mov	 QWORD PTR tv157[rsp], rax
  001c3	48 8b 94 24 20
	02 00 00	 mov	 rdx, QWORD PTR $T12[rsp]
  001cb	48 8d 4c 24 38	 lea	 rcx, QWORD PTR s$[rsp]
  001d0	e8 00 00 00 00	 call	 ?end@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::end
  001d5	48 89 84 24 58
	02 00 00	 mov	 QWORD PTR tv152[rsp], rax
  001dd	48 8b 84 24 58
	02 00 00	 mov	 rax, QWORD PTR tv152[rsp]
  001e5	48 89 84 24 60
	02 00 00	 mov	 QWORD PTR tv202[rsp], rax
  001ed	48 8b 94 24 40
	02 00 00	 mov	 rdx, QWORD PTR $T14[rsp]
  001f5	48 8d 4c 24 38	 lea	 rcx, QWORD PTR s$[rsp]
  001fa	e8 00 00 00 00	 call	 ?begin@?$_Tree@V?$_Tset_traits@HU?$less@H@std@@V?$allocator@H@2@$0A@@std@@@std@@QEAA?AV?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@2@XZ ; std::_Tree<std::_Tset_traits<int,std::less<int>,std::allocator<int>,0> >::begin
  001ff	48 89 84 24 68
	02 00 00	 mov	 QWORD PTR tv80[rsp], rax
  00207	48 8b 84 24 68
	02 00 00	 mov	 rax, QWORD PTR tv80[rsp]
  0020f	48 89 84 24 70
	02 00 00	 mov	 QWORD PTR tv204[rsp], rax
  00217	48 8b 84 24 50
	02 00 00	 mov	 rax, QWORD PTR tv157[rsp]
  0021f	4c 8b c8	 mov	 r9, rax
  00222	4c 8b 84 24 60
	02 00 00	 mov	 r8, QWORD PTR tv202[rsp]
  0022a	48 8b 94 24 70
	02 00 00	 mov	 rdx, QWORD PTR tv204[rsp]
  00232	48 8b 8c 24 90
	02 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0023a	e8 00 00 00 00	 call	 ??$?0V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@X@?$vector@HV?$allocator@H@std@@@std@@QEAA@V?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@1@0AEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> ><std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<int> > >,void>
  0023f	8b 84 24 48 02
	00 00		 mov	 eax, DWORD PTR $T15[rsp]
  00246	83 c8 01	 or	 eax, 1
  00249	89 84 24 48 02
	00 00		 mov	 DWORD PTR $T15[rsp], eax
  00250	48 8d 4c 24 70	 lea	 rcx, QWORD PTR ifs$[rsp]
  00255	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0025a	90		 npad	 1
  0025b	48 8d 4c 24 38	 lea	 rcx, QWORD PTR s$[rsp]
  00260	e8 00 00 00 00	 call	 ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
  00265	90		 npad	 1
  00266	48 8b 8c 24 98
	02 00 00	 mov	 rcx, QWORD PTR keyfile$[rsp]
  0026e	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00273	48 8b 84 24 90
	02 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]
$LN1@read_keyfi:

; 50   : }

  0027b	48 8b f8	 mov	 rdi, rax
  0027e	48 8b cc	 mov	 rcx, rsp
  00281	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$rtcFrameData
  00288	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0028d	48 8b c7	 mov	 rax, rdi
  00290	48 8b 8c 24 78
	02 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00298	48 33 cc	 xor	 rcx, rsp
  0029b	e8 00 00 00 00	 call	 __security_check_cookie
  002a0	48 81 c4 80 02
	00 00		 add	 rsp, 640		; 00000280H
  002a7	5f		 pop	 rdi
  002a8	c3		 ret	 0
  002a9	cc		 int	 3
?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z ENDP ; read_keyfile
_TEXT	ENDS
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 02
	00 00		 mov	 rcx, QWORD PTR keyfile$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$0
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 4d 38	 lea	 rcx, QWORD PTR s$[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$1
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 70	 lea	 rcx, QWORD PTR ifs$[rbp]
  00060	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$2
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR buff$6[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$3
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::catch$8

; 43   :                 } catch (...) {

  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  000a2	48 8b ea	 mov	 rbp, rdx
__catch$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:

; 43   :                 } catch (...) {
; 44   :                     return vector<int>();

  000a5	48 8b 8d 90 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000ac	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  000b1	8b 85 48 02 00
	00		 mov	 eax, DWORD PTR $T15[rbp]
  000b7	83 c8 01	 or	 eax, 1
  000ba	89 85 48 02 00
	00		 mov	 DWORD PTR $T15[rbp], eax
  000c0	48 8d 05 00 00
	00 00		 lea	 rax, $LN20@catch$8
  000c7	eb 07		 jmp	 SHORT $LN21@catch$8

; 45   :                 }

  000c9	48 8d 05 00 00
	00 00		 lea	 rax, __tryend$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
$LN21@catch$8:
  000d0	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d4	5f		 pop	 rdi
  000d5	5d		 pop	 rbp
  000d6	c3		 ret	 0
  000d7	cc		 int	 3
?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::catch$8
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$5
  000d8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000dd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e2	55		 push	 rbp
  000e3	57		 push	 rdi
  000e4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000e8	48 8b ea	 mov	 rbp, rdx
  000eb	8b 85 48 02 00
	00		 mov	 eax, DWORD PTR $T15[rbp]
  000f1	83 e0 01	 and	 eax, 1
  000f4	85 c0		 test	 eax, eax
  000f6	74 13		 je	 SHORT $LN16@dtor$5
  000f8	83 a5 48 02 00
	00 fe		 and	 DWORD PTR $T15[rbp], -2
  000ff	48 8b 8d 90 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00106	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
$LN16@dtor$5:
  0010b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0010f	5f		 pop	 rdi
  00110	5d		 pop	 rbp
  00111	c3		 ret	 0
?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$5
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$6
  00112	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00117	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0011c	55		 push	 rbp
  0011d	57		 push	 rdi
  0011e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00122	48 8b ea	 mov	 rbp, rdx
  00125	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR $T12[rbp]
  0012c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  00131	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00135	5f		 pop	 rdi
  00136	5d		 pop	 rbp
  00137	c3		 ret	 0
?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$6
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$7
  00138	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0013d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00142	55		 push	 rbp
  00143	57		 push	 rdi
  00144	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00148	48 8b ea	 mov	 rbp, rdx
  0014b	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR $T14[rbp]
  00152	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  00157	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0015b	5f		 pop	 rdi
  0015c	5d		 pop	 rbp
  0015d	c3		 ret	 0
?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 98 02
	00 00		 mov	 rcx, QWORD PTR keyfile$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$1
  00026	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0002b	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00030	55		 push	 rbp
  00031	57		 push	 rdi
  00032	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00036	48 8b ea	 mov	 rbp, rdx
  00039	48 8d 4d 38	 lea	 rcx, QWORD PTR s$[rbp]
  0003d	e8 00 00 00 00	 call	 ??1?$set@HU?$less@H@std@@V?$allocator@H@2@@std@@QEAA@XZ
  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?dtor$1@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$2
  00049	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0004e	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00053	55		 push	 rbp
  00054	57		 push	 rdi
  00055	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00059	48 8b ea	 mov	 rbp, rdx
  0005c	48 8d 4d 70	 lea	 rcx, QWORD PTR ifs$[rbp]
  00060	e8 00 00 00 00	 call	 ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00065	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?dtor$2@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$3
  0006c	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00071	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00076	55		 push	 rbp
  00077	57		 push	 rdi
  00078	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0007c	48 8b ea	 mov	 rbp, rdx
  0007f	48 8d 8d 98 01
	00 00		 lea	 rcx, QWORD PTR buff$6[rbp]
  00086	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
?dtor$3@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::catch$8

; 43   :                 } catch (...) {

  00092	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00097	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0009c	55		 push	 rbp
  0009d	57		 push	 rdi
  0009e	48 83 ec 38	 sub	 rsp, 56			; 00000038H
  000a2	48 8b ea	 mov	 rbp, rdx
__catch$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$0:

; 44   :                     return vector<int>();

  000a5	48 8b 8d 90 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000ac	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  000b1	8b 85 48 02 00
	00		 mov	 eax, DWORD PTR $T15[rbp]
  000b7	83 c8 01	 or	 eax, 1
  000ba	89 85 48 02 00
	00		 mov	 DWORD PTR $T15[rbp], eax
  000c0	48 8d 05 00 00
	00 00		 lea	 rax, $LN20@catch$8
  000c7	eb 07		 jmp	 SHORT $LN21@catch$8

; 45   :                 }

  000c9	48 8d 05 00 00
	00 00		 lea	 rax, __tryend$?read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z$1
$LN21@catch$8:
  000d0	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d4	5f		 pop	 rdi
  000d5	5d		 pop	 rbp
  000d6	c3		 ret	 0
  000d7	cc		 int	 3
?catch$8@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::catch$8
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$5
  000d8	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000dd	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000e2	55		 push	 rbp
  000e3	57		 push	 rdi
  000e4	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  000e8	48 8b ea	 mov	 rbp, rdx
  000eb	8b 85 48 02 00
	00		 mov	 eax, DWORD PTR $T15[rbp]
  000f1	83 e0 01	 and	 eax, 1
  000f4	85 c0		 test	 eax, eax
  000f6	74 13		 je	 SHORT $LN16@dtor$5
  000f8	83 a5 48 02 00
	00 fe		 and	 DWORD PTR $T15[rbp], -2
  000ff	48 8b 8d 90 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00106	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
$LN16@dtor$5:
  0010b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0010f	5f		 pop	 rdi
  00110	5d		 pop	 rbp
  00111	c3		 ret	 0
?dtor$5@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$5
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$6
  00112	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00117	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0011c	55		 push	 rbp
  0011d	57		 push	 rdi
  0011e	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00122	48 8b ea	 mov	 rbp, rdx
  00125	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR $T12[rbp]
  0012c	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  00131	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00135	5f		 pop	 rdi
  00136	5d		 pop	 rbp
  00137	c3		 ret	 0
?dtor$6@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
text$x	SEGMENT
s$ = 56
ifs$ = 112
buff$6 = 408
$T7 = 464
$T8 = 472
$T9 = 480
$T10 = 512
$T11 = 520
$T12 = 544
$T13 = 552
$T14 = 576
$T15 = 584
tv157 = 592
tv152 = 600
tv202 = 608
tv80 = 616
tv204 = 624
__$ArrayPad$ = 632
__$ReturnUdt$ = 656
keyfile$ = 664
?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA PROC ; `read_keyfile'::`1'::dtor$7
  00138	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0013d	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00142	55		 push	 rbp
  00143	57		 push	 rdi
  00144	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00148	48 8b ea	 mov	 rbp, rdx
  0014b	48 8b 8d 40 02
	00 00		 mov	 rcx, QWORD PTR $T14[rbp]
  00152	e8 00 00 00 00	 call	 ??1?$_Tree_const_iterator@V?$_Tree_val@U?$_Tree_simple_types@H@std@@@std@@@std@@QEAA@XZ
  00157	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0015b	5f		 pop	 rdi
  0015c	5d		 pop	 rbp
  0015d	c3		 ret	 0
?dtor$7@?0??read_keyfile@@YA?AV?$vector@HV?$allocator@H@std@@@std@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@@Z@4HA ENDP ; `read_keyfile'::`1'::dtor$7
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$_Vector_val@U?$_Simple_types@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::_Vector_val<std::_Simple_types<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	0f 84 85 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0006c	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00071	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00074	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00079	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00081	e8 00 00 00 00	 call	 ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
  00086	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00087	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  0008c	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00091	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00094	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00097	48 2b c1	 sub	 rax, rcx
  0009a	48 99		 cdq
  0009c	b9 28 00 00 00	 mov	 ecx, 40			; 00000028H
  000a1	48 f7 f9	 idiv	 rcx
  000a4	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  000a9	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  000b3	90		 npad	 1
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000b9	4c 8b c1	 mov	 r8, rcx
  000bc	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000c1	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
  000cc	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000cd	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000d2	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000d9	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000de	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000e5	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000ea	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000f1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000f5	5f		 pop	 rdi
  000f6	c3		 ret	 0
?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@QEAV10@AEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@0@Z ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1424 :         return _Mypair._Myval2._Mylast;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_end@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1416 :         return _Mypair._Myval2._Myfirst;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?_Unchecked_begin@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S6$ = 52
$T4 = 68
this$ = 96
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ PROC ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAXXZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAAAEAV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@XZ ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S6$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S6$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@XZ ENDP ; std::vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::~vector<std::basic_string<char,std::char_traits<char>,std::allocator<char> >,std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z PROC ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 6b 44 24 40
	28		 imul	 rax, QWORD PTR _Count$[rsp], 40 ; 00000028H
  0002e	48 8b d0	 mov	 rdx, rax
  00031	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00036	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003f	5f		 pop	 rdi
  00040	c3		 ret	 0
?deallocate@?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEAAXQEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_K@Z ENDP ; std::allocator<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 48
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ PROC ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1205 :         return get();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ; std::_Ptr_base<RGYLog>::get

; 1206 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??$?CVRGYLog@@$0A@@?$shared_ptr@VRGYLog@@@std@@QEBAPEAVRGYLog@@XZ ENDP ; std::shared_ptr<RGYLog>::operator-><RGYLog,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ PROC		; std::shared_ptr<RGYLog>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<RGYLog>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ ENDP		; std::shared_ptr<RGYLog>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VRGYLog@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<RGYLog>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z PROC	; std::shared_ptr<RGYLog>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<RGYLog>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VRGYLog@@@std@@QEAAXAEAV12@@Z ENDP	; std::shared_ptr<RGYLog>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ; std::_Ptr_base<RGYLog>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::~shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ PROC		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VRGYLog@@@std@@QEAA@XZ ENDP		; std::shared_ptr<RGYLog>::shared_ptr<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z PROC	; std::_Ptr_base<RGYLog>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVRGYLog@@X@std@@YAXAEAPEAVRGYLog@@0@Z ; std::swap<RGYLog *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VRGYLog@@@std@@IEAAXAEAV12@@Z ENDP	; std::_Ptr_base<RGYLog>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ PROC	; std::_Ptr_base<RGYLog>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VRGYLog@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<RGYLog>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
;	COMDAT ??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ PROC		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VRGYLog@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<RGYLog>::_Ptr_base<RGYLog>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ
_TEXT	SEGMENT
this$ = 16
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ PROC	; std::_Ptr_base<RGYLog>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 817  :         return _Ptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$_Ptr_base@VRGYLog@@@std@@IEBAPEAVRGYLog@@XZ ENDP	; std::_Ptr_base<RGYLog>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ PROC	; std::shared_ptr<EncodeStatus>::reset, COMDAT

; 1177 :     void reset() noexcept { // release resource and convert to empty shared_ptr object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1178 :         shared_ptr().swap(*this);

  0001e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
  00028	90		 npad	 1
  00029	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  0002e	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00033	48 89 44 24 38	 mov	 QWORD PTR tv71[rsp], rax
  00038	48 8b 54 24 50	 mov	 rdx, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tv71[rsp]
  00042	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<EncodeStatus>::swap
  00047	90		 npad	 1
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0004d	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  00052	90		 npad	 1

; 1179 :     }

  00053	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00057	5f		 pop	 rdi
  00058	c3		 ret	 0
?reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ ENDP	; std::shared_ptr<EncodeStatus>::reset
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
tv72 = 48
tv71 = 56
this$ = 80
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA PROC ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 20	 lea	 rcx, QWORD PTR $T1[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0??reset@?$shared_ptr@VEncodeStatus@@@std@@QEAAXXZ@4HA ENDP ; `std::shared_ptr<EncodeStatus>::reset'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z PROC ; std::shared_ptr<EncodeStatus>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1174 :         this->_Swap(_Other);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Other$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<EncodeStatus>::_Swap

; 1175 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
?swap@?$shared_ptr@VEncodeStatus@@@std@@QEAAXAEAV12@@Z ENDP ; std::shared_ptr<EncodeStatus>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1133 :         this->_Decref();

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ; std::_Ptr_base<EncodeStatus>::_Decref

; 1134 :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
??1?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::~shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ PROC	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00031	5f		 pop	 rdi
  00032	c3		 ret	 0
??0?$shared_ptr@VEncodeStatus@@@std@@QEAA@XZ ENDP	; std::shared_ptr<EncodeStatus>::shared_ptr<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z PROC ; std::_Ptr_base<EncodeStatus>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ??$swap@PEAVEncodeStatus@@X@std@@YAXAEAPEAVEncodeStatus@@0@Z ; std::swap<EncodeStatus *,void>

; 889  :         _STD swap(_Rep, _Right._Rep);

  00035	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 c0 08	 add	 rax, 8
  0003e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00043	48 83 c1 08	 add	 rcx, 8
  00047	48 8b d0	 mov	 rdx, rax
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>

; 890  :     }

  0004f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00053	5f		 pop	 rdi
  00054	c3		 ret	 0
?_Swap@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXAEAV12@@Z ENDP ; std::_Ptr_base<EncodeStatus>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ PROC	; std::_Ptr_base<EncodeStatus>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 882  :         if (_Rep) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0e		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00033	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
$LN2@Decref:

; 884  :         }
; 885  :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Decref@?$_Ptr_base@VEncodeStatus@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<EncodeStatus>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
;	COMDAT ??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ PROC	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0?$_Ptr_base@VEncodeStatus@@@std@@IEAA@XZ ENDP	; std::_Ptr_base<EncodeStatus>::_Ptr_base<EncodeStatus>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z PROC ; std::unique_ptr<void,handle_deleter>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 08 00 00 00	 mov	 edx, 8
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXI@Z ENDP ; std::unique_ptr<void,handle_deleter>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ PROC ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ENDP ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ PROC ; std::unique_ptr<void,handle_deleter>::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  0001e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR $T1[rsp], 0
  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002c	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??$exchange@PEAXPEAX@std@@YAPEAXAEAPEAX$$QEAPEAX@Z ; std::exchange<void *,void *>
  00039	90		 npad	 1

; 1905 :     }

  0003a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0003e	5f		 pop	 rdi
  0003f	c3		 ret	 0
?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ ENDP ; std::unique_ptr<void,handle_deleter>::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ
_TEXT	SEGMENT
this$ = 16
?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ PROC ; std::unique_ptr<void,handle_deleter>::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1896 :         return _Mypair._Myval2;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?get@?$unique_ptr@XUhandle_deleter@@@std@@QEBAPEAXXZ ENDP ; std::unique_ptr<void,handle_deleter>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ
_TEXT	SEGMENT
this$ = 48
?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ PROC ; std::unique_ptr<void,handle_deleter>::get_deleter, COMDAT

; 1879 :     _NODISCARD _Dx& get_deleter() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1880 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first

; 1881 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ ENDP ; std::unique_ptr<void,handle_deleter>::get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ PROC	; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1874 :         if (_Mypair._Myval2) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 1f		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00029	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAAAEAUhandle_deleter@@XZ ; std::_Compressed_pair<handle_deleter,void *,1>::_Get_first
  00036	90		 npad	 1
  00037	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??Rhandle_deleter@@QEBAXPEAX@Z ; handle_deleter::operator()
  00047	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
??1?$unique_ptr@XUhandle_deleter@@@std@@QEAA@XZ ENDP	; std::unique_ptr<void,handle_deleter>::~unique_ptr<void,handle_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 40
this$ = 64
_Right$ = 72
??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z PROC ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter>, COMDAT

; 1833 :     unique_ptr(unique_ptr&& _Right) noexcept

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1834 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Dx>(_Right.get_deleter()), _Right.release()) {}

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?release@?$unique_ptr@XUhandle_deleter@@@std@@QEAAPEAXXZ ; std::unique_ptr<void,handle_deleter>::release
  0002d	90		 npad	 1
  0002e	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00033	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00038	e8 00 00 00 00	 call	 ?get_deleter@?$unique_ptr@XUhandle_deleter@@@std@@QEAAAEAUhandle_deleter@@XZ ; std::unique_ptr<void,handle_deleter>::get_deleter
  0003d	90		 npad	 1
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ??$forward@Uhandle_deleter@@@std@@YA$$QEAUhandle_deleter@@AEAU1@@Z ; std::forward<handle_deleter>
  00046	90		 npad	 1
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	4c 8d 4c 24 20	 lea	 r9, QWORD PTR $T1[rsp]
  00051	4c 8b c0	 mov	 r8, rax
  00054	0f b6 54 24 28	 movzx	 edx, BYTE PTR $T2[rsp]
  00059	e8 00 00 00 00	 call	 ??$?0Uhandle_deleter@@PEAX@?$_Compressed_pair@Uhandle_deleter@@PEAX$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAUhandle_deleter@@$$QEAPEAX@Z ; std::_Compressed_pair<handle_deleter,void *,1>::_Compressed_pair<handle_deleter,void *,1><handle_deleter,void *>
  0005e	90		 npad	 1
  0005f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00068	5f		 pop	 rdi
  00069	c3		 ret	 0
??0?$unique_ptr@XUhandle_deleter@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::unique_ptr<void,handle_deleter>::unique_ptr<void,handle_deleter>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z
_TEXT	SEGMENT
_Old_val$ = 40
$T4 = 112
_Val$ = 120
_New_val$ = 128
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z PROC ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00015	48 8b fc	 mov	 rdi, rsp
  00018	b9 16 00 00 00	 mov	 ecx, 22
  0001d	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00022	f3 ab		 rep stosd
  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  00029	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  0002e	48 8b f8	 mov	 rdi, rax
  00031	48 8b 74 24 78	 mov	 rsi, QWORD PTR _Val$[rsp]
  00036	b9 10 00 00 00	 mov	 ecx, 16
  0003b	f3 a4		 rep movsb

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  0003d	48 8b 7c 24 78	 mov	 rdi, QWORD PTR _Val$[rsp]
  00042	48 8b b4 24 80
	00 00 00	 mov	 rsi, QWORD PTR _New_val$[rsp]
  0004a	b9 10 00 00 00	 mov	 ecx, 16
  0004f	f3 a4		 rep movsb

; 529  :     return _Old_val;

  00051	48 8d 44 24 28	 lea	 rax, QWORD PTR _Old_val$[rsp]
  00056	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T4[rsp]
  0005b	48 8b f0	 mov	 rsi, rax
  0005e	b9 10 00 00 00	 mov	 ecx, 16
  00063	f3 a4		 rep movsb
  00065	48 8b 44 24 70	 mov	 rax, QWORD PTR $T4[rsp]

; 530  : }

  0006a	48 8b f8	 mov	 rdi, rax
  0006d	48 8b cc	 mov	 rcx, rsp
  00070	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z$rtcFrameData
  00077	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0007c	48 8b c7	 mov	 rax, rdi
  0007f	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00083	5f		 pop	 rdi
  00084	5e		 pop	 rsi
  00085	c3		 ret	 0
??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ENDP ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gthread@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gthread@std@@QEAAPEAXI@Z PROC			; std::thread::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 10 00 00 00	 mov	 edx, 16
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gthread@std@@QEAAPEAXI@Z ENDP			; std::thread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
this$ = 96
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 104  :     void join() { // join thread

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0000b	48 8b fc	 mov	 rdi, rsp
  0000e	b9 12 00 00 00	 mov	 ecx, 18
  00013	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00018	f3 ab		 rep stosd
  0001a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 105  :         if (!joinable()) {

  0001f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00024	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00029	0f b6 c0	 movzx	 eax, al
  0002c	85 c0		 test	 eax, eax
  0002e	75 0a		 jne	 SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

  0003a	e8 00 00 00 00	 call	 _Thrd_id
  0003f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00044	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00047	75 0a		 jne	 SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  00049	b9 05 00 00 00	 mov	 ecx, 5
  0004e	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

  00053	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00058	48 8b f8	 mov	 rdi, rax
  0005b	48 8b 74 24 60	 mov	 rsi, QWORD PTR this$[rsp]
  00060	b9 10 00 00 00	 mov	 ecx, 16
  00065	f3 a4		 rep movsb
  00067	33 d2		 xor	 edx, edx
  00069	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T2[rsp]
  0006e	e8 00 00 00 00	 call	 _Thrd_join
  00073	85 c0		 test	 eax, eax
  00075	74 0a		 je	 SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

  00077	b9 02 00 00 00	 mov	 ecx, 2
  0007c	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

  00081	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00086	48 8b f8	 mov	 rdi, rax
  00089	33 c0		 xor	 eax, eax
  0008b	b9 10 00 00 00	 mov	 ecx, 16
  00090	f3 aa		 rep stosb
  00092	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00097	48 8b 7c 24 60	 mov	 rdi, QWORD PTR this$[rsp]
  0009c	48 8b f0	 mov	 rsi, rax
  0009f	b9 10 00 00 00	 mov	 ecx, 16
  000a4	f3 a4		 rep movsb
$LN5@join:

; 118  :     }

  000a6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000aa	5f		 pop	 rdi
  000ab	5e		 pop	 rsi
  000ac	c3		 ret	 0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 0
this$ = 32
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 100  :     _NODISCARD bool joinable() const noexcept { // return true if this thread can be joined

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 101  :         return _Thr._Id != 0;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00027	74 09		 je	 SHORT $LN3@joinable
  00029	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  00030	eb 07		 jmp	 SHORT $LN4@joinable
$LN3@joinable:
  00032	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@joinable:
  00039	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 102  :     }

  0003d	48 83 c4 10	 add	 rsp, 16
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??0thread@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 48
$T3 = 64
this$ = 112
_Other$ = 120
??0thread@std@@QEAA@$$QEAV01@@Z PROC			; std::thread::thread, COMDAT

; 80   :     thread(thread&& _Other) noexcept : _Thr(_STD exchange(_Other._Thr, {})) { // move from _Other

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00010	48 8b fc	 mov	 rdi, rsp
  00013	b9 16 00 00 00	 mov	 ecx, 22
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  00024	48 8d 44 24 30	 lea	 rax, QWORD PTR $T2[rsp]
  00029	48 8b f8	 mov	 rdi, rax
  0002c	33 c0		 xor	 eax, eax
  0002e	b9 10 00 00 00	 mov	 ecx, 16
  00033	f3 aa		 rep stosb
  00035	48 8b 44 24 78	 mov	 rax, QWORD PTR _Other$[rsp]
  0003a	4c 8d 44 24 30	 lea	 r8, QWORD PTR $T2[rsp]
  0003f	48 8b d0	 mov	 rdx, rax
  00042	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T3[rsp]
  00047	e8 00 00 00 00	 call	 ??$exchange@U_Thrd_imp_t@@U1@@std@@YA?AU_Thrd_imp_t@@AEAU1@$$QEAU1@@Z ; std::exchange<_Thrd_imp_t,_Thrd_imp_t>
  0004c	90		 npad	 1
  0004d	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  00052	48 8b f9	 mov	 rdi, rcx
  00055	48 8b f0	 mov	 rsi, rax
  00058	b9 10 00 00 00	 mov	 ecx, 16
  0005d	f3 a4		 rep movsb
  0005f	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00064	48 8b 7c 24 70	 mov	 rdi, QWORD PTR this$[rsp]
  00069	48 8b f0	 mov	 rsi, rax
  0006c	b9 10 00 00 00	 mov	 ecx, 16
  00071	f3 a4		 rep movsb

; 81   :     }

  00073	48 8b 44 24 70	 mov	 rax, QWORD PTR this$[rsp]
  00078	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0007c	5f		 pop	 rdi
  0007d	5e		 pop	 rsi
  0007e	c3		 ret	 0
??0thread@std@@QEAA@$$QEAV01@@Z ENDP			; std::thread::thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 74   :     ~thread() noexcept { // clean up

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 75   :         if (joinable()) {

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00028	0f b6 c0	 movzx	 eax, al
  0002b	85 c0		 test	 eax, eax
  0002d	74 06		 je	 SHORT $LN2@thread

; 76   :             _STD terminate();

  0002f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
$LN2@thread:
$LN3@thread:

; 77   :         }
; 78   :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_log.h
;	COMDAT ?getLogLevel@RGYLog@@QEAAHXZ
_TEXT	SEGMENT
this$ = 16
?getLogLevel@RGYLog@@QEAAHXZ PROC			; RGYLog::getLogLevel, COMDAT

; 55   :     int getLogLevel() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 56   :         return m_nLogLevel;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	8b 40 08	 mov	 eax, DWORD PTR [rax+8]

; 57   :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?getLogLevel@RGYLog@@QEAAHXZ ENDP			; RGYLog::getLogLevel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1sTrimParam@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1sTrimParam@@QEAA@XZ PROC				; sTrimParam::~sTrimParam, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1sTrimParam@@QEAA@XZ ENDP				; sTrimParam::~sTrimParam
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA PROC		; `sTrimParam::~sTrimParam'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA ENDP		; `sTrimParam::~sTrimParam'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA PROC		; `sTrimParam::~sTrimParam'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1sTrimParam@@QEAA@XZ@4HA ENDP		; `sTrimParam::~sTrimParam'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0sTrimParam@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0sTrimParam@@QEAA@XZ PROC				; sTrimParam::sTrimParam, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::vector<sTrim,std::allocator<sTrim> >
  0002b	90		 npad	 1
  0002c	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00035	5f		 pop	 rdi
  00036	c3		 ret	 0
??0sTrimParam@@QEAA@XZ ENDP				; sTrimParam::sTrimParam
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA PROC		; `sTrimParam::sTrimParam'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA ENDP		; `sTrimParam::sTrimParam'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA PROC		; `sTrimParam::sTrimParam'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0sTrimParam@@QEAA@XZ@4HA ENDP		; `sTrimParam::sTrimParam'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<sTrim> >::_Vector_val<std::_Simple_types<sTrim> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00035	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003a	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00054	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<sTrim> >::_Vector_val<std::_Simple_types<sTrim> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ PROC ; std::vector<sTrim,std::allocator<sTrim> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1689 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Get_first

; 1690 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ ENDP ; std::vector<sTrim,std::allocator<sTrim> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
_Myend$ = 56
tv82 = 64
this$ = 96
?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ PROC ; std::vector<sTrim,std::allocator<sTrim> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  00044	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  00049	48 83 c0 18	 add	 rax, 24
  0004d	48 89 44 24 38	 mov	 QWORD PTR _Myend$[rsp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00052	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  0005d	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00062	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00066	74 7f		 je	 SHORT $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  00068	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006d	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00070	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  00075	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00078	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0007d	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z ; std::vector<sTrim,std::allocator<sTrim> >::_Destroy
  00082	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00083	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  0008d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 2b c1	 sub	 rax, rcx
  00096	48 c1 f8 03	 sar	 rax, 3
  0009a	48 89 44 24 40	 mov	 QWORD PTR tv82[rsp], rax
  0009f	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::vector<sTrim,std::allocator<sTrim> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv82[rsp]
  000af	4c 8b c1	 mov	 r8, rcx
  000b2	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  000b7	48 8b 11	 mov	 rdx, QWORD PTR [rcx]
  000ba	48 8b c8	 mov	 rcx, rax
  000bd	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z ; std::allocator<sTrim>::deallocate
  000c2	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000c3	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  000c8	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000cf	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  000d4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  000db	48 8b 44 24 38	 mov	 rax, QWORD PTR _Myend$[rsp]
  000e0	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  000e7	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000eb	5f		 pop	 rdi
  000ec	c3		 ret	 0
?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ ENDP ; std::vector<sTrim,std::allocator<sTrim> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z
_TEXT	SEGMENT
this$ = 48
_First$ = 56
_Last$ = 64
?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z PROC ; std::vector<sTrim,std::allocator<sTrim> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::vector<sTrim,std::allocator<sTrim> >::_Getal
  00032	4c 8b c0	 mov	 r8, rax
  00035	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Last$[rsp]
  0003a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _First$[rsp]
  0003f	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UsTrim@@@std@@@std@@YAXPEAUsTrim@@QEAU1@AEAV?$allocator@UsTrim@@@0@@Z ; std::_Destroy_range<std::allocator<sTrim> >

; 1569 :     }

  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z ENDP ; std::vector<sTrim,std::allocator<sTrim> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 32
_Myfirst$ = 40
_Mylast$ = 48
this$ = 80
?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ PROC ; std::vector<sTrim,std::allocator<sTrim> >::clear, COMDAT

; 1333 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1334 :         auto& _My_data    = _Mypair._Myval2;

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 89 44 24 20	 mov	 QWORD PTR _My_data$[rsp], rax

; 1335 :         pointer& _Myfirst = _My_data._Myfirst;

  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 89 44 24 28	 mov	 QWORD PTR _Myfirst$[rsp], rax

; 1336 :         pointer& _Mylast  = _My_data._Mylast;

  00036	48 8b 44 24 20	 mov	 rax, QWORD PTR _My_data$[rsp]
  0003b	48 83 c0 10	 add	 rax, 16
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Mylast$[rsp], rax

; 1337 : 
; 1338 :         _My_data._Orphan_all();

  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data$[rsp]
  00049	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0004e	90		 npad	 1

; 1339 :         _Destroy(_Myfirst, _Mylast);

  0004f	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  00054	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00057	48 8b 44 24 28	 mov	 rax, QWORD PTR _Myfirst$[rsp]
  0005c	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0005f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00064	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXPEAUsTrim@@0@Z ; std::vector<sTrim,std::allocator<sTrim> >::_Destroy
  00069	90		 npad	 1

; 1340 :         _Mylast = _Myfirst;

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR _Mylast$[rsp]
  0006f	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Myfirst$[rsp]
  00074	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00077	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1341 :     }

  0007a	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0007e	5f		 pop	 rdi
  0007f	c3		 ret	 0
?clear@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAAXXZ ENDP ; std::vector<sTrim,std::allocator<sTrim> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S7$ = 52
$T4 = 68
this$ = 96
??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ PROC ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 624  :         _Tidy();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAXXZ ; std::vector<sTrim,std::allocator<sTrim> >::_Tidy
  00028	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::vector<sTrim,std::allocator<sTrim> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S7$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><sTrim>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S7$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  0004c	48 c7 44 24 44
	00 00 00 00	 mov	 QWORD PTR $T4[rsp], 0
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005a	48 8d 54 24 44	 lea	 rdx, QWORD PTR $T4[rsp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00067	90		 npad	 1
  00068	48 8b d0	 mov	 rdx, rax
  0006b	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  00070	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00075	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  00076	48 8b cc	 mov	 rcx, rsp
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ$rtcFrameData
  00080	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00085	90		 npad	 1
  00086	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0008a	5f		 pop	 rdi
  0008b	c3		 ret	 0
??1?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ENDP ; std::vector<sTrim,std::allocator<sTrim> >::~vector<sTrim,std::allocator<sTrim> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ PROC ; std::vector<sTrim,std::allocator<sTrim> >::vector<sTrim,std::allocator<sTrim> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UsTrim@@@std@@V?$_Vector_val@U?$_Simple_types@UsTrim@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1>::_Compressed_pair<std::allocator<sTrim>,std::_Vector_val<std::_Simple_types<sTrim> >,1><>
  00030	90		 npad	 1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@AEAAAEAV?$allocator@UsTrim@@@2@XZ ; std::vector<sTrim,std::allocator<sTrim> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0UsTrim@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UsTrim@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><sTrim>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 388  :     }

  00058	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
??0?$vector@UsTrim@@V?$allocator@UsTrim@@@std@@@std@@QEAA@XZ ENDP ; std::vector<sTrim,std::allocator<sTrim> >::vector<sTrim,std::allocator<sTrim> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z PROC ; std::allocator<sTrim>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR _Count$[rsp]
  0002d	48 c1 e0 03	 shl	 rax, 3
  00031	48 8b d0	 mov	 rdx, rax
  00034	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00039	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0003e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?deallocate@?$allocator@UsTrim@@@std@@QEAAXQEAUsTrim@@_K@Z ENDP ; std::allocator<sTrim>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@UsTrim@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@UsTrim@@@std@@QEAA@XZ PROC		; std::allocator<sTrim>::allocator<sTrim>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@UsTrim@@@std@@QEAA@XZ ENDP		; std::allocator<sTrim>::allocator<sTrim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0VideoInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0VideoInfo@@QEAA@XZ PROC				; VideoInfo::VideoInfo, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 70	 add	 rax, 112		; 00000070H
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??0VideoVUIInfo@@QEAA@XZ ; VideoVUIInfo::VideoVUIInfo
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
??0VideoInfo@@QEAA@XZ ENDP				; VideoInfo::VideoInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4293 :     const basic_string<_Elem, _Traits, _Alloc>& _Right) { // return string + string

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4294 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4295 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@AEBV10@@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z
_TEXT	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4321 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00028	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR $T1[rsp], 0

; 4322 :     return _STD move(_Left.append(_Right));

  00030	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Right$[rsp]
  00035	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Left$[rsp]
  0003a	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YA$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::move<std::basic_string<char,std::char_traits<char>,std::allocator<char> > &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  0004f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00054	90		 npad	 1
  00055	8b 44 24 20	 mov	 eax, DWORD PTR $T1[rsp]
  00059	83 c8 01	 or	 eax, 1
  0005c	89 44 24 20	 mov	 DWORD PTR $T1[rsp], eax
  00060	48 8b 44 24 40	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4323 : }

  00065	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00069	5f		 pop	 rdi
  0006a	c3		 ret	 0
  0006b	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
__$ReturnUdt$ = 64
_Left$ = 72
_Right$ = 80
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 20	 mov	 eax, DWORD PTR $T1[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 0d		 je	 SHORT $LN4@dtor$0
  0001d	83 65 20 fe	 and	 DWORD PTR $T1[rbp], -2
  00021	48 8b 4d 40	 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00025	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN4@dtor$0:
  0002a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002e	5f		 pop	 rdi
  0002f	5d		 pop	 rbp
  00030	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@$$QEAV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z
_TEXT	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z PROC ; std::operator+<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4265 :     _In_z_ const _Elem* const _Right) { // return string + NTCTS

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 70	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
  0003d	c7 44 24 60 00
	00 00 00	 mov	 DWORD PTR $T4[rsp], 0

; 4266 :     using _String_type = basic_string<_Elem, _Traits, _Alloc>;
; 4267 :     using _Size_type   = typename _String_type::size_type;
; 4268 :     _String_type _Ans;

  00045	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1

; 4269 :     _Ans.reserve(_Convert_size<_Size_type>(_Left.size() + _Traits::length(_Right)));

  00050	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _Left$[rsp]
  00058	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  0005d	48 89 44 24 68	 mov	 QWORD PTR tv70[rsp], rax
  00062	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _Right$[rsp]
  0006a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0006f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR tv70[rsp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00082	48 8b d0	 mov	 rdx, rax
  00085	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0008a	e8 00 00 00 00	 call	 ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve

; 4270 :     _Ans += _Left;

  0008f	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Left$[rsp]
  00097	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  0009c	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4271 :     _Ans += _Right;

  000a1	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _Right$[rsp]
  000a9	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000ae	e8 00 00 00 00	 call	 ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=

; 4272 :     return _Ans;

  000b3	48 8d 54 24 28	 lea	 rdx, QWORD PTR _Ans$[rsp]
  000b8	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR __$ReturnUdt$[rsp]
  000c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000c5	8b 44 24 60	 mov	 eax, DWORD PTR $T4[rsp]
  000c9	83 c8 01	 or	 eax, 1
  000cc	89 44 24 60	 mov	 DWORD PTR $T4[rsp], eax
  000d0	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Ans$[rsp]
  000d5	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000da	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR __$ReturnUdt$[rsp]

; 4273 : }

  000e2	48 8b f8	 mov	 rdi, rax
  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 4c 24 70	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000fc	48 33 cc	 xor	 rcx, rsp
  000ff	e8 00 00 00 00	 call	 __security_check_cookie
  00104	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  0010b	5f		 pop	 rdi
  0010c	c3		 ret	 0
  0010d	cc		 int	 3
??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z ENDP ; std::operator+<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ans$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Ans$ = 40
$T4 = 96
tv70 = 104
__$ArrayPad$ = 112
__$ReturnUdt$ = 144
_Left$ = 152
_Right$ = 160
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA PROC ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	8b 45 60	 mov	 eax, DWORD PTR $T4[rbp]
  00016	83 e0 01	 and	 eax, 1
  00019	85 c0		 test	 eax, eax
  0001b	74 10		 je	 SHORT $LN5@dtor$1
  0001d	83 65 60 fe	 and	 DWORD PTR $T4[rbp], -2
  00021	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00028	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
$LN5@dtor$1:
  0002d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00031	5f		 pop	 rdi
  00032	5d		 pop	 rbp
  00033	c3		 ret	 0
?dtor$1@?0???$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEBV10@QEBD@Z@4HA ENDP ; `std::operator+<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??0VideoVUIInfo@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0VideoVUIInfo@@QEAA@XZ PROC				; VideoVUIInfo::VideoVUIInfo, COMDAT

; 1248 :         chromaloc(0) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1242 :         descriptpresent(0),

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1243 :         colorprim((CspColorprim)get_cx_value(list_colorprim, _T("undef"))),

  00029	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_colorprim@@3QBUCX_DESC@@B
  00037	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	89 41 04	 mov	 DWORD PTR [rcx+4], eax

; 1244 :         matrix((CspMatrix)get_cx_value(list_colormatrix, _T("undef"))),

  00044	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_colormatrix@@3QBUCX_DESC@@B
  00052	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0005c	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 1245 :         transfer((CspTransfer)get_cx_value(list_transfer, _T("undef"))),

  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_transfer@@3QBUCX_DESC@@B
  0006d	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  00072	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00077	89 41 0c	 mov	 DWORD PTR [rcx+12], eax

; 1246 :         format(get_cx_value(list_videoformat, _T("undef"))),

  0007a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05PKCPKOLM@undef@
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?list_videoformat@@3QBUCX_DESC@@B
  00088	e8 00 00 00 00	 call	 ?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ; get_cx_value
  0008d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00092	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 1247 :         fullrange(0),

  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0009a	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [rax+20], 0

; 1248 :         chromaloc(0) {

  000a1	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000a6	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [rax+24], 0

; 1249 : 
; 1250 :     }

  000ad	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  000b2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000b6	5f		 pop	 rdi
  000b7	c3		 ret	 0
??0VideoVUIInfo@@QEAA@XZ ENDP				; VideoVUIInfo::VideoVUIInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspColorprimList@@YAXXZ
text$di	SEGMENT
$T1 = 112
$T2 = 168
$T3 = 172
$T4 = 176
$T5 = 180
$T6 = 184
$T7 = 188
$T8 = 192
$T9 = 196
$T10 = 200
$T11 = 204
$T12 = 208
$T13 = 212
$T14 = 216
__$ArrayPad$ = 264
??__ECspColorprimList@@YAXXZ PROC			; `dynamic initializer for 'CspColorprimList'', COMDAT

; 1187 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 08
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1174 : static const auto CspColorprimList = make_array<CspColorprim>(

  0002b	c7 84 24 a8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T2[rsp], 13
  00036	c7 84 24 ac 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T3[rsp], 12
  00041	c7 84 24 b0 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T4[rsp], 11
  0004c	c7 84 24 b4 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T5[rsp], 10
  00057	c7 84 24 b8 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T6[rsp], 9
  00062	c7 84 24 bc 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T7[rsp], 8
  0006d	c7 84 24 c0 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T8[rsp], 7
  00078	c7 84 24 c4 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T9[rsp], 6
  00083	c7 84 24 c8 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T10[rsp], 5
  0008e	c7 84 24 cc 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T11[rsp], 4
  00099	c7 84 24 d0 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T12[rsp], 2
  000a4	c7 84 24 d4 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T13[rsp], 1
  000af	48 8d 84 24 a8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000b7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000bc	48 8d 84 24 ac
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000c4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000c9	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000d1	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000d6	48 8d 84 24 b4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000de	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  000e3	48 8d 84 24 b8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  000eb	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  000f0	48 8d 84 24 bc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  000f8	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  000fd	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00105	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0010a	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00112	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00117	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  0011f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00124	4c 8d 8c 24 cc
	00 00 00	 lea	 r9, QWORD PTR $T11[rsp]
  0012c	4c 8d 84 24 d0
	00 00 00	 lea	 r8, QWORD PTR $T12[rsp]
  00134	48 8d 94 24 d4
	00 00 00	 lea	 rdx, QWORD PTR $T13[rsp]
  0013c	48 8d 8c 24 d8
	00 00 00	 lea	 rcx, QWORD PTR $T14[rsp]
  00144	e8 00 00 00 00	 call	 ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
  00149	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  0014e	48 8b f9	 mov	 rdi, rcx
  00151	48 8b f0	 mov	 rsi, rax
  00154	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00159	f3 a4		 rep movsb
  0015b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspColorprimList@@3V?$array@W4CspColorprim@@$0M@@std@@B
  00162	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T1[rsp]
  00167	48 8b f8	 mov	 rdi, rax
  0016a	48 8b f1	 mov	 rsi, rcx
  0016d	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00172	f3 a4		 rep movsb
  00174	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0017c	48 33 cc	 xor	 rcx, rsp
  0017f	e8 00 00 00 00	 call	 __security_check_cookie
  00184	48 81 c4 18 01
	00 00		 add	 rsp, 280		; 00000118H
  0018b	5f		 pop	 rdi
  0018c	5e		 pop	 rsi
  0018d	c3		 ret	 0
??__ECspColorprimList@@YAXXZ ENDP			; `dynamic initializer for 'CspColorprimList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 56
$T2 = 96
<args_0>$ = 104
<args_1>$ = 112
<args_2>$ = 120
<args_3>$ = 128
<args_4>$ = 136
<args_5>$ = 144
<args_6>$ = 152
<args_7>$ = 160
<args_8>$ = 168
<args_9>$ = 176
<args_10>$ = 184
<args_11>$ = 192
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z PROC ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 12 00 00 00	 mov	 ecx, 18
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 68	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 44 24 70	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004c	8b 00		 mov	 eax, DWORD PTR [rax]
  0004e	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_2>$[rsp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  0005d	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  0006b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00073	8b 00		 mov	 eax, DWORD PTR [rax]
  00075	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  00079	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  00087	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  0008f	8b 00		 mov	 eax, DWORD PTR [rax]
  00091	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  00095	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  0009d	8b 00		 mov	 eax, DWORD PTR [rax]
  0009f	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000ab	8b 00		 mov	 eax, DWORD PTR [rax]
  000ad	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b1	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000b9	8b 00		 mov	 eax, DWORD PTR [rax]
  000bb	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000bf	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000c7	8b 00		 mov	 eax, DWORD PTR [rax]
  000c9	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000cd	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000d5	8b 00		 mov	 eax, DWORD PTR [rax]
  000d7	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000db	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  000df	48 8b 7c 24 60	 mov	 rdi, QWORD PTR $T2[rsp]
  000e4	48 8b f0	 mov	 rsi, rax
  000e7	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  000ec	f3 a4		 rep movsb
  000ee	48 8b 44 24 60	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  000f3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f8	48 33 cc	 xor	 rcx, rsp
  000fb	e8 00 00 00 00	 call	 __security_check_cookie
  00100	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
??$make_array@W4CspColorprim@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspColorprim@@$0M@@std@@$$QEAW4CspColorprim@@00000000000@Z ENDP ; make_array<enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim,enum CspColorprim>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspTransferList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 200
$T3 = 204
$T4 = 208
$T5 = 212
$T6 = 216
$T7 = 220
$T8 = 224
$T9 = 228
$T10 = 232
$T11 = 236
$T12 = 240
$T13 = 244
$T14 = 248
$T15 = 252
$T16 = 256
$T17 = 264
__$ArrayPad$ = 328
??__ECspTransferList@@YAXXZ PROC			; `dynamic initializer for 'CspTransferList'', COMDAT

; 1135 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1119 : static const auto CspTransferList = make_array<CspTransfer>(

  0002b	c7 84 24 c8 00
	00 00 12 00 00
	00		 mov	 DWORD PTR $T2[rsp], 18
  00036	c7 84 24 cc 00
	00 00 10 00 00
	00		 mov	 DWORD PTR $T3[rsp], 16
  00041	c7 84 24 d0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T4[rsp], 15
  0004c	c7 84 24 d4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T5[rsp], 14
  00057	c7 84 24 d8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T6[rsp], 13
  00062	c7 84 24 dc 00
	00 00 0b 00 00
	00		 mov	 DWORD PTR $T7[rsp], 11
  0006d	c7 84 24 e0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T8[rsp], 10
  00078	c7 84 24 e4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T9[rsp], 9
  00083	c7 84 24 e8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T10[rsp], 8
  0008e	c7 84 24 ec 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T11[rsp], 7
  00099	c7 84 24 f0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T12[rsp], 6
  000a4	c7 84 24 f4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T13[rsp], 5
  000af	c7 84 24 f8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T14[rsp], 4
  000ba	c7 84 24 fc 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T15[rsp], 2
  000c5	c7 84 24 00 01
	00 00 01 00 00
	00		 mov	 DWORD PTR $T16[rsp], 1
  000d0	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000d8	48 89 44 24 78	 mov	 QWORD PTR [rsp+120], rax
  000dd	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000e5	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000ea	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000f2	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000f7	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000ff	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  00104	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  0010c	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  00111	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  00119	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  0011e	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  00126	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  0012b	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00133	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00138	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00140	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00145	48 8d 84 24 ec
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  0014d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00152	48 8d 84 24 f0
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0015a	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0015f	48 8d 84 24 f4
	00 00 00	 lea	 rax, QWORD PTR $T13[rsp]
  00167	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0016c	4c 8d 8c 24 f8
	00 00 00	 lea	 r9, QWORD PTR $T14[rsp]
  00174	4c 8d 84 24 fc
	00 00 00	 lea	 r8, QWORD PTR $T15[rsp]
  0017c	48 8d 94 24 00
	01 00 00	 lea	 rdx, QWORD PTR $T16[rsp]
  00184	48 8d 8c 24 08
	01 00 00	 lea	 rcx, QWORD PTR $T17[rsp]
  0018c	e8 00 00 00 00	 call	 ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
  00191	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00199	48 8b f9	 mov	 rdi, rcx
  0019c	48 8b f0	 mov	 rsi, rax
  0019f	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001a4	f3 a4		 rep movsb
  001a6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspTransferList@@3V?$array@W4CspTransfer@@$0P@@std@@B
  001ad	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  001b5	48 8b f8	 mov	 rdi, rax
  001b8	48 8b f1	 mov	 rsi, rcx
  001bb	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  001c0	f3 a4		 rep movsb
  001c2	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001ca	48 33 cc	 xor	 rcx, rsp
  001cd	e8 00 00 00 00	 call	 __security_check_cookie
  001d2	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  001d9	5f		 pop	 rdi
  001da	5e		 pop	 rsi
  001db	c3		 ret	 0
??__ECspTransferList@@YAXXZ ENDP			; `dynamic initializer for 'CspTransferList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 72
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
<args_14>$ = 232
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z PROC ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 48	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR <args_14>$[rsp]
  00105	8b 00		 mov	 eax, DWORD PTR [rax]
  00107	89 44 24 38	 mov	 DWORD PTR $T1[rsp+56], eax
  0010b	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  0010f	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00114	48 8b f0	 mov	 rsi, rax
  00117	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  0011c	f3 a4		 rep movsb
  0011e	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00123	48 8b 4c 24 48	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00128	48 33 cc	 xor	 rcx, rsp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00134	5f		 pop	 rdi
  00135	5e		 pop	 rsi
  00136	c3		 ret	 0
??$make_array@W4CspTransfer@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspTransfer@@$0P@@std@@$$QEAW4CspTransfer@@00000000000000@Z ENDP ; make_array<enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer,enum CspTransfer>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??__ECspMatrixList@@YAXXZ
text$di	SEGMENT
$T1 = 128
$T2 = 192
$T3 = 196
$T4 = 200
$T5 = 204
$T6 = 208
$T7 = 212
$T8 = 216
$T9 = 220
$T10 = 224
$T11 = 228
$T12 = 232
$T13 = 236
$T14 = 240
$T15 = 244
$T16 = 248
__$ArrayPad$ = 304
??__ECspMatrixList@@YAXXZ PROC				; `dynamic initializer for 'CspMatrixList'', COMDAT

; 1080 : );

  00000	40 56		 push	 rsi
  00002	57		 push	 rdi
  00003	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00020	48 33 c4	 xor	 rax, rsp
  00023	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 1065 : static const auto CspMatrixList = make_array<CspMatrix>(

  0002b	c7 84 24 c0 00
	00 00 0f 00 00
	00		 mov	 DWORD PTR $T2[rsp], 15
  00036	c7 84 24 c4 00
	00 00 0e 00 00
	00		 mov	 DWORD PTR $T3[rsp], 14
  00041	c7 84 24 c8 00
	00 00 0d 00 00
	00		 mov	 DWORD PTR $T4[rsp], 13
  0004c	c7 84 24 cc 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR $T5[rsp], 12
  00057	c7 84 24 d0 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR $T6[rsp], 10
  00062	c7 84 24 d4 00
	00 00 09 00 00
	00		 mov	 DWORD PTR $T7[rsp], 9
  0006d	c7 84 24 d8 00
	00 00 08 00 00
	00		 mov	 DWORD PTR $T8[rsp], 8
  00078	c7 84 24 dc 00
	00 00 07 00 00
	00		 mov	 DWORD PTR $T9[rsp], 7
  00083	c7 84 24 e0 00
	00 00 06 00 00
	00		 mov	 DWORD PTR $T10[rsp], 6
  0008e	c7 84 24 e4 00
	00 00 05 00 00
	00		 mov	 DWORD PTR $T11[rsp], 5
  00099	c7 84 24 e8 00
	00 00 04 00 00
	00		 mov	 DWORD PTR $T12[rsp], 4
  000a4	c7 84 24 ec 00
	00 00 02 00 00
	00		 mov	 DWORD PTR $T13[rsp], 2
  000af	c7 84 24 f0 00
	00 00 01 00 00
	00		 mov	 DWORD PTR $T14[rsp], 1
  000ba	c7 84 24 f4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR $T15[rsp], 0
  000c5	48 8d 84 24 c0
	00 00 00	 lea	 rax, QWORD PTR $T2[rsp]
  000cd	48 89 44 24 70	 mov	 QWORD PTR [rsp+112], rax
  000d2	48 8d 84 24 c4
	00 00 00	 lea	 rax, QWORD PTR $T3[rsp]
  000da	48 89 44 24 68	 mov	 QWORD PTR [rsp+104], rax
  000df	48 8d 84 24 c8
	00 00 00	 lea	 rax, QWORD PTR $T4[rsp]
  000e7	48 89 44 24 60	 mov	 QWORD PTR [rsp+96], rax
  000ec	48 8d 84 24 cc
	00 00 00	 lea	 rax, QWORD PTR $T5[rsp]
  000f4	48 89 44 24 58	 mov	 QWORD PTR [rsp+88], rax
  000f9	48 8d 84 24 d0
	00 00 00	 lea	 rax, QWORD PTR $T6[rsp]
  00101	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  00106	48 8d 84 24 d4
	00 00 00	 lea	 rax, QWORD PTR $T7[rsp]
  0010e	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  00113	48 8d 84 24 d8
	00 00 00	 lea	 rax, QWORD PTR $T8[rsp]
  0011b	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  00120	48 8d 84 24 dc
	00 00 00	 lea	 rax, QWORD PTR $T9[rsp]
  00128	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0012d	48 8d 84 24 e0
	00 00 00	 lea	 rax, QWORD PTR $T10[rsp]
  00135	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0013a	48 8d 84 24 e4
	00 00 00	 lea	 rax, QWORD PTR $T11[rsp]
  00142	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00147	48 8d 84 24 e8
	00 00 00	 lea	 rax, QWORD PTR $T12[rsp]
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 8c 24 ec
	00 00 00	 lea	 r9, QWORD PTR $T13[rsp]
  0015c	4c 8d 84 24 f0
	00 00 00	 lea	 r8, QWORD PTR $T14[rsp]
  00164	48 8d 94 24 f4
	00 00 00	 lea	 rdx, QWORD PTR $T15[rsp]
  0016c	48 8d 8c 24 f8
	00 00 00	 lea	 rcx, QWORD PTR $T16[rsp]
  00174	e8 00 00 00 00	 call	 ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
  00179	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  00181	48 8b f9	 mov	 rdi, rcx
  00184	48 8b f0	 mov	 rsi, rax
  00187	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0018c	f3 a4		 rep movsb
  0018e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?CspMatrixList@@3V?$array@W4CspMatrix@@$0O@@std@@B
  00195	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T1[rsp]
  0019d	48 8b f8	 mov	 rdi, rax
  001a0	48 8b f1	 mov	 rsi, rcx
  001a3	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  001a8	f3 a4		 rep movsb
  001aa	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  001b2	48 33 cc	 xor	 rcx, rsp
  001b5	e8 00 00 00 00	 call	 __security_check_cookie
  001ba	48 81 c4 48 01
	00 00		 add	 rsp, 328		; 00000148H
  001c1	5f		 pop	 rdi
  001c2	5e		 pop	 rsi
  001c3	c3		 ret	 0
??__ECspMatrixList@@YAXXZ ENDP				; `dynamic initializer for 'CspMatrixList''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z
_TEXT	SEGMENT
$T1 = 0
__$ArrayPad$ = 64
$T2 = 112
<args_0>$ = 120
<args_1>$ = 128
<args_2>$ = 136
<args_3>$ = 144
<args_4>$ = 152
<args_5>$ = 160
<args_6>$ = 168
<args_7>$ = 176
<args_8>$ = 184
<args_9>$ = 192
<args_10>$ = 200
<args_11>$ = 208
<args_12>$ = 216
<args_13>$ = 224
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z PROC ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>, COMDAT

; 129  : constexpr std::array<T, sizeof...(Args)> make_array(Args&&... args) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	56		 push	 rsi
  00015	57		 push	 rdi
  00016	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  0001a	48 8b fc	 mov	 rdi, rsp
  0001d	b9 16 00 00 00	 mov	 ecx, 22
  00022	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00027	f3 ab		 rep stosd
  00029	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]
  0002e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00035	48 33 c4	 xor	 rax, rsp
  00038	48 89 44 24 40	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 130  :     return std::array<T, sizeof...(Args)>{ static_cast<Args&&>(args)... };

  0003d	48 8b 44 24 78	 mov	 rax, QWORD PTR <args_0>$[rsp]
  00042	8b 00		 mov	 eax, DWORD PTR [rax]
  00044	89 04 24	 mov	 DWORD PTR $T1[rsp], eax
  00047	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR <args_1>$[rsp]
  0004f	8b 00		 mov	 eax, DWORD PTR [rax]
  00051	89 44 24 04	 mov	 DWORD PTR $T1[rsp+4], eax
  00055	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR <args_2>$[rsp]
  0005d	8b 00		 mov	 eax, DWORD PTR [rax]
  0005f	89 44 24 08	 mov	 DWORD PTR $T1[rsp+8], eax
  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR <args_3>$[rsp]
  0006b	8b 00		 mov	 eax, DWORD PTR [rax]
  0006d	89 44 24 0c	 mov	 DWORD PTR $T1[rsp+12], eax
  00071	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR <args_4>$[rsp]
  00079	8b 00		 mov	 eax, DWORD PTR [rax]
  0007b	89 44 24 10	 mov	 DWORD PTR $T1[rsp+16], eax
  0007f	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR <args_5>$[rsp]
  00087	8b 00		 mov	 eax, DWORD PTR [rax]
  00089	89 44 24 14	 mov	 DWORD PTR $T1[rsp+20], eax
  0008d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR <args_6>$[rsp]
  00095	8b 00		 mov	 eax, DWORD PTR [rax]
  00097	89 44 24 18	 mov	 DWORD PTR $T1[rsp+24], eax
  0009b	48 8b 84 24 b0
	00 00 00	 mov	 rax, QWORD PTR <args_7>$[rsp]
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 44 24 1c	 mov	 DWORD PTR $T1[rsp+28], eax
  000a9	48 8b 84 24 b8
	00 00 00	 mov	 rax, QWORD PTR <args_8>$[rsp]
  000b1	8b 00		 mov	 eax, DWORD PTR [rax]
  000b3	89 44 24 20	 mov	 DWORD PTR $T1[rsp+32], eax
  000b7	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR <args_9>$[rsp]
  000bf	8b 00		 mov	 eax, DWORD PTR [rax]
  000c1	89 44 24 24	 mov	 DWORD PTR $T1[rsp+36], eax
  000c5	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR <args_10>$[rsp]
  000cd	8b 00		 mov	 eax, DWORD PTR [rax]
  000cf	89 44 24 28	 mov	 DWORD PTR $T1[rsp+40], eax
  000d3	48 8b 84 24 d0
	00 00 00	 mov	 rax, QWORD PTR <args_11>$[rsp]
  000db	8b 00		 mov	 eax, DWORD PTR [rax]
  000dd	89 44 24 2c	 mov	 DWORD PTR $T1[rsp+44], eax
  000e1	48 8b 84 24 d8
	00 00 00	 mov	 rax, QWORD PTR <args_12>$[rsp]
  000e9	8b 00		 mov	 eax, DWORD PTR [rax]
  000eb	89 44 24 30	 mov	 DWORD PTR $T1[rsp+48], eax
  000ef	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR <args_13>$[rsp]
  000f7	8b 00		 mov	 eax, DWORD PTR [rax]
  000f9	89 44 24 34	 mov	 DWORD PTR $T1[rsp+52], eax
  000fd	48 8d 04 24	 lea	 rax, QWORD PTR $T1[rsp]
  00101	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T2[rsp]
  00106	48 8b f0	 mov	 rsi, rax
  00109	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  0010e	f3 a4		 rep movsb
  00110	48 8b 44 24 70	 mov	 rax, QWORD PTR $T2[rsp]

; 131  : }

  00115	48 8b 4c 24 40	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  0011a	48 33 cc	 xor	 rcx, rsp
  0011d	e8 00 00 00 00	 call	 __security_check_cookie
  00122	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00126	5f		 pop	 rdi
  00127	5e		 pop	 rsi
  00128	c3		 ret	 0
??$make_array@W4CspMatrix@@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@W41@@@YA?AV?$array@W4CspMatrix@@$0O@@std@@$$QEAW4CspMatrix@@0000000000000@Z ENDP ; make_array<enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix,enum CspMatrix>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
_TEXT	SEGMENT
i$1 = 32
list$ = 64
chr$ = 72
?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z PROC		; get_cx_value

; 790  : static int get_cx_value(const CX_DESC * list, const TCHAR *chr) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 791  :     for (int i = 0; list[i].desc; i++)

  00023	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$1[rsp], 0
  0002b	eb 0a		 jmp	 SHORT $LN4@get_cx_val
$LN2@get_cx_val:
  0002d	8b 44 24 20	 mov	 eax, DWORD PTR i$1[rsp]
  00031	ff c0		 inc	 eax
  00033	89 44 24 20	 mov	 DWORD PTR i$1[rsp], eax
$LN4@get_cx_val:
  00037	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  0003c	48 6b c0 10	 imul	 rax, rax, 16
  00040	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  00045	48 83 3c 01 00	 cmp	 QWORD PTR [rcx+rax], 0
  0004a	74 36		 je	 SHORT $LN3@get_cx_val

; 792  :         if (0 == _tcscmp(list[i].desc, chr))

  0004c	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00051	48 6b c0 10	 imul	 rax, rax, 16
  00055	48 8b 54 24 48	 mov	 rdx, QWORD PTR chr$[rsp]
  0005a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0005f	48 8b 0c 01	 mov	 rcx, QWORD PTR [rcx+rax]
  00063	e8 00 00 00 00	 call	 _tcscmp
  00068	85 c0		 test	 eax, eax
  0006a	75 14		 jne	 SHORT $LN5@get_cx_val

; 793  :             return list[i].value;

  0006c	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$1[rsp]
  00071	48 6b c0 10	 imul	 rax, rax, 16
  00075	48 8b 4c 24 40	 mov	 rcx, QWORD PTR list$[rsp]
  0007a	8b 44 01 08	 mov	 eax, DWORD PTR [rcx+rax+8]
  0007e	eb 04		 jmp	 SHORT $LN1@get_cx_val
$LN5@get_cx_val:
  00080	eb ab		 jmp	 SHORT $LN2@get_cx_val
$LN3@get_cx_val:

; 794  :     return 0;

  00082	33 c0		 xor	 eax, eax
$LN1@get_cx_val:

; 795  : }

  00084	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00088	5f		 pop	 rdi
  00089	c3		 ret	 0
?get_cx_value@@YAHPEBUCX_DESC@@PEBD@Z ENDP		; get_cx_value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_util.h
;	COMDAT ??Rhandle_deleter@@QEBAXPEAX@Z
_TEXT	SEGMENT
this$ = 48
handle$ = 56
??Rhandle_deleter@@QEBAXPEAX@Z PROC			; handle_deleter::operator(), COMDAT

; 188  :     void operator()(HANDLE handle) const {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 189  :         if (handle) {

  00023	48 83 7c 24 38
	00		 cmp	 QWORD PTR handle$[rsp], 0
  00029	74 0b		 je	 SHORT $LN2@operator

; 190  : #if defined(_WIN32) || defined(_WIN64)
; 191  :             CloseHandle(handle);

  0002b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR handle$[rsp]
  00030	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CloseHandle
$LN2@operator:

; 192  : #endif //#if defined(_WIN32) || defined(_WIN64)
; 193  :         }
; 194  :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??Rhandle_deleter@@QEBAXPEAX@Z ENDP			; handle_deleter::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\tchar.h
;	COMDAT _tcscmp
_TEXT	SEGMENT
_s1$ = 48
_s2$ = 56
_tcscmp	PROC						; COMDAT

; 1681 : _Check_return_ __inline int _tcscmp(_In_z_ _CPC _s1,_In_z_ _CPC _s2) {return _mbscmp((_CPUC)_s1,(_CPUC)_s2);}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _s2$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _s1$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__mbscmp
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
_tcscmp	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtree
;	COMDAT ?_Throw_tree_length_error@std@@YAXXZ
_TEXT	SEGMENT
?_Throw_tree_length_error@std@@YAXXZ PROC		; std::_Throw_tree_length_error, COMDAT

; 416  : [[noreturn]] inline void _Throw_tree_length_error() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 417  :     _Xlength_error("map/set too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@GCADKGJO@map?1set?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Throw_tree:

; 418  : }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Throw_tree_length_error@std@@YAXXZ ENDP		; std::_Throw_tree_length_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = 32
_Byte$ = 64
_File$ = 72
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z PROC		; std::_Ungetc<char>, COMDAT

; 125  : inline bool _Ungetc(const char& _Byte, FILE* _File) { // put back a char element to a C stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 126  :     return _CSTD ungetc(static_cast<unsigned char>(_Byte), _File) != EOF;

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR _Byte$[rsp]
  00028	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0002b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _File$[rsp]
  00030	8b c8		 mov	 ecx, eax
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ungetc
  00038	83 f8 ff	 cmp	 eax, -1
  0003b	74 0a		 je	 SHORT $LN3@Ungetc
  0003d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00045	eb 08		 jmp	 SHORT $LN4@Ungetc
$LN3@Ungetc:
  00047	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@Ungetc:
  0004f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 127  : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5f		 pop	 rdi
  00059	c3		 ret	 0
??$_Ungetc@D@std@@YA_NAEBDPEAU_iobuf@@@Z ENDP		; std::_Ungetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z
_TEXT	SEGMENT
tv69 = 32
_Byte$ = 64
_File$ = 72
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z PROC		; std::_Fputc<char>, COMDAT

; 102  : inline bool _Fputc(char _Byte, FILE* _File) { // put a char element to a C stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00009	57		 push	 rdi
  0000a	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 0c 00 00 00	 mov	 ecx, 12
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	0f b6 4c 24 40	 movzx	 ecx, BYTE PTR [rsp+64]

; 103  :     return _CSTD fputc(_Byte, _File) != EOF;

  00022	0f be 44 24 40	 movsx	 eax, BYTE PTR _Byte$[rsp]
  00027	48 8b 54 24 48	 mov	 rdx, QWORD PTR _File$[rsp]
  0002c	8b c8		 mov	 ecx, eax
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fputc
  00034	83 f8 ff	 cmp	 eax, -1
  00037	74 0a		 je	 SHORT $LN3@Fputc
  00039	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv69[rsp], 1
  00041	eb 08		 jmp	 SHORT $LN4@Fputc
$LN3@Fputc:
  00043	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv69[rsp], 0
$LN4@Fputc:
  0004b	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv69[rsp]

; 104  : }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??$_Fputc@D@std@@YA_NDPEAU_iobuf@@@Z ENDP		; std::_Fputc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\fstream
;	COMDAT ??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z
_TEXT	SEGMENT
_Meta$ = 32
_Byte$ = 64
_File$ = 72
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z PROC		; std::_Fgetc<char>, COMDAT

; 61   : inline bool _Fgetc(char& _Byte, FILE* _File) { // get a char element from a C stream

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 62   :     int _Meta;
; 63   :     if ((_Meta = _CSTD fgetc(_File)) == EOF) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _File$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fgetc
  0002e	89 44 24 20	 mov	 DWORD PTR _Meta$[rsp], eax
  00032	83 7c 24 20 ff	 cmp	 DWORD PTR _Meta$[rsp], -1
  00037	75 06		 jne	 SHORT $LN2@Fgetc

; 64   :         return false;

  00039	32 c0		 xor	 al, al
  0003b	eb 10		 jmp	 SHORT $LN1@Fgetc

; 65   :     } else { // got one, convert to char

  0003d	eb 0e		 jmp	 SHORT $LN3@Fgetc
$LN2@Fgetc:

; 66   :         _Byte = static_cast<char>(_Meta);

  0003f	48 8b 44 24 40	 mov	 rax, QWORD PTR _Byte$[rsp]
  00044	0f b6 4c 24 20	 movzx	 ecx, BYTE PTR _Meta$[rsp]
  00049	88 08		 mov	 BYTE PTR [rax], cl

; 67   :         return true;

  0004b	b0 01		 mov	 al, 1
$LN3@Fgetc:
$LN1@Fgetc:

; 68   :     }
; 69   : }

  0004d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??$_Fgetc@D@std@@YA_NAEADPEAU_iobuf@@@Z ENDP		; std::_Fgetc<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\string
;	COMDAT ?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z
_TEXT	SEGMENT
_Errno_ref$ = 32
_Ptr$ = 40
_Eptr$ = 56
_Ans$ = 68
_Str$ = 96
_Idx$ = 104
_Base$ = 112
?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z PROC ; std::stoi, COMDAT

; 85   : inline int stoi(const string& _Str, size_t* _Idx = nullptr, int _Base = 10) {

$LN7:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 86   :     // convert string to int
; 87   :     int& _Errno_ref  = errno; // Nonzero cost, pay it once

  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0002e	48 89 44 24 20	 mov	 QWORD PTR _Errno_ref$[rsp], rax

; 88   :     const char* _Ptr = _Str.c_str();

  00033	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Str$[rsp]
  00038	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  0003d	48 89 44 24 28	 mov	 QWORD PTR _Ptr$[rsp], rax

; 89   :     char* _Eptr;
; 90   :     _Errno_ref      = 0;

  00042	48 8b 44 24 20	 mov	 rax, QWORD PTR _Errno_ref$[rsp]
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 91   :     const long _Ans = _CSTD strtol(_Ptr, &_Eptr, _Base);

  0004d	44 8b 44 24 70	 mov	 r8d, DWORD PTR _Base$[rsp]
  00052	48 8d 54 24 38	 lea	 rdx, QWORD PTR _Eptr$[rsp]
  00057	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0005c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strtol
  00062	89 44 24 44	 mov	 DWORD PTR _Ans$[rsp], eax

; 92   : 
; 93   :     if (_Ptr == _Eptr) {

  00066	48 8b 44 24 38	 mov	 rax, QWORD PTR _Eptr$[rsp]
  0006b	48 39 44 24 28	 cmp	 QWORD PTR _Ptr$[rsp], rax
  00070	75 0c		 jne	 SHORT $LN2@stoi

; 94   :         _Xinvalid_argument("invalid stoi argument");

  00072	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HGEDEDEC@invalid?5stoi?5argument@
  00079	e8 00 00 00 00	 call	 ?_Xinvalid_argument@std@@YAXPEBD@Z ; std::_Xinvalid_argument
$LN2@stoi:

; 95   :     }
; 96   : 
; 97   :     if (_Errno_ref == ERANGE || _Ans < INT_MIN || INT_MAX < _Ans) {

  0007e	48 8b 44 24 20	 mov	 rax, QWORD PTR _Errno_ref$[rsp]
  00083	83 38 22	 cmp	 DWORD PTR [rax], 34	; 00000022H
  00086	74 14		 je	 SHORT $LN4@stoi
  00088	81 7c 24 44 00
	00 00 80	 cmp	 DWORD PTR _Ans$[rsp], -2147483648 ; ffffffff80000000H
  00090	7c 0a		 jl	 SHORT $LN4@stoi
  00092	81 7c 24 44 ff
	ff ff 7f	 cmp	 DWORD PTR _Ans$[rsp], 2147483647 ; 7fffffffH
  0009a	7e 0c		 jle	 SHORT $LN3@stoi
$LN4@stoi:

; 98   :         _Xout_of_range("stoi argument out of range");

  0009c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BL@MFFNMGGC@stoi?5argument?5out?5of?5range@
  000a3	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN3@stoi:

; 99   :     }
; 100  : 
; 101  :     if (_Idx) {

  000a8	48 83 7c 24 68
	00		 cmp	 QWORD PTR _Idx$[rsp], 0
  000ae	74 18		 je	 SHORT $LN5@stoi

; 102  :         *_Idx = static_cast<size_t>(_Eptr - _Ptr);

  000b0	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000b5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Eptr$[rsp]
  000ba	48 2b c8	 sub	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Idx$[rsp]
  000c5	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@stoi:

; 103  :     }
; 104  : 
; 105  :     return static_cast<int>(_Ans);

  000c8	8b 44 24 44	 mov	 eax, DWORD PTR _Ans$[rsp]
$LN6@stoi:

; 106  : }

  000cc	48 8b f8	 mov	 rdi, rax
  000cf	48 8b cc	 mov	 rcx, rsp
  000d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z$rtcFrameData
  000d9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000de	48 8b c7	 mov	 rax, rdi
  000e1	48 83 c4 50	 add	 rsp, 80			; 00000050H
  000e5	5f		 pop	 rdi
  000e6	c3		 ret	 0
?stoi@std@@YAHAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@PEA_KH@Z ENDP ; std::stoi
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z
_TEXT	SEGMENT
_Facptr$ = 32
_Ptr0$ = 40
tv71 = 48
this$ = 80
_Id$ = 88
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z PROC	; std::locale::_Getfacet, COMDAT

; 374  :     const facet* _Getfacet(size_t _Id) const { // look up a facet in locale object

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 375  :         const facet* _Facptr = _Id < _Ptr->_Facetcount ? _Ptr->_Facetvec[_Id] : nullptr; // null if id off end

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0002c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00030	48 39 44 24 58	 cmp	 QWORD PTR _Id$[rsp], rax
  00035	73 1d		 jae	 SHORT $LN6@Getfacet
  00037	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00040	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00044	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Id$[rsp]
  00049	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  0004d	48 89 44 24 30	 mov	 QWORD PTR tv71[rsp], rax
  00052	eb 09		 jmp	 SHORT $LN7@Getfacet
$LN6@Getfacet:
  00054	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR tv71[rsp], 0
$LN7@Getfacet:
  0005d	48 8b 44 24 30	 mov	 rax, QWORD PTR tv71[rsp]
  00062	48 89 44 24 20	 mov	 QWORD PTR _Facptr$[rsp], rax

; 376  :         if (_Facptr || !_Ptr->_Xparent) {

  00067	48 83 7c 24 20
	00		 cmp	 QWORD PTR _Facptr$[rsp], 0
  0006d	75 11		 jne	 SHORT $LN3@Getfacet
  0006f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00074	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00078	0f b6 40 24	 movzx	 eax, BYTE PTR [rax+36]
  0007c	85 c0		 test	 eax, eax
  0007e	75 07		 jne	 SHORT $LN2@Getfacet
$LN3@Getfacet:

; 377  :             return _Facptr; // found facet or not transparent

  00080	48 8b 44 24 20	 mov	 rax, QWORD PTR _Facptr$[rsp]
  00085	eb 30		 jmp	 SHORT $LN1@Getfacet
$LN2@Getfacet:

; 378  :         }
; 379  : 
; 380  :         // look in current locale
; 381  :         locale::_Locimp* _Ptr0 = _Getgloballocale();

  00087	e8 00 00 00 00	 call	 ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ ; std::locale::_Getgloballocale
  0008c	48 89 44 24 28	 mov	 QWORD PTR _Ptr0$[rsp], rax

; 382  :         if (_Id < _Ptr0->_Facetcount) {

  00091	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr0$[rsp]
  00096	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0009a	48 39 44 24 58	 cmp	 QWORD PTR _Id$[rsp], rax
  0009f	73 14		 jae	 SHORT $LN4@Getfacet

; 383  :             return _Ptr0->_Facetvec[_Id]; // get from current locale

  000a1	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr0$[rsp]
  000a6	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  000aa	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Id$[rsp]
  000af	48 8b 04 c8	 mov	 rax, QWORD PTR [rax+rcx*8]
  000b3	eb 02		 jmp	 SHORT $LN1@Getfacet
$LN4@Getfacet:

; 384  :         }
; 385  : 
; 386  :         return nullptr; // no entry in current locale

  000b5	33 c0		 xor	 eax, eax
$LN1@Getfacet:

; 387  :     }

  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Getfacet@locale@std@@QEBAPEBVfacet@12@_K@Z ENDP	; std::locale::_Getfacet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??1locale@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
tv84 = 40
this$ = 64
??1locale@std@@QEAA@XZ PROC				; std::locale::~locale, COMDAT

; 351  :     ~locale() noexcept {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 352  :         if (_Ptr) {

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 49		 je	 SHORT $LN2@locale

; 353  :             delete _Ptr->_Decref();

  0002a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00038	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	ff 50 10	 call	 QWORD PTR [rax+16]
  00042	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  00047	48 83 7c 24 20
	00		 cmp	 QWORD PTR $T1[rsp], 0
  0004d	74 1b		 je	 SHORT $LN4@locale
  0004f	48 8b 44 24 20	 mov	 rax, QWORD PTR $T1[rsp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	ba 01 00 00 00	 mov	 edx, 1
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR $T1[rsp]
  00061	ff 10		 call	 QWORD PTR [rax]
  00063	48 89 44 24 28	 mov	 QWORD PTR tv84[rsp], rax
  00068	eb 09		 jmp	 SHORT $LN5@locale
$LN4@locale:
  0006a	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR tv84[rsp], 0
$LN5@locale:
$LN2@locale:

; 354  :         }
; 355  :     }

  00073	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00077	5f		 pop	 rdi
  00078	c3		 ret	 0
??1locale@std@@QEAA@XZ ENDP				; std::locale::~locale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 0c	 add	 rax, 12
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 10		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00048	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 48
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 651  :         if (_MT_DECR(_Uses) == 0) {

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	b9 ff ff ff ff	 mov	 ecx, -1
  0002c	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00030	ff c9		 dec	 ecx
  00032	8b c1		 mov	 eax, ecx
  00034	85 c0		 test	 eax, eax
  00036	75 19		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00045	ff 10		 call	 QWORD PTR [rax]

; 653  :             _Decwref();

  00047	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0004c	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
$LN2@Decref:

; 654  :         }
; 655  :     }

  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\typeinfo
;	COMDAT ?_Throw_bad_cast@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_cast@std@@YAXXZ PROC			; std::_Throw_bad_cast, COMDAT

; 78   : [[noreturn]] inline void _Throw_bad_cast() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 79   :     _THROW(bad_cast{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_cast@std@@QEAA@XZ ; std::bad_cast::bad_cast
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI2?AVbad_cast@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 80   : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_cast@std@@YAXXZ ENDP			; std::_Throw_bad_cast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_cast@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_cast@std@@UEAAPEAXI@Z PROC			; std::bad_cast::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_cast@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_cast@std@@UEAAPEAXI@Z ENDP			; std::bad_cast::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_cast@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_cast@std@@QEAA@AEBV01@@Z PROC			; std::bad_cast::bad_cast, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_cast@std@@QEAA@AEBV01@@Z ENDP			; std::bad_cast::bad_cast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_cast@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_cast@std@@UEAA@XZ PROC				; std::bad_cast::~bad_cast, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_cast@std@@UEAA@XZ ENDP				; std::bad_cast::~bad_cast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA PROC		; `std::bad_cast::~bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA ENDP		; `std::bad_cast::~bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA PROC		; `std::bad_cast::~bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_cast@std@@UEAA@XZ@4HA ENDP		; `std::bad_cast::~bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_typeinfo.h
;	COMDAT ??0bad_cast@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_cast@std@@QEAA@XZ PROC				; std::bad_cast::bad_cast, COMDAT

; 131  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 130  :         : exception("bad cast", 1)

  0001e	41 b8 01 00 00
	00		 mov	 r8d, 1
  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08EPJLHIJG@bad?5cast@
  0002b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00030	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00035	90		 npad	 1

; 131  :     {

  00036	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_cast@std@@6B@
  00042	48 89 08	 mov	 QWORD PTR [rax], rcx

; 132  :     }

  00045	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
??0bad_cast@std@@QEAA@XZ ENDP				; std::bad_cast::bad_cast
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA PROC		; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA ENDP		; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA PROC		; `std::bad_cast::bad_cast'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_cast@std@@QEAA@XZ@4HA ENDP		; `std::bad_cast::bad_cast'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_G?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAPEAXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0002b	90		 npad	 1
  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA PROC ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ@4HA ENDP ; `std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1425 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1426 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 16
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1421 :         return *this;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]

; 1422 :     }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4199 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4200 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 48
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4195 :         return _Mypair._Get_first();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

  0002b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002f	5f		 pop	 rdi
  00030	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	48 8b d0	 mov	 rdx, rax
  00030	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 4181 :         _Xlength_error("string too long");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  0001c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 32
_Al$2 = 40
$T3 = 48
this$ = 80
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4165 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0002b	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00039	90		 npad	 1
  0003a	0f b6 c0	 movzx	 eax, al
  0003d	85 c0		 test	 eax, eax
  0003f	74 4f		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004a	48 89 44 24 20	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 4168 :             auto& _Al          = _Getal();

  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00054	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00059	90		 npad	 1
  0005a	48 89 44 24 28	 mov	 QWORD PTR _Al$2[rsp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0005f	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b c8	 mov	 rcx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00070	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00076	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007a	48 ff c0	 inc	 rax
  0007d	4c 8b c0	 mov	 r8, rax
  00080	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$1[rsp]
  00085	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$2[rsp]
  0008a	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  0008f	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  00090	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00095	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0009d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000aa	c6 44 24 30 00	 mov	 BYTE PTR $T3[rsp], 0
  000af	b8 01 00 00 00	 mov	 eax, 1
  000b4	48 6b c0 00	 imul	 rax, rax, 0
  000b8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000bd	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000c2	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T3[rsp]
  000c7	48 8b c8	 mov	 rcx, rax
  000ca	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000cf	90		 npad	 1

; 4178 :     }

  000d0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d4	5f		 pop	 rdi
  000d5	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 32
this$ = 64
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4157 :         _Mypair._Myval2._Mysize = 0;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00038	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  0003d	b8 01 00 00 00	 mov	 eax, 1
  00042	48 6b c0 00	 imul	 rax, rax, 0
  00046	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004b	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00050	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4162 :     }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5f		 pop	 rdi
  00062	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Newsize$ = 72
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT

; 4152 :     void _Eos(const size_type _Newsize) { // set new length and null terminator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 4153 :         _Traits::assign(_Mypair._Myval2._Myptr()[_Mypair._Myval2._Mysize = _Newsize], _Elem());

  00023	c6 44 24 20 00	 mov	 BYTE PTR $T1[rsp], 0
  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  00032	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx
  00036	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b c8	 mov	 rcx, rax
  0003e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00043	48 03 44 24 48	 add	 rax, QWORD PTR _Newsize$[rsp]
  00048	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 4154 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$ = 32
_Al$ = 40
tv86 = 48
this$ = 80
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small, COMDAT

; 4139 :     void _Become_small() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4140 :         // release any held storage and return to small string mode
; 4141 :         // pre: *this is in large string mode
; 4142 :         // pre: this is small enough to return to small string mode
; 4143 :         _Mypair._Myval2._Orphan_all();

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4144 :         const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0002b	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00030	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00034	48 89 44 24 20	 mov	 QWORD PTR _Ptr$[rsp], rax

; 4145 :         auto& _Al          = _Getal();

  00039	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00043	48 89 44 24 28	 mov	 QWORD PTR _Al$[rsp], rax

; 4146 :         _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  00048	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c0 08	 add	 rax, 8
  00051	48 8b c8	 mov	 rcx, rax
  00054	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>

; 4147 :         _Traits::copy(_Mypair._Myval2._Bx._Buf, _Unfancy(_Ptr), _Mypair._Myval2._Mysize + 1);

  00059	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00062	48 ff c0	 inc	 rax
  00065	48 89 44 24 30	 mov	 QWORD PTR tv86[rsp], rax
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00074	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00079	48 83 c1 08	 add	 rcx, 8
  0007d	48 8b 54 24 30	 mov	 rdx, QWORD PTR tv86[rsp]
  00082	4c 8b c2	 mov	 r8, rdx
  00085	48 8b d0	 mov	 rdx, rax
  00088	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 4148 :         _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00092	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00096	48 ff c0	 inc	 rax
  00099	4c 8b c0	 mov	 r8, rax
  0009c	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  000a1	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Al$[rsp]
  000a6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4149 :         _Mypair._Myval2._Myres = _BUF_SIZE - 1;

  000ab	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000b0	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4150 :     }

  000b8	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bc	5f		 pop	 rdi
  000bd	c3		 ret	 0
?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
this$ = 48
_Requested$ = 56
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00028	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  0002d	4c 8b c0	 mov	 r8, rax
  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 50 20	 mov	 rdx, QWORD PTR [rax+32]
  00039	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Requested$[rsp]
  0003e	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth

; 4079 :     }

  00043	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 40
$T4 = 56
_Requested$ = 80
_Old$ = 88
_Max$ = 96
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR _Requested$[rsp]
  0002d	48 83 c8 0f	 or	 rax, 15
  00031	48 89 44 24 28	 mov	 QWORD PTR _Masked$[rsp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0003b	48 39 44 24 28	 cmp	 QWORD PTR _Masked$[rsp], rax
  00040	76 07		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  00042	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  00047	eb 59		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00049	33 d2		 xor	 edx, edx
  0004b	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00050	b9 02 00 00 00	 mov	 ecx, 2
  00055	48 f7 f1	 div	 rcx
  00058	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Max$[rsp]
  0005d	48 2b c8	 sub	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 39 44 24 58	 cmp	 QWORD PTR _Old$[rsp], rax
  00068	76 07		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0006a	48 8b 44 24 60	 mov	 rax, QWORD PTR _Max$[rsp]
  0006f	eb 31		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  00071	33 d2		 xor	 edx, edx
  00073	48 8b 44 24 58	 mov	 rax, QWORD PTR _Old$[rsp]
  00078	b9 02 00 00 00	 mov	 ecx, 2
  0007d	48 f7 f1	 div	 rcx
  00080	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Old$[rsp]
  00085	48 03 c8	 add	 rcx, rax
  00088	48 8b c1	 mov	 rax, rcx
  0008b	48 89 44 24 38	 mov	 QWORD PTR $T4[rsp], rax
  00090	48 8d 54 24 38	 lea	 rdx, QWORD PTR $T4[rsp]
  00095	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Masked$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0009f	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000a2	48 8b f8	 mov	 rdi, rax
  000a5	48 8b cc	 mov	 rcx, rsp
  000a8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000af	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b4	48 8b c7	 mov	 rax, rdi
  000b7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000bb	5f		 pop	 rdi
  000bc	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 32
this$ = 64
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT

; 3622 :     _NODISCARD bool empty() const noexcept { // test if sequence is empty

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3623 :         return size() == 0;

  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00028	48 85 c0	 test	 rax, rax
  0002b	75 0a		 jne	 SHORT $LN3@empty
  0002d	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  00035	eb 08		 jmp	 SHORT $LN4@empty
$LN3@empty:
  00037	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN4@empty:
  0003f	0f b6 44 24 20	 movzx	 eax, BYTE PTR tv67[rsp]

; 3624 :     }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
_Old_size$1 = 32
$T2 = 40
this$ = 64
_Newcap$ = 72
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve, COMDAT

; 3593 :     void reserve(_CRT_GUARDOVERFLOW const size_type _Newcap = 0) { // determine new minimum length of allocated storage

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3594 :         if (_Mypair._Myval2._Mysize > _Newcap) { // requested capacity is not large enough for current size, ignore

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	76 05		 jbe	 SHORT $LN2@reserve

; 3595 :             return; // nothing to do

  00033	e9 9d 00 00 00	 jmp	 $LN1@reserve
$LN2@reserve:

; 3596 :         }
; 3597 : 
; 3598 :         if (_Mypair._Myval2._Myres == _Newcap) { // we're already at the requested capacity

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00042	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  00046	75 05		 jne	 SHORT $LN3@reserve

; 3599 :             return; // nothing to do

  00048	e9 88 00 00 00	 jmp	 $LN1@reserve
$LN3@reserve:

; 3600 :         }
; 3601 : 
; 3602 :         if (_Mypair._Myval2._Myres < _Newcap) { // reallocate to grow

  0004d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00052	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00057	48 39 48 20	 cmp	 QWORD PTR [rax+32], rcx
  0005b	73 52		 jae	 SHORT $LN4@reserve

; 3603 :             const size_type _Old_size = _Mypair._Myval2._Mysize;

  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00062	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00066	48 89 44 24 20	 mov	 QWORD PTR _Old_size$1[rsp], rax

; 3604 :             _Reallocate_grow_by(

  0006b	48 8d 44 24 28	 lea	 rax, QWORD PTR $T2[rsp]
  00070	48 8b f8	 mov	 rdi, rax
  00073	33 c0		 xor	 eax, eax
  00075	b9 01 00 00 00	 mov	 ecx, 1
  0007a	f3 aa		 rep stosb
  0007c	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$1[rsp]
  00081	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newcap$[rsp]
  00086	48 2b c8	 sub	 rcx, rax
  00089	48 8b c1	 mov	 rax, rcx
  0008c	44 0f b6 44 24
	28		 movzx	 r8d, BYTE PTR $T2[rsp]
  00092	48 8b d0	 mov	 rdx, rax
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0009a	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_9013ee9e23efe4882b67eff5b0ecf103>@@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_9013ee9e23efe4882b67eff5b0ecf103> >

; 3605 :                 _Newcap - _Old_size, [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size) {
; 3606 :                     _Traits::copy(_New_ptr, _Old_ptr, _Old_size + 1);
; 3607 :                 });
; 3608 : 
; 3609 :             _Mypair._Myval2._Mysize = _Old_size;

  0009f	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$1[rsp]
  000a9	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3610 :             return;

  000ad	eb 26		 jmp	 SHORT $LN1@reserve
$LN4@reserve:

; 3611 :         }
; 3612 : 
; 3613 :         if (_BUF_SIZE > _Newcap && _Mypair._Myval2._Large_string_engaged()) {

  000af	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Newcap$[rsp], 16
  000b5	73 1e		 jae	 SHORT $LN5@reserve
  000b7	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000bc	48 8b c8	 mov	 rcx, rax
  000bf	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  000c4	0f b6 c0	 movzx	 eax, al
  000c7	85 c0		 test	 eax, eax
  000c9	74 0a		 je	 SHORT $LN5@reserve

; 3614 :             // deallocate everything; switch back to "small" mode
; 3615 :             _Become_small();

  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000d0	e8 00 00 00 00	 call	 ?_Become_small@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Become_small
$LN5@reserve:
$LN1@reserve:

; 3616 :             return;
; 3617 :         }
; 3618 : 
; 3619 :         // ignore requests to reserve to [_BUF_SIZE, _Myres)
; 3620 :     }

  000d5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d9	5f		 pop	 rdi
  000da	c3		 ret	 0
?reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::reserve
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z
_TEXT	SEGMENT
_Old_size$ = 32
this$ = 64
_Newsize$ = 72
_Ch$ = 80
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize, COMDAT

; 3579 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize, const _Elem _Ch = _Elem()) {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 3580 :         // determine new length, padding with _Ch elements as needed
; 3581 :         const size_type _Old_size = size();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00032	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3582 :         if (_Newsize <= _Old_size) {

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  0003c	48 39 44 24 48	 cmp	 QWORD PTR _Newsize$[rsp], rax
  00041	77 11		 ja	 SHORT $LN2@resize

; 3583 :             _Eos(_Newsize);

  00043	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Newsize$[rsp]
  00048	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 3584 :         } else {

  00052	eb 23		 jmp	 SHORT $LN3@resize
$LN2@resize:

; 3585 :             append(_Newsize - _Old_size, _Ch);

  00054	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00059	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Newsize$[rsp]
  0005e	48 2b c8	 sub	 rcx, rax
  00061	48 8b c1	 mov	 rax, rcx
  00064	44 0f b6 44 24
	50		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  0006a	48 8b d0	 mov	 rdx, rax
  0006d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00072	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN3@resize:

; 3586 :         }
; 3587 :     }

  00077	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007b	5f		 pop	 rdi
  0007c	c3		 ret	 0
?resize@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 40
_Storage_max$ = 56
$T4 = 64
$T5 = 72
$T6 = 80
this$ = 112
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 60	 sub	 rsp, 96			; 00000060H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 18 00 00 00	 mov	 ecx, 24
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 70	 mov	 rcx, QWORD PTR [rsp+112]

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  0001e	48 8b 4c 24 70	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  00030	48 89 44 24 28	 mov	 QWORD PTR _Alloc_max$[rsp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00035	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR $T4[rsp], 16
  0003e	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T4[rsp]
  00043	48 8d 4c 24 28	 lea	 rcx, QWORD PTR _Alloc_max$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 89 44 24 38	 mov	 QWORD PTR _Storage_max$[rsp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00055	48 8b 44 24 38	 mov	 rax, QWORD PTR _Storage_max$[rsp]
  0005a	48 ff c8	 dec	 rax
  0005d	48 89 44 24 48	 mov	 QWORD PTR $T5[rsp], rax
  00062	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00067	48 89 44 24 50	 mov	 QWORD PTR $T6[rsp], rax
  0006c	48 8d 54 24 48	 lea	 rdx, QWORD PTR $T5[rsp]
  00071	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T6[rsp]
  00076	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0007b	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b cc	 mov	 rcx, rsp
  00084	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  0008b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00090	48 8b c7	 mov	 rax, rdi
  00093	48 83 c4 60	 add	 rsp, 96			; 00000060H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3567 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 16
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length, COMDAT

; 3562 :     _NODISCARD size_type length() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 3563 :         return _Mypair._Myval2._Mysize;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3564 :     }

  0000f	5f		 pop	 rdi
  00010	c3		 ret	 0
?length@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT

; 3552 :     _NODISCARD _Ret_z_ const _Elem* data() const noexcept { // return pointer to immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3553 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3554 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 48
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3549 :         return _Mypair._Myval2._Myptr();

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8b c8	 mov	 rcx, rax
  00026	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0002b	90		 npad	 1

; 3550 :     }

  0002c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ
_TEXT	SEGMENT
this$ = 64
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front, COMDAT

; 3516 :     _NODISCARD reference front() {

$LN12:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@front:

; 3517 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3518 :         _STL_VERIFY(_Mypair._Myval2._Mysize != 0, "front() called on empty string");

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 18 00	 cmp	 QWORD PTR [rax+24], 0
  00028	74 02		 je	 SHORT $LN8@front
  0002a	eb 6b		 jmp	 SHORT $LN9@front
$LN8@front:
$LN7@front:
  0002c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BP@PFIPNLNI@front?$CI?$CJ?5called?5on?5empty?5string@
  00033	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00038	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0003f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00044	45 33 c9	 xor	 r9d, r9d
  00047	41 b8 be 0d 00
	00		 mov	 r8d, 3518		; 00000dbeH
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00054	b9 02 00 00 00	 mov	 ecx, 2
  00059	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0005f	83 f8 01	 cmp	 eax, 1
  00062	75 03		 jne	 SHORT $LN11@front
  00064	cc		 int	 3
  00065	33 c0		 xor	 eax, eax
$LN11@front:
  00067	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00070	41 b9 be 0d 00
	00		 mov	 r9d, 3518		; 00000dbeH
  00076	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LC@BJDDPGPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EC@DINNLDHA@?$AA?$CC?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAc?$AAa?$AAl?$AAl?$AAe?$AAd@
  0008b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00091	33 c0		 xor	 eax, eax
  00093	85 c0		 test	 eax, eax
  00095	75 95		 jne	 SHORT $LN7@front
$LN9@front:
  00097	33 c0		 xor	 eax, eax
  00099	85 c0		 test	 eax, eax
  0009b	75 81		 jne	 SHORT $LN4@front

; 3519 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3520 : 
; 3521 :         return _Mypair._Myval2._Myptr()[0];

  0009d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000aa	b9 01 00 00 00	 mov	 ecx, 1
  000af	48 6b c9 00	 imul	 rcx, rcx, 0
  000b3	48 03 c1	 add	 rax, rcx

; 3522 :     }

  000b6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ba	5f		 pop	 rdi
  000bb	c3		 ret	 0
?front@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z
_TEXT	SEGMENT
_Old_size$ = 32
_Ptr$1 = 40
$T2 = 48
$T3 = 49
this$ = 80
_Ch$ = 88
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back, COMDAT

; 3488 :     void push_back(const _Elem _Ch) { // insert element at end

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 10 00 00 00	 mov	 ecx, 16
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3489 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00027	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002b	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3490 :         if (_Old_size < _Mypair._Myval2._Myres) {

  00030	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00039	48 39 44 24 20	 cmp	 QWORD PTR _Old_size$[rsp], rax
  0003e	73 63		 jae	 SHORT $LN2@push_back

; 3491 :             _Mypair._Myval2._Mysize = _Old_size + 1;

  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00045	48 ff c0	 inc	 rax
  00048	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0004d	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 3492 :             _Elem* const _Ptr       = _Mypair._Myval2._Myptr();

  00051	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005e	48 89 44 24 28	 mov	 QWORD PTR _Ptr$1[rsp], rax

; 3493 :             _Traits::assign(_Ptr[_Old_size], _Ch);

  00063	48 8b 44 24 20	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00068	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Ptr$1[rsp]
  0006d	48 03 c8	 add	 rcx, rax
  00070	48 8b c1	 mov	 rax, rcx
  00073	48 8d 54 24 58	 lea	 rdx, QWORD PTR _Ch$[rsp]
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3494 :             _Traits::assign(_Ptr[_Old_size + 1], _Elem());

  00080	c6 44 24 30 00	 mov	 BYTE PTR $T2[rsp], 0
  00085	48 8b 44 24 28	 mov	 rax, QWORD PTR _Ptr$1[rsp]
  0008a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0008f	48 8d 44 08 01	 lea	 rax, QWORD PTR [rax+rcx+1]
  00094	48 8d 54 24 30	 lea	 rdx, QWORD PTR $T2[rsp]
  00099	48 8b c8	 mov	 rcx, rax
  0009c	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 3495 :             return;

  000a1	eb 2c		 jmp	 SHORT $LN1@push_back
$LN2@push_back:

; 3496 :         }
; 3497 : 
; 3498 :         _Reallocate_grow_by(

  000a3	48 8d 44 24 31	 lea	 rax, QWORD PTR $T3[rsp]
  000a8	48 8b f8	 mov	 rdi, rax
  000ab	33 c0		 xor	 eax, eax
  000ad	b9 01 00 00 00	 mov	 ecx, 1
  000b2	f3 aa		 rep stosb
  000b4	44 0f b6 4c 24
	58		 movzx	 r9d, BYTE PTR _Ch$[rsp]
  000ba	44 0f b6 44 24
	31		 movzx	 r8d, BYTE PTR $T3[rsp]
  000c0	ba 01 00 00 00	 mov	 edx, 1
  000c5	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000ca	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_319d5e083f45f90dcdce5dce53cbb275>@@D@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_319d5e083f45f90dcdce5dce53cbb275>,char>
$LN1@push_back:

; 3499 :             1,
; 3500 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem _Ch) {
; 3501 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 3502 :                 _Traits::assign(_New_ptr[_Old_size], _Ch);
; 3503 :                 _Traits::assign(_New_ptr[_Old_size + 1], _Elem());
; 3504 :             },
; 3505 :             _Ch);
; 3506 :     }

  000cf	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000d3	5f		 pop	 rdi
  000d4	c3		 ret	 0
?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3474 :     _NODISCARD const_reference operator[](const size_type _Off) const noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 3475 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3476 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002c	48 39 44 24 48	 cmp	 QWORD PTR _Off$[rsp], rax
  00031	77 02		 ja	 SHORT $LN7@operator
  00033	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 94 0d 00
	00		 mov	 r8d, 3476		; 00000d94H
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	90		 npad	 1
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN11@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN11@operator:
  00071	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007a	41 b9 94 0d 00
	00		 mov	 r9d, 3476		; 00000d94H
  00080	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009b	90		 npad	 1
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000a2	33 c0		 xor	 eax, eax
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 77 ff ff
	ff		 jne	 $LN4@operator

; 3477 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3478 :         return _Mypair._Myval2._Myptr()[_Off];

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000b9	90		 npad	 1
  000ba	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]

; 3479 :     }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAAEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z
_TEXT	SEGMENT
this$ = 64
_Off$ = 72
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[], COMDAT

; 3467 :     _NODISCARD reference operator[](const size_type _Off) noexcept { // strengthened

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
$LN4@operator:

; 3468 : #if _CONTAINER_DEBUG_LEVEL > 0
; 3469 :         _STL_VERIFY(_Off <= _Mypair._Myval2._Mysize, "string subscript out of range");

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0002c	48 39 44 24 48	 cmp	 QWORD PTR _Off$[rsp], rax
  00031	77 02		 ja	 SHORT $LN7@operator
  00033	eb 6d		 jmp	 SHORT $LN9@operator
$LN7@operator:
  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@LFGPDMIB@string?5subscript?5out?5of?5range@
  0003c	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00041	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00048	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0004d	45 33 c9	 xor	 r9d, r9d
  00050	41 b8 8d 0d 00
	00		 mov	 r8d, 3469		; 00000d8dH
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@KAEHDKAJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0005d	b9 02 00 00 00	 mov	 ecx, 2
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00068	90		 npad	 1
  00069	83 f8 01	 cmp	 eax, 1
  0006c	75 03		 jne	 SHORT $LN11@operator
  0006e	cc		 int	 3
  0006f	33 c0		 xor	 eax, eax
$LN11@operator:
  00071	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0007a	41 b9 8d 0d 00
	00		 mov	 r9d, 3469		; 00000d8dH
  00080	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@MNJEKPBN@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00087	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@NPPEKPAI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAb?$AAa?$AAs?$AAi?$AAc?$AA_?$AAs?$AAt?$AAr?$AAi@
  0008e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@OADAPGGK@?$AA?$CC?$AAs?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi@
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0009b	90		 npad	 1
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	75 93		 jne	 SHORT $LN7@operator
$LN9@operator:
  000a2	33 c0		 xor	 eax, eax
  000a4	85 c0		 test	 eax, eax
  000a6	0f 85 77 ff ff
	ff		 jne	 $LN4@operator

; 3470 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 3471 :         return _Mypair._Myval2._Myptr()[_Off];

  000ac	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  000b1	48 8b c8	 mov	 rcx, rax
  000b4	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  000b9	90		 npad	 1
  000ba	48 03 44 24 48	 add	 rax, QWORD PTR _Off$[rsp]

; 3472 :     }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5f		 pop	 rdi
  000c4	c3		 ret	 0
??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z
_TEXT	SEGMENT
_Old_size$ = 32
_My_ptr$ = 40
_Erase_at$ = 48
_New_size$ = 56
this$ = 80
_Off$ = 88
_Count$ = 96
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 3094 :     basic_string& erase(const size_type _Off, size_type _Count) { // erase elements [_Off, _Off + _Count)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 3095 :         _Mypair._Myval2._Check_offset(_Off);

  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Off$[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 3096 :         _Count                    = _Mypair._Myval2._Clamp_suffix_size(_Off, _Count);

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	4c 8b 44 24 60	 mov	 r8, QWORD PTR _Count$[rsp]
  00044	48 8b 54 24 58	 mov	 rdx, QWORD PTR _Off$[rsp]
  00049	48 8b c8	 mov	 rcx, rax
  0004c	e8 00 00 00 00	 call	 ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
  00051	48 89 44 24 60	 mov	 QWORD PTR _Count$[rsp], rax

; 3097 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00056	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0005b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0005f	48 89 44 24 20	 mov	 QWORD PTR _Old_size$[rsp], rax

; 3098 :         _Elem* const _My_ptr      = _Mypair._Myval2._Myptr();

  00064	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00069	48 8b c8	 mov	 rcx, rax
  0006c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00071	48 89 44 24 28	 mov	 QWORD PTR _My_ptr$[rsp], rax

; 3099 :         _Elem* const _Erase_at    = _My_ptr + _Off;

  00076	48 8b 44 24 58	 mov	 rax, QWORD PTR _Off$[rsp]
  0007b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _My_ptr$[rsp]
  00080	48 03 c8	 add	 rcx, rax
  00083	48 8b c1	 mov	 rax, rcx
  00086	48 89 44 24 30	 mov	 QWORD PTR _Erase_at$[rsp], rax

; 3100 :         const size_type _New_size = _Old_size - _Count;

  0008b	48 8b 44 24 60	 mov	 rax, QWORD PTR _Count$[rsp]
  00090	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00095	48 2b c8	 sub	 rcx, rax
  00098	48 8b c1	 mov	 rax, rcx
  0009b	48 89 44 24 38	 mov	 QWORD PTR _New_size$[rsp], rax

; 3101 :         _Mypair._Myval2._Mysize   = _New_size;

  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  000a5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000aa	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 3102 :         _Traits::move(_Erase_at, _Erase_at + _Count, _New_size - _Off + 1); // move suffix + null up

  000ae	48 8b 44 24 58	 mov	 rax, QWORD PTR _Off$[rsp]
  000b3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _New_size$[rsp]
  000b8	48 2b c8	 sub	 rcx, rax
  000bb	48 8b c1	 mov	 rax, rcx
  000be	48 ff c0	 inc	 rax
  000c1	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _Count$[rsp]
  000c6	48 8b 54 24 30	 mov	 rdx, QWORD PTR _Erase_at$[rsp]
  000cb	48 03 d1	 add	 rdx, rcx
  000ce	48 8b ca	 mov	 rcx, rdx
  000d1	4c 8b c0	 mov	 r8, rax
  000d4	48 8b d1	 mov	 rdx, rcx
  000d7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Erase_at$[rsp]
  000dc	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 3103 :         return *this;

  000e1	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 3104 :     }

  000e6	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ea	5f		 pop	 rdi
  000eb	c3		 ret	 0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT

; 3088 :     basic_string& erase(const size_type _Off = 0) { // erase elements [_Off, ...)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 3089 :         _Mypair._Myval2._Check_offset(_Off);

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ; std::_String_val<std::_Simple_types<char> >::_Check_offset

; 3090 :         _Eos(_Off);

  00035	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Off$[rsp]
  0003a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0003f	e8 00 00 00 00	 call	 ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAX_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 3091 :         return *this;

  00044	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 3092 :     }

  00049	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004d	5f		 pop	 rdi
  0004e	c3		 ret	 0
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 32
$T2 = 40
$T3 = 41
this$ = 64
_Ptr$ = 72
_Count$ = 80
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 39 44 24 50	 cmp	 QWORD PTR _Count$[rsp], rax
  00036	77 5d		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00045	48 89 44 24 20	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  0004a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0004f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _Count$[rsp]
  00054	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00058	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Count$[rsp]
  0005d	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00062	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00067	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  0006c	c6 44 24 28 00	 mov	 BYTE PTR $T2[rsp], 0
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR _Count$[rsp]
  00076	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  0007b	48 03 c8	 add	 rcx, rax
  0007e	48 8b c1	 mov	 rax, rcx
  00081	48 8d 54 24 28	 lea	 rdx, QWORD PTR $T2[rsp]
  00086	48 8b c8	 mov	 rcx, rax
  00089	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  0008e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00093	eb 2b		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  00095	48 8d 44 24 29	 lea	 rax, QWORD PTR $T3[rsp]
  0009a	48 8b f8	 mov	 rdi, rax
  0009d	33 c0		 xor	 eax, eax
  0009f	b9 01 00 00 00	 mov	 ecx, 1
  000a4	f3 aa		 rep stosb
  000a6	4c 8b 4c 24 48	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000ab	44 0f b6 44 24
	29		 movzx	 r8d, BYTE PTR $T3[rsp]
  000b1	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Count$[rsp]
  000b6	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  000bb	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_66f57f934f28d61049862f64df852ff0>@@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_66f57f934f28d61049862f64df852ff0>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000c0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c4	5f		 pop	 rdi
  000c5	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Count$ = 104
_Ch$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2760 :     basic_string& append(_CRT_GUARDOVERFLOW const size_type _Count, const _Elem _Ch) { // append _Count * _Ch

$LN4:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2761 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2762 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 68	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 82 00 00
	00		 ja	 $LN2@append

; 2763 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2764 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2765 :             _Traits::assign(_Old_ptr + _Old_size, _Count, _Ch);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	44 0f b6 44 24
	70		 movzx	 r8d, BYTE PTR _Ch$[rsp]
  00093	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Count$[rsp]
  00098	48 8b c8	 mov	 rcx, rax
  0009b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2766 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  000a0	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a5	48 8b 44 24 68	 mov	 rax, QWORD PTR _Count$[rsp]
  000aa	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000af	48 03 c8	 add	 rcx, rax
  000b2	48 8b c1	 mov	 rax, rcx
  000b5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000ba	48 03 c8	 add	 rcx, rax
  000bd	48 8b c1	 mov	 rax, rcx
  000c0	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c5	48 8b c8	 mov	 rcx, rax
  000c8	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2767 :             return *this;

  000cd	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d2	eb 34		 jmp	 SHORT $LN1@append
$LN2@append:

; 2768 :         }
; 2769 : 
; 2770 :         return _Reallocate_grow_by(

  000d4	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d9	48 8b f8	 mov	 rdi, rax
  000dc	33 c0		 xor	 eax, eax
  000de	b9 01 00 00 00	 mov	 ecx, 1
  000e3	f3 aa		 rep stosb
  000e5	0f b6 44 24 70	 movzx	 eax, BYTE PTR _Ch$[rsp]
  000ea	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Count$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_e1befb086ad3257e3f042a63030725f7>@@_KD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_e1befb086ad3257e3f042a63030725f7>,unsigned __int64,char>
$LN1@append:

; 2771 :             _Count,
; 2772 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const size_type _Count,
; 2773 :                 const _Elem _Ch) {
; 2774 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2775 :                 _Traits::assign(_New_ptr + _Old_size, _Count, _Ch);
; 2776 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2777 :             },
; 2778 :             _Count, _Ch);
; 2779 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00028	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  00035	4c 8b c0	 mov	 r8, rax
  00038	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  0003d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00042	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 48
_Old_ptr$1 = 56
$T2 = 64
$T3 = 65
this$ = 96
_Ptr$ = 104
_Count$ = 112
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 14 00 00 00	 mov	 ecx, 20
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00028	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00031	48 89 44 24 30	 mov	 QWORD PTR _Old_size$[rsp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0003b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  00040	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00044	48 2b c1	 sub	 rax, rcx
  00047	48 39 44 24 70	 cmp	 QWORD PTR _Count$[rsp], rax
  0004c	0f 87 81 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  00052	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  00057	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  0005c	48 03 c8	 add	 rcx, rax
  0005f	48 8b c1	 mov	 rax, rcx
  00062	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00067	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0006b	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00070	48 8b c8	 mov	 rcx, rax
  00073	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00078	48 89 44 24 38	 mov	 QWORD PTR _Old_ptr$1[rsp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0007d	48 8b 44 24 30	 mov	 rax, QWORD PTR _Old_size$[rsp]
  00082	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  00087	48 03 c8	 add	 rcx, rax
  0008a	48 8b c1	 mov	 rax, rcx
  0008d	4c 8b 44 24 70	 mov	 r8, QWORD PTR _Count$[rsp]
  00092	48 8b 54 24 68	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00097	48 8b c8	 mov	 rcx, rax
  0009a	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  0009f	c6 44 24 40 00	 mov	 BYTE PTR $T2[rsp], 0
  000a4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000a9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Old_size$[rsp]
  000ae	48 03 c8	 add	 rcx, rax
  000b1	48 8b c1	 mov	 rax, rcx
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Old_ptr$1[rsp]
  000b9	48 03 c8	 add	 rcx, rax
  000bc	48 8b c1	 mov	 rax, rcx
  000bf	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T2[rsp]
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  000d1	eb 35		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000d3	48 8d 44 24 41	 lea	 rax, QWORD PTR $T3[rsp]
  000d8	48 8b f8	 mov	 rdi, rax
  000db	33 c0		 xor	 eax, eax
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	f3 aa		 rep stosb
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR _Count$[rsp]
  000e9	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ee	4c 8b 4c 24 68	 mov	 r9, QWORD PTR _Ptr$[rsp]
  000f3	44 0f b6 44 24
	41		 movzx	 r8d, BYTE PTR $T3[rsp]
  000f9	48 8b 54 24 70	 mov	 rdx, QWORD PTR _Count$[rsp]
  000fe	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00103	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_65e615be2a453ca0576c979606f46740>@@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<<lambda_65e615be2a453ca0576c979606f46740>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00108	48 83 c4 50	 add	 rsp, 80			; 00000050H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  00023	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00030	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00035	4c 8b 41 18	 mov	 r8, QWORD PTR [rcx+24]
  00039	48 8b d0	 mov	 rdx, rax
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  00046	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z
_TEXT	SEGMENT
this$ = 48
_Ch$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2703 :     basic_string& operator+=(_Elem _Ch) { // append 1 * _Ch

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2704 :         push_back(_Ch);

  00022	0f b6 54 24 38	 movzx	 edx, BYTE PTR _Ch$[rsp]
  00027	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002c	e8 00 00 00 00	 call	 ?push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::push_back

; 2705 :         return *this;

  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]

; 2706 :     }

  00036	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003a	5f		 pop	 rdi
  0003b	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@D@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2699 :     basic_string& operator+=(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2700 :         return append(_Ptr);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2701 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=, COMDAT

; 2688 :     basic_string& operator+=(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2689 :         return append(_Right);

  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2690 :     }

  00032	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00036	5f		 pop	 rdi
  00037	c3		 ret	 0
??Y?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_To_delete$ = 72
this$ = 96
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 14 00 00 00	 mov	 ecx, 20
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 2598 :         _Tidy_deallocate();

  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00028	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00029	48 8b 4c 24 60	 mov	 rcx, QWORD PTR this$[rsp]
  0002e	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00033	90		 npad	 1
  00034	48 8b d0	 mov	 rdx, rax
  00037	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S16$[rsp]
  0003c	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00041	90		 npad	 1
  00042	48 8d 44 24 34	 lea	 rax, QWORD PTR $S16$[rsp]
  00047	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  0004c	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 44 24 48	 mov	 QWORD PTR _To_delete$[rsp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00059	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0005e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00065	48 8b 54 24 48	 mov	 rdx, QWORD PTR _To_delete$[rsp]
  0006a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Alproxy$[rsp]
  0006f	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  00074	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  00075	48 8b 44 24 60	 mov	 rax, QWORD PTR this$[rsp]
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00082	90		 npad	 1
  00083	48 8b cc	 mov	 rcx, rsp
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  0008d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00092	90		 npad	 1
  00093	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00097	5f		 pop	 rdi
  00098	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S16$ = 52
_To_delete$ = 72
this$ = 96
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 60	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
__formal$ = 64
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00028	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00035	90		 npad	 1
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 12		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  0003d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00042	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0004c	90		 npad	 1

; 2494 :         } else {

  0004d	eb 0e		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0004f	48 8b 44 24 38	 mov	 rax, QWORD PTR _Right$[rsp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0005d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00062	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  0006c	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  0006d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Right$[rsp]
  00072	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00077	90		 npad	 1

; 2501 :     }

  00078	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0007c	5f		 pop	 rdi
  0007d	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 32
_Right_data_mem$ = 40
this$ = 64
_Right$ = 72
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  00030	90		 npad	 1
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 89 44 24 20	 mov	 QWORD PTR _My_data_mem$[rsp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  0003a	48 8b 44 24 48	 mov	 rax, QWORD PTR _Right$[rsp]
  0003f	48 8b c8	 mov	 rcx, rax
  00042	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00047	90		 npad	 1
  00048	48 83 c0 08	 add	 rax, 8
  0004c	48 89 44 24 28	 mov	 QWORD PTR _Right_data_mem$[rsp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00051	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00057	48 8b 54 24 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rsp]
  0005c	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _My_data_mem$[rsp]
  00061	e8 00 00 00 00	 call	 memcpy
  00066	90		 npad	 1

; 2482 :     }

  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Right$ = 72
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT

; 2460 :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alty>{}))) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2461 :         if (this != _STD addressof(_Right)) {

  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AEAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
  0002d	48 39 44 24 40	 cmp	 QWORD PTR this$[rsp], rax
  00032	74 26		 je	 SHORT $LN2@operator

; 2462 :             _Move_assign(_Right, _Choose_pocma<_Alty>{});

  00034	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00039	48 8b f8	 mov	 rdi, rax
  0003c	33 c0		 xor	 eax, eax
  0003e	b9 01 00 00 00	 mov	 ecx, 1
  00043	f3 aa		 rep stosb
  00045	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  0004b	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00050	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00055	e8 00 00 00 00	 call	 ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:

; 2463 :         }
; 2464 : 
; 2465 :         return *this;

  0005a	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]

; 2466 :     }

  0005f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00063	5f		 pop	 rdi
  00064	c3		 ret	 0
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
$T1 = 32
tv66 = 40
this$ = 64
_Right$ = 72
__formal$ = 80
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT

; 2431 :     void _Move_assign(basic_string& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2432 :         _Tidy_deallocate();

  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2433 :         _Pocma(_Getal(), _Right._Getal());

  00032	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00037	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003c	48 89 44 24 28	 mov	 QWORD PTR tv66[rsp], rax
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR tv66[rsp]
  00050	48 8b d1	 mov	 rdx, rcx
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@D@std@@@std@@YAXAEAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >

; 2434 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  0005b	48 8d 44 24 20	 lea	 rax, QWORD PTR $T1[rsp]
  00060	48 8b f8	 mov	 rdi, rax
  00063	33 c0		 xor	 eax, eax
  00065	b9 01 00 00 00	 mov	 ecx, 1
  0006a	f3 aa		 rep stosb
  0006c	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR $T1[rsp]
  00072	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  00077	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0007c	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents

; 2435 :     }

  00081	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00085	5f		 pop	 rdi
  00086	c3		 ret	 0
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Right$[rsp]
  00028	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0002d	90		 npad	 1
  0002e	48 8b c8	 mov	 rcx, rax
  00031	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  00036	90		 npad	 1
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0003c	4c 8b c0	 mov	 r8, rax
  0003f	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  00049	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0005d	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00062	90		 npad	 1
  00063	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00068	48 8b d0	 mov	 rdx, rax
  0006b	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00070	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  00071	48 8d 44 24 22	 lea	 rax, QWORD PTR $T3[rsp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	33 c0		 xor	 eax, eax
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	f3 aa		 rep stosb
  00082	44 0f b6 44 24
	22		 movzx	 r8d, BYTE PTR $T3[rsp]
  00088	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Right$[rsp]
  0008d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00092	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  00097	90		 npad	 1

; 2387 :     }

  00098	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0009d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a1	5f		 pop	 rdi
  000a2	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
$T3 = 34
this$ = 64
_Right$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 81 ec 80 00
	00 00		 sub	 rsp, 128		; 00000080H
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR [rsp+144]
  00029	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  00031	0f b6 54 24 74	 movzx	 edx, BYTE PTR $T5[rsp]
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0003e	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0003f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	48 8d 4c 24 34	 lea	 rcx, QWORD PTR $S18$[rsp]
  00054	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00059	48 8d 44 24 34	 lea	 rax, QWORD PTR $S18$[rsp]
  0005e	48 89 44 24 20	 mov	 QWORD PTR _Alproxy$[rsp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00063	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0006b	4c 8b c0	 mov	 r8, rax
  0006e	48 8b 54 24 20	 mov	 rdx, QWORD PTR _Alproxy$[rsp]
  00073	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  00078	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007d	90		 npad	 1

; 2301 :         _Tidy_init();

  0007e	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00086	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  0008b	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _Ptr$[rsp]
  00093	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  0009b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000a0	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000a5	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000aa	90		 npad	 1

; 2304 :     }

  000ab	48 8d 4c 24 58	 lea	 rcx, QWORD PTR _Proxy$[rsp]
  000b0	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000b5	90		 npad	 1
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000be	48 8b f8	 mov	 rdi, rax
  000c1	48 8b cc	 mov	 rcx, rsp
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000cb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d0	48 8b c7	 mov	 rax, rdi
  000d3	48 81 c4 80 00
	00 00		 add	 rsp, 128		; 00000080H
  000da	5f		 pop	 rdi
  000db	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001a	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	5f		 pop	 rdi
  00024	5d		 pop	 rbp
  00025	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 32
$S18$ = 52
_Proxy$ = 88
$T5 = 116
this$ = 144
_Ptr$ = 152
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 58	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2253 :     explicit basic_string(const _Alloc& _Al) noexcept : _Mypair(_One_then_variadic_args_t(), _Al) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 0c 00 00 00	 mov	 ecx, 12
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00028	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Al$[rsp]
  0002d	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00032	48 8b c8	 mov	 rcx, rax
  00035	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
  0003a	90		 npad	 1

; 2254 :         // construct empty string with allocator
; 2255 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0003b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00040	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00045	90		 npad	 1
  00046	48 8b d0	 mov	 rdx, rax
  00049	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  0004e	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00053	90		 npad	 1
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00061	90		 npad	 1

; 2256 :         _Tidy_init();

  00062	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00067	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  0006c	90		 npad	 1

; 2257 :     }

  0006d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00072	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00076	5f		 pop	 rdi
  00077	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
_Al$ = 72
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV?$allocator@D@1@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2247 :     basic_string() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>) : _Mypair(_Zero_then_variadic_args_t()) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]
  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	0f b6 54 24 20	 movzx	 edx, BYTE PTR $T1[rsp]
  00028	48 8b c8	 mov	 rcx, rax
  0002b	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00030	90		 npad	 1

; 2248 :         // construct empty string
; 2249 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  00031	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00036	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0003b	90		 npad	 1
  0003c	48 8b d0	 mov	 rdx, rax
  0003f	48 8d 4c 24 21	 lea	 rcx, QWORD PTR $T2[rsp]
  00044	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00049	90		 npad	 1
  0004a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0004f	48 8b d0	 mov	 rdx, rax
  00052	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  00057	90		 npad	 1

; 2250 :         _Tidy_init();

  00058	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  0005d	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  00062	90		 npad	 1

; 2251 :     }

  00063	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
$T1 = 32
$T2 = 33
this$ = 64
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 40	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 8b c8	 mov	 rcx, rax
  0002a	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002f	90		 npad	 1
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z
_TEXT	SEGMENT
$T1 = 32
this$ = 64
_Off$ = 72
_Size$ = 80
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size, COMDAT

; 2140 :     size_type _Clamp_suffix_size(const size_type _Off, const size_type _Size) const noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 0c 00 00 00	 mov	 ecx, 12
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2141 :         // trims _Size to the longest it can be assuming a string at/after _Off
; 2142 :         return _Min_value(_Size, _Mysize - _Off);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _Off$[rsp]
  00032	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00036	48 2b c1	 sub	 rax, rcx
  00039	48 89 44 24 20	 mov	 QWORD PTR $T1[rsp], rax
  0003e	48 8d 54 24 20	 lea	 rdx, QWORD PTR $T1[rsp]
  00043	48 8d 4c 24 50	 lea	 rcx, QWORD PTR _Size$[rsp]
  00048	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 2143 :     }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
?_Clamp_suffix_size@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_K_K0@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Clamp_suffix_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
_TEXT	SEGMENT
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Xran, COMDAT

; 2136 :     [[noreturn]] static void _Xran() { // report an out_of_range error

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 08 00 00 00	 mov	 ecx, 8
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 2137 :         _Xout_of_range("invalid string position");

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CFPLBAOH@invalid?5string?5position@
  0001c	e8 00 00 00 00	 call	 ?_Xout_of_range@std@@YAXPEBD@Z ; std::_Xout_of_range
$LN2@Xran:

; 2138 :     }

  00021	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00025	5f		 pop	 rdi
  00026	c3		 ret	 0
?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Xran
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z
_TEXT	SEGMENT
this$ = 48
_Off$ = 56
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z PROC ; std::_String_val<std::_Simple_types<char> >::_Check_offset, COMDAT

; 2124 :     void _Check_offset(const size_type _Off) const { // checks whether _Off is in the bounds of [0, size()]

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 2125 :         if (_Mysize < _Off) {

  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Off$[rsp]
  0002d	48 39 48 18	 cmp	 QWORD PTR [rax+24], rcx
  00031	73 05		 jae	 SHORT $LN2@Check_offs

; 2126 :             _Xran();

  00033	e8 00 00 00 00	 call	 ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ ; std::_String_val<std::_Simple_types<char> >::_Xran
$LN2@Check_offs:
$LN3@Check_offs:

; 2127 :         }
; 2128 :     }

  00038	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003c	5f		 pop	 rdi
  0003d	c3		 ret	 0
?_Check_offset@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAX_K@Z ENDP ; std::_String_val<std::_Simple_types<char> >::_Check_offset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 0
this$ = 32
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 2121 :         return _BUF_SIZE <= _Myres;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00028	72 09		 jb	 SHORT $LN3@Large_stri
  0002a	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv66[rsp], 1
  00031	eb 07		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00033	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv66[rsp], 0
$LN4@Large_stri:
  0003a	0f b6 04 24	 movzx	 eax, BYTE PTR tv66[rsp]

; 2122 :     }

  0003e	48 83 c4 10	 add	 rsp, 16
  00042	5f		 pop	 rdi
  00043	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2112 :         const value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2113 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2118 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 32
this$ = 64
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 2103 :         value_type* _Result = _Bx._Buf;

  0001e	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 c0 08	 add	 rax, 8
  00027	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax

; 2104 :         if (_Large_string_engaged()) {

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR this$[rsp]
  00031	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00036	0f b6 c0	 movzx	 eax, al
  00039	85 c0		 test	 eax, eax
  0003b	74 13		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  0003d	48 8b 44 24 40	 mov	 rax, QWORD PTR this$[rsp]
  00042	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00046	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0004b	48 89 44 24 20	 mov	 QWORD PTR _Result$[rsp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  00050	48 8b 44 24 20	 mov	 rax, QWORD PTR _Result$[rsp]

; 2109 :     }

  00055	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00059	5f		 pop	 rdi
  0005a	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0002d	48 83 c0 08	 add	 rax, 8
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00039	90		 npad	 1
  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00054	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA PROC ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	48 83 c1 08	 add	 rcx, 8
  0001b	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ@4HA ENDP ; `std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 16
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00006	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0000d	5f		 pop	 rdi
  0000e	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Count$ = 56
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  00023	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Count$[rsp]
  00028	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  0002d	48 8b c8	 mov	 rcx, rax
  00030	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  00035	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00039	5f		 pop	 rdi
  0003a	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 48
_Ptr$ = 56
_Count$ = 64
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00028	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Count$[rsp]
  0002d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr$[rsp]
  00032	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5f		 pop	 rdi
  0003c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 410  :     _NODISCARD static constexpr int_type eof() noexcept { // return end-of-file metacharacter

$LN3:
  00000	40 57		 push	 rdi

; 411  :         return static_cast<int_type>(EOF);

  00002	b8 ff ff ff ff	 mov	 eax, -1

; 412  :     }

  00007	5f		 pop	 rdi
  00008	c3		 ret	 0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z
_TEXT	SEGMENT
tv69 = 32
tv68 = 36
_Meta$ = 64
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z PROC	; std::_Narrow_char_traits<char,int>::not_eof, COMDAT

; 406  :     _NODISCARD static constexpr int_type not_eof(const int_type& _Meta) noexcept { // return anything but EOF

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 0c 00 00 00	 mov	 ecx, 12
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 407  :         return _Meta != eof() ? _Meta : !eof();

  0001e	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  00023	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Meta$[rsp]
  00028	39 01		 cmp	 DWORD PTR [rcx], eax
  0002a	74 0d		 je	 SHORT $LN5@not_eof
  0002c	48 8b 44 24 40	 mov	 rax, QWORD PTR _Meta$[rsp]
  00031	8b 00		 mov	 eax, DWORD PTR [rax]
  00033	89 44 24 20	 mov	 DWORD PTR tv69[rsp], eax
  00037	eb 23		 jmp	 SHORT $LN6@not_eof
$LN5@not_eof:
  00039	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0003e	85 c0		 test	 eax, eax
  00040	75 0a		 jne	 SHORT $LN3@not_eof
  00042	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv68[rsp], 1
  0004a	eb 08		 jmp	 SHORT $LN4@not_eof
$LN3@not_eof:
  0004c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv68[rsp], 0
$LN4@not_eof:
  00054	8b 44 24 24	 mov	 eax, DWORD PTR tv68[rsp]
  00058	89 44 24 20	 mov	 DWORD PTR tv69[rsp], eax
$LN6@not_eof:
  0005c	8b 44 24 20	 mov	 eax, DWORD PTR tv69[rsp]

; 408  :     }

  00060	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00064	5f		 pop	 rdi
  00065	c3		 ret	 0
?not_eof@?$_Narrow_char_traits@DH@std@@SAHAEBH@Z ENDP	; std::_Narrow_char_traits<char,int>::not_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 0
_Left$ = 32
_Right$ = 40
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 401  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 402  :         // test for metacharacter equality
; 403  :         return _Left == _Right;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0002f	39 08		 cmp	 DWORD PTR [rax], ecx
  00031	75 09		 jne	 SHORT $LN3@eq_int_typ
  00033	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv65[rsp], 1
  0003a	eb 07		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  0003c	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv65[rsp], 0
$LN4@eq_int_typ:
  00043	0f b6 04 24	 movzx	 eax, BYTE PTR tv65[rsp]

; 404  :     }

  00047	48 83 c4 10	 add	 rsp, 16
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z
_TEXT	SEGMENT
_Ch$ = 16
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT

; 396  :     _NODISCARD static constexpr int_type to_int_type(const _Elem& _Ch) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 397  :         // convert character to metacharacter
; 398  :         return static_cast<unsigned char>(_Ch);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Ch$[rsp]
  0000b	0f b6 00	 movzx	 eax, BYTE PTR [rax]

; 399  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::to_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z
_TEXT	SEGMENT
_Meta$ = 16
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z PROC ; std::_Narrow_char_traits<char,int>::to_char_type, COMDAT

; 391  :     _NODISCARD static constexpr _Elem to_char_type(const int_type& _Meta) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 392  :         // convert metacharacter to character
; 393  :         return static_cast<_Elem>(_Meta);

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Meta$[rsp]
  0000b	0f b6 00	 movzx	 eax, BYTE PTR [rax]

; 394  :     }

  0000e	5f		 pop	 rdi
  0000f	c3		 ret	 0
?to_char_type@?$_Narrow_char_traits@DH@std@@SADAEBH@Z ENDP ; std::_Narrow_char_traits<char,int>::to_char_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z
_TEXT	SEGMENT
tv67 = 0
_Left$ = 32
_Right$ = 40
?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z PROC	; std::_Narrow_char_traits<char,int>::eq, COMDAT

; 381  :     _NODISCARD static constexpr bool eq(const _Elem& _Left, const _Elem& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 10	 sub	 rsp, 16
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 04 00 00 00	 mov	 ecx, 4
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 382  :         // test for element equality
; 383  :         return _Left == _Right;

  00023	48 8b 44 24 20	 mov	 rax, QWORD PTR _Left$[rsp]
  00028	0f be 00	 movsx	 eax, BYTE PTR [rax]
  0002b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _Right$[rsp]
  00030	0f be 09	 movsx	 ecx, BYTE PTR [rcx]
  00033	3b c1		 cmp	 eax, ecx
  00035	75 09		 jne	 SHORT $LN3@eq
  00037	c7 04 24 01 00
	00 00		 mov	 DWORD PTR tv67[rsp], 1
  0003e	eb 07		 jmp	 SHORT $LN4@eq
$LN3@eq:
  00040	c7 04 24 00 00
	00 00		 mov	 DWORD PTR tv67[rsp], 0
$LN4@eq:
  00047	0f b6 04 24	 movzx	 eax, BYTE PTR tv67[rsp]

; 384  :     }

  0004b	48 83 c4 10	 add	 rsp, 16
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
?eq@?$_Narrow_char_traits@DH@std@@SA_NAEBD0@Z ENDP	; std::_Narrow_char_traits<char,int>::eq
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 16
_Right$ = 24
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 378  :         _Left = _Right;

  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR _Left$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Right$[rsp]
  00015	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  00018	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0001a	5f		 pop	 rdi
  0001b	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z
_TEXT	SEGMENT
_First$ = 48
_Count$ = 56
_Ch$ = 64
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 372  :         const _Elem _Ch) noexcept { // strengthened

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 373  :         // assign _Count * _Ch to [_First, ...)
; 374  :         return static_cast<_Elem*>(_CSTD memset(_First, _Ch, _Count));

  00028	0f be 44 24 40	 movsx	 eax, BYTE PTR _Ch$[rsp]
  0002d	4c 8b 44 24 38	 mov	 r8, QWORD PTR _Count$[rsp]
  00032	8b d0		 mov	 edx, eax
  00034	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00039	e8 00 00 00 00	 call	 memset
  0003e	90		 npad	 1

; 375  :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAPEADQEAD_KD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memmove
  0003c	90		 npad	 1

; 369  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 48
_First2$ = 56
_Count$ = 64
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 08 00 00 00	 mov	 ecx, 8
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00028	4c 8b 44 24 40	 mov	 r8, QWORD PTR _Count$[rsp]
  0002d	48 8b 54 24 38	 mov	 rdx, QWORD PTR _First2$[rsp]
  00032	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First1$[rsp]
  00037	e8 00 00 00 00	 call	 memcpy
  0003c	90		 npad	 1

; 334  :     }

  0003d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00041	5f		 pop	 rdi
  00042	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
_First$ = 48
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);
; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _First$[rsp]
  00023	e8 00 00 00 00	 call	 strlen
  00028	90		 npad	 1

; 327  : #endif // _HAS_CXX17
; 328  :     }

  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 16
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1349 :         _Ptr = nullptr;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00012	5f		 pop	 rdi
  00013	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 48
this$ = 80
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1268 :         if (_Myproxy) { // adopted, remove self from list

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	0f 84 db 00 00
	00		 je	 $LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  0002d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00035	48 83 c0 08	 add	 rax, 8
  00039	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

  0003e	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00043	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00047	74 22		 je	 SHORT $LN6@Orphan_me
  00049	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0004e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00053	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00056	74 13		 je	 SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00058	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  0005d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00060	48 83 c0 08	 add	 rax, 8
  00064	48 89 44 24 30	 mov	 QWORD PTR _Pnext$1[rsp], rax

; 1272 :             }

  00069	eb d3		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  0006b	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  00070	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00074	74 02		 je	 SHORT $LN9@Orphan_me
  00076	eb 6d		 jmp	 SHORT $LN12@Orphan_me
$LN9@Orphan_me:
  00078	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  0007f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00084	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00090	45 33 c9	 xor	 r9d, r9d
  00093	41 b8 fa 04 00
	00		 mov	 r8d, 1274		; 000004faH
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a0	b9 02 00 00 00	 mov	 ecx, 2
  000a5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ab	90		 npad	 1
  000ac	83 f8 01	 cmp	 eax, 1
  000af	75 03		 jne	 SHORT $LN14@Orphan_me
  000b1	cc		 int	 3
  000b2	33 c0		 xor	 eax, eax
$LN14@Orphan_me:
  000b4	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bd	41 b9 fa 04 00
	00		 mov	 r9d, 1274		; 000004faH
  000c3	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000de	90		 npad	 1
  000df	33 c0		 xor	 eax, eax
  000e1	85 c0		 test	 eax, eax
  000e3	75 93		 jne	 SHORT $LN9@Orphan_me
$LN12@Orphan_me:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 80		 jne	 SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

  000eb	48 8b 44 24 30	 mov	 rax, QWORD PTR _Pnext$1[rsp]
  000f0	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  000f5	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000f9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

  000fc	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00101	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

  00108	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0010c	5f		 pop	 rdi
  0010d	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 0
this$ = 32
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 11		 je	 SHORT $LN3@Getcont
  00029	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00031	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00034	48 89 04 24	 mov	 QWORD PTR tv68[rsp], rax
  00038	eb 08		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0003a	48 c7 04 24 00
	00 00 00	 mov	 QWORD PTR tv68[rsp], 0
$LN4@Getcont:
  00042	48 8b 04 24	 mov	 rax, QWORD PTR tv68[rsp]

; 1264 :     }

  00046	48 83 c4 10	 add	 rsp, 16
  0004a	5f		 pop	 rdi
  0004b	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 70	 sub	 rsp, 112		; 00000070H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 1c 00 00 00	 mov	 ecx, 28
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR [rsp+128]

; 1235 :         if (_Parent) {

  00026	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR _Parent$[rsp], 0
  0002f	0f 84 85 00 00
	00		 je	 $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00035	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR _Parent$[rsp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 89 44 24 20	 mov	 QWORD PTR _Parent_proxy$5[rsp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

  00045	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00052	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00055	74 61		 je	 SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

  00057	ba 03 00 00 00	 mov	 edx, 3
  0005c	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00067	90		 npad	 1

; 1242 :                 _Orphan_me();

  00068	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00070	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00075	90		 npad	 1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00076	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  0007e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  00083	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00087	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR _Parent_proxy$5[rsp]
  00090	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  00098	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

  0009c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR this$[rsp]
  000a4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR _Parent_proxy$5[rsp]
  000a9	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1246 :             }

  000ac	48 8d 4c 24 34	 lea	 rcx, QWORD PTR _Lock$6[rsp]
  000b1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000b7	90		 npad	 1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

  000b8	eb 2b		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

  000ba	ba 03 00 00 00	 mov	 edx, 3
  000bf	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000c4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  000ca	90		 npad	 1

; 1255 :             _Orphan_me();

  000cb	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR this$[rsp]
  000d3	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000d8	90		 npad	 1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

  000d9	48 8d 4c 24 54	 lea	 rcx, QWORD PTR _Lock$7[rsp]
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000e4	90		 npad	 1
$LN3@Adopt:

; 1260 :     }

  000e5	48 8b cc	 mov	 rcx, rsp
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
  000ef	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f4	90		 npad	 1
  000f5	48 83 c4 70	 add	 rsp, 112		; 00000070H
  000f9	5f		 pop	 rdi
  000fa	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 34	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Parent_proxy$5 = 32
_Lock$6 = 52
_Lock$7 = 84
this$ = 128
_Parent$ = 136
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA PROC ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 54	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z@4HA ENDP ; `std::_Iterator_base12::_Adopt'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 36
this$ = 80
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

  0001e	ba 03 00 00 00	 mov	 edx, 3
  00023	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0002e	90		 npad	 1

; 1230 :         _Orphan_me();

  0002f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00034	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00039	90		 npad	 1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

  0003a	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0003f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00045	90		 npad	 1
  00046	48 8b cc	 mov	 rcx, rsp
  00049	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
  00050	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00055	90		 npad	 1
  00056	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0005a	5f		 pop	 rdi
  0005b	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
this$ = 80
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA PROC	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???1_Iterator_base12@std@@QEAA@XZ@4HA ENDP	; `std::_Iterator_base12::~_Iterator_base12'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1211 :         if (_Myproxy != _Right._Myproxy) {

  00023	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0002d	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00030	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00033	74 4b		 je	 SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

  00035	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0003a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0003e	74 18		 je	 SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

  00040	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00045	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00048	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00050	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00055	90		 npad	 1

; 1214 :             } else { // becoming invalid, disown current parent

  00056	eb 28		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

  00058	ba 03 00 00 00	 mov	 edx, 3
  0005d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00068	90		 npad	 1

; 1217 :                 _Orphan_me();

  00069	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  0006e	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00073	90		 npad	 1

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

  00074	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00079	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0007f	90		 npad	 1
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

  00080	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]

; 1225 :     }

  00085	48 8b f8	 mov	 rdi, rax
  00088	48 8b cc	 mov	 rcx, rsp
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData
  00092	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00097	90		 npad	 1
  00098	48 8b c7	 mov	 rax, rdi
  0009b	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
this$ = 80
_Right$ = 88
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA PROC ; `std::_Iterator_base12::operator='::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z@4HA ENDP ; `std::_Iterator_base12::operator='::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 48
_Right$ = 56
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00034	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1207 :         *this = _Right;

  0003c	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Right$[rsp]
  00041	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00046	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=

; 1208 :     }

  0004b	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00050	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00054	5f		 pop	 rdi
  00055	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	5f		 pop	 rdi
  00025	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 10 00 00 00	 mov	 ecx, 16
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  00023	ba 03 00 00 00	 mov	 edx, 3
  00028	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00033	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  00034	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003c	48 89 44 24 38	 mov	 QWORD PTR _Temp$[rsp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  00041	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00046	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  0004b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  00051	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00056	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Temp$[rsp]
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0005e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00063	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00067	74 10		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  00069	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 8b 4c 24 50	 mov	 rcx, QWORD PTR this$[rsp]
  00076	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  00079	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  0007e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00082	74 10		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  00084	48 8b 44 24 58	 mov	 rax, QWORD PTR _Right$[rsp]
  00089	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Right$[rsp]
  00091	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  00094	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$[rsp]
  00099	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0009f	90		 npad	 1
  000a0	48 8b cc	 mov	 rcx, rsp
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000aa	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000af	90		 npad	 1
  000b0	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 36
_Temp$ = 56
this$ = 80
_Right$ = 88
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA PROC ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z@4HA ENDP ; `std::_Container_base12::_Swap_proxy_and_iterators'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 10 00 00 00	 mov	 ecx, 16
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  0001e	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00027	74 70		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00029	ba 03 00 00 00	 mov	 edx, 3
  0002e	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00039	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  0003f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00042	48 83 c0 08	 add	 rax, 8
  00046	48 89 44 24 38	 mov	 QWORD PTR _Pnext$5[rsp], rax
  0004b	eb 14		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  0004d	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Pnext$5[rsp]
  0005a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0005e	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  00061	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00066	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006a	74 11		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  0006c	48 8b 44 24 38	 mov	 rax, QWORD PTR _Pnext$5[rsp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  0007b	eb d0		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR this$[rsp]
  00082	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00085	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  0008d	48 8d 4c 24 24	 lea	 rcx, QWORD PTR _Lock$4[rsp]
  00092	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  00098	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  00099	48 8b cc	 mov	 rcx, rsp
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000a3	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a8	90		 npad	 1
  000a9	48 83 c4 40	 add	 rsp, 64			; 00000040H
  000ad	5f		 pop	 rdi
  000ae	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
_Lock$4 = 36
_Pnext$5 = 56
this$ = 80
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA PROC ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00017	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Orphan_all@_Container_base12@std@@QEAAXXZ@4HA ENDP ; `std::_Container_base12::_Orphan_all'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 16
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0000b	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00012	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00017	5f		 pop	 rdi
  00018	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 16
_Mycont_$ = 24
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00010	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Mycont_$[rsp]
  00015	48 89 08	 mov	 QWORD PTR [rax], rcx
  00018	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0001d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00025	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  0002a	5f		 pop	 rdi
  0002b	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
this$ = 16
__formal$ = 24
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 1155 :     void _Adopt(const void*) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 16
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00006	48 8b 44 24 10	 mov	 rax, QWORD PTR _Len$[rsp]

; 1076 : }

  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 48
_Ptr_container$ = 56
_Min_back_shift$ = 64
_Back_shift$ = 72
_Ptr$ = 96
_Bytes$ = 104
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 50	 sub	 rsp, 80			; 00000050H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 14 00 00 00	 mov	 ecx, 20
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR [rsp+96]

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  00023	48 8b 44 24 68	 mov	 rax, QWORD PTR _Bytes$[rsp]
  00028	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0002b	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  0002f	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00034	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0003c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0003f	48 89 44 24 30	 mov	 QWORD PTR _Ptr_user$[rsp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	48 6b c0 ff	 imul	 rax, rax, -1
  0004d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00052	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00056	48 89 44 24 38	 mov	 QWORD PTR _Ptr_container$[rsp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  0005b	b8 08 00 00 00	 mov	 eax, 8
  00060	48 6b c0 fe	 imul	 rax, rax, -2
  00064	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Ptr_user$[rsp]
  00069	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  00073	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00077	75 02		 jne	 SHORT $LN14@Adjust_man
  00079	eb 6b		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  0007b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00082	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00087	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0008e	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00093	45 33 c9	 xor	 r9d, r9d
  00096	41 b8 6f 00 00
	00		 mov	 r8d, 111		; 0000006fH
  0009c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000a3	b9 02 00 00 00	 mov	 ecx, 2
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ae	83 f8 01	 cmp	 eax, 1
  000b1	75 03		 jne	 SHORT $LN19@Adjust_man
  000b3	cc		 int	 3
  000b4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000b6	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000bf	41 b9 6f 00 00
	00		 mov	 r9d, 111		; 0000006fH
  000c5	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000e0	33 c0		 xor	 eax, eax
  000e2	85 c0		 test	 eax, eax
  000e4	75 95		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  000e6	33 c0		 xor	 eax, eax
  000e8	85 c0		 test	 eax, eax
  000ea	0f 85 6b ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  000f0	48 c7 44 24 40
	10 00 00 00	 mov	 QWORD PTR _Min_back_shift$[rsp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  000f9	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  000fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  00103	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00106	48 2b c1	 sub	 rax, rcx
  00109	48 89 44 24 48	 mov	 QWORD PTR _Back_shift$[rsp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0010e	48 83 7c 24 48
	10		 cmp	 QWORD PTR _Back_shift$[rsp], 16
  00114	72 0a		 jb	 SHORT $LN16@Adjust_man
  00116	48 83 7c 24 48
	2f		 cmp	 QWORD PTR _Back_shift$[rsp], 47 ; 0000002fH
  0011c	77 02		 ja	 SHORT $LN16@Adjust_man
  0011e	eb 6b		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00120	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00127	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0012c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00133	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00138	45 33 c9	 xor	 r9d, r9d
  0013b	41 b8 79 00 00
	00		 mov	 r8d, 121		; 00000079H
  00141	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00148	b9 02 00 00 00	 mov	 ecx, 2
  0014d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00153	83 f8 01	 cmp	 eax, 1
  00156	75 03		 jne	 SHORT $LN20@Adjust_man
  00158	cc		 int	 3
  00159	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  0015b	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00164	41 b9 79 00 00
	00		 mov	 r9d, 121		; 00000079H
  0016a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00171	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  00178	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  0017f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00185	33 c0		 xor	 eax, eax
  00187	85 c0		 test	 eax, eax
  00189	75 95		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  0018b	33 c0		 xor	 eax, eax
  0018d	85 c0		 test	 eax, eax
  0018f	0f 85 79 ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  00195	48 8b 44 24 60	 mov	 rax, QWORD PTR _Ptr$[rsp]
  0019a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Ptr_container$[rsp]
  0019f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001a2	48 83 c4 50	 add	 rsp, 80			; 00000050H
  001a6	5f		 pop	 rdi
  001a7	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 48
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 47   :         return ::operator new(_Bytes);

  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Bytes$[rsp]
  00023	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 57		 push	 rdi

; 645  :         return LLONG_MAX;

  00002	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  0000c	5f		 pop	 rdi
  0000d	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 32
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 57		 push	 rdi
  00002	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00006	48 8b fc	 mov	 rdi, rsp
  00009	b9 10 00 00 00	 mov	 ecx, 16
  0000e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00013	f3 ab		 rep stosd

; 324  :     _THROW(bad_array_new_length{});

  00015	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0001a	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  00026	48 8d 4c 24 20	 lea	 rcx, QWORD PTR $T1[rsp]
  0002b	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00030	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA PROC ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_array_new_length@std@@UEAA@XZ@4HA ENDP ; `std::bad_array_new_length::~bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 48
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 137  :         : bad_alloc("bad array new length")

  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002a	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0002f	90		 npad	 1

; 138  :     {

  00030	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  0003c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0003f	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00044	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00048	5f		 pop	 rdi
  00049	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA PROC ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_array_new_length@std@@QEAA@XZ@4HA ENDP ; `std::bad_array_new_length::bad_array_new_length'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
__that$ = 56
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 54 24 38	 mov	 rdx, QWORD PTR __that$[rsp]
  00028	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  0002d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00032	90		 npad	 1
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  0003f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00047	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
__that$ = 56
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@QEAA@AEBV01@@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00023	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00028	90		 npad	 1
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA PROC		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???1bad_alloc@std@@UEAA@XZ@4HA ENDP		; `std::bad_alloc::~bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 48
_Message$ = 56
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 126  :         : exception(_Message, 1)

  00023	41 b8 01 00 00
	00		 mov	 r8d, 1
  00029	48 8b 54 24 38	 mov	 rdx, QWORD PTR _Message$[rsp]
  0002e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00033	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00038	90		 npad	 1

; 127  :     {

  00039	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT text$x
text$x	SEGMENT
this$ = 48
_Message$ = 56
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA PROC	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8b ea	 mov	 rbp, rdx
  00013	48 8b 4d 30	 mov	 rcx, QWORD PTR this$[rbp]
  00017	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0001c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00020	5f		 pop	 rdi
  00021	5d		 pop	 rbp
  00022	c3		 ret	 0
?dtor$0@?0???0bad_alloc@std@@AEAA@QEBD@Z@4HA ENDP	; `std::bad_alloc::bad_alloc'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	57		 push	 rdi
  0000a	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000e	48 8b fc	 mov	 rdi, rsp
  00011	b9 08 00 00 00	 mov	 ecx, 8
  00016	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001b	f3 ab		 rep stosd
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00022	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00027	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0002c	8b 44 24 38	 mov	 eax, DWORD PTR __flags$[rsp]
  00030	83 e0 01	 and	 eax, 1
  00033	85 c0		 test	 eax, eax
  00035	74 0f		 je	 SHORT $LN2@scalar
  00037	ba 18 00 00 00	 mov	 edx, 24
  0003c	48 8b 4c 24 30	 mov	 rcx, QWORD PTR this$[rsp]
  00041	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00046	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004f	5f		 pop	 rdi
  00050	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 0
this$ = 32
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 10	 sub	 rsp, 16
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 04 00 00 00	 mov	 ecx, 4
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 20	 mov	 rcx, QWORD PTR [rsp+32]

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00028	74 0f		 je	 SHORT $LN3@what
  0002a	48 8b 44 24 20	 mov	 rax, QWORD PTR this$[rsp]
  0002f	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00033	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
  00037	eb 0b		 jmp	 SHORT $LN4@what
$LN3@what:
  00039	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  00040	48 89 04 24	 mov	 QWORD PTR tv69[rsp], rax
$LN4@what:
  00044	48 8b 04 24	 mov	 rax, QWORD PTR tv69[rsp]

; 93   :     }

  00048	48 83 c4 10	 add	 rsp, 16
  0004c	5f		 pop	 rdi
  0004d	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fc	 mov	 rdi, rsp
  0000d	b9 08 00 00 00	 mov	 ecx, 8
  00012	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00017	f3 ab		 rep stosd
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  0002d	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00032	48 83 c0 08	 add	 rax, 8
  00036	48 8b c8	 mov	 rcx, rax
  00039	e8 00 00 00 00	 call	 __std_exception_destroy
  0003e	90		 npad	 1

; 88   :     }

  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 48
_Other$ = 56
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]
  00023	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0002f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00037	48 83 c0 08	 add	 rax, 8
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	33 c0		 xor	 eax, eax
  00040	b9 10 00 00 00	 mov	 ecx, 16
  00045	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00047	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _Other$[rsp]
  00055	48 83 c1 08	 add	 rcx, 8
  00059	48 8b d0	 mov	 rdx, rax
  0005c	e8 00 00 00 00	 call	 __std_exception_copy
  00061	90		 npad	 1

; 71   :     }

  00062	48 8b 44 24 30	 mov	 rax, QWORD PTR this$[rsp]
  00067	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 16
_Message$ = 24
__formal$ = 32
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0001c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  0001f	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00024	48 83 c0 08	 add	 rax, 8
  00028	48 8b f8	 mov	 rdi, rax
  0002b	33 c0		 xor	 eax, eax
  0002d	b9 10 00 00 00	 mov	 ecx, 16
  00032	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00034	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00039	48 8b 4c 24 18	 mov	 rcx, QWORD PTR _Message$[rsp]
  0003e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  00042	48 8b 44 24 10	 mov	 rax, QWORD PTR this$[rsp]
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf
_TEXT	SEGMENT
_Format$ = 48
_ArgList$ = 56
_vscprintf PROC						; COMDAT

; 1675 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 08 00 00 00	 mov	 ecx, 8
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR [rsp+48]

; 1676 :         return _vscprintf_l(_Format, NULL, _ArgList);

  00023	4c 8b 44 24 38	 mov	 r8, QWORD PTR _ArgList$[rsp]
  00028	33 d2		 xor	 edx, edx
  0002a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _Format$[rsp]
  0002f	e8 00 00 00 00	 call	 _vscprintf_l

; 1677 :     }

  00034	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00038	5f		 pop	 rdi
  00039	c3		 ret	 0
_vscprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vscprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Format$ = 80
_Locale$ = 88
_ArgList$ = 96
_vscprintf_l PROC					; COMDAT

; 1658 :     {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	57		 push	 rdi
  00010	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 10 00 00 00	 mov	 ecx, 16
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1659 :         int const _Result = __stdio_common_vsprintf(

  00028	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0002d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00030	48 83 c8 02	 or	 rax, 2
  00034	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00039	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00043	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00048	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Format$[rsp]
  0004d	45 33 c0	 xor	 r8d, r8d
  00050	33 d2		 xor	 edx, edx
  00052	48 8b c8	 mov	 rcx, rax
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf
  0005b	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1660 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1661 :             NULL, 0, _Format, _Locale, _ArgList);
; 1662 : 
; 1663 :         return _Result < 0 ? -1 : _Result;

  0005f	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00064	7d 0a		 jge	 SHORT $LN3@vscprintf_
  00066	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  0006e	eb 08		 jmp	 SHORT $LN4@vscprintf_
$LN3@vscprintf_:
  00070	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00074	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vscprintf_:
  00078	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1664 :     }

  0007c	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00080	5f		 pop	 rdi
  00081	c3		 ret	 0
_vscprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT vsprintf_s
_TEXT	SEGMENT
_Buffer$ = 64
_BufferCount$ = 72
_Format$ = 80
_ArgList$ = 88
vsprintf_s PROC						; COMDAT

; 1519 :         {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 0c 00 00 00	 mov	 ecx, 12
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 40	 mov	 rcx, QWORD PTR [rsp+64]

; 1520 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0002d	48 8b 44 24 58	 mov	 rax, QWORD PTR _ArgList$[rsp]
  00032	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00037	45 33 c9	 xor	 r9d, r9d
  0003a	4c 8b 44 24 50	 mov	 r8, QWORD PTR _Format$[rsp]
  0003f	48 8b 54 24 48	 mov	 rdx, QWORD PTR _BufferCount$[rsp]
  00044	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00049	e8 00 00 00 00	 call	 _vsprintf_s_l

; 1521 :         }

  0004e	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00052	5f		 pop	 rdi
  00053	c3		 ret	 0
vsprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf_s_l
_TEXT	SEGMENT
_Result$ = 48
tv73 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsprintf_s_l PROC					; COMDAT

; 1497 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	57		 push	 rdi
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 10 00 00 00	 mov	 ecx, 16
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 4c 24 50	 mov	 rcx, QWORD PTR [rsp+80]

; 1498 :         int const _Result = __stdio_common_vsprintf_s(

  0002d	e8 00 00 00 00	 call	 __local_stdio_printf_options
  00032	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00037	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0003c	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00041	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00046	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0004b	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00050	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00055	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00058	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___stdio_common_vsprintf_s
  0005e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1499 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1500 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1501 : 
; 1502 :         return _Result < 0 ? -1 : _Result;

  00062	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00067	7d 0a		 jge	 SHORT $LN3@vsprintf_s
  00069	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv73[rsp], -1
  00071	eb 08		 jmp	 SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
  00073	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00077	89 44 24 34	 mov	 DWORD PTR tv73[rsp], eax
$LN4@vsprintf_s:
  0007b	8b 44 24 34	 mov	 eax, DWORD PTR tv73[rsp]

; 1503 :     }

  0007f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00083	5f		 pop	 rdi
  00084	c3		 ret	 0
_vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :     {

$LN3:
  00000	40 57		 push	 rdi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00002	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00009	5f		 pop	 rdi
  0000a	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 16
_Where$ = 24
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi

; 169  :         (void)_Size;
; 170  :         return _Where;

  0000b	48 8b 44 24 18	 mov	 rax, QWORD PTR _Where$[rsp]

; 171  :     }

  00010	5f		 pop	 rdi
  00011	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 16
__formal$ = 24
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	5f		 pop	 rdi
  0000c	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\work\intel\intel_codec\QSVPipeline\rgy_input.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 16
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	5f		 pop	 rdi
  00007	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
